{
    "project_name": "googleapis-google-cloud-java",
    "violation_id": "823",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import java.io.IOException;\n\nfinal class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n\n  private final StorageRpc storageRpc;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/checkstyle_idea/823/StorageServiceImpl.java\nindex 8d45573e691..e3875e01903 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/checkstyle_idea/823/StorageServiceImpl.java\n@@ -24,7 +24,8 @@ import com.google.gcloud.com.google.gcloud.spi.StorageRpc;\n \n import java.io.IOException;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions>\n+    implements StorageService {\n \n   private final StorageRpc storageRpc;\n \n@@ -38,7 +39,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     try {\n       return Iterables.transform(storageRpc.buckets(),\n           new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n-            @Override public Bucket apply(com.google.api.services.storage.model.Bucket model) {\n+            @Override\n+            public Bucket apply(com.google.api.services.storage.model.Bucket model) {\n               return new BucketImpl(StorageServiceImpl.this, model);\n             }\n           });\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/naturalize/823/StorageServiceImpl.java\nindex 8d45573e691..befd3ffdf0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/naturalize/823/StorageServiceImpl.java\n@@ -42,7 +42,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n               return new BucketImpl(StorageServiceImpl.this, model);\n             }\n           });\n-    } catch (IOException ex) {\n+  } catch (IOException ex) {\n       throw new StorageServiceException(ex);\n     }\n   }\n@@ -55,4 +55,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       throw new StorageServiceException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/codebuff/823/StorageServiceImpl.java\nindex 8d45573e691..6ab89f250bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/823/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/codebuff/823/StorageServiceImpl.java\n@@ -21,9 +21,9 @@ import com.google.common.base.Function;\n import com.google.common.collect.Iterables;\n import com.google.gcloud.BaseService;\n import com.google.gcloud.com.google.gcloud.spi.StorageRpc;\n-\n import java.io.IOException;\n \n+\n final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n   private final StorageRpc storageRpc;\n@@ -36,12 +36,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public Iterable<BucketInfo> listBuckets() {\n     try {\n-      return Iterables.transform(storageRpc.buckets(),\n-          new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n-            @Override public Bucket apply(com.google.api.services.storage.model.Bucket model) {\n-              return new BucketImpl(StorageServiceImpl.this, model);\n-            }\n-          });\n+      return Iterables.transform(storageRpc.buckets(), new Function<com.google.api.services.storage.model.Bucket, Bucket>() {\n+        @Override\n+        public Bucket apply(com.google.api.services.storage.model.Bucket model) {\n+          return new BucketImpl(StorageServiceImpl.this, model);\n+        }\n+      });\n     } catch (IOException ex) {\n       throw new StorageServiceException(ex);\n     }\n@@ -55,4 +55,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       throw new StorageServiceException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}