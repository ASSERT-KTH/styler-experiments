{
    "project_name": "ManfredTremmel-gwt-bean-validators",
    "violation_id": "12",
    "information": {
        "violations": [
            {
                "line": "27",
                "column": "34",
                "severity": "warning",
                "message": "'}' at column 34 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "      RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n\n  private InterpolationHelper() {}\n\n  /**\n   * escape message parameter.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/final/files-repaired/12/InterpolationHelper.java\nindex 9e74aa4307b..0ea35bd080f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/final/files-repaired/12/InterpolationHelper.java\n@@ -24,7 +24,8 @@ public final class InterpolationHelper {\n   private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN =\n       RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n \n-  private InterpolationHelper() {}\n+  private InterpolationHelper() {\n+}\n \n   /**\n    * escape message parameter.\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/checkstyle_idea/12/InterpolationHelper.java\nindex 9e74aa4307b..b50a8405dac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/checkstyle_idea/12/InterpolationHelper.java\n@@ -24,7 +24,8 @@ public final class InterpolationHelper {\n   private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN =\n       RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n \n-  private InterpolationHelper() {}\n+  private InterpolationHelper() {\n+  }\n \n   /**\n    * escape message parameter.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "column": "34",
                    "severity": "warning",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/codebuff/12/InterpolationHelper.java\nindex 9e74aa4307b..e6eefe9e537 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/codebuff/12/InterpolationHelper.java\n@@ -14,15 +14,16 @@ import com.google.gwt.regexp.shared.RegExp;\n  *\n  * @author Guillaume Smet\n  */\n-public final class InterpolationHelper {\n \n+\n+public final class InterpolationHelper {\n   public static final char BEGIN_TERM = '{';\n   public static final char END_TERM = '}';\n   public static final char EL_DESIGNATOR = '$';\n   public static final char ESCAPE_CHARACTER = '\\\\';\n \n-  private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN =\n-      RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n+\n+  private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN = RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n \n   private InterpolationHelper() {}\n \n@@ -32,11 +33,12 @@ public final class InterpolationHelper {\n    * @param messageParameter parameter to escape\n    * @return escaped string\n    */\n+\n+\n   public static String escapeMessageParameter(final String messageParameter) {\n     if (messageParameter == null) {\n       return null;\n     }\n-    return ESCAPE_MESSAGE_PARAMETER_PATTERN.replace(messageParameter,\n-        String.valueOf(ESCAPE_CHARACTER) + \"$1\"); // NOPMD\n+    return ESCAPE_MESSAGE_PARAMETER_PATTERN.replace(messageParameter, String.valueOf(ESCAPE_CHARACTER) + \"$1\"); // NOPMD\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/random/files-repaired/12/InterpolationHelper.java\nindex 9e74aa4307b..0ea35bd080f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/random/files-repaired/12/InterpolationHelper.java\n@@ -24,7 +24,8 @@ public final class InterpolationHelper {\n   private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN =\n       RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n \n-  private InterpolationHelper() {}\n+  private InterpolationHelper() {\n+}\n \n   /**\n    * escape message parameter.\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/three_grams/files-repaired/12/InterpolationHelper.java\nindex 9e74aa4307b..0ea35bd080f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/violations/12/InterpolationHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ManfredTremmel-gwt-bean-validators/styler/05_predictions/three_grams/files-repaired/12/InterpolationHelper.java\n@@ -24,7 +24,8 @@ public final class InterpolationHelper {\n   private static final RegExp ESCAPE_MESSAGE_PARAMETER_PATTERN =\n       RegExp.compile(\"([\\\\\" + ESCAPE_CHARACTER + BEGIN_TERM + END_TERM + EL_DESIGNATOR + \"])\");\n \n-  private InterpolationHelper() {}\n+  private InterpolationHelper() {\n+}\n \n   /**\n    * escape message parameter.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}