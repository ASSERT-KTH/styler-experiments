{
    "project_name": "cloudera-director-sdk",
    "violation_id": "3",
    "information": {
        "violations": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/checkstyle_idea/3/Configuration.java\nindex f3ead4b40ec..c4abf0988b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/checkstyle_idea/3/Configuration.java\n@@ -19,25 +19,25 @@ package com.cloudera.director.client.common;\n \n \n public class Configuration {\n-    private static ApiClient defaultApiClient = new ApiClient();\n+  private static ApiClient defaultApiClient = new ApiClient();\n \n-    /**\n-     * Get the default API client, which would be used when creating API\n-     * instances without providing an API client.\n-     *\n-     * @return Default API client\n-     */\n-    public static ApiClient getDefaultApiClient() {\n-        return defaultApiClient;\n-    }\n+  /**\n+   * Get the default API client, which would be used when creating API\n+   * instances without providing an API client.\n+   *\n+   * @return Default API client\n+   */\n+  public static ApiClient getDefaultApiClient() {\n+    return defaultApiClient;\n+  }\n \n-    /**\n-     * Set the default API client, which would be used when creating API\n-     * instances without providing an API client.\n-     *\n-     * @param apiClient API client\n-     */\n-    public static void setDefaultApiClient(ApiClient apiClient) {\n-        defaultApiClient = apiClient;\n-    }\n+  /**\n+   * Set the default API client, which would be used when creating API\n+   * instances without providing an API client.\n+   *\n+   * @param apiClient API client\n+   */\n+  public static void setDefaultApiClient(ApiClient apiClient) {\n+    defaultApiClient = apiClient;\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/naturalize/3/Configuration.java\nindex f3ead4b40ec..36427ed7ee5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/naturalize/3/Configuration.java\n@@ -1,25 +1,10 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n \n package com.cloudera.director.client.common;\n \n-\n public class Configuration {\n-    private static ApiClient defaultApiClient = new ApiClient();\n+\n+  private static ApiClient defaultApiClient = new ApiClient();\n \n     /**\n      * Get the default API client, which would be used when creating API\n@@ -28,8 +13,8 @@ public class Configuration {\n      * @return Default API client\n      */\n     public static ApiClient getDefaultApiClient() {\n-        return defaultApiClient;\n-    }\n+  return defaultApiClient;\n+  }\n \n     /**\n      * Set the default API client, which would be used when creating API\n@@ -38,6 +23,6 @@ public class Configuration {\n      * @param apiClient API client\n      */\n     public static void setDefaultApiClient(ApiClient apiClient) {\n-        defaultApiClient = apiClient;\n-    }\n-}\n+  defaultApiClient = apiClient;\n+  }\n+  }\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/codebuff/3/Configuration.java\nindex f3ead4b40ec..13c7e7cb7c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/violations/3/Configuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/cloudera-director-sdk/codebuff/3/Configuration.java\n@@ -17,9 +17,9 @@\n \n package com.cloudera.director.client.common;\n \n-\n public class Configuration {\n-    private static ApiClient defaultApiClient = new ApiClient();\n+\n+  private static ApiClient defaultApiClient = new ApiClient();\n \n     /**\n      * Get the default API client, which would be used when creating API\n@@ -27,9 +27,10 @@ public class Configuration {\n      *\n      * @return Default API client\n      */\n-    public static ApiClient getDefaultApiClient() {\n-        return defaultApiClient;\n-    }\n+\n+  public static ApiClient getDefaultApiClient() {\n+    return defaultApiClient;\n+  }\n \n     /**\n      * Set the default API client, which would be used when creating API\n@@ -37,7 +38,8 @@ public class Configuration {\n      *\n      * @param apiClient API client\n      */\n-    public static void setDefaultApiClient(ApiClient apiClient) {\n-        defaultApiClient = apiClient;\n-    }\n-}\n+\n+  public static void setDefaultApiClient(ApiClient apiClient) {\n+    defaultApiClient = apiClient;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}