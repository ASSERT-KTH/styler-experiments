{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "172",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/172/VersionAndEditionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/172/VersionAndEditionService.java\nindex 49be11d0264..bf52aa99b4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/172/VersionAndEditionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/172/VersionAndEditionService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.management;\n \n import javax.ws.rs.GET;\n@@ -32,63 +33,61 @@ import static javax.ws.rs.core.MediaType.APPLICATION_JSON;\n import static org.neo4j.helpers.collection.MapUtil.map;\n import static org.neo4j.server.rest.domain.JsonHelper.createJsonFrom;\n \n-@Path( VersionAndEditionService.SERVER_PATH )\n+@Path(VersionAndEditionService.SERVER_PATH)\n public class VersionAndEditionService implements AdvertisableService\n {\n-    private NeoServer neoServer;\n-    public static final String SERVER_PATH = \"server/version\";\n+  private NeoServer neoServer;\n+  public static final String SERVER_PATH = \"server/version\";\n \n-    public VersionAndEditionService( @Context NeoServer neoServer )\n-    {\n-        this.neoServer = neoServer;\n-    }\n+  public VersionAndEditionService(@Context NeoServer neoServer)\n+  {\n+    this.neoServer = neoServer;\n+  }\n \n-    @Override\n-    public String getName()\n-    {\n-        return \"version\";\n-    }\n+  @Override\n+  public String getName()\n+  {\n+    return \"version\";\n+  }\n \n-    @Override\n-    public String getServerPath()\n-    {\n-        return SERVER_PATH;\n-    }\n+  @Override\n+  public String getServerPath()\n+  {\n+    return SERVER_PATH;\n+  }\n \n-    @GET\n-    @Produces( APPLICATION_JSON )\n-    public Response getVersionAndEditionData()\n-    {\n-        return Response.ok( createJsonFrom( map(\n-                        \"version\", neoDatabaseVersion( neoServer ),\n-                        \"edition\", neoServerEdition( neoServer ) ) ),\n-                APPLICATION_JSON )\n-                .build();\n-    }\n+  @GET\n+  @Produces(APPLICATION_JSON)\n+  public Response getVersionAndEditionData()\n+  {\n+    return Response.ok(createJsonFrom(map(\n+                \"version\", neoDatabaseVersion(neoServer),\n+                \"edition\", neoServerEdition(neoServer))),\n+            APPLICATION_JSON)\n+        .build();\n+  }\n \n-    private String neoDatabaseVersion( NeoServer neoServer )\n-    {\n-        return neoServer.getDatabase().getGraph().getDependencyResolver().resolveDependency( KernelData.class )\n-                .version().getReleaseVersion();\n-    }\n+  private String neoDatabaseVersion(NeoServer neoServer)\n+  {\n+    return neoServer.getDatabase().getGraph().getDependencyResolver().resolveDependency(KernelData.class)\n+        .version().getReleaseVersion();\n+  }\n \n-    private String neoServerEdition( NeoServer neoServer )\n-    {\n-        String serverClassName = neoServer.getClass().getName().toLowerCase();\n+  private String neoServerEdition(NeoServer neoServer)\n+  {\n+    String serverClassName = neoServer.getClass().getName().toLowerCase();\n \n-        if ( serverClassName.contains( \"enterpriseneoserver\" ) || serverClassName.contains( \"commercialneoserver\" ) )\n-        {\n-            return \"enterprise\";\n-        }\n-        else if ( serverClassName.contains( \"communityneoserver\" ) )\n-        {\n-            return \"community\";\n-        }\n-        else\n-        {\n+    if (serverClassName.contains(\"enterpriseneoserver\") || serverClassName.contains(\"commercialneoserver\"))\n+    {\n+      return \"enterprise\";\n+    } else if (serverClassName.contains(\"communityneoserver\"))\n+    {\n+      return \"community\";\n+    } else\n+    {\n //            return \"unknown\";\n-            throw new IllegalStateException( \"The Neo Server running is of unknown type. Valid types are Community \" +\n-                    \"and Enterprise.\" );\n-        }\n+      throw new IllegalStateException(\"The Neo Server running is of unknown type. Valid types are Community \" +\n+          \"and Enterprise.\");\n     }\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}