{
    "project_name": "open-eid-digidoc4j",
    "violation_id": "93",
    "information": {
        "violations": [
            {
                "line": "83",
                "column": "118",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      }\n    } catch (IllegalStateException e) {\n      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n              \" certificate source?\",\n          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n              .getDSSIdAsString(), e);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "83",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/93/OCSPCertificateValidator.java\nindex acf0b0c5f3a..27773b29149 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/93/OCSPCertificateValidator.java\n@@ -81,7 +81,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       }\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "83",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/93/OCSPCertificateValidator.java\nindex acf0b0c5f3a..774548516ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/93/OCSPCertificateValidator.java\n@@ -44,8 +44,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -80,11 +79,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n-    }\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n+  }\n     throw CertificateValidationException.of(CertificateValidationException.CertificateValidationStatus.UNTRUSTED);\n   }\n \n@@ -114,4 +110,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n     return certificateSource;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/93/OCSPCertificateValidator.java\nindex acf0b0c5f3a..ec54ee9cf69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/93/OCSPCertificateValidator.java\n@@ -21,7 +21,6 @@ import org.digidoc4j.exceptions.CertificateValidationException;\n import org.digidoc4j.exceptions.SignatureVerificationException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.security.auth.x500.X500Principal;\n import java.security.cert.CertificateEncodingException;\n import java.security.cert.X509Certificate;\n@@ -32,6 +31,8 @@ import java.util.List;\n  * <p>\n  * Created by Janar Rahumeel (CGI Estonia)\n  */\n+\n+\n public class OCSPCertificateValidator implements CertificateValidator {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(OCSPCertificateValidator.class);\n@@ -44,8 +45,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -80,10 +81,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n     }\n     throw CertificateValidationException.of(CertificateValidationException.CertificateValidationStatus.UNTRUSTED);\n   }\n@@ -92,7 +90,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n     List<CertificateToken> tokens = this.getCertificateTokens(principal);\n     if (tokens.size() != 1) {\n       throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\",\n-          tokens.size()));\n+        tokens.size()));\n     }\n     return tokens.get(0);\n   }\n@@ -113,5 +111,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n   public CertificateSource getCertificateSource() {\n     return certificateSource;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "84",
                    "column": "7",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/93/OCSPCertificateValidator.java\nindex acf0b0c5f3a..e48ff21ca51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/93/OCSPCertificateValidator.java\n@@ -80,8 +80,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n         return this.getFromCertificateSource(certificateToken.getIssuerX500Principal());\n       }\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\"\n+      +\" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "83",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/93/OCSPCertificateValidator.java\nindex acf0b0c5f3a..27773b29149 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/93/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/93/OCSPCertificateValidator.java\n@@ -81,7 +81,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       }\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}