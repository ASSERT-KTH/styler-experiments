{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2572",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2572/ValuesIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2572/ValuesIterator.java\nindex 2cad4c6e37a..29d0c702d9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2572/ValuesIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2572/ValuesIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.collector;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n@@ -28,60 +29,60 @@ import org.neo4j.collection.primitive.PrimitiveLongIterator;\n  */\n public interface ValuesIterator extends PrimitiveLongIterator, DocValuesAccess\n {\n-    int remaining();\n+  int remaining();\n \n-    float currentScore();\n+  float currentScore();\n \n-    ValuesIterator EMPTY = new ValuesIterator.Adapter( 0 )\n+  ValuesIterator EMPTY = new ValuesIterator.Adapter(0)\n+  {\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public long current()\n-        {\n-            return 0;\n-        }\n+      return false;\n+    }\n \n-        @Override\n-        public float currentScore()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long current()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public long getValue( String field )\n-        {\n-            return 0;\n-        }\n-    };\n+    @Override\n+    public float currentScore()\n+    {\n+      return 0;\n+    }\n \n-    abstract class Adapter extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements ValuesIterator\n+    @Override\n+    public long getValue(String field)\n     {\n-        protected final int size;\n-        protected int index;\n+      return 0;\n+    }\n+  };\n+\n+  abstract class Adapter extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements ValuesIterator\n+  {\n+    protected final int size;\n+    protected int index;\n \n-        /**\n-         * Gets the score for the current iterator position.\n-         *\n-         * @return The score of the value, or 0 if scoring is not kept or applicable.\n-         */\n-        public abstract float currentScore();\n+    /**\n+     * Gets the score for the current iterator position.\n+     *\n+     * @return The score of the value, or 0 if scoring is not kept or applicable.\n+     */\n+    public abstract float currentScore();\n \n-        Adapter( int size )\n-        {\n-            this.size = size;\n-        }\n+    Adapter(int size)\n+    {\n+      this.size = size;\n+    }\n \n-        /**\n-         * @return the number of docs left in this iterator.\n-         */\n-        public int remaining()\n-        {\n-            return size - index;\n-        }\n+    /**\n+     * @return the number of docs left in this iterator.\n+     */\n+    public int remaining()\n+    {\n+      return size - index;\n     }\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2572/ValuesIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2572/ValuesIterator.java\nindex 2cad4c6e37a..b8da5e153b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2572/ValuesIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2572/ValuesIterator.java\n@@ -31,8 +31,7 @@ public interface ValuesIterator extends PrimitiveLongIterator, DocValuesAccess\n     int remaining();\n \n     float currentScore();\n-\n-    ValuesIterator EMPTY = new ValuesIterator.Adapter( 0 )\n+ValuesIterator EMPTY = new ValuesIterator.Adapter( 0 )\n     {\n         @Override\n         protected boolean fetchNext()\n@@ -84,4 +83,4 @@ public interface ValuesIterator extends PrimitiveLongIterator, DocValuesAccess\n             return size - index;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}