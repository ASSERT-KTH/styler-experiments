{
    "project_name": "Angel-ML-angel",
    "violation_id": "957",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/957/WorkerFromAttemptEvent.java\nindex 0db0a4cf1ae..3924b4fd935 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/957/WorkerFromAttemptEvent.java\n@@ -21,26 +21,30 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n-  /**worker attempt id*/\n-  private final WorkerAttemptId workerAttemptId;\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n+    /**\n+     * worker attempt id\n+     */\n+    private final WorkerAttemptId workerAttemptId;\n \n-  /**\n-   * Create a WorkerFromAttemptEvent\n-   * @param eventType event type\n-   * @param workerAttemptId worker attempt id\n-   */\n-  public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n-    super(eventType, workerAttemptId.getWorkerId());\n-    this.workerAttemptId = workerAttemptId;\n-  }\n+    /**\n+     * Create a WorkerFromAttemptEvent\n+     *\n+     * @param eventType       event type\n+     * @param workerAttemptId worker attempt id\n+     */\n+    public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n+        super(eventType, workerAttemptId.getWorkerId());\n+        this.workerAttemptId = workerAttemptId;\n+    }\n \n-  /**\n-   * Get worker attempt id\n-   * @return worker attempt id\n-   */\n-  public WorkerAttemptId getWorkerAttemptId() {\n-    return workerAttemptId;\n-  }\n+    /**\n+     * Get worker attempt id\n+     *\n+     * @return worker attempt id\n+     */\n+    public WorkerAttemptId getWorkerAttemptId() {\n+        return workerAttemptId;\n+    }\n \n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/957/WorkerFromAttemptEvent.java\nindex 0db0a4cf1ae..770db09430c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/957/WorkerFromAttemptEvent.java\n@@ -21,7 +21,7 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n   /**worker attempt id*/\n   private final WorkerAttemptId workerAttemptId;\n \n@@ -43,4 +43,4 @@ public class WorkerFromAttemptEvent extends AMWorkerEvent{\n     return workerAttemptId;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/957/WorkerFromAttemptEvent.java\nindex 0db0a4cf1ae..57252b9a4c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/957/WorkerFromAttemptEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/957/WorkerFromAttemptEvent.java\n@@ -21,8 +21,10 @@ import com.tencent.angel.worker.WorkerAttemptId;\n /**\n  * Worker events that come from the attempts of worker.\n  */\n-public class WorkerFromAttemptEvent extends AMWorkerEvent{\n+\n+public class WorkerFromAttemptEvent extends AMWorkerEvent {\n   /**worker attempt id*/\n+\n   private final WorkerAttemptId workerAttemptId;\n \n   /**\n@@ -30,6 +32,7 @@ public class WorkerFromAttemptEvent extends AMWorkerEvent{\n    * @param eventType event type\n    * @param workerAttemptId worker attempt id\n    */\n+\n   public WorkerFromAttemptEvent(AMWorkerEventType eventType, WorkerAttemptId workerAttemptId) {\n     super(eventType, workerAttemptId.getWorkerId());\n     this.workerAttemptId = workerAttemptId;\n@@ -39,8 +42,9 @@ public class WorkerFromAttemptEvent extends AMWorkerEvent{\n    * Get worker attempt id\n    * @return worker attempt id\n    */\n+\n   public WorkerAttemptId getWorkerAttemptId() {\n     return workerAttemptId;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}