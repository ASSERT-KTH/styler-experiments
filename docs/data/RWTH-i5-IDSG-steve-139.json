{
    "project_name": "RWTH-i5-IDSG-steve",
    "violation_id": "139",
    "information": {
        "violations": [
            {
                "line": "49",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n    public boolean isValidWhenDifferential() {\n        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n    }\n\n    @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/final/files-repaired/139/SendLocalListParams.java\nindex 61c68f0900f..6cc2da5b392 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/final/files-repaired/139/SendLocalListParams.java\n@@ -46,10 +46,11 @@ public class SendLocalListParams extends MultipleChargePointSelect {\n \n     @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n     public boolean isValidWhenDifferential() {\n-        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n-    }\n+        return\n+            SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n+     }\n \n-    @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n+     @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n     public boolean isDisjoint() {\n         return Collections.disjoint(getDeleteList(), getAddUpdateList());\n     }\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "50",
                    "column": "90",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/checkstyle_idea/139/SendLocalListParams.java\nindex 61c68f0900f..6cb5b0bd489 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/checkstyle_idea/139/SendLocalListParams.java\n@@ -16,6 +16,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n  */\n+\n package de.rwth.idsg.steve.web.dto.ocpp;\n \n import lombok.Getter;\n@@ -35,36 +36,37 @@ import java.util.List;\n @Getter\n public class SendLocalListParams extends MultipleChargePointSelect {\n \n-    @NotNull(message = \"List version is required\")\n-    private Integer listVersion;\n+  @NotNull(message = \"List version is required\")\n+  private Integer listVersion;\n \n-    @NotNull(message = \"Update Type is required\")\n-    private SendLocalListUpdateType updateType = SendLocalListUpdateType.FULL;\n+  @NotNull(message = \"Update Type is required\")\n+  private SendLocalListUpdateType updateType = SendLocalListUpdateType.FULL;\n \n-    private List<String> deleteList;\n-    private List<String> addUpdateList;\n+  private List<String> deleteList;\n+  private List<String> addUpdateList;\n \n-    @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n-    public boolean isValidWhenDifferential() {\n-        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n-    }\n+  @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n+  public boolean isValidWhenDifferential() {\n+    return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() ||\n+      !getAddUpdateList().isEmpty();\n+  }\n \n-    @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n-    public boolean isDisjoint() {\n-        return Collections.disjoint(getDeleteList(), getAddUpdateList());\n-    }\n+  @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n+  public boolean isDisjoint() {\n+    return Collections.disjoint(getDeleteList(), getAddUpdateList());\n+  }\n \n-    public List<String> getDeleteList() {\n-        if (deleteList == null) {\n-            deleteList = new ArrayList<>();\n-        }\n-        return deleteList;\n+  public List<String> getDeleteList() {\n+    if (deleteList == null) {\n+      deleteList = new ArrayList<>();\n     }\n+    return deleteList;\n+  }\n \n-    public List<String> getAddUpdateList() {\n-        if (addUpdateList == null) {\n-            addUpdateList = new ArrayList<>();\n-        }\n-        return addUpdateList;\n+  public List<String> getAddUpdateList() {\n+    if (addUpdateList == null) {\n+      addUpdateList = new ArrayList<>();\n     }\n+    return addUpdateList;\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/naturalize/139/SendLocalListParams.java\nindex 61c68f0900f..9a1f0df9b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/naturalize/139/SendLocalListParams.java\n@@ -15,8 +15,7 @@\n  *\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n- */\n-package de.rwth.idsg.steve.web.dto.ocpp;\n+ */package de.rwth.idsg.steve.web.dto.ocpp;\n \n import lombok.Getter;\n import lombok.Setter;\n@@ -67,4 +66,4 @@ public class SendLocalListParams extends MultipleChargePointSelect {\n         }\n         return addUpdateList;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/codebuff/139/SendLocalListParams.java\nindex 61c68f0900f..0510f35c994 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/codebuff/139/SendLocalListParams.java\n@@ -20,7 +20,6 @@ package de.rwth.idsg.steve.web.dto.ocpp;\n \n import lombok.Getter;\n import lombok.Setter;\n-\n import javax.validation.constraints.AssertTrue;\n import javax.validation.constraints.NotNull;\n import java.util.ArrayList;\n@@ -31,22 +30,23 @@ import java.util.List;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 03.01.2015\n  */\n+\n+\n @Setter\n @Getter\n public class SendLocalListParams extends MultipleChargePointSelect {\n \n     @NotNull(message = \"List version is required\")\n     private Integer listVersion;\n-\n     @NotNull(message = \"Update Type is required\")\n     private SendLocalListUpdateType updateType = SendLocalListUpdateType.FULL;\n-\n     private List<String> deleteList;\n     private List<String> addUpdateList;\n-\n     @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n     public boolean isValidWhenDifferential() {\n-        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n+        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList()\n+            .isEmpty() || !getAddUpdateList()\n+                .isEmpty();\n     }\n \n     @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n@@ -67,4 +67,4 @@ public class SendLocalListParams extends MultipleChargePointSelect {\n         }\n         return addUpdateList;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "49",
                    "column": "44",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "65",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/random/files-repaired/139/SendLocalListParams.java\nindex 61c68f0900f..aae29ca5fd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/random/files-repaired/139/SendLocalListParams.java\n@@ -46,10 +46,8 @@ public class SendLocalListParams extends MultipleChargePointSelect {\n \n     @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n     public boolean isValidWhenDifferential() {\n-        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n-    }\n-\n-    @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n+        return SendLocalListUpdateType.FULL. equals(updateType)||!\n+        getDeleteList().isEmpty()||!getAddUpdateList().isEmpty();}@AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n     public boolean isDisjoint() {\n         return Collections.disjoint(getDeleteList(), getAddUpdateList());\n     }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/three_grams/files-repaired/139/SendLocalListParams.java\nindex 61c68f0900f..6cc2da5b392 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/139/SendLocalListParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/three_grams/files-repaired/139/SendLocalListParams.java\n@@ -46,10 +46,11 @@ public class SendLocalListParams extends MultipleChargePointSelect {\n \n     @AssertTrue(message = \"When Update Type is DIFFERENTIAL, either Add/Update or Delete list should not be empty\")\n     public boolean isValidWhenDifferential() {\n-        return SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n-    }\n+        return\n+            SendLocalListUpdateType.FULL.equals(updateType) || !getDeleteList().isEmpty() || !getAddUpdateList().isEmpty();\n+     }\n \n-    @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n+     @AssertTrue(message = \"The Add/Update and Delete lists should have no elements in ocpp\")\n     public boolean isDisjoint() {\n         return Collections.disjoint(getDeleteList(), getAddUpdateList());\n     }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}