{
    "project_name": "intuit-Tank",
    "violation_id": "79",
    "information": {
        "violations": [
            {
                "line": "47",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        String prefix = \"x\";\n        NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n        return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n    }\n\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "47",
                    "column": "66",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/79/ScriptGroupStepDao.java\nindex 6891917b141..f6ec49ac830 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/79/ScriptGroupStepDao.java\n@@ -44,7 +44,9 @@ public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n     public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n-        return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n+        return listWithJQL ( buildQlSelect(prefix)+startWhere () +buildWhereClause(\n+    Operation\n+        .IN, prefix, parameter), parameter);\n     }\n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/79/ScriptGroupStepDao.java\nindex 6891917b141..097ae25349c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/79/ScriptGroupStepDao.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.dao;\n \n /*\n@@ -23,28 +24,27 @@ import com.intuit.tank.project.ScriptGroupStep;\n \n /**\n  * ProductDao\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n \n-    /**\n-     * @param entityClass\n-     */\n-    public ScriptGroupStepDao() {\n-        super();\n-    }\n-\n-    /**\n-     * \n-     * @param script\n-     * @return\n-     */\n-    public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n-        String prefix = \"x\";\n-        NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n-        return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n-    }\n+  /**\n+   * @param entityClass\n+   */\n+  public ScriptGroupStepDao() {\n+    super();\n+  }\n+\n+  /**\n+   * @param script\n+   * @return\n+   */\n+  public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n+    String prefix = \"x\";\n+    NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n+    return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter),\n+      parameter);\n+  }\n \n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/79/ScriptGroupStepDao.java\nindex 6891917b141..4e185ea0414 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/79/ScriptGroupStepDao.java\n@@ -47,4 +47,4 @@ public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n         return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/79/ScriptGroupStepDao.java\nindex 6891917b141..a4a24d90687 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/79/ScriptGroupStepDao.java\n@@ -16,8 +16,9 @@ package com.intuit.tank.dao;\n  * #L%\n  */\n \n-import java.util.List;\n \n+\n+import java.util.List;\n import com.intuit.tank.project.Script;\n import com.intuit.tank.project.ScriptGroupStep;\n \n@@ -27,11 +28,14 @@ import com.intuit.tank.project.ScriptGroupStep;\n  * @author dangleton\n  * \n  */\n+\n+\n public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n \n     /**\n      * @param entityClass\n      */\n+\n     public ScriptGroupStepDao() {\n         super();\n     }\n@@ -41,10 +45,12 @@ public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n      * @param script\n      * @return\n      */\n+\n+\n     public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n         return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "64",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "64",
                    "severity": "warning",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "21",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/79/ScriptGroupStepDao.java\nindex 6891917b141..040e9922ac5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/79/ScriptGroupStepDao.java\n@@ -44,7 +44,5 @@ public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n     public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n-        return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n-    }\n-\n-}\n+        return listWithJQL ( buildQlSelect(prefix)+startWhere()+buildWhereClause(\n+        Operation.IN,prefix,parameter),parameter);}}\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "51",
                    "severity": "warning",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "47",
                    "column": "66",
                    "severity": "warning",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/79/ScriptGroupStepDao.java\nindex 6891917b141..f6ec49ac830 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/79/ScriptGroupStepDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/79/ScriptGroupStepDao.java\n@@ -44,7 +44,9 @@ public class ScriptGroupStepDao extends BaseDao<ScriptGroupStep> {\n     public List<ScriptGroupStep> getScriptGroupsForScript(Script script) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(ScriptGroupStep.PROPERTY_SCRIPT, \"s\", script);\n-        return listWithJQL(buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.IN, prefix, parameter), parameter);\n+        return listWithJQL ( buildQlSelect(prefix)+startWhere () +buildWhereClause(\n+    Operation\n+        .IN, prefix, parameter), parameter);\n     }\n \n }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}