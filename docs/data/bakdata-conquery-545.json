{
    "project_name": "bakdata-conquery",
    "violation_id": "545",
    "information": {
        "violations": [
            {
                "line": "15",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import lombok.EqualsAndHashCode;\nimport lombok.RequiredArgsConstructor;\nimport lombok.ToString;\t\n\n@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n@JsonTypeIdResolver(CPSTypeIdResolver.class)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/545/ConqueryPermission.java\nindex 44230aa6350..6e3ac961a48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/545/ConqueryPermission.java\n@@ -12,7 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/545/ConqueryPermission.java\nindex 44230aa6350..abb20939f76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/545/ConqueryPermission.java\n@@ -12,30 +12,30 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n+@JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, include = JsonTypeInfo.As.PROPERTY, property = \"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n @CPSBase\n @ToString\n-@EqualsAndHashCode(callSuper=false)\n+@EqualsAndHashCode(callSuper = false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements PermissionMixin {\n-\t\n-\t\n-\t@Override\n-\tpublic boolean implies(Permission permission) {\n-\t\t// Check exact permission category\n-\t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n-\t}\n-\t\n-\tpublic Optional<ConqueryPermission> subtract(ConqueryPermission subtrahend) {\n-\t\tif (!getClass().isAssignableFrom(subtrahend.getClass())) {\n-\t\t\tthrow new IllegalStateException(String.format(\"Cannot subtract differing classes, which are: %s nd %s\", getClass(), subtrahend.getClass()));\n-\t\t}\n-\t\treturn Optional.empty();\n-\t}\n-\t\n-\tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n+\n+\n+    @Override\n+    public boolean implies(Permission permission) {\n+        // Check exact permission category\n+        return this.getClass().isAssignableFrom(permission.getClass());\n+\n+    }\n+\n+    public Optional<ConqueryPermission> subtract(ConqueryPermission subtrahend) {\n+        if (!getClass().isAssignableFrom(subtrahend.getClass())) {\n+            throw new IllegalStateException(String.format(\"Cannot subtract differing classes, which are: %s nd %s\", getClass(), subtrahend.getClass()));\n+        }\n+        return Optional.empty();\n+    }\n+\n+    public abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/545/ConqueryPermission.java\nindex 44230aa6350..35f7360c6f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/545/ConqueryPermission.java\n@@ -2,40 +2,37 @@ package com.bakdata.conquery.models.auth.permissions;\n \n import java.util.Collection;\n import java.util.Optional;\n-\n import org.apache.shiro.authz.Permission;\n-\n import com.bakdata.conquery.io.cps.CPSBase;\n import com.bakdata.conquery.io.cps.CPSTypeIdResolver;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n-\n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n+@JsonTypeInfo(use= JsonTypeInfo.Id.CUSTOM, include= JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n-@CPSBase\n-@ToString\n-@EqualsAndHashCode(callSuper=false)\n+@CPSBase @ToString @EqualsAndHashCode(callSuper=false)\n @RequiredArgsConstructor\n public abstract class ConqueryPermission implements PermissionMixin {\n-\t\n-\t\n-\t@Override\n-\tpublic boolean implies(Permission permission) {\n-\t\t// Check exact permission category\n-\t\treturn this.getClass().isAssignableFrom(permission.getClass());\n-\t\t\n-\t}\n-\t\n-\tpublic Optional<ConqueryPermission> subtract(ConqueryPermission subtrahend) {\n-\t\tif (!getClass().isAssignableFrom(subtrahend.getClass())) {\n-\t\t\tthrow new IllegalStateException(String.format(\"Cannot subtract differing classes, which are: %s nd %s\", getClass(), subtrahend.getClass()));\n-\t\t}\n-\t\treturn Optional.empty();\n-\t}\n-\t\n-\tpublic abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n+\n+ @Override\n+ public boolean implies(Permission permission) {\n+  // Check exact permission category\n+  return this.getClass().isAssignableFrom(permission.getClass());\n+ }\n+\n+ public Optional<ConqueryPermission> subtract(ConqueryPermission subtrahend) {\n+  if (!getClass().isAssignableFrom(subtrahend.getClass())) {\n+   throw new IllegalStateException(String.format(\n+          \"Cannot subtract differing classes, which are: %s nd %s\",\n+          getClass(),\n+          subtrahend.getClass()\n+         ));\n+  }\n+  return Optional.empty();\n+ }\n+\n+ public abstract Optional<ConqueryPermission> findSimilar(Collection<ConqueryPermission> permissions);\n }\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/random/files-repaired/545/ConqueryPermission.java\nindex 44230aa6350..8dfde9fcc2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/random/files-repaired/545/ConqueryPermission.java\n@@ -12,9 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n-\n-@JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n+import lombok.ToString; @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n @CPSBase\n @ToString\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/545/ConqueryPermission.java\nindex 44230aa6350..6e3ac961a48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/545/ConqueryPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/545/ConqueryPermission.java\n@@ -12,7 +12,7 @@ import com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver;\n \n import lombok.EqualsAndHashCode;\n import lombok.RequiredArgsConstructor;\n-import lombok.ToString;\t\n+import lombok.ToString;\n \n @JsonTypeInfo(use=JsonTypeInfo.Id.CUSTOM, include=JsonTypeInfo.As.PROPERTY, property=\"type\")\n @JsonTypeIdResolver(CPSTypeIdResolver.class)\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ]
}