{
    "project_name": "IQSS-dataverse",
    "violation_id": "43",
    "information": {
        "violations": [
            {
                "line": "17",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic class BriefJsonPrinter {\n\t\n\tpublic JsonObjectBuilder json( DatasetVersion dsv ) {\n\t\treturn ( dsv==null ) \n\t\t\t\t? null",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/43/BriefJsonPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/43/BriefJsonPrinter.java\nindex ee0a882a10d..bb19bc436ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/43/BriefJsonPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/43/BriefJsonPrinter.java\n@@ -8,33 +8,33 @@ import edu.harvard.iq.dataverse.workflow.Workflow;\n import javax.json.JsonObjectBuilder;\n \n /**\n- * A Json printer that prints minimal data on objects. Useful when embedding \n+ * A Json printer that prints minimal data on objects. Useful when embedding\n  * objects inside others.\n- * \n+ *\n  * @author michael\n  */\n public class BriefJsonPrinter {\n-\t\n-\tpublic JsonObjectBuilder json( DatasetVersion dsv ) {\n-\t\treturn ( dsv==null ) \n-\t\t\t\t? null\n-\t\t\t\t: jsonObjectBuilder().add(\"id\", dsv.getId())\n-\t\t\t\t\t.add(\"version\", dsv.getVersion() )\n-\t\t\t\t\t.add(\"versionState\", dsv.getVersionState().name() )\n-\t\t\t\t\t.add(\"title\", dsv.getTitle());\n-\t}\n-    \n-    public JsonObjectBuilder json( MetadataBlock blk ) {\n-\t\treturn ( blk==null ) \n-\t\t\t\t? null\n-\t\t\t\t: jsonObjectBuilder().add(\"id\", blk.getId())\n-\t\t\t\t\t.add(\"displayName\", blk.getDisplayName())\n-\t\t\t\t\t.add(\"name\", blk.getName())\n-\t\t\t\t\t;\n-\t}\n-    \n-    public JsonObjectBuilder json( Workflow wf ) {\n-        return jsonObjectBuilder().add(\"id\", wf.getId())\n-                                  .add(\"name\", wf.getName() );\n-    }\n+\n+  public JsonObjectBuilder json(DatasetVersion dsv) {\n+    return (dsv == null)\n+      ? null\n+      : jsonObjectBuilder().add(\"id\", dsv.getId())\n+      .add(\"version\", dsv.getVersion())\n+      .add(\"versionState\", dsv.getVersionState().name())\n+      .add(\"title\", dsv.getTitle());\n+  }\n+\n+  public JsonObjectBuilder json(MetadataBlock blk) {\n+    return (blk == null)\n+      ? null\n+      : jsonObjectBuilder().add(\"id\", blk.getId())\n+      .add(\"displayName\", blk.getDisplayName())\n+      .add(\"name\", blk.getName())\n+      ;\n+  }\n+\n+  public JsonObjectBuilder json(Workflow wf) {\n+    return jsonObjectBuilder().add(\"id\", wf.getId())\n+      .add(\"name\", wf.getName());\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/43/BriefJsonPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/43/BriefJsonPrinter.java\nindex ee0a882a10d..e59eb53b43a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/43/BriefJsonPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/43/BriefJsonPrinter.java\n@@ -13,28 +13,20 @@ import javax.json.JsonObjectBuilder;\n  * \n  * @author michael\n  */\n+\n+\n public class BriefJsonPrinter {\n-\t\n-\tpublic JsonObjectBuilder json( DatasetVersion dsv ) {\n-\t\treturn ( dsv==null ) \n-\t\t\t\t? null\n-\t\t\t\t: jsonObjectBuilder().add(\"id\", dsv.getId())\n-\t\t\t\t\t.add(\"version\", dsv.getVersion() )\n-\t\t\t\t\t.add(\"versionState\", dsv.getVersionState().name() )\n-\t\t\t\t\t.add(\"title\", dsv.getTitle());\n-\t}\n-    \n-    public JsonObjectBuilder json( MetadataBlock blk ) {\n-\t\treturn ( blk==null ) \n-\t\t\t\t? null\n-\t\t\t\t: jsonObjectBuilder().add(\"id\", blk.getId())\n-\t\t\t\t\t.add(\"displayName\", blk.getDisplayName())\n-\t\t\t\t\t.add(\"name\", blk.getName())\n-\t\t\t\t\t;\n-\t}\n-    \n-    public JsonObjectBuilder json( Workflow wf ) {\n-        return jsonObjectBuilder().add(\"id\", wf.getId())\n-                                  .add(\"name\", wf.getName() );\n+\n+    public JsonObjectBuilder json(DatasetVersion dsv) {\n+        return (dsv == null) ? null : jsonObjectBuilder().add(\"id\", dsv.getId()).add(\"version\", dsv.getVersion()).add(\"versionState\", dsv.getVersionState().name()).add(\"title\", dsv.getTitle());\n+    }\n+\n+    public JsonObjectBuilder json(MetadataBlock blk) {\n+        return (blk == null) ? null : jsonObjectBuilder().add(\"id\", blk.getId()).add(\"displayName\", blk.getDisplayName()).add(\"name\", blk.getName());\n+    }\n+\n+    public JsonObjectBuilder json(Workflow wf) {\n+        return jsonObjectBuilder().add(\"id\", wf.getId()).add(\"name\", wf.getName());\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}