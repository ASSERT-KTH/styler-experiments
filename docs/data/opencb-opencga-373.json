{
    "project_name": "opencb-opencga",
    "violation_id": "373",
    "information": {
        "violations": [
            {
                "line": "72",
                "column": "93",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n\n    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n        return get(Collections.singletonList(migrationRunId));\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/373/MigrationDBAdaptor.java\nindex 4afd2f78e4f..daf467f109b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/373/MigrationDBAdaptor.java\n@@ -69,7 +69,7 @@ public interface MigrationDBAdaptor {\n \n     OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n \n-    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n+    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException {\n         return get(Collections.singletonList(migrationRunId));\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/373/MigrationDBAdaptor.java\nindex 4afd2f78e4f..fed2045fc96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/373/MigrationDBAdaptor.java\n@@ -16,65 +16,66 @@ import static org.opencb.commons.datastore.core.QueryParam.Type.STRING;\n \n public interface MigrationDBAdaptor {\n \n-    enum QueryParams implements QueryParam {\n-        ID(\"id\", STRING, \"\"),\n-        DATE(\"date\", QueryParam.Type.DATE, \"\"),\n-        PATCH(\"patch\", INTEGER, \"\"),\n-        STATUS(\"status\", STRING, \"\");\n-\n-        private static Map<String, QueryParams> map = new HashMap<>();\n-        static {\n-            for (QueryParams params : QueryParams.values()) {\n-                map.put(params.key(), params);\n-            }\n-        }\n-\n-        private final String key;\n-        private Type type;\n-        private String description;\n-\n-        QueryParams(String key, Type type, String description) {\n-            this.key = key;\n-            this.type = type;\n-            this.description = description;\n-        }\n-\n-        @Override\n-        public String key() {\n-            return key;\n-        }\n-\n-        @Override\n-        public Type type() {\n-            return type;\n-        }\n-\n-        @Override\n-        public String description() {\n-            return description;\n-        }\n-\n-        public static Map<String, QueryParams> getMap() {\n-            return map;\n-        }\n-\n-        public static QueryParams getParam(String key) {\n-            return map.get(key);\n-        }\n+  enum QueryParams implements QueryParam {\n+    ID(\"id\", STRING, \"\"),\n+    DATE(\"date\", QueryParam.Type.DATE, \"\"),\n+    PATCH(\"patch\", INTEGER, \"\"),\n+    STATUS(\"status\", STRING, \"\");\n+\n+    private static Map<String, QueryParams> map = new HashMap<>();\n+\n+    static {\n+      for (QueryParams params : QueryParams.values()) {\n+        map.put(params.key(), params);\n+      }\n     }\n \n-    void insert(MigrationRun migrationRun) throws CatalogDBException;\n+    private final String key;\n+    private Type type;\n+    private String description;\n \n-    OpenCGAResult<MigrationRun> get(Query query) throws CatalogDBException;\n+    QueryParams(String key, Type type, String description) {\n+      this.key = key;\n+      this.type = type;\n+      this.description = description;\n+    }\n+\n+    @Override\n+    public String key() {\n+      return key;\n+    }\n+\n+    @Override\n+    public Type type() {\n+      return type;\n+    }\n+\n+    @Override\n+    public String description() {\n+      return description;\n+    }\n \n-    OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n+    public static Map<String, QueryParams> getMap() {\n+      return map;\n+    }\n \n-    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n-        return get(Collections.singletonList(migrationRunId));\n+    public static QueryParams getParam(String key) {\n+      return map.get(key);\n     }\n+  }\n+\n+  void insert(MigrationRun migrationRun) throws CatalogDBException;\n+\n+  OpenCGAResult<MigrationRun> get(Query query) throws CatalogDBException;\n+\n+  OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n+\n+  default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException {\n+    return get(Collections.singletonList(migrationRunId));\n+  }\n \n-    void update(String migrationRunId, MigrationRun migrationRun) throws CatalogDBException;\n+  void update(String migrationRunId, MigrationRun migrationRun) throws CatalogDBException;\n \n-    void delete(String migrationRunId) throws CatalogDBException;\n+  void delete(String migrationRunId) throws CatalogDBException;\n \n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/373/MigrationDBAdaptor.java\nindex 4afd2f78e4f..dd9798b0a1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/373/MigrationDBAdaptor.java\n@@ -69,7 +69,7 @@ public interface MigrationDBAdaptor {\n \n     OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n \n-    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n+    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException {\n         return get(Collections.singletonList(migrationRunId));\n     }\n \n@@ -77,4 +77,4 @@ public interface MigrationDBAdaptor {\n \n     void delete(String migrationRunId) throws CatalogDBException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/373/MigrationDBAdaptor.java\nindex 4afd2f78e4f..daf467f109b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/373/MigrationDBAdaptor.java\n@@ -69,7 +69,7 @@ public interface MigrationDBAdaptor {\n \n     OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n \n-    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n+    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException {\n         return get(Collections.singletonList(migrationRunId));\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/373/MigrationDBAdaptor.java\nindex 4afd2f78e4f..daf467f109b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/373/MigrationDBAdaptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/373/MigrationDBAdaptor.java\n@@ -69,7 +69,7 @@ public interface MigrationDBAdaptor {\n \n     OpenCGAResult<MigrationRun> get(List<String> migrationRunIds) throws CatalogDBException;\n \n-    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException{\n+    default OpenCGAResult<MigrationRun> get(String migrationRunId) throws CatalogDBException {\n         return get(Collections.singletonList(migrationRunId));\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}