{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "153",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/153/RecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/153/RecordAccess.java\nindex f085f77fd28..4c775b4da82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/153/RecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/153/RecordAccess.java\n@@ -17,87 +17,88 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n /**\n  * Provides access to records, both for reading and for writing.\n  */\n-public interface RecordAccess<RECORD,ADDITIONAL>\n+public interface RecordAccess<RECORD, ADDITIONAL>\n {\n-    /**\n-     * Gets an already loaded record, or loads it as part of this call if it wasn't. The {@link RecordProxy}\n-     * returned has means of communicating when to get access to the actual record for reading or writing.\n-     * With that information any additional loading or storing can be inferred for the specific\n-     * use case (implementation).\n-     *\n-     * @param key the record key.\n-     * @param additionalData additional data to put in the record after loaded.\n-     * @return a {@link RecordProxy} for the record for {@code key}.\n-     */\n-    RecordProxy<RECORD, ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData );\n+  /**\n+   * Gets an already loaded record, or loads it as part of this call if it wasn't. The {@link RecordProxy}\n+   * returned has means of communicating when to get access to the actual record for reading or writing.\n+   * With that information any additional loading or storing can be inferred for the specific\n+   * use case (implementation).\n+   *\n+   * @param key            the record key.\n+   * @param additionalData additional data to put in the record after loaded.\n+   * @return a {@link RecordProxy} for the record for {@code key}.\n+   */\n+  RecordProxy<RECORD, ADDITIONAL> getOrLoad(long key, ADDITIONAL additionalData);\n \n-    RecordProxy<RECORD, ADDITIONAL> getIfLoaded( long key );\n+  RecordProxy<RECORD, ADDITIONAL> getIfLoaded(long key);\n \n-    @Deprecated\n-    void setTo( long key, RECORD newRecord, ADDITIONAL additionalData );\n+  @Deprecated\n+  void setTo(long key, RECORD newRecord, ADDITIONAL additionalData);\n \n-    RecordProxy<RECORD,ADDITIONAL> setRecord( long key, RECORD record, ADDITIONAL additionalData );\n+  RecordProxy<RECORD, ADDITIONAL> setRecord(long key, RECORD record, ADDITIONAL additionalData);\n \n-    /**\n-     * Creates a new record with the given {@code key}. Any {@code additionalData} is set in the\n-     * record before returning.\n-     *\n-     * @param key the record key.\n-     * @param additionalData additional data to put in the record after loaded.\n-     * @return a {@link RecordProxy} for the record for {@code key}.\n-     */\n-    RecordProxy<RECORD, ADDITIONAL> create( long key, ADDITIONAL additionalData );\n+  /**\n+   * Creates a new record with the given {@code key}. Any {@code additionalData} is set in the\n+   * record before returning.\n+   *\n+   * @param key            the record key.\n+   * @param additionalData additional data to put in the record after loaded.\n+   * @return a {@link RecordProxy} for the record for {@code key}.\n+   */\n+  RecordProxy<RECORD, ADDITIONAL> create(long key, ADDITIONAL additionalData);\n \n-    /**\n-     * Closes the record access.\n-     */\n-    void close();\n+  /**\n+   * Closes the record access.\n+   */\n+  void close();\n \n-    int changeSize();\n+  int changeSize();\n \n-    Iterable<RecordProxy<RECORD,ADDITIONAL>> changes();\n+  Iterable<RecordProxy<RECORD, ADDITIONAL>> changes();\n \n-    /**\n-     * A proxy for a record that encapsulates load/store actions to take, knowing when the underlying record is\n-     * requested for reading or for writing.\n-     */\n-    interface RecordProxy<RECORD, ADDITIONAL>\n-    {\n-        long getKey();\n+  /**\n+   * A proxy for a record that encapsulates load/store actions to take, knowing when the underlying record is\n+   * requested for reading or for writing.\n+   */\n+  interface RecordProxy<RECORD, ADDITIONAL>\n+  {\n+    long getKey();\n \n-        RECORD forChangingLinkage();\n+    RECORD forChangingLinkage();\n \n-        RECORD forChangingData();\n+    RECORD forChangingData();\n \n-        RECORD forReadingLinkage();\n+    RECORD forReadingLinkage();\n \n-        RECORD forReadingData();\n+    RECORD forReadingData();\n \n-        ADDITIONAL getAdditionalData();\n+    ADDITIONAL getAdditionalData();\n \n-        RECORD getBefore();\n+    RECORD getBefore();\n \n-        boolean isChanged();\n+    boolean isChanged();\n \n-        boolean isCreated();\n-    }\n+    boolean isCreated();\n+  }\n \n-    /**\n-     * Hook for loading and creating records.\n-     */\n-    interface Loader<RECORD,ADDITIONAL>\n-    {\n-        RECORD newUnused( long key, ADDITIONAL additionalData );\n+  /**\n+   * Hook for loading and creating records.\n+   */\n+  interface Loader<RECORD, ADDITIONAL>\n+  {\n+    RECORD newUnused(long key, ADDITIONAL additionalData);\n \n-        RECORD load( long key, ADDITIONAL additionalData );\n+    RECORD load(long key, ADDITIONAL additionalData);\n \n-        void ensureHeavy( RECORD record );\n+    void ensureHeavy(RECORD record);\n \n-        RECORD clone( RECORD record );\n-    }\n+    RECORD clone(RECORD record);\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/153/RecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/153/RecordAccess.java\nindex f085f77fd28..2c0daf3e3ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/153/RecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/153/RecordAccess.java\n@@ -34,9 +34,9 @@ public interface RecordAccess<RECORD,ADDITIONAL>\n      * @param additionalData additional data to put in the record after loaded.\n      * @return a {@link RecordProxy} for the record for {@code key}.\n      */\n-    RecordProxy<RECORD, ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData );\n+    RecordProxy<RECORD,ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData );\n \n-    RecordProxy<RECORD, ADDITIONAL> getIfLoaded( long key );\n+    RecordProxy<RECORD,ADDITIONAL> getIfLoaded( long key );\n \n     @Deprecated\n     void setTo( long key, RECORD newRecord, ADDITIONAL additionalData );\n@@ -51,7 +51,7 @@ public interface RecordAccess<RECORD,ADDITIONAL>\n      * @param additionalData additional data to put in the record after loaded.\n      * @return a {@link RecordProxy} for the record for {@code key}.\n      */\n-    RecordProxy<RECORD, ADDITIONAL> create( long key, ADDITIONAL additionalData );\n+    RecordProxy<RECORD,ADDITIONAL> create( long key, ADDITIONAL additionalData );\n \n     /**\n      * Closes the record access.\n@@ -93,11 +93,9 @@ public interface RecordAccess<RECORD,ADDITIONAL>\n     interface Loader<RECORD,ADDITIONAL>\n     {\n         RECORD newUnused( long key, ADDITIONAL additionalData );\n-\n-        RECORD load( long key, ADDITIONAL additionalData );\n+RECORD load( long key, ADDITIONAL additionalData );\n \n         void ensureHeavy( RECORD record );\n-\n-        RECORD clone( RECORD record );\n+RECORD clone( RECORD record );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}