{
    "project_name": "eclipse-milo",
    "violation_id": "92",
    "information": {
        "violations": [
            {
                "line": "31",
                "column": "15",
                "severity": "error",
                "message": "'}' at column 15 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public class Equals implements Operator<Boolean> {\n\n    Equals() {}\n\n    @Override\n    public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/92/Equals.java\nindex 07983d86189..f024ee3c276 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/92/Equals.java\n@@ -28,7 +28,8 @@ import org.eclipse.milo.opcua.stack.core.util.ArrayUtil;\n \n public class Equals implements Operator<Boolean> {\n \n-    Equals() {}\n+    Equals() {\n+    }\n \n     @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/92/Equals.java\nindex 07983d86189..6b0bd7b1922 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/92/Equals.java\n@@ -127,4 +127,4 @@ public class Equals implements Operator<Boolean> {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/92/Equals.java\nindex 07983d86189..633b2192d46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/92/Equals.java\n@@ -14,7 +14,6 @@ import java.lang.reflect.Array;\n import java.util.Objects;\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.sdk.server.events.FilterContext;\n import org.eclipse.milo.opcua.sdk.server.events.OperatorContext;\n import org.eclipse.milo.opcua.sdk.server.events.ValidationException;\n@@ -27,8 +26,8 @@ import org.eclipse.milo.opcua.stack.core.types.structured.FilterOperand;\n import org.eclipse.milo.opcua.stack.core.util.ArrayUtil;\n \n public class Equals implements Operator<Boolean> {\n-\n-    Equals() {}\n+    Equals() {\n+    }\n \n     @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n@@ -39,17 +38,15 @@ public class Equals implements Operator<Boolean> {\n \n     @Nullable\n     @Override\n-    public Boolean apply(\n-        OperatorContext context,\n-        BaseEventTypeNode eventNode,\n-        FilterOperand[] operands) throws UaException {\n-\n+    public Boolean apply(OperatorContext context, BaseEventTypeNode eventNode, FilterOperand[] operands) throws UaException {\n         validate(context, operands);\n \n         FilterOperand op0 = operands[0];\n+\n         FilterOperand op1 = operands[1];\n \n         Object value0 = context.resolve(op0, eventNode);\n+\n         Object value1 = context.resolve(op1, eventNode);\n \n         if (value0 == null || value1 == null) {\n@@ -57,6 +54,7 @@ public class Equals implements Operator<Boolean> {\n         }\n \n         BuiltinDataType dt0 = getType(value0);\n+\n         BuiltinDataType dt1 = getType(value1);\n \n         if (dt0 == null || dt1 == null) {\n@@ -68,17 +66,14 @@ public class Equals implements Operator<Boolean> {\n \n         if (p0 == p1) {\n             assert dt0 == dt1;\n-\n             return equals(value0, value1);\n         } else if (p0 >= p1) {\n             // convert value1 to type of value0 (dt0)\n             Object converted1 = convert(value1, dt0);\n-\n             return equals(value0, converted1);\n         } else {\n             // convert value0 to type of value1 (dt1)\n             Object converted0 = convert(value0, dt1);\n-\n             return equals(converted0, value1);\n         }\n     }\n@@ -102,7 +97,9 @@ public class Equals implements Operator<Boolean> {\n \n         for (int i = 0; i < length; i++) {\n             Object sourceValue = Array.get(flattened, i);\n+\n             Object targetValue = ImplicitConversions.convert(sourceValue, targetType);\n+\n             Array.set(transformed, i, targetValue);\n         }\n \n@@ -126,5 +123,4 @@ public class Equals implements Operator<Boolean> {\n             return BuiltinDataType.fromBackingClass(o.getClass());\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/92/Equals.java\nindex 07983d86189..08fc74b2585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/92/Equals.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/92/Equals.java\n@@ -29,7 +29,6 @@ import org.eclipse.milo.opcua.stack.core.util.ArrayUtil;\n public class Equals implements Operator<Boolean> {\n \n     Equals() {}\n-\n     @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n         if (operands.length < 2) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}