{
    "project_name": "wso2-attic-commons",
    "violation_id": "482",
    "information": {
        "violations": [
            {
                "line": "85",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                .append(\"@\").append(CARBON_CLIENT_ID)\n                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                .toString();\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/482/TopicPublisherTenant.java\nindex aec1dee0130..f71facc4895 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/482/TopicPublisherTenant.java\n@@ -82,7 +82,8 @@ public class TopicPublisherTenant {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/482/TopicPublisherTenant.java\nindex aec1dee0130..dff76423d2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/482/TopicPublisherTenant.java\n@@ -3,23 +3,23 @@ package tenant;\n \n \n /*\n-*  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n- \n+ *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n import javax.jms.JMSException;\n import javax.jms.QueueSession;\n import javax.jms.TextMessage;\n@@ -31,59 +31,61 @@ import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import java.util.Properties;\n- \n+\n public class TopicPublisherTenant {\n-    public static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n-    private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n-    private static final String CF_NAME = \"qpidConnectionfactory\";\n-    String userName = \"asanka!asanka.com\";\n-    String password = \"asanka123\";\n-    private static String CARBON_CLIENT_ID = \"carbon\";\n-    private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n-    private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n-    private static String CARBON_DEFAULT_PORT = \"5673\";\n-    String topicName = \"bcde\";\n- \n-    public static void main(String[] args) throws NamingException, JMSException {\n-    \tTopicPublisherTenant topicPublisher = new TopicPublisherTenant();\n-        topicPublisher.publishMessage();\n-    }\n-    public void publishMessage() throws NamingException, JMSException {\n-        Properties properties = new Properties();\n-        properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n-        properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n-        System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n-        InitialContext ctx = new InitialContext(properties);\n-        // Lookup connection factory\n-        TopicConnectionFactory connFactory = (TopicConnectionFactory) ctx.lookup(CF_NAME);\n-        TopicConnection topicConnection = connFactory.createTopicConnection();\n-        topicConnection.start();\n-        TopicSession topicSession =\n-                topicConnection.createTopicSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n-        // Send message\n-        Topic topic = topicSession.createTopic(topicName);\n-\t\n-\tfor(int i=1;i<=30000;i=i+1){\n+  public static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n+  private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n+  private static final String CF_NAME = \"qpidConnectionfactory\";\n+  String userName = \"asanka!asanka.com\";\n+  String password = \"asanka123\";\n+  private static String CARBON_CLIENT_ID = \"carbon\";\n+  private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n+  private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n+  private static String CARBON_DEFAULT_PORT = \"5673\";\n+  String topicName = \"bcde\";\n \n-        // create the message to send\n-        TextMessage textMessage = topicSession.createTextMessage(\"Test Message-for Asanka Topic \"+i);\n-        javax.jms.TopicPublisher topicPublisher = topicSession.createPublisher(topic);\n-        \n-        //topicPublisher.setTimeToLive(10);\n-        topicPublisher.publish(textMessage);\n-\t}\n+  public static void main(String[] args) throws NamingException, JMSException {\n+    TopicPublisherTenant topicPublisher = new TopicPublisherTenant();\n+    topicPublisher.publishMessage();\n+  }\n \n-        topicSession.close();\n-        topicConnection.close();\n-    }\n-    public String getTCPConnectionURL(String username, String password) {\n-        // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n-        return new StringBuffer()\n-                .append(\"amqp://\").append(username).append(\":\").append(password)\n-                .append(\"@\").append(CARBON_CLIENT_ID)\n-                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n-                .toString();\n+  public void publishMessage() throws NamingException, JMSException {\n+    Properties properties = new Properties();\n+    properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n+    properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n+    System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n+    InitialContext ctx = new InitialContext(properties);\n+    // Lookup connection factory\n+    TopicConnectionFactory connFactory = (TopicConnectionFactory) ctx.lookup(CF_NAME);\n+    TopicConnection topicConnection = connFactory.createTopicConnection();\n+    topicConnection.start();\n+    TopicSession topicSession =\n+      topicConnection.createTopicSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n+    // Send message\n+    Topic topic = topicSession.createTopic(topicName);\n+\n+    for (int i = 1; i <= 30000; i = i + 1) {\n+\n+      // create the message to send\n+      TextMessage textMessage = topicSession.createTextMessage(\"Test Message-for Asanka Topic \" + i);\n+      javax.jms.TopicPublisher topicPublisher = topicSession.createPublisher(topic);\n+\n+      //topicPublisher.setTimeToLive(10);\n+      topicPublisher.publish(textMessage);\n     }\n+\n+    topicSession.close();\n+    topicConnection.close();\n+  }\n+\n+  public String getTCPConnectionURL(String username, String password) {\n+    // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n+    return new StringBuffer()\n+      .append(\"amqp://\").append(username).append(\":\").append(password)\n+      .append(\"@\").append(CARBON_CLIENT_ID)\n+      .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n+      .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+      .toString();\n+  }\n }\n \n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/482/TopicPublisherTenant.java\nindex aec1dee0130..b067c4aa583 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/482/TopicPublisherTenant.java\n@@ -1,7 +1,5 @@\n package tenant;\n \n-\n-\n /*\n *  Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n@@ -19,7 +17,7 @@ package tenant;\n * specific language governing permissions and limitations\n * under the License.\n */\n- \n+\n import javax.jms.JMSException;\n import javax.jms.QueueSession;\n import javax.jms.TextMessage;\n@@ -31,8 +29,9 @@ import javax.naming.Context;\n import javax.naming.InitialContext;\n import javax.naming.NamingException;\n import java.util.Properties;\n- \n+\n public class TopicPublisherTenant {\n+\n     public static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n     private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n     private static final String CF_NAME = \"qpidConnectionfactory\";\n@@ -43,10 +42,9 @@ public class TopicPublisherTenant {\n     private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n     private static String CARBON_DEFAULT_PORT = \"5673\";\n     String topicName = \"bcde\";\n- \n-    public static void main(String[] args) throws NamingException, JMSException {\n-    \tTopicPublisherTenant topicPublisher = new TopicPublisherTenant();\n-        topicPublisher.publishMessage();\n+public static void main(String[] args) throws NamingException, JMSException {\n+TopicPublisherTenant topicPublisher = new TopicPublisherTenant();\n+topicPublisher.publishMessage();\n     }\n     public void publishMessage() throws NamingException, JMSException {\n         Properties properties = new Properties();\n@@ -62,18 +60,15 @@ public class TopicPublisherTenant {\n                 topicConnection.createTopicSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n         // Send message\n         Topic topic = topicSession.createTopic(topicName);\n-\t\n-\tfor(int i=1;i<=30000;i=i+1){\n-\n-        // create the message to send\n+for(int i=1;i<=30000;i=i+1){\n+    // create the message to send\n         TextMessage textMessage = topicSession.createTextMessage(\"Test Message-for Asanka Topic \"+i);\n         javax.jms.TopicPublisher topicPublisher = topicSession.createPublisher(topic);\n         \n         //topicPublisher.setTimeToLive(10);\n         topicPublisher.publish(textMessage);\n \t}\n-\n-        topicSession.close();\n+\ttopicSession.close();\n         topicConnection.close();\n     }\n     public String getTCPConnectionURL(String username, String password) {\n@@ -85,5 +80,4 @@ public class TopicPublisherTenant {\n                 .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                 .toString();\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/482/TopicPublisherTenant.java\nindex aec1dee0130..f71facc4895 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/482/TopicPublisherTenant.java\n@@ -82,7 +82,8 @@ public class TopicPublisherTenant {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/482/TopicPublisherTenant.java\nindex aec1dee0130..45132357c47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/482/TopicPublisherTenant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/482/TopicPublisherTenant.java\n@@ -82,7 +82,8 @@ public class TopicPublisherTenant {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\")\n+                .append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                 .toString();\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}