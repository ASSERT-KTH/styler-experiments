{
    "project_name": "StevenLooman-sonar-magik",
    "violation_id": "23",
    "information": {
        "violations": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 115).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n    ScopeEntry scopeEntry = new ScopeEntry(type, identifier, node, parentEntry);\n    scopeEntries.put(identifier, scopeEntry);\n    return scopeEntry;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/StevenLooman-sonar-magik/styler/05_predictions/final/files-repaired/23/ProcedureScope.java\nindex d6e3e6c943a..71152f1a957 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/StevenLooman-sonar-magik/styler/05_predictions/final/files-repaired/23/ProcedureScope.java\n@@ -21,8 +21,7 @@ public class ProcedureScope extends Scope {\n     return globalScope.getScopeEntry(identifier);\n   }\n \n-  @Override\n-  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n+  @Override public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n     ScopeEntry scopeEntry = new ScopeEntry(type, identifier, node, parentEntry);\n     scopeEntries.put(identifier, scopeEntry);\n     return scopeEntry;\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/checkstyle_idea/23/ProcedureScope.java\nindex d6e3e6c943a..796f9cd4337 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/checkstyle_idea/23/ProcedureScope.java\n@@ -22,7 +22,8 @@ public class ProcedureScope extends Scope {\n   }\n \n   @Override\n-  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n+  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node,\n+                                   ScopeEntry parentEntry) {\n     ScopeEntry scopeEntry = new ScopeEntry(type, identifier, node, parentEntry);\n     scopeEntries.put(identifier, scopeEntry);\n     return scopeEntry;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/naturalize/23/ProcedureScope.java\nindex d6e3e6c943a..1ae7d2bc8df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/naturalize/23/ProcedureScope.java\n@@ -33,4 +33,4 @@ public class ProcedureScope extends Scope {\n     return this;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/codebuff/23/ProcedureScope.java\nindex d6e3e6c943a..2a15c016ee1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/codebuff/23/ProcedureScope.java\n@@ -17,12 +17,15 @@ public class ProcedureScope extends Scope {\n     }\n \n     // try GlobalScope\n+\n     Scope globalScope = getGlobalScope();\n     return globalScope.getScopeEntry(identifier);\n   }\n \n   @Override\n-  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n+  public ScopeEntry addDeclaration(ScopeEntry.Type type,\n+                                   String identifier,\n+                                   AstNode node, ScopeEntry parentEntry) {\n     ScopeEntry scopeEntry = new ScopeEntry(type, identifier, node, parentEntry);\n     scopeEntries.put(identifier, scopeEntry);\n     return scopeEntry;\n@@ -32,5 +35,4 @@ public class ProcedureScope extends Scope {\n   public Scope getProcedureScope() {\n     return this;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/styler/05_predictions/random/files-repaired/23/ProcedureScope.java\nindex d6e3e6c943a..71152f1a957 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/violations/23/ProcedureScope.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/StevenLooman-sonar-magik/styler/05_predictions/random/files-repaired/23/ProcedureScope.java\n@@ -21,8 +21,7 @@ public class ProcedureScope extends Scope {\n     return globalScope.getScopeEntry(identifier);\n   }\n \n-  @Override\n-  public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n+  @Override public ScopeEntry addDeclaration(ScopeEntry.Type type, String identifier, AstNode node, ScopeEntry parentEntry) {\n     ScopeEntry scopeEntry = new ScopeEntry(type, identifier, node, parentEntry);\n     scopeEntries.put(identifier, scopeEntry);\n     return scopeEntry;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}