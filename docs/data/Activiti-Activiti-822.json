{
    "project_name": "Activiti-Activiti",
    "violation_id": "822",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.connector;\n\nimport java.util.Objects;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/822/IntegrationContextBuilder.java\nindex 44063e68bd1..d5705a2d549 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/822/IntegrationContextBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/822/IntegrationContextBuilder.java\nindex 44063e68bd1..fb7a55cdf8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/822/IntegrationContextBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import java.util.Objects;\n@@ -61,7 +62,7 @@ public class IntegrationContextBuilder {\n \n             if (processInstance != null) {\n                 integrationContext.setParentProcessInstanceId(processInstance.getParentProcessInstanceId());\n-                integrationContext.setAppVersion(Objects.toString(processInstance.getAppVersion(),\"1\"));\n+                integrationContext.setAppVersion(Objects.toString(processInstance.getAppVersion(), \"1\"));\n \n             }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 12, expected is 6, indentation should be the same level as line 65.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/822/IntegrationContextBuilder.java\nindex 44063e68bd1..6994a7904ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/822/IntegrationContextBuilder.java\n@@ -16,7 +16,6 @@\n package org.activiti.runtime.api.connector;\n \n import java.util.Objects;\n-\n import org.activiti.api.process.model.IntegrationContext;\n import org.activiti.api.runtime.model.impl.IntegrationContextImpl;\n import org.activiti.bpmn.model.ServiceTask;\n@@ -27,65 +26,56 @@ import org.activiti.engine.impl.persistence.entity.integration.IntegrationContex\n import org.activiti.engine.repository.ProcessDefinition;\n import org.activiti.runtime.api.impl.VariablesMappingProvider;\n \n-public class IntegrationContextBuilder {\n-\n-    private VariablesMappingProvider inboundVariablesProvider;\n-\n-    public IntegrationContextBuilder(VariablesMappingProvider inboundVariablesProvider) {\n-        this.inboundVariablesProvider = inboundVariablesProvider;\n-    }\n-\n-    public IntegrationContext from(IntegrationContextEntity integrationContextEntity,\n-                                   DelegateExecution execution) {\n-        IntegrationContextImpl integrationContext = buildFromExecution(execution);\n-        integrationContext.setId(integrationContextEntity.getId());\n-        return integrationContext;\n-    }\n-\n-    public IntegrationContext from(DelegateExecution execution) {\n-        return buildFromExecution(execution);\n-    }\n-\n-    private IntegrationContextImpl buildFromExecution(DelegateExecution execution) {\n-        IntegrationContextImpl integrationContext = new IntegrationContextImpl();\n-        integrationContext.setProcessInstanceId(execution.getProcessInstanceId());\n-        integrationContext.setProcessDefinitionId(execution.getProcessDefinitionId());\n-        integrationContext.setBusinessKey(execution.getProcessInstanceBusinessKey());\n-        integrationContext.setClientId(execution.getCurrentActivityId());\n-        integrationContext.setExecutionId(execution.getId());\n \n-        if (ExecutionEntity.class.isInstance(execution)) {\n-            ExecutionContext executionContext = new ExecutionContext(ExecutionEntity.class.cast(execution));\n-\n-            ExecutionEntity processInstance = executionContext.getProcessInstance();\n-\n-            if (processInstance != null) {\n-                integrationContext.setParentProcessInstanceId(processInstance.getParentProcessInstanceId());\n-                integrationContext.setAppVersion(Objects.toString(processInstance.getAppVersion(),\"1\"));\n+public class IntegrationContextBuilder {\n \n-            }\n+  private VariablesMappingProvider inboundVariablesProvider;\n+\n+  public IntegrationContextBuilder(VariablesMappingProvider inboundVariablesProvider) {\n+    this.inboundVariablesProvider = inboundVariablesProvider;\n+  }\n+\n+  public IntegrationContext from(IntegrationContextEntity integrationContextEntity, DelegateExecution execution) {\n+    IntegrationContextImpl integrationContext = buildFromExecution(execution);\n+    integrationContext.setId(integrationContextEntity.getId());\n+    return integrationContext;\n+  }\n+\n+  public IntegrationContext from(DelegateExecution execution) {\n+    return buildFromExecution(execution);\n+  }\n+\n+  private IntegrationContextImpl buildFromExecution(DelegateExecution execution) {\n+    IntegrationContextImpl integrationContext = new IntegrationContextImpl();\n+    integrationContext.setProcessInstanceId(execution.getProcessInstanceId());\n+    integrationContext.setProcessDefinitionId(execution.getProcessDefinitionId());\n+    integrationContext.setBusinessKey(execution.getProcessInstanceBusinessKey());\n+    integrationContext.setClientId(execution.getCurrentActivityId());\n+    integrationContext.setExecutionId(execution.getId());\n+    if (ExecutionEntity.class.isInstance(execution)) {\n+      ExecutionContext executionContext = new ExecutionContext(ExecutionEntity.class.cast(execution));\n+      ExecutionEntity processInstance = executionContext.getProcessInstance();\n+      if (processInstance != null) {\n+        integrationContext.setParentProcessInstanceId(processInstance.getParentProcessInstanceId());\n+        integrationContext.setAppVersion(Objects.toString(processInstance.getAppVersion(), \"1\"));\n+      }\n \n             // Let's try to resolve process definition attributes\n-            ProcessDefinition processDefinition = executionContext.getProcessDefinition();\n-\n-            if (processDefinition != null) {\n-                integrationContext.setProcessDefinitionKey(processDefinition.getKey());\n-                integrationContext.setProcessDefinitionVersion(processDefinition.getVersion());\n-            }\n-\n-        }\n \n-        ServiceTask serviceTask = (ServiceTask) execution.getCurrentFlowElement();\n-        if (serviceTask != null) {\n-            integrationContext.setConnectorType(serviceTask.getImplementation());\n-            integrationContext.setClientName(serviceTask.getName());\n-            integrationContext.setClientType(ServiceTask.class.getSimpleName());\n-        }\n-\n-\n-        integrationContext.addInBoundVariables(inboundVariablesProvider.calculateInputVariables(execution));\n-\n-        return integrationContext;\n+      ProcessDefinition processDefinition = executionContext.getProcessDefinition();\n+      if (processDefinition != null) {\n+        integrationContext.setProcessDefinitionKey(processDefinition.getKey());\n+        integrationContext.setProcessDefinitionVersion(processDefinition.getVersion());\n+      }\n     }\n \n-}\n+    ServiceTask serviceTask = (ServiceTask) execution.getCurrentFlowElement();\n+    if (serviceTask != null) {\n+      integrationContext.setConnectorType(serviceTask.getImplementation());\n+      integrationContext.setClientName(serviceTask.getName());\n+      integrationContext.setClientType(ServiceTask.class.getSimpleName());\n+    }\n+    integrationContext.addInBoundVariables(inboundVariablesProvider.calculateInputVariables(execution));\n+    return integrationContext;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 94
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/822/IntegrationContextBuilder.java\nindex 44063e68bd1..d5705a2d549 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/822/IntegrationContextBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/822/IntegrationContextBuilder.java\nindex 44063e68bd1..d5705a2d549 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/822/IntegrationContextBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/822/IntegrationContextBuilder.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import java.util.Objects;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}