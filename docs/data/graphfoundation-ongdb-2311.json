{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2311",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2311/PageCursorUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2311/PageCursorUtil.java\nindex 030ea821a0d..3acd06cf6f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2311/PageCursorUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2311/PageCursorUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -28,149 +29,149 @@ import org.neo4j.io.pagecache.PageCursor;\n  */\n class PageCursorUtil\n {\n-    static final int _2B_MASK = 0xFFFF;\n-    static final long _4B_MASK = 0xFFFFFFFFL;\n-    static final long _6B_MASK = 0xFFFF_FFFFFFFFL;\n-\n-    private PageCursorUtil()\n-    {\n-    }\n-\n-    /**\n-     * Puts the low 6 bytes of the {@code value} into {@code cursor} at current offset.\n-     * Puts {@link PageCursor#putInt(int) int} followed by {@link PageCursor#putShort(short) short}.\n-     *\n-     * @param cursor {@link PageCursor} to put into, at the current offset.\n-     * @param value the value to put.\n-     */\n-    static void put6BLong( PageCursor cursor, long value )\n-    {\n-        if ( (value & ~_6B_MASK) != 0 )\n-        {\n-            throw new IllegalArgumentException( \"Illegal 6B value \" + value );\n-        }\n-\n-        int lsb = (int) value;\n-        short msb = (short) (value >>> Integer.SIZE);\n-        cursor.putInt( lsb );\n-        cursor.putShort( msb );\n-    }\n-\n-    /**\n-     * Gets 6 bytes from {@code cursor} at current offset and returns that a as a {@code long}.\n-     * Reads {@link PageCursor#getInt()} followed by {@link PageCursor#getShort()}.\n-     *\n-     * @param cursor {@link PageCursor} to get from, at the current offset.\n-     * @return the 6 bytes as a {@code long}.\n-     */\n-    static long get6BLong( PageCursor cursor )\n-    {\n-        long lsb = getUnsignedInt( cursor );\n-        long msb = getUnsignedShort( cursor );\n-        return lsb | (msb << Integer.SIZE);\n-    }\n-\n-    /**\n-     *  Puts the low 2 bytes of the {@code value} into cursor at current offset.\n-     *  Puts {@link PageCursor#putShort(short)}.\n-     *\n-     * @param cursor {@link PageCursor} to put into, at the current offset.\n-     * @param value the value to put.\n-     */\n-    static void putUnsignedShort( PageCursor cursor, int value )\n-    {\n-        if ( (value & ~_2B_MASK) != 0 )\n-        {\n-            throw new IllegalArgumentException( \"Illegal 2B value \" + value );\n-        }\n-\n-        cursor.putShort( (short) value );\n-    }\n-\n-    /**\n-     *  Puts the low 2 bytes of the {@code value} into cursor at given offset.\n-     *  Puts {@link PageCursor#putShort(short)}.\n-     *\n-     * @param cursor {@link PageCursor} to put into.\n-     * @param offset offset into page where to write.\n-     * @param value the value to put.\n-     */\n-    static void putUnsignedShort( PageCursor cursor, int offset, int value )\n+  static final int _2B_MASK = 0xFFFF;\n+  static final long _4B_MASK = 0xFFFFFFFFL;\n+  static final long _6B_MASK = 0xFFFF_FFFFFFFFL;\n+\n+  private PageCursorUtil()\n+  {\n+  }\n+\n+  /**\n+   * Puts the low 6 bytes of the {@code value} into {@code cursor} at current offset.\n+   * Puts {@link PageCursor#putInt(int) int} followed by {@link PageCursor#putShort(short) short}.\n+   *\n+   * @param cursor {@link PageCursor} to put into, at the current offset.\n+   * @param value  the value to put.\n+   */\n+  static void put6BLong(PageCursor cursor, long value)\n+  {\n+    if ((value & ~_6B_MASK) != 0)\n     {\n-        if ( (value & ~_2B_MASK) != 0 )\n-        {\n-            throw new IllegalArgumentException( \"Illegal 2B value \" + value );\n-        }\n-\n-        cursor.putShort( offset, (short) value );\n+      throw new IllegalArgumentException(\"Illegal 6B value \" + value);\n     }\n \n-    /**\n-     * Gets 2 bytes and returns that value as an {@code int}, ignoring its sign.\n-     *\n-     * @param cursor {@link PageCursor} to get from, at the current offset.\n-     * @return {@code int} containing the value of the unsigned {@code short}.\n-     */\n-    static int getUnsignedShort( PageCursor cursor )\n+    int lsb = (int) value;\n+    short msb = (short) (value >>> Integer.SIZE);\n+    cursor.putInt(lsb);\n+    cursor.putShort(msb);\n+  }\n+\n+  /**\n+   * Gets 6 bytes from {@code cursor} at current offset and returns that a as a {@code long}.\n+   * Reads {@link PageCursor#getInt()} followed by {@link PageCursor#getShort()}.\n+   *\n+   * @param cursor {@link PageCursor} to get from, at the current offset.\n+   * @return the 6 bytes as a {@code long}.\n+   */\n+  static long get6BLong(PageCursor cursor)\n+  {\n+    long lsb = getUnsignedInt(cursor);\n+    long msb = getUnsignedShort(cursor);\n+    return lsb | (msb << Integer.SIZE);\n+  }\n+\n+  /**\n+   * Puts the low 2 bytes of the {@code value} into cursor at current offset.\n+   * Puts {@link PageCursor#putShort(short)}.\n+   *\n+   * @param cursor {@link PageCursor} to put into, at the current offset.\n+   * @param value  the value to put.\n+   */\n+  static void putUnsignedShort(PageCursor cursor, int value)\n+  {\n+    if ((value & ~_2B_MASK) != 0)\n     {\n-        return cursor.getShort() & _2B_MASK;\n+      throw new IllegalArgumentException(\"Illegal 2B value \" + value);\n     }\n \n-    /**\n-     * Gets 2 bytes and returns that value as an {@code int}, ignoring its sign.\n-     *\n-     * @param cursor {@link PageCursor} to get from.\n-     * @param offset offset into page from where to read.\n-     * @return {@code int} containing the value of the unsigned {@code short}.\n-     */\n-    static int getUnsignedShort( PageCursor cursor, int offset )\n+    cursor.putShort((short) value);\n+  }\n+\n+  /**\n+   * Puts the low 2 bytes of the {@code value} into cursor at given offset.\n+   * Puts {@link PageCursor#putShort(short)}.\n+   *\n+   * @param cursor {@link PageCursor} to put into.\n+   * @param offset offset into page where to write.\n+   * @param value  the value to put.\n+   */\n+  static void putUnsignedShort(PageCursor cursor, int offset, int value)\n+  {\n+    if ((value & ~_2B_MASK) != 0)\n     {\n-        return cursor.getShort( offset ) & _2B_MASK;\n+      throw new IllegalArgumentException(\"Illegal 2B value \" + value);\n     }\n \n-    /**\n-     * Gets 4 bytes and returns that value as an {@code long}, ignoring its sign.\n-     *\n-     * @param cursor {@link PageCursor} to get from, at the current offset.\n-     * @return {@code long} containing the value of the unsigned {@code int}.\n-     */\n-    static long getUnsignedInt( PageCursor cursor )\n+    cursor.putShort(offset, (short) value);\n+  }\n+\n+  /**\n+   * Gets 2 bytes and returns that value as an {@code int}, ignoring its sign.\n+   *\n+   * @param cursor {@link PageCursor} to get from, at the current offset.\n+   * @return {@code int} containing the value of the unsigned {@code short}.\n+   */\n+  static int getUnsignedShort(PageCursor cursor)\n+  {\n+    return cursor.getShort() & _2B_MASK;\n+  }\n+\n+  /**\n+   * Gets 2 bytes and returns that value as an {@code int}, ignoring its sign.\n+   *\n+   * @param cursor {@link PageCursor} to get from.\n+   * @param offset offset into page from where to read.\n+   * @return {@code int} containing the value of the unsigned {@code short}.\n+   */\n+  static int getUnsignedShort(PageCursor cursor, int offset)\n+  {\n+    return cursor.getShort(offset) & _2B_MASK;\n+  }\n+\n+  /**\n+   * Gets 4 bytes and returns that value as an {@code long}, ignoring its sign.\n+   *\n+   * @param cursor {@link PageCursor} to get from, at the current offset.\n+   * @return {@code long} containing the value of the unsigned {@code int}.\n+   */\n+  static long getUnsignedInt(PageCursor cursor)\n+  {\n+    return cursor.getInt() & _4B_MASK;\n+  }\n+\n+  /**\n+   * Calls {@link PageCursor#checkAndClearBoundsFlag()} and if {@code true} throws {@link TreeInconsistencyException}.\n+   * Should be called whenever leaving a {@link PageCursor#shouldRetry() shouldRetry-loop} successfully.\n+   * Purpose of this method is to unify {@link PageCursor} read behavior and exception handling.\n+   *\n+   * @param cursor {@link PageCursor} to check for out-of-bounds.\n+   */\n+  static void checkOutOfBounds(PageCursor cursor)\n+  {\n+    if (cursor.checkAndClearBoundsFlag())\n     {\n-        return cursor.getInt() & _4B_MASK;\n+      throw new TreeInconsistencyException(\"Some internal problem causing out of bounds: pageId:\" +\n+          cursor.getCurrentPageId());\n     }\n-\n-    /**\n-     * Calls {@link PageCursor#checkAndClearBoundsFlag()} and if {@code true} throws {@link TreeInconsistencyException}.\n-     * Should be called whenever leaving a {@link PageCursor#shouldRetry() shouldRetry-loop} successfully.\n-     * Purpose of this method is to unify {@link PageCursor} read behavior and exception handling.\n-     *\n-     * @param cursor {@link PageCursor} to check for out-of-bounds.\n-     */\n-    static void checkOutOfBounds( PageCursor cursor )\n-    {\n-        if ( cursor.checkAndClearBoundsFlag() )\n-        {\n-            throw new TreeInconsistencyException( \"Some internal problem causing out of bounds: pageId:\" +\n-                    cursor.getCurrentPageId() );\n-        }\n-    }\n-\n-    /**\n-     * Calls {@link PageCursor#next(long)} with the {@code pageId} and throws {@link IllegalStateException}\n-     * if that call returns {@code false}.\n-     * Purpose of this method is to unify exception handling when moving between pages.\n-     *\n-     * @param cursor {@link PageCursor} to call {@link PageCursor#next(long)} on.\n-     * @param messageOnError additional error message to include in exception if {@link PageCursor#next(long)}\n-     * returned {@code false}, providing more context to the exception message.\n-     * @param pageId page id to move to.\n-     * @throws IOException on {@link PageCursor#next(long)} exception.\n-     */\n-    static void goTo( PageCursor cursor, String messageOnError, long pageId ) throws IOException\n+  }\n+\n+  /**\n+   * Calls {@link PageCursor#next(long)} with the {@code pageId} and throws {@link IllegalStateException}\n+   * if that call returns {@code false}.\n+   * Purpose of this method is to unify exception handling when moving between pages.\n+   *\n+   * @param cursor         {@link PageCursor} to call {@link PageCursor#next(long)} on.\n+   * @param messageOnError additional error message to include in exception if {@link PageCursor#next(long)}\n+   *                       returned {@code false}, providing more context to the exception message.\n+   * @param pageId         page id to move to.\n+   * @throws IOException on {@link PageCursor#next(long)} exception.\n+   */\n+  static void goTo(PageCursor cursor, String messageOnError, long pageId) throws IOException\n+  {\n+    if (!cursor.next(pageId))\n     {\n-        if ( !cursor.next( pageId ) )\n-        {\n-            throw new IllegalStateException( \"Could not go to page:\" + pageId + \" [\" + messageOnError + \"]\" );\n-        }\n+      throw new IllegalStateException(\"Could not go to page:\" + pageId + \" [\" + messageOnError + \"]\");\n     }\n+  }\n }\n",
            "diff_size": 204
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2311/PageCursorUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2311/PageCursorUtil.java\nindex 030ea821a0d..084602b5d8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2311/PageCursorUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2311/PageCursorUtil.java\n@@ -45,13 +45,13 @@ class PageCursorUtil\n      */\n     static void put6BLong( PageCursor cursor, long value )\n     {\n-        if ( (value & ~_6B_MASK) != 0 )\n+        if ( ( value & ~_6B_MASK) != 0 )\n         {\n             throw new IllegalArgumentException( \"Illegal 6B value \" + value );\n         }\n \n-        int lsb = (int) value;\n-        short msb = (short) (value >>> Integer.SIZE);\n+        int lsb = ( int) value;\n+        short msb = (short) ( value >>> Integer.SIZE);\n         cursor.putInt( lsb );\n         cursor.putShort( msb );\n     }\n@@ -67,7 +67,7 @@ class PageCursorUtil\n     {\n         long lsb = getUnsignedInt( cursor );\n         long msb = getUnsignedShort( cursor );\n-        return lsb | (msb << Integer.SIZE);\n+        return lsb | ( msb << Integer.SIZE);\n     }\n \n     /**\n@@ -79,7 +79,7 @@ class PageCursorUtil\n      */\n     static void putUnsignedShort( PageCursor cursor, int value )\n     {\n-        if ( (value & ~_2B_MASK) != 0 )\n+        if ( ( value & ~_2B_MASK) != 0 )\n         {\n             throw new IllegalArgumentException( \"Illegal 2B value \" + value );\n         }\n@@ -97,7 +97,7 @@ class PageCursorUtil\n      */\n     static void putUnsignedShort( PageCursor cursor, int offset, int value )\n     {\n-        if ( (value & ~_2B_MASK) != 0 )\n+        if ( ( value & ~_2B_MASK) != 0 )\n         {\n             throw new IllegalArgumentException( \"Illegal 2B value \" + value );\n         }\n@@ -150,9 +150,8 @@ class PageCursorUtil\n     {\n         if ( cursor.checkAndClearBoundsFlag() )\n         {\n-            throw new TreeInconsistencyException( \"Some internal problem causing out of bounds: pageId:\" +\n-                    cursor.getCurrentPageId() );\n-        }\n+            throw new TreeInconsistencyException( \"Some internal problem causing out of bounds: pageId:\" + cursor.getCurrentPageId() );\n+    }\n     }\n \n     /**\n@@ -173,4 +172,4 @@ class PageCursorUtil\n             throw new IllegalStateException( \"Could not go to page:\" + pageId + \" [\" + messageOnError + \"]\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}