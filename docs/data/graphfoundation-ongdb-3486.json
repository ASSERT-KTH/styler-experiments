{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3486",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3486/EstimationSanityChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3486/EstimationSanityChecker.java\nindex f933dd31f01..0118562804c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3486/EstimationSanityChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3486/EstimationSanityChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.util.function.BiConsumer;\n@@ -26,28 +27,28 @@ import org.neo4j.unsafe.impl.batchimport.ImportLogic;\n \n public class EstimationSanityChecker\n {\n-    private final RecordFormats formats;\n-    private final ImportLogic.Monitor monitor;\n+  private final RecordFormats formats;\n+  private final ImportLogic.Monitor monitor;\n \n-    public EstimationSanityChecker( RecordFormats formats, ImportLogic.Monitor monitor )\n-    {\n-        this.formats = formats;\n-        this.monitor = monitor;\n-    }\n+  public EstimationSanityChecker(RecordFormats formats, ImportLogic.Monitor monitor)\n+  {\n+    this.formats = formats;\n+    this.monitor = monitor;\n+  }\n \n-    public void sanityCheck( Input.Estimates estimates )\n-    {\n-        sanityCheckEstimateWithMaxId( estimates.numberOfNodes(), formats.node().getMaxId(),\n-                monitor::mayExceedNodeIdCapacity );\n-        sanityCheckEstimateWithMaxId( estimates.numberOfRelationships(), formats.relationship().getMaxId(),\n-                monitor::mayExceedRelationshipIdCapacity );\n-    }\n+  public void sanityCheck(Input.Estimates estimates)\n+  {\n+    sanityCheckEstimateWithMaxId(estimates.numberOfNodes(), formats.node().getMaxId(),\n+        monitor::mayExceedNodeIdCapacity);\n+    sanityCheckEstimateWithMaxId(estimates.numberOfRelationships(), formats.relationship().getMaxId(),\n+        monitor::mayExceedRelationshipIdCapacity);\n+  }\n \n-    private void sanityCheckEstimateWithMaxId( long estimate, long max, BiConsumer<Long,Long> reporter )\n+  private void sanityCheckEstimateWithMaxId(long estimate, long max, BiConsumer<Long, Long> reporter)\n+  {\n+    if (estimate > max * 0.8)\n     {\n-        if ( estimate > max * 0.8 )\n-        {\n-            reporter.accept( max, estimate );\n-        }\n+      reporter.accept(max, estimate);\n     }\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "22",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3486/EstimationSanityChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3486/EstimationSanityChecker.java\nindex f933dd31f01..783f9c67c38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3486/EstimationSanityChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3486/EstimationSanityChecker.java\n@@ -39,15 +39,15 @@ public class EstimationSanityChecker\n     {\n         sanityCheckEstimateWithMaxId( estimates.numberOfNodes(), formats.node().getMaxId(),\n                 monitor::mayExceedNodeIdCapacity );\n-        sanityCheckEstimateWithMaxId( estimates.numberOfRelationships(), formats.relationship().getMaxId(),\n+sanityCheckEstimateWithMaxId( estimates.numberOfRelationships(), formats.relationship().getMaxId(),\n                 monitor::mayExceedRelationshipIdCapacity );\n     }\n \n     private void sanityCheckEstimateWithMaxId( long estimate, long max, BiConsumer<Long,Long> reporter )\n     {\n-        if ( estimate > max * 0.8 )\n+        if ( estimate> max * 0.8 )\n         {\n             reporter.accept( max, estimate );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}