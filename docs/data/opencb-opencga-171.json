{
    "project_name": "opencb-opencga",
    "violation_id": "171",
    "information": {
        "violations": [
            {
                "line": "11",
                "column": "8",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "        BINARY,\n        TAB_SEPARATED // First line starts with # and contains the header\n        ;\n\n        public static FileType fromName(String fileName) {\n            fileName = fileName.toLowerCase();",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "column": "8",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "column": "4",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/171/FileResult.java\nindex ae7adc2d9d3..a63f2a05640 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/171/FileResult.java\n@@ -1,76 +1,76 @@\n package org.opencb.opencga.core.analysis.result;\n \n public class FileResult {\n-    public enum FileType {\n-        IMAGE,\n-        JSON,\n-        AVRO,\n-        PLAIN_TEXT,\n-        BINARY,\n-        TAB_SEPARATED // First line starts with # and contains the header\n-        ;\n+  public enum FileType {\n+    IMAGE,\n+    JSON,\n+    AVRO,\n+    PLAIN_TEXT,\n+    BINARY,\n+    TAB_SEPARATED // First line starts with # and contains the header\n+    ;\n \n-        public static FileType fromName(String fileName) {\n-            fileName = fileName.toLowerCase();\n-            if (fileName.endsWith(\".gz\")) {\n-                fileName = fileName.replace(\".gz\", \"\");\n-            }\n-            switch (fileName.substring(fileName.lastIndexOf('.') + 1)) {\n-                case \"json\":\n-                    return JSON;\n-                case \"avro\":\n-                    return AVRO;\n-                case \"jpg\":\n-                case \"png\":\n-                case \"bmp\":\n-                    return IMAGE;\n-                case \"tsv\":\n-                case \"vcf\":\n-                    return TAB_SEPARATED;\n-                case \"txt\":\n-                case \"log\":\n-                    return PLAIN_TEXT;\n-                default:\n-                    return BINARY;\n-            }\n-        }\n+    public static FileType fromName(String fileName) {\n+      fileName = fileName.toLowerCase();\n+      if (fileName.endsWith(\".gz\")) {\n+        fileName = fileName.replace(\".gz\", \"\");\n+      }\n+      switch (fileName.substring(fileName.lastIndexOf('.') + 1)) {\n+        case \"json\":\n+          return JSON;\n+        case \"avro\":\n+          return AVRO;\n+        case \"jpg\":\n+        case \"png\":\n+        case \"bmp\":\n+          return IMAGE;\n+        case \"tsv\":\n+        case \"vcf\":\n+          return TAB_SEPARATED;\n+        case \"txt\":\n+        case \"log\":\n+          return PLAIN_TEXT;\n+        default:\n+          return BINARY;\n+      }\n     }\n+  }\n \n-    private String path;\n-    private FileType type;\n+  private String path;\n+  private FileType type;\n \n-    public FileResult() {\n-    }\n+  public FileResult() {\n+  }\n \n-    public FileResult(String path, FileType type) {\n-        this.path = path;\n-        this.type = type;\n-    }\n+  public FileResult(String path, FileType type) {\n+    this.path = path;\n+    this.type = type;\n+  }\n \n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"File{\");\n-        sb.append(\"path=\").append(path);\n-        sb.append(\", type=\").append(type);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"File{\");\n+    sb.append(\"path=\").append(path);\n+    sb.append(\", type=\").append(type);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n \n-    public String getPath() {\n-        return path;\n-    }\n+  public String getPath() {\n+    return path;\n+  }\n \n-    public FileResult setPath(String path) {\n-        this.path = path;\n-        return this;\n-    }\n+  public FileResult setPath(String path) {\n+    this.path = path;\n+    return this;\n+  }\n \n-    public FileType getType() {\n-        return type;\n-    }\n+  public FileType getType() {\n+    return type;\n+  }\n \n-    public FileResult setType(FileType type) {\n-        this.type = type;\n-        return this;\n-    }\n+  public FileResult setType(FileType type) {\n+    this.type = type;\n+    return this;\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "column": "8",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/171/FileResult.java\nindex ae7adc2d9d3..6e229cf65ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/171/FileResult.java\n@@ -32,7 +32,7 @@ public class FileResult {\n                     return PLAIN_TEXT;\n                 default:\n                     return BINARY;\n-            }\n+    }\n         }\n     }\n \n@@ -73,4 +73,4 @@ public class FileResult {\n         this.type = type;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "column": "8",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "column": "16",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "11",
                    "column": "18",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/171/FileResult.java\nindex ae7adc2d9d3..609d5510008 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/171/FileResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/171/FileResult.java\n@@ -8,9 +8,7 @@ public class FileResult {\n         PLAIN_TEXT,\n         BINARY,\n         TAB_SEPARATED // First line starts with # and contains the header\n-        ;\n-\n-        public static FileType fromName(String fileName) {\n+                ;public static FileType fromName(String fileName) {\n             fileName = fileName.toLowerCase();\n             if (fileName.endsWith(\".gz\")) {\n                 fileName = fileName.replace(\".gz\", \"\");\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}