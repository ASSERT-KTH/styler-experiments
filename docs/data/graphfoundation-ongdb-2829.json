{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2829",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2829/NodeLabelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2829/NodeLabelUpdate.java\nindex d3efc60d7f7..160933f94e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2829/NodeLabelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2829/NodeLabelUpdate.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.labelscan;\n \n import java.util.Arrays;\n@@ -24,90 +25,90 @@ import java.util.Comparator;\n \n public class NodeLabelUpdate\n {\n-    public static final Comparator<? super NodeLabelUpdate> SORT_BY_NODE_ID =\n-            Comparator.comparingLong( NodeLabelUpdate::getNodeId );\n+  public static final Comparator<? super NodeLabelUpdate> SORT_BY_NODE_ID =\n+      Comparator.comparingLong(NodeLabelUpdate::getNodeId);\n \n-    private final long nodeId;\n-    private final long[] labelsBefore;\n-    private final long[] labelsAfter;\n-    private final long txId;\n+  private final long nodeId;\n+  private final long[] labelsBefore;\n+  private final long[] labelsAfter;\n+  private final long txId;\n \n-    private NodeLabelUpdate( long nodeId, long[] labelsBefore, long[] labelsAfter, long txId )\n-    {\n-        this.nodeId = nodeId;\n-        this.labelsBefore = labelsBefore;\n-        this.labelsAfter = labelsAfter;\n-        this.txId = txId;\n-    }\n+  private NodeLabelUpdate(long nodeId, long[] labelsBefore, long[] labelsAfter, long txId)\n+  {\n+    this.nodeId = nodeId;\n+    this.labelsBefore = labelsBefore;\n+    this.labelsAfter = labelsAfter;\n+    this.txId = txId;\n+  }\n \n-    public long getNodeId()\n-    {\n-        return nodeId;\n-    }\n+  public long getNodeId()\n+  {\n+    return nodeId;\n+  }\n \n-    public long[] getLabelsBefore()\n-    {\n-        return labelsBefore;\n-    }\n+  public long[] getLabelsBefore()\n+  {\n+    return labelsBefore;\n+  }\n \n-    public long[] getLabelsAfter()\n-    {\n-        return labelsAfter;\n-    }\n+  public long[] getLabelsAfter()\n+  {\n+    return labelsAfter;\n+  }\n \n-    public long getTxId()\n-    {\n-        return txId;\n-    }\n+  public long getTxId()\n+  {\n+    return txId;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"[node:\" + nodeId + \", labelsBefore:\" + Arrays.toString( labelsBefore ) +\n-                \", labelsAfter:\" + Arrays.toString( labelsAfter ) + \"]\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"[node:\" + nodeId + \", labelsBefore:\" + Arrays.toString(labelsBefore) +\n+        \", labelsAfter:\" + Arrays.toString(labelsAfter) + \"]\";\n+  }\n+\n+  public static NodeLabelUpdate labelChanges(long nodeId, long[] labelsBeforeChange, long[] labelsAfterChange)\n+  {\n+    return labelChanges(nodeId, labelsBeforeChange, labelsAfterChange, -1);\n+  }\n+\n+  public static NodeLabelUpdate labelChanges(long nodeId, long[] labelsBeforeChange, long[] labelsAfterChange, long txId)\n+  {\n+    return new NodeLabelUpdate(nodeId, labelsBeforeChange, labelsAfterChange, txId);\n+  }\n \n-    public static NodeLabelUpdate labelChanges( long nodeId, long[] labelsBeforeChange, long[] labelsAfterChange )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return labelChanges( nodeId, labelsBeforeChange, labelsAfterChange, -1 );\n+      return true;\n     }\n-\n-    public static NodeLabelUpdate labelChanges( long nodeId, long[] labelsBeforeChange, long[] labelsAfterChange, long txId )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return new NodeLabelUpdate( nodeId, labelsBeforeChange, labelsAfterChange, txId );\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n+    NodeLabelUpdate that = (NodeLabelUpdate) o;\n+\n+    if (nodeId != that.nodeId)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        NodeLabelUpdate that = (NodeLabelUpdate) o;\n-\n-        if ( nodeId != that.nodeId )\n-        {\n-            return false;\n-        }\n-        if ( !Arrays.equals( labelsAfter, that.labelsAfter ) )\n-        {\n-            return false;\n-        }\n-        return Arrays.equals( labelsBefore, that.labelsBefore );\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (!Arrays.equals(labelsAfter, that.labelsAfter))\n     {\n-        int result = (int) (nodeId ^ (nodeId >>> 32));\n-        result = 31 * result + (labelsBefore != null ? Arrays.hashCode( labelsBefore ) : 0);\n-        result = 31 * result + (labelsAfter != null ? Arrays.hashCode( labelsAfter ) : 0);\n-        return result;\n+      return false;\n     }\n+    return Arrays.equals(labelsBefore, that.labelsBefore);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (nodeId ^ (nodeId >>> 32));\n+    result = 31 * result + (labelsBefore != null ? Arrays.hashCode(labelsBefore) : 0);\n+    result = 31 * result + (labelsAfter != null ? Arrays.hashCode(labelsAfter) : 0);\n+    return result;\n+  }\n }\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2829/NodeLabelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2829/NodeLabelUpdate.java\nindex d3efc60d7f7..4a96852d54a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2829/NodeLabelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2829/NodeLabelUpdate.java\n@@ -24,10 +24,8 @@ import java.util.Comparator;\n \n public class NodeLabelUpdate\n {\n-    public static final Comparator<? super NodeLabelUpdate> SORT_BY_NODE_ID =\n-            Comparator.comparingLong( NodeLabelUpdate::getNodeId );\n-\n-    private final long nodeId;\n+    public static final Comparator<? super NodeLabelUpdate> SORT_BY_NODE_ID = Comparator.comparingLong( NodeLabelUpdate::getNodeId );\n+private final long nodeId;\n     private final long[] labelsBefore;\n     private final long[] labelsAfter;\n     private final long txId;\n@@ -63,8 +61,7 @@ public class NodeLabelUpdate\n     @Override\n     public String toString()\n     {\n-        return getClass().getSimpleName() + \"[node:\" + nodeId + \", labelsBefore:\" + Arrays.toString( labelsBefore ) +\n-                \", labelsAfter:\" + Arrays.toString( labelsAfter ) + \"]\";\n+        return getClass().getSimpleName() + \"[node:\" + nodeId + \", labelsBefore:\" + Arrays.toString( labelsBefore ) + \", labelsAfter:\" + Arrays.toString( labelsAfter ) + \"]\";\n     }\n \n     public static NodeLabelUpdate labelChanges( long nodeId, long[] labelsBeforeChange, long[] labelsAfterChange )\n@@ -84,7 +81,8 @@ public class NodeLabelUpdate\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -95,19 +93,21 @@ public class NodeLabelUpdate\n         {\n             return false;\n         }\n-        if ( !Arrays.equals( labelsAfter, that.labelsAfter ) )\n+\n+if ( !Arrays.equals( labelsAfter, that.labelsAfter ) )\n         {\n             return false;\n         }\n-        return Arrays.equals( labelsBefore, that.labelsBefore );\n+\n+return Arrays.equals( labelsBefore, that.labelsBefore );\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (nodeId ^ (nodeId >>> 32));\n-        result = 31 * result + (labelsBefore != null ? Arrays.hashCode( labelsBefore ) : 0);\n-        result = 31 * result + (labelsAfter != null ? Arrays.hashCode( labelsAfter ) : 0);\n+        int result = ( int) ( nodeId ^ ( nodeId >>> 32 ));\n+        result = 31 * result + (labelsBefore != null ? Arrays.hashCode( labelsBefore ) : 0 );\n+        result = 31 * result + (labelsAfter != null ? Arrays.hashCode( labelsAfter ) : 0 );\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}