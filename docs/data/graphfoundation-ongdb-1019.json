{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1019",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1019/ProcedureHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1019/ProcedureHolder.java\nindex 5742ec1e0dc..75aac0a0687 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1019/ProcedureHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1019/ProcedureHolder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.util.ArrayList;\n@@ -30,82 +31,82 @@ import org.neo4j.internal.kernel.api.procs.QualifiedName;\n \n /**\n  * Simple in memory store for procedures.\n- *\n+ * <p>\n  * Should only be accessed from a single thread\n+ *\n  * @param <T> the type to be stored\n  */\n class ProcedureHolder<T>\n {\n-    private final Map<QualifiedName,Integer> nameToId = new HashMap<>();\n-    private final Map<QualifiedName,Integer> caseInsensitveName2Id = new HashMap<>();\n-    private final ArrayList<T> store = new ArrayList<>();\n+  private final Map<QualifiedName, Integer> nameToId = new HashMap<>();\n+  private final Map<QualifiedName, Integer> caseInsensitveName2Id = new HashMap<>();\n+  private final ArrayList<T> store = new ArrayList<>();\n \n-    T get( QualifiedName name )\n+  T get(QualifiedName name)\n+  {\n+    Integer id = name2Id(name);\n+    if (id == null)\n     {\n-        Integer id = name2Id( name );\n-        if ( id == null )\n-        {\n-            return null;\n-        }\n-        return store.get( id );\n+      return null;\n     }\n+    return store.get(id);\n+  }\n \n-    T get( int id )\n-    {\n-        return store.get( id );\n-    }\n+  T get(int id)\n+  {\n+    return store.get(id);\n+  }\n \n-    void put( QualifiedName name, T item, boolean caseInsensitive )\n+  void put(QualifiedName name, T item, boolean caseInsensitive)\n+  {\n+    int id = store.size();\n+    store.add(item);\n+    nameToId.put(name, id);\n+    if (caseInsensitive)\n     {\n-        int id = store.size();\n-        store.add( item );\n-        nameToId.put( name, id );\n-        if ( caseInsensitive )\n-        {\n-            caseInsensitveName2Id.put( toLowerCaseName( name ), id );\n-        }\n-        else\n-        {\n-            caseInsensitveName2Id.remove( toLowerCaseName( name ) );\n-        }\n-    }\n-\n-    int idOf( QualifiedName name )\n+      caseInsensitveName2Id.put(toLowerCaseName(name), id);\n+    } else\n     {\n-        Integer id = name2Id( name );\n-        if ( id == null )\n-        {\n-            throw new NoSuchElementException();\n-        }\n-\n-        return id;\n+      caseInsensitveName2Id.remove(toLowerCaseName(name));\n     }\n+  }\n \n-    List<T> all()\n+  int idOf(QualifiedName name)\n+  {\n+    Integer id = name2Id(name);\n+    if (id == null)\n     {\n-        return Collections.unmodifiableList( store );\n+      throw new NoSuchElementException();\n     }\n \n-    private Integer name2Id( QualifiedName name )\n-    {\n-        Integer id = nameToId.get( name );\n-        if ( id == null )\n-        { // Did not find it in the case sensitive lookup - let's check for case insensitive objects\n-            QualifiedName lowerCaseName = toLowerCaseName( name );\n-            id = caseInsensitveName2Id.get( lowerCaseName );\n-        }\n-        return id;\n+    return id;\n+  }\n+\n+  List<T> all()\n+  {\n+    return Collections.unmodifiableList(store);\n+  }\n+\n+  private Integer name2Id(QualifiedName name)\n+  {\n+    Integer id = nameToId.get(name);\n+    if (id == null)\n+    { // Did not find it in the case sensitive lookup - let's check for case insensitive objects\n+      QualifiedName lowerCaseName = toLowerCaseName(name);\n+      id = caseInsensitveName2Id.get(lowerCaseName);\n     }\n+    return id;\n+  }\n \n-    private QualifiedName toLowerCaseName( QualifiedName name )\n+  private QualifiedName toLowerCaseName(QualifiedName name)\n+  {\n+    String[] oldNs = name.namespace();\n+    String[] lowerCaseNamespace = new String[oldNs.length];\n+    for (int i = 0; i < oldNs.length; i++)\n     {\n-        String[] oldNs = name.namespace();\n-        String[] lowerCaseNamespace = new String[oldNs.length];\n-        for ( int i = 0; i < oldNs.length; i++ )\n-        {\n-            lowerCaseNamespace[i] = oldNs[i].toLowerCase();\n-        }\n-        String lowercaseName = name.name().toLowerCase();\n-        return new QualifiedName( lowerCaseNamespace, lowercaseName );\n+      lowerCaseNamespace[i] = oldNs[i].toLowerCase();\n     }\n+    String lowercaseName = name.name().toLowerCase();\n+    return new QualifiedName(lowerCaseNamespace, lowercaseName);\n+  }\n }\n",
            "diff_size": 88
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1019/ProcedureHolder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1019/ProcedureHolder.java\nindex 5742ec1e0dc..8f39c9268ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1019/ProcedureHolder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1019/ProcedureHolder.java\n@@ -47,7 +47,8 @@ class ProcedureHolder<T>\n         {\n             return null;\n         }\n-        return store.get( id );\n+\n+return store.get( id );\n     }\n \n     T get( int id )\n@@ -94,7 +95,8 @@ class ProcedureHolder<T>\n             QualifiedName lowerCaseName = toLowerCaseName( name );\n             id = caseInsensitveName2Id.get( lowerCaseName );\n         }\n-        return id;\n+\n+return id;\n     }\n \n     private QualifiedName toLowerCaseName( QualifiedName name )\n@@ -105,7 +107,8 @@ class ProcedureHolder<T>\n         {\n             lowerCaseNamespace[i] = oldNs[i].toLowerCase();\n         }\n-        String lowercaseName = name.name().toLowerCase();\n+\n+String lowercaseName = name.name().toLowerCase();\n         return new QualifiedName( lowerCaseNamespace, lowercaseName );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}