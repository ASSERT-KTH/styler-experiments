{
    "project_name": "Angel-ML-angel",
    "violation_id": "10",
    "information": {
        "violations": [
            {
                "line": "43",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 113).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        TVector row = ((GetRowResult) client.get(func)).getRow();\n        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n\n        DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n        deltaV.setMatrixId(client.getMatrixId());",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/10/PSFTestTask.java\nindex 0a2efbe97a6..92bb332c267 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/10/PSFTestTask.java\n@@ -40,7 +40,9 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs\n+            ) + \", sum=\" +sum((DenseDoubleVector)\n+          row ));\n \n         DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/10/PSFTestTask.java\nindex 0a2efbe97a6..ac09753bf27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/10/PSFTestTask.java\n@@ -15,53 +15,59 @@ import org.apache.commons.logging.LogFactory;\n  * Created by payniexiao on 2017/7/18.\n  */\n public class PSFTestTask extends BaseTask<Long, Long, Long> {\n-  private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n+    private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n \n-  public PSFTestTask(TaskContext taskContext) {\n-    super(taskContext);\n-  }\n+    public PSFTestTask(TaskContext taskContext) {\n+        super(taskContext);\n+    }\n \n-  @Override public Long parse(Long key, Long value) {\n-    return null;\n-  }\n+    @Override\n+    public Long parse(Long key, Long value) {\n+        return null;\n+    }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+    @Override\n+    public void preProcess(TaskContext taskContext) {\n+    }\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n-      MatrixClient client = taskContext.getMatrix(\"psf_test\");\n-      Pull func = new Pull(client.getMatrixId(), 0);\n-      double [] delta = new double[100000000];\n-      for(int i = 0; i < 100000000; i++) {\n-        delta[i] = 1.0;\n-      }\n-      while (taskContext.getEpoch() < 1000) {\n-        taskContext.globalSync(client.getMatrixId());\n-        long startTs = System.currentTimeMillis();\n-        TVector row = ((GetRowResult) client.get(func)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n+    @Override\n+    public void run(TaskContext taskContext) throws AngelException {\n+        try {\n+            MatrixClient client = taskContext.getMatrix(\"psf_test\");\n+            Pull func = new Pull(client.getMatrixId(), 0);\n+            double[] delta = new double[100000000];\n+            for (int i = 0; i < 100000000; i++) {\n+                delta[i] = 1.0;\n+            }\n+            while (taskContext.getEpoch() < 1000) {\n+                taskContext.globalSync(client.getMatrixId());\n+                long startTs = System.currentTimeMillis();\n+                TVector row = ((GetRowResult) client.get(func)).getRow();\n+                LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" +\n+                        taskContext.getEpoch()\n+                        + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" +\n+                        sum((DenseDoubleVector) row));\n \n-        DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n-        deltaV.setMatrixId(client.getMatrixId());\n-        deltaV.setRowId(0);\n+                DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n+                deltaV.setMatrixId(client.getMatrixId());\n+                deltaV.setRowId(0);\n \n-        client.increment(deltaV);\n-        client.clock().get();\n-        taskContext.incEpoch();\n-      }\n-    } catch (Throwable x) {\n-      throw new AngelException(\"run task failed \", x);\n+                client.increment(deltaV);\n+                client.clock().get();\n+                taskContext.incEpoch();\n+            }\n+        } catch (Throwable x) {\n+            throw new AngelException(\"run task failed \", x);\n+        }\n     }\n-  }\n \n-  private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n-    double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n-      ret += data[i];\n-    }\n+    private double sum(DenseDoubleVector row) {\n+        double[] data = row.getValues();\n+        double ret = 0.0;\n+        for (int i = 0; i < data.length; i++) {\n+            ret += data[i];\n+        }\n \n-    return ret;\n-  }\n+        return ret;\n+    }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/10/PSFTestTask.java\nindex 0a2efbe97a6..ac0531759fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/10/PSFTestTask.java\n@@ -21,26 +21,28 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+  @Override\n+public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n       double [] delta = new double[100000000];\n-      for(int i = 0; i < 100000000; i++) {\n+      for (int i = 0; i < 100000000; i++) {\n         delta[i] = 1.0;\n       }\n       while (taskContext.getEpoch() < 1000) {\n         taskContext.globalSync(client.getMatrixId());\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n \n         DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n@@ -58,10 +60,10 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   private double sum(DenseDoubleVector row) {\n     double [] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n \n     return ret;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/10/PSFTestTask.java\nindex 0a2efbe97a6..0193575cf89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/10/PSFTestTask.java\n@@ -14,38 +14,42 @@ import org.apache.commons.logging.LogFactory;\n /**\n  * Created by payniexiao on 2017/7/18.\n  */\n+\n public class PSFTestTask extends BaseTask<Long, Long, Long> {\n+\n   private static final Log LOG = LogFactory.getLog(PSFTestTask.class);\n \n   public PSFTestTask(TaskContext taskContext) {\n     super(taskContext);\n   }\n \n-  @Override public Long parse(Long key, Long value) {\n+  @Override\n+  public Long parse(Long key, Long value) {\n     return null;\n   }\n \n-  @Override public void preProcess(TaskContext taskContext) { }\n+  @Override\n+  public void preProcess(TaskContext taskContext) {}\n \n-  @Override public void run(TaskContext taskContext) throws AngelException {\n-    try{\n+  @Override\n+  public void run(TaskContext taskContext) throws AngelException {\n+    try {\n       MatrixClient client = taskContext.getMatrix(\"psf_test\");\n       Pull func = new Pull(client.getMatrixId(), 0);\n-      double [] delta = new double[100000000];\n-      for(int i = 0; i < 100000000; i++) {\n+      double[] delta = new double[100000000];\n+      for (int i = 0; i < 100000000; i++) {\n         delta[i] = 1.0;\n       }\n+\n       while (taskContext.getEpoch() < 1000) {\n         taskContext.globalSync(client.getMatrixId());\n+\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n-        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n-\n+        LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch() + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector) row));\n         DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n         deltaV.setRowId(0);\n-\n         client.increment(deltaV);\n         client.clock().get();\n         taskContext.incEpoch();\n@@ -56,12 +60,12 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n   }\n \n   private double sum(DenseDoubleVector row) {\n-    double [] data = row.getValues();\n+    double[] data = row.getValues();\n     double ret = 0.0;\n-    for(int i = 0; i < data.length; i++) {\n+    for (int i = 0; i < data.length; i++) {\n       ret += data[i];\n     }\n-\n     return ret;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/10/PSFTestTask.java\nindex 0a2efbe97a6..92bb332c267 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/10/PSFTestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/10/PSFTestTask.java\n@@ -40,7 +40,9 @@ public class PSFTestTask extends BaseTask<Long, Long, Long> {\n         long startTs = System.currentTimeMillis();\n         TVector row = ((GetRowResult) client.get(func)).getRow();\n         LOG.info(\"Task \" + taskContext.getTaskId() + \" in iteration \" + taskContext.getEpoch()\n-          + \" pull use time=\" + (System.currentTimeMillis() - startTs) + \", sum=\" + sum((DenseDoubleVector)row));\n+          + \" pull use time=\" + (System.currentTimeMillis()- startTs\n+            ) + \", sum=\" +sum((DenseDoubleVector)\n+          row ));\n \n         DenseDoubleVector deltaV = new DenseDoubleVector(100000000, delta);\n         deltaV.setMatrixId(client.getMatrixId());\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}