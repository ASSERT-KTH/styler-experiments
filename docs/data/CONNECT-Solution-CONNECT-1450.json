{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1450",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1450/AdapterDocRetrieveProxyNoOpImpl.java\nindex f0aa40ab600..dd91b7c4812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1450/AdapterDocRetrieveProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1450/AdapterDocRetrieveProxyNoOpImpl.java\nindex f0aa40ab600..9c4b2ec0fe5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1450/AdapterDocRetrieveProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -40,20 +41,20 @@ import ihe.iti.xds_b._2007.RetrieveDocumentSetResponseType;\n  */\n public class AdapterDocRetrieveProxyNoOpImpl implements AdapterDocRetrieveProxy {\n \n-    /**\n-     * Retrieve the specified document.\n-     *\n-     * @param request The identifier(s) if the document(s) to be retrieved.\n-     * @param assertion The assertion information.\n-     * @return The retrieved documents.\n-     */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n-    @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n-        return new RetrieveDocumentSetResponseType();\n-    }\n+  /**\n+   * Retrieve the specified document.\n+   *\n+   * @param request   The identifier(s) if the document(s) to be retrieved.\n+   * @param assertion The assertion information.\n+   * @return The retrieved documents.\n+   */\n+  @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n+      afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n+      serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+  @Override\n+  public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n+                                                             AssertionType assertion) {\n+    return new RetrieveDocumentSetResponseType();\n+  }\n \n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1450/AdapterDocRetrieveProxyNoOpImpl.java\nindex f0aa40ab600..cd7c0d78dc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1450/AdapterDocRetrieveProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -47,13 +48,10 @@ public class AdapterDocRetrieveProxyNoOpImpl implements AdapterDocRetrieveProxy\n      * @param assertion The assertion information.\n      * @return The retrieved documents.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n-    @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n-        return new RetrieveDocumentSetResponseType();\n+    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class, afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class, serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+@Override\n+    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n+    return new RetrieveDocumentSetResponseType();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1450/AdapterDocRetrieveProxyNoOpImpl.java\nindex f0aa40ab600..54b1394fe65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1450/AdapterDocRetrieveProxyNoOpImpl.java\n@@ -38,6 +38,8 @@ import ihe.iti.xds_b._2007.RetrieveDocumentSetResponseType;\n  *\n  * @author Neil Webb\n  */\n+\n+\n public class AdapterDocRetrieveProxyNoOpImpl implements AdapterDocRetrieveProxy {\n \n     /**\n@@ -47,13 +49,11 @@ public class AdapterDocRetrieveProxyNoOpImpl implements AdapterDocRetrieveProxy\n      * @param assertion The assertion information.\n      * @return The retrieved documents.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+\n+\n+    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class, afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class, serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n     @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n+    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n         return new RetrieveDocumentSetResponseType();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1450/AdapterDocRetrieveProxyNoOpImpl.java\nindex f0aa40ab600..dd91b7c4812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1450/AdapterDocRetrieveProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1450/AdapterDocRetrieveProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}