{
    "project_name": "h2database-h2database",
    "violation_id": "132",
    "information": {
        "violations": [
            {
                "line": "26",
                "column": "31",
                "severity": "warning",
                "message": "'{' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n\n    private FakeFileChannel() {}\n\n    @Override\n    protected void implCloseChannel() throws IOException {",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/h2database-h2database/styler/05_predictions/final/files-repaired/132/FakeFileChannel.java\nindex ae872c42067..6ba3ead6c03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/h2database-h2database/styler/05_predictions/final/files-repaired/132/FakeFileChannel.java\n@@ -23,7 +23,7 @@ public class FakeFileChannel extends FileChannel {\n      */\n     public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n \n-    private FakeFileChannel() {}\n+    private FakeFileChannel() { }\n \n     @Override\n     protected void implCloseChannel() throws IOException {\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/checkstyle_idea/132/FakeFileChannel.java\nindex ae872c42067..53195eb9201 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/checkstyle_idea/132/FakeFileChannel.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.store.fs;\n \n import java.io.IOException;\n@@ -23,7 +24,8 @@ public class FakeFileChannel extends FileChannel {\n      */\n     public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n \n-    private FakeFileChannel() {}\n+    private FakeFileChannel() {\n+    }\n \n     @Override\n     protected void implCloseChannel() throws IOException {\n@@ -31,12 +33,14 @@ public class FakeFileChannel extends FileChannel {\n     }\n \n     @Override\n-    public FileLock lock(long position, long size, boolean shared) throws IOException {\n+    public FileLock lock(long position, long size, boolean shared)\n+            throws IOException {\n         throw new IOException();\n     }\n \n     @Override\n-    public MappedByteBuffer map(MapMode mode, long position, long size) throws IOException {\n+    public MappedByteBuffer map(MapMode mode, long position, long size)\n+            throws IOException {\n         throw new IOException();\n     }\n \n@@ -61,7 +65,8 @@ public class FakeFileChannel extends FileChannel {\n     }\n \n     @Override\n-    public long read(ByteBuffer[] dsts, int offset, int length) throws IOException {\n+    public long read(ByteBuffer[] dsts, int offset, int length)\n+            throws IOException {\n         throw new IOException();\n     }\n \n@@ -71,12 +76,14 @@ public class FakeFileChannel extends FileChannel {\n     }\n \n     @Override\n-    public long transferFrom(ReadableByteChannel src, long position, long count) throws IOException {\n+    public long transferFrom(ReadableByteChannel src, long position, long count)\n+            throws IOException {\n         throw new IOException();\n     }\n \n     @Override\n-    public long transferTo(long position, long count, WritableByteChannel target) throws IOException {\n+    public long transferTo(long position, long count,\n+                           WritableByteChannel target) throws IOException {\n         throw new IOException();\n     }\n \n@@ -86,7 +93,8 @@ public class FakeFileChannel extends FileChannel {\n     }\n \n     @Override\n-    public FileLock tryLock(long position, long size, boolean shared) throws IOException {\n+    public FileLock tryLock(long position, long size, boolean shared)\n+            throws IOException {\n         throw new IOException();\n     }\n \n@@ -101,7 +109,8 @@ public class FakeFileChannel extends FileChannel {\n     }\n \n     @Override\n-    public long write(ByteBuffer[] srcs, int offset, int len) throws IOException {\n+    public long write(ByteBuffer[] srcs, int offset, int len)\n+            throws IOException {\n         throw new IOException();\n     }\n \n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/codebuff/132/FakeFileChannel.java\nindex ae872c42067..45bf8b7fb81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/codebuff/132/FakeFileChannel.java\n@@ -16,14 +16,20 @@ import java.nio.channels.WritableByteChannel;\n /**\n  * Fake file channel to use by in-memory and ZIP file systems.\n  */\n+\n+\n public class FakeFileChannel extends FileChannel {\n \n     /**\n      * No need to allocate these, they have no state\n      */\n+\n+\n     public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n \n-    private FakeFileChannel() {}\n+    private FakeFileChannel() {\n+\n+    }\n \n     @Override\n     protected void implCloseChannel() throws IOException {\n@@ -109,4 +115,5 @@ public class FakeFileChannel extends FileChannel {\n     public void force(boolean metaData) throws IOException {\n         throw new IOException();\n     }\n+\n }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/styler/05_predictions/random/files-repaired/132/FakeFileChannel.java\nindex ae872c42067..6ba3ead6c03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/styler/05_predictions/random/files-repaired/132/FakeFileChannel.java\n@@ -23,7 +23,7 @@ public class FakeFileChannel extends FileChannel {\n      */\n     public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n \n-    private FakeFileChannel() {}\n+    private FakeFileChannel() { }\n \n     @Override\n     protected void implCloseChannel() throws IOException {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/styler/05_predictions/three_grams/files-repaired/132/FakeFileChannel.java\nindex ae872c42067..6ba3ead6c03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/violations/132/FakeFileChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/h2database-h2database/styler/05_predictions/three_grams/files-repaired/132/FakeFileChannel.java\n@@ -23,7 +23,7 @@ public class FakeFileChannel extends FileChannel {\n      */\n     public static final FakeFileChannel INSTANCE = new FakeFileChannel();\n \n-    private FakeFileChannel() {}\n+    private FakeFileChannel() { }\n \n     @Override\n     protected void implCloseChannel() throws IOException {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}