{
    "project_name": "neo4j-neo4j",
    "violation_id": "2282",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2282/OffloadStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2282/OffloadStore.java\nindex 94a10305f83..84df70b2291 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2282/OffloadStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2282/OffloadStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -38,55 +39,55 @@ public interface OffloadStore<KEY, VALUE>\n      *\n      * @see #readKeyValue(long, Object, Object, PageCursorTracer)\n      */\n-    void readKey( long offloadId, KEY into, PageCursorTracer cursorTracer ) throws IOException;\n+    void readKey(long offloadId, KEY into, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Read key and value mapped to by given offloadId.\n      *\n-     * @param offloadId id for which to read key and value.\n-     * @param key instance to read key into.\n-     * @param value instance to read value into\n+     * @param offloadId    id for which to read key and value.\n+     * @param key          instance to read key into.\n+     * @param value        instance to read value into\n      * @param cursorTracer underlying page cursor tracer\n      * @throws IOException if something went wrong while reading key or value.\n      */\n-    void readKeyValue( long offloadId, KEY key, VALUE value, PageCursorTracer cursorTracer ) throws IOException;\n+    void readKeyValue(long offloadId, KEY key, VALUE value, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Read only value.\n      *\n      * @see #readKeyValue(long, Object, Object, PageCursorTracer)\n      */\n-    void readValue( long offloadId, VALUE into, PageCursorTracer cursorTracer ) throws IOException;\n+    void readValue(long offloadId, VALUE into, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Store key in offload store.\n      *\n      * @see #writeKeyValue(Object, Object, long, long, PageCursorTracer)\n      */\n-    long writeKey( KEY key, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException;\n+    long writeKey(KEY key, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Store key and value in offload store, mapping them to offloadId\n      * that can be used when reading the key and value back.\n      *\n-     * @param key the key to write to offload store.\n-     * @param value the value to write to offload store together with key.\n-     * @param stableGeneration current stable generation when key is written.\n+     * @param key                the key to write to offload store.\n+     * @param value              the value to write to offload store together with key.\n+     * @param stableGeneration   current stable generation when key is written.\n      * @param unstableGeneration current unstable generation when key is written.\n-     * @param cursorTracer underlying page cursor tracer\n+     * @param cursorTracer       underlying page cursor tracer\n      * @return offloadId to use when reading key and value back.\n      * @throws IOException if something went wrong while writing key or value.\n      */\n-    long writeKeyValue( KEY key, VALUE value, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException;\n+    long writeKeyValue(KEY key, VALUE value, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Free the given offloadId effectively deleting that entry from offload store.\n      *\n-     * @param offloadId id to free\n-     * @param stableGeneration current stable generation when id is freed.\n+     * @param offloadId          id to free\n+     * @param stableGeneration   current stable generation when id is freed.\n      * @param unstableGeneration current unstable generation when id is freed.\n-     * @param cursorTracer underlying page cursor tracer\n+     * @param cursorTracer       underlying page cursor tracer\n      * @throws IOException if something went wrong when freeing id.\n      */\n-    void free( long offloadId, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer ) throws IOException;\n+    void free(long offloadId, long stableGeneration, long unstableGeneration, PageCursorTracer cursorTracer) throws IOException;\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}