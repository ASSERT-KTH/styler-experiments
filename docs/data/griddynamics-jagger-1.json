{
    "project_name": "griddynamics-jagger",
    "violation_id": "1",
    "information": {
        "violations": [
            {
                "line": "52",
                "column": "66",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    }\n\n    protected InvocationListener<Q, R, E> getInvocationListener(){\n        return invocationListener;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/1/Scenario.java\nindex 094a3d77405..c4d34b644b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/1/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/1/Scenario.java\nindex 094a3d77405..81039292b66 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/1/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n@@ -57,9 +57,10 @@ public abstract class Scenario<Q, R, E> {\n         checkNotNull(invocationListener);\n         this.invocationListener = invocationListener;\n     }\n-    \n+\n     /**\n      * Executes load testing unit of work\n+     *\n      * @return {@code true} if any useful work (i.e. some load testing) was done during the transaction\n      * {@code false} either (for example, when all planned testing is done already)\n      */\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 67.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/1/Scenario.java\nindex 094a3d77405..f81d282da90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/1/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n@@ -57,12 +57,13 @@ public abstract class Scenario<Q, R, E> {\n         checkNotNull(invocationListener);\n         this.invocationListener = invocationListener;\n     }\n-    \n+\n+\n     /**\n      * Executes load testing unit of work\n      * @return {@code true} if any useful work (i.e. some load testing) was done during the transaction\n      * {@code false} either (for example, when all planned testing is done already)\n      */\n-    public abstract boolean doTransaction();\n+public abstract boolean doTransaction();\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/1/Scenario.java\nindex 094a3d77405..4d2d21839e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/1/Scenario.java\n@@ -23,7 +23,6 @@ package com.griddynamics.jagger.invoker;\n import static com.google.common.base.Preconditions.checkNotNull;\n import static com.griddynamics.jagger.invoker.Invokers.doNothing;\n import static com.griddynamics.jagger.invoker.Invokers.emptyListener;\n-\n import com.griddynamics.jagger.engine.e1.collector.invocation.InvocationListener;\n \n /**\n@@ -31,9 +30,12 @@ import com.griddynamics.jagger.engine.e1.collector.invocation.InvocationListener\n  *\n  * @author Mairbek Khadikov\n  */\n+\n+\n public abstract class Scenario<Q, R, E> {\n \n     // strange program design - listeners look like foreign elements\n+\n     private LoadInvocationListener<Q, R, E> listener = doNothing();\n     private InvocationListener<Q, R, E> invocationListener = emptyListener();\n \n@@ -43,13 +45,14 @@ public abstract class Scenario<Q, R, E> {\n     }\n \n     // from 1.2.4 all listeners are wrapped in loadInvocationListener\n+\n     @Deprecated\n     public void setListener(LoadInvocationListener<Q, R, E> listener) {\n         checkNotNull(listener);\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n@@ -63,6 +66,6 @@ public abstract class Scenario<Q, R, E> {\n      * @return {@code true} if any useful work (i.e. some load testing) was done during the transaction\n      * {@code false} either (for example, when all planned testing is done already)\n      */\n-    public abstract boolean doTransaction();\n \n-}\n+    public abstract boolean doTransaction();\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/1/Scenario.java\nindex 094a3d77405..c4d34b644b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/1/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/1/Scenario.java\nindex 094a3d77405..c4d34b644b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/1/Scenario.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/1/Scenario.java\n@@ -49,7 +49,7 @@ public abstract class Scenario<Q, R, E> {\n         this.listener = Invokers.logErrors(listener);\n     }\n \n-    protected InvocationListener<Q, R, E> getInvocationListener(){\n+    protected InvocationListener<Q, R, E> getInvocationListener() {\n         return invocationListener;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}