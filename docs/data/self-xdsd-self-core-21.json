{
    "project_name": "self-xdsd-self-core",
    "violation_id": "21",
    "information": {
        "violations": [
            {
                "line": "65",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    public Step start(final Event event) {\n        final Step steps;\n        if(Event.Type.RESIGN.equals(event.type())) {\n            final Language language = event.project().language();\n            final String author = event.comment().author();\n            steps = new AuthorIsAssignee(",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/self-xdsd-self-core/styler/05_predictions/final/files-repaired/21/Resign.java\nindex c26d1c9f695..148a3fa5335 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/self-xdsd-self-core/styler/05_predictions/final/files-repaired/21/Resign.java\n@@ -62,7 +62,7 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new AuthorIsAssignee(\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/checkstyle_idea/21/Resign.java\nindex c26d1c9f695..711a05e64e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/checkstyle_idea/21/Resign.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.Event;\n@@ -32,6 +33,7 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * Conversation where a Task's assignee resigns.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.20\n@@ -52,8 +54,9 @@ public final class Resign implements Conversation {\n \n     /**\n      * Ctor.\n+     *\n      * @param notResign Next in the conversation chain, if the\n-     *  event type is not resign.\n+     *                  event type is not resign.\n      */\n     public Resign(final Conversation notResign) {\n         this.notResign = notResign;\n@@ -62,7 +65,7 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new AuthorIsAssignee(\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/naturalize/21/Resign.java\nindex c26d1c9f695..469686d0afc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/naturalize/21/Resign.java\n@@ -62,7 +62,7 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new AuthorIsAssignee(\n@@ -93,4 +93,4 @@ public final class Resign implements Conversation {\n         }\n         return steps;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 66, expected level should be 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/codebuff/21/Resign.java\nindex c26d1c9f695..6edada0c00a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/codebuff/21/Resign.java\n@@ -36,18 +36,22 @@ import org.slf4j.LoggerFactory;\n  * @version $Id$\n  * @since 0.0.20\n  */\n+\n+\n public final class Resign implements Conversation {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        Resign.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(Resign.class);\n \n     /**\n      * Next conversation, if the event type is not \"resign\".\n      */\n+\n+\n     private final Conversation notResign;\n \n     /**\n@@ -55,6 +59,8 @@ public final class Resign implements Conversation {\n      * @param notResign Next in the conversation chain, if the\n      *  event type is not resign.\n      */\n+\n+\n     public Resign(final Conversation notResign) {\n         this.notResign = notResign;\n     }\n@@ -62,35 +68,22 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n-            steps = new AuthorIsAssignee(\n-                new RegisterResignation(\n-                    Resignations.Reason.ASKED,\n-                    new UnassignTask(\n-                        new SendReply(\n-                            String.format(\n-                                language.reply(\"resigned.comment\"),\n-                                author\n-                            ),\n-                            lastly -> LOG.debug(\"User resigned successfully.\")\n-                        )\n-                    )\n-                ),\n-                new SendReply(\n-                    String.format(\n-                        language.reply(\"cannotResign.comment\"),\n-                        author\n-                    ),\n-                    lastly -> LOG.debug(\n-                        \"User is not assignee, no resignation possible.\"\n-                    )\n-                )\n-            );\n+            steps = new AuthorIsAssignee(new RegisterResignation(\n+                                             Resignations.Reason.ASKED,\n+                                             new UnassignTask(new SendReply(\n+                                                                  String.format(language.reply(\"resigned.comment\"), author),\n+                                                                  lastly -> LOG.debug(\"User resigned successfully.\")\n+                                                              ))\n+                                         ), new SendReply(\n+                                             String.format(language.reply(\"cannotResign.comment\"), author),\n+                                             lastly -> LOG.debug(\"User is not assignee, no resignation possible.\")\n+                                         ));\n         } else {\n             steps = this.notResign.start(event);\n         }\n         return steps;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/styler/05_predictions/random/files-repaired/21/Resign.java\nindex c26d1c9f695..148a3fa5335 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/styler/05_predictions/random/files-repaired/21/Resign.java\n@@ -62,7 +62,7 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new AuthorIsAssignee(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/styler/05_predictions/three_grams/files-repaired/21/Resign.java\nindex c26d1c9f695..148a3fa5335 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/violations/21/Resign.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/self-xdsd-self-core/styler/05_predictions/three_grams/files-repaired/21/Resign.java\n@@ -62,7 +62,7 @@ public final class Resign implements Conversation {\n     @Override\n     public Step start(final Event event) {\n         final Step steps;\n-        if(Event.Type.RESIGN.equals(event.type())) {\n+        if (Event.Type.RESIGN.equals(event.type())) {\n             final Language language = event.project().language();\n             final String author = event.comment().author();\n             steps = new AuthorIsAssignee(\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}