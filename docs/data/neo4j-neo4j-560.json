{
    "project_name": "neo4j-neo4j",
    "violation_id": "560",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/560/RelationshipConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/560/RelationshipConnection.java\nindex 6c7cc187df8..2b3b31a4350 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/560/RelationshipConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/560/RelationshipConnection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.kernel.impl.store.record.Record;\n@@ -25,191 +26,191 @@ import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n enum RelationshipConnection\n {\n     START_PREV\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setFirstPrevRel( id );\n-            rel.setFirstInFirstChain( isFirst );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return START_NEXT;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return END_PREV;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain();\n-        }\n-    },\n+      {\n+          @Override\n+          long get(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInFirstChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getFirstPrevRel();\n+          }\n+\n+          @Override\n+          void set(RelationshipRecord rel, long id, boolean isFirst)\n+          {\n+              rel.setFirstPrevRel(id);\n+              rel.setFirstInFirstChain(isFirst);\n+          }\n+\n+          @Override\n+          RelationshipConnection otherSide()\n+          {\n+              return START_NEXT;\n+          }\n+\n+          @Override\n+          long compareNode(RelationshipRecord rel)\n+          {\n+              return rel.getFirstNode();\n+          }\n+\n+          @Override\n+          RelationshipConnection start()\n+          {\n+              return this;\n+          }\n+\n+          @Override\n+          RelationshipConnection end()\n+          {\n+              return END_PREV;\n+          }\n+\n+          @Override\n+          boolean isFirstInChain(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInFirstChain();\n+          }\n+      },\n     START_NEXT\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNextRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setFirstNextRel( id );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return START_PREV;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return END_NEXT;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain();\n-        }\n-    },\n+      {\n+          @Override\n+          long get(RelationshipRecord rel)\n+          {\n+              return rel.getFirstNextRel();\n+          }\n+\n+          @Override\n+          void set(RelationshipRecord rel, long id, boolean isFirst)\n+          {\n+              rel.setFirstNextRel(id);\n+          }\n+\n+          @Override\n+          RelationshipConnection otherSide()\n+          {\n+              return START_PREV;\n+          }\n+\n+          @Override\n+          long compareNode(RelationshipRecord rel)\n+          {\n+              return rel.getFirstNode();\n+          }\n+\n+          @Override\n+          RelationshipConnection start()\n+          {\n+              return this;\n+          }\n+\n+          @Override\n+          RelationshipConnection end()\n+          {\n+              return END_NEXT;\n+          }\n+\n+          @Override\n+          boolean isFirstInChain(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInFirstChain();\n+          }\n+      },\n     END_PREV\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setSecondPrevRel( id );\n-            rel.setFirstInSecondChain( isFirst );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return END_NEXT;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return START_PREV;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain();\n-        }\n-    },\n+      {\n+          @Override\n+          long get(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInSecondChain() ? Record.NO_NEXT_RELATIONSHIP.intValue() : rel.getSecondPrevRel();\n+          }\n+\n+          @Override\n+          void set(RelationshipRecord rel, long id, boolean isFirst)\n+          {\n+              rel.setSecondPrevRel(id);\n+              rel.setFirstInSecondChain(isFirst);\n+          }\n+\n+          @Override\n+          RelationshipConnection otherSide()\n+          {\n+              return END_NEXT;\n+          }\n+\n+          @Override\n+          long compareNode(RelationshipRecord rel)\n+          {\n+              return rel.getSecondNode();\n+          }\n+\n+          @Override\n+          RelationshipConnection start()\n+          {\n+              return START_PREV;\n+          }\n+\n+          @Override\n+          RelationshipConnection end()\n+          {\n+              return this;\n+          }\n+\n+          @Override\n+          boolean isFirstInChain(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInSecondChain();\n+          }\n+      },\n     END_NEXT\n-    {\n-        @Override\n-        long get( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNextRel();\n-        }\n-\n-        @Override\n-        void set( RelationshipRecord rel, long id, boolean isFirst )\n-        {\n-            rel.setSecondNextRel( id );\n-        }\n-\n-        @Override\n-        RelationshipConnection otherSide()\n-        {\n-            return END_PREV;\n-        }\n-\n-        @Override\n-        long compareNode( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNode();\n-        }\n-\n-        @Override\n-        RelationshipConnection start()\n-        {\n-            return START_NEXT;\n-        }\n-\n-        @Override\n-        RelationshipConnection end()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        boolean isFirstInChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain();\n-        }\n-    };\n-\n-    abstract long get( RelationshipRecord rel );\n-\n-    abstract boolean isFirstInChain( RelationshipRecord rel );\n-\n-    abstract void set( RelationshipRecord rel, long id, boolean isFirst );\n-\n-    abstract long compareNode( RelationshipRecord rel );\n+      {\n+          @Override\n+          long get(RelationshipRecord rel)\n+          {\n+              return rel.getSecondNextRel();\n+          }\n+\n+          @Override\n+          void set(RelationshipRecord rel, long id, boolean isFirst)\n+          {\n+              rel.setSecondNextRel(id);\n+          }\n+\n+          @Override\n+          RelationshipConnection otherSide()\n+          {\n+              return END_PREV;\n+          }\n+\n+          @Override\n+          long compareNode(RelationshipRecord rel)\n+          {\n+              return rel.getSecondNode();\n+          }\n+\n+          @Override\n+          RelationshipConnection start()\n+          {\n+              return START_NEXT;\n+          }\n+\n+          @Override\n+          RelationshipConnection end()\n+          {\n+              return this;\n+          }\n+\n+          @Override\n+          boolean isFirstInChain(RelationshipRecord rel)\n+          {\n+              return rel.isFirstInSecondChain();\n+          }\n+      };\n+\n+    abstract long get(RelationshipRecord rel);\n+\n+    abstract boolean isFirstInChain(RelationshipRecord rel);\n+\n+    abstract void set(RelationshipRecord rel, long id, boolean isFirst);\n+\n+    abstract long compareNode(RelationshipRecord rel);\n \n     abstract RelationshipConnection otherSide();\n \n",
            "diff_size": 183
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}