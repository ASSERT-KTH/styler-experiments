{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1270",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1270/RecordLoad.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1270/RecordLoad.java\nindex 25c406944e6..7b3c6f39a74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1270/RecordLoad.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1270/RecordLoad.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import org.neo4j.io.pagecache.CursorException;\n@@ -25,7 +26,7 @@ import org.neo4j.kernel.impl.store.InvalidRecordException;\n \n /**\n  * Specifies what happens when loading records, based on inUse status.\n- *\n+ * <p>\n  * Roughly this is what happens for the different modes:\n  * <ul>\n  * <li>{@link RecordLoad#CHECK}: Load at least data to determine whether or not it's in use.\n@@ -36,70 +37,69 @@ import org.neo4j.kernel.impl.store.InvalidRecordException;\n  * otherwise throws {@link InvalidRecordException}.</li>\n  * <li>{@link RecordLoad#FORCE}: Loads record data into target regardless of whether or not record in use.\n  * Returns whether or not record is in use.\n- *\n  */\n public enum RecordLoad\n {\n-    NORMAL, CHECK, FORCE;\n+  NORMAL, CHECK, FORCE;\n \n-    /**\n-     * Checks whether or not a record should be fully loaded from {@link PageCursor}, based on inUse status.\n-     */\n-    public final boolean shouldLoad( boolean inUse )\n-    {\n-        // FORCE mode always return true so that record data will always be loaded, even if not in use.\n-        // The other modes only loads records that are in use.\n-        return this == FORCE | inUse;\n-    }\n+  /**\n+   * Checks whether or not a record should be fully loaded from {@link PageCursor}, based on inUse status.\n+   */\n+  public final boolean shouldLoad(boolean inUse)\n+  {\n+    // FORCE mode always return true so that record data will always be loaded, even if not in use.\n+    // The other modes only loads records that are in use.\n+    return this == FORCE | inUse;\n+  }\n \n-    /**\n-     * Verifies that a record's in use status is in line with the mode, might throw {@link InvalidRecordException}.\n-     */\n-    public final boolean verify( AbstractBaseRecord record )\n+  /**\n+   * Verifies that a record's in use status is in line with the mode, might throw {@link InvalidRecordException}.\n+   */\n+  public final boolean verify(AbstractBaseRecord record)\n+  {\n+    boolean inUse = record.inUse();\n+    if (this == NORMAL & !inUse)\n     {\n-        boolean inUse = record.inUse();\n-        if ( this == NORMAL & !inUse )\n-        {\n-            throw new InvalidRecordException( record + \" not in use\" );\n-        }\n-        return this == FORCE | inUse;\n+      throw new InvalidRecordException(record + \" not in use\");\n     }\n+    return this == FORCE | inUse;\n+  }\n \n-    /**\n-     * Depending on the mode, this will - if a cursor error has been raised on the given {@link PageCursor} - either\n-     * throw an {@link InvalidRecordException} with the underlying {@link CursorException}, or clear the error condition\n-     * on the cursor.\n-     * @param cursor The {@link PageCursor} to be checked for errors.\n-     */\n-    public final void clearOrThrowCursorError( PageCursor cursor )\n+  /**\n+   * Depending on the mode, this will - if a cursor error has been raised on the given {@link PageCursor} - either\n+   * throw an {@link InvalidRecordException} with the underlying {@link CursorException}, or clear the error condition\n+   * on the cursor.\n+   *\n+   * @param cursor The {@link PageCursor} to be checked for errors.\n+   */\n+  public final void clearOrThrowCursorError(PageCursor cursor)\n+  {\n+    if (this == NORMAL)\n     {\n-        if ( this == NORMAL )\n-        {\n-            try\n-            {\n-                cursor.checkAndClearCursorException();\n-            }\n-            catch ( CursorException e )\n-            {\n-                throw new InvalidRecordException( e );\n-            }\n-        }\n-        else\n-        {\n-            // The CHECK and FORCE modes do not bother with reporting decoding errors...\n-            // ... but they must still clear them, since the page cursor may be reused to read other records\n-            cursor.clearCursorException();\n-        }\n-    }\n-\n-    /**\n-     * Checks the given {@link PageCursor} to see if its out-of-bounds flag has been raised, and returns {@code true} if\n-     * that is the case <em>and</em> and out-of-bounds condition should be reported up the stack.\n-     * @param cursor The {@link PageCursor} to check the bounds flag for.\n-     * @return {@code true} if an out-of-bounds condition should be reported up the stack, {@code false} otherwise.\n-     */\n-    public boolean checkForOutOfBounds( PageCursor cursor )\n+      try\n+      {\n+        cursor.checkAndClearCursorException();\n+      } catch (CursorException e)\n+      {\n+        throw new InvalidRecordException(e);\n+      }\n+    } else\n     {\n-        return cursor.checkAndClearBoundsFlag() & this == NORMAL;\n+      // The CHECK and FORCE modes do not bother with reporting decoding errors...\n+      // ... but they must still clear them, since the page cursor may be reused to read other records\n+      cursor.clearCursorException();\n     }\n+  }\n+\n+  /**\n+   * Checks the given {@link PageCursor} to see if its out-of-bounds flag has been raised, and returns {@code true} if\n+   * that is the case <em>and</em> and out-of-bounds condition should be reported up the stack.\n+   *\n+   * @param cursor The {@link PageCursor} to check the bounds flag for.\n+   * @return {@code true} if an out-of-bounds condition should be reported up the stack, {@code false} otherwise.\n+   */\n+  public boolean checkForOutOfBounds(PageCursor cursor)\n+  {\n+    return cursor.checkAndClearBoundsFlag() & this == NORMAL;\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1270/RecordLoad.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1270/RecordLoad.java\nindex 25c406944e6..0220079407b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1270/RecordLoad.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1270/RecordLoad.java\n@@ -102,4 +102,4 @@ public enum RecordLoad\n     {\n         return cursor.checkAndClearBoundsFlag() & this == NORMAL;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}