{
    "project_name": "Activiti-Activiti",
    "violation_id": "374",
    "information": {
        "violations": [
            {
                "line": "55",
                "severity": "error",
                "message": "'METHOD_DEF' has more than 1 empty lines after.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "  }\n\n  @Override\n  public void eventCancelledByEventGateway(DelegateExecution execution) {\n    JobEntityManager jobEntityManager = Context.getCommandContext().getJobEntityManager();\n    List<JobEntity> jobEntities = jobEntityManager.findJobsByExecutionId(execution.getId());",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/374/IntermediateCatchTimerEventActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/374/IntermediateCatchTimerEventActivityBehavior.java\nindex bca8719fd99..0e2d604af49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/374/IntermediateCatchTimerEventActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/374/IntermediateCatchTimerEventActivityBehavior.java\n@@ -32,38 +32,38 @@ import org.activiti.engine.impl.persistence.entity.TimerJobEntity;\n \n public class IntermediateCatchTimerEventActivityBehavior extends IntermediateCatchEventActivityBehavior {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  protected TimerEventDefinition timerEventDefinition;\n+    protected TimerEventDefinition timerEventDefinition;\n \n-  public IntermediateCatchTimerEventActivityBehavior(TimerEventDefinition timerEventDefinition) {\n-    this.timerEventDefinition = timerEventDefinition;\n-  }\n+    public IntermediateCatchTimerEventActivityBehavior(TimerEventDefinition timerEventDefinition) {\n+        this.timerEventDefinition = timerEventDefinition;\n+    }\n \n-  public void execute(DelegateExecution execution) {\n-    JobManager jobManager = Context.getCommandContext().getJobManager();\n+    public void execute(DelegateExecution execution) {\n+        JobManager jobManager = Context.getCommandContext().getJobManager();\n \n-    // end date should be ignored for intermediate timer events.\n-    TimerJobEntity timerJob = jobManager.createTimerJob(timerEventDefinition, false, (ExecutionEntity) execution, TriggerTimerEventJobHandler.TYPE,\n-        TimerEventHandler.createConfiguration(execution.getCurrentActivityId(), null, timerEventDefinition.getCalendarName()));\n+        // end date should be ignored for intermediate timer events.\n+        TimerJobEntity timerJob = jobManager.createTimerJob(timerEventDefinition, false, (ExecutionEntity) execution, TriggerTimerEventJobHandler.TYPE,\n+                TimerEventHandler.createConfiguration(execution.getCurrentActivityId(), null, timerEventDefinition.getCalendarName()));\n \n-    if (timerJob != null) {\n-      jobManager.scheduleTimerJob(timerJob);\n+        if (timerJob != null) {\n+            jobManager.scheduleTimerJob(timerJob);\n+        }\n     }\n-  }\n \n-  @Override\n-  public void eventCancelledByEventGateway(DelegateExecution execution) {\n-    JobEntityManager jobEntityManager = Context.getCommandContext().getJobEntityManager();\n-    List<JobEntity> jobEntities = jobEntityManager.findJobsByExecutionId(execution.getId());\n+    @Override\n+    public void eventCancelledByEventGateway(DelegateExecution execution) {\n+        JobEntityManager jobEntityManager = Context.getCommandContext().getJobEntityManager();\n+        List<JobEntity> jobEntities = jobEntityManager.findJobsByExecutionId(execution.getId());\n \n-    for (JobEntity jobEntity : jobEntities) { // Should be only one\n-      jobEntityManager.delete(jobEntity);\n-    }\n+        for (JobEntity jobEntity : jobEntities) { // Should be only one\n+            jobEntityManager.delete(jobEntity);\n+        }\n \n-    Context.getCommandContext().getExecutionEntityManager().deleteExecutionAndRelatedData((ExecutionEntity) execution,\n-        DeleteReason.EVENT_BASED_GATEWAY_CANCEL);\n-  }\n+        Context.getCommandContext().getExecutionEntityManager().deleteExecutionAndRelatedData((ExecutionEntity) execution,\n+                DeleteReason.EVENT_BASED_GATEWAY_CANCEL);\n+    }\n \n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/374/IntermediateCatchTimerEventActivityBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/374/IntermediateCatchTimerEventActivityBehavior.java\nindex bca8719fd99..7815eb4646a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/374/IntermediateCatchTimerEventActivityBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/374/IntermediateCatchTimerEventActivityBehavior.java\n@@ -17,7 +17,6 @@\n package org.activiti.engine.impl.bpmn.behavior;\n \n import java.util.List;\n-\n import org.activiti.bpmn.model.TimerEventDefinition;\n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.history.DeleteReason;\n@@ -30,10 +29,10 @@ import org.activiti.engine.impl.persistence.entity.JobEntity;\n import org.activiti.engine.impl.persistence.entity.JobEntityManager;\n import org.activiti.engine.impl.persistence.entity.TimerJobEntity;\n \n+\n public class IntermediateCatchTimerEventActivityBehavior extends IntermediateCatchEventActivityBehavior {\n \n   private static final long serialVersionUID = 1L;\n-\n   protected TimerEventDefinition timerEventDefinition;\n \n   public IntermediateCatchTimerEventActivityBehavior(TimerEventDefinition timerEventDefinition) {\n@@ -44,9 +43,9 @@ public class IntermediateCatchTimerEventActivityBehavior extends IntermediateCat\n     JobManager jobManager = Context.getCommandContext().getJobManager();\n \n     // end date should be ignored for intermediate timer events.\n-    TimerJobEntity timerJob = jobManager.createTimerJob(timerEventDefinition, false, (ExecutionEntity) execution, TriggerTimerEventJobHandler.TYPE,\n-        TimerEventHandler.createConfiguration(execution.getCurrentActivityId(), null, timerEventDefinition.getCalendarName()));\n-\n+    TimerJobEntity timerJob = jobManager.createTimerJob(timerEventDefinition, false, (ExecutionEntity) execution, TriggerTimerEventJobHandler.TYPE, TimerEventHandler.createConfiguration(execution.getCurrentActivityId(),\n+                                                                                                                                                                                          null,\n+                                                                                                                                                                                          timerEventDefinition.getCalendarName()));\n     if (timerJob != null) {\n       jobManager.scheduleTimerJob(timerJob);\n     }\n@@ -56,14 +55,10 @@ public class IntermediateCatchTimerEventActivityBehavior extends IntermediateCat\n   public void eventCancelledByEventGateway(DelegateExecution execution) {\n     JobEntityManager jobEntityManager = Context.getCommandContext().getJobEntityManager();\n     List<JobEntity> jobEntities = jobEntityManager.findJobsByExecutionId(execution.getId());\n-\n     for (JobEntity jobEntity : jobEntities) { // Should be only one\n-      jobEntityManager.delete(jobEntity);\n+        jobEntityManager.delete(jobEntity);\n     }\n-\n     Context.getCommandContext().getExecutionEntityManager().deleteExecutionAndRelatedData((ExecutionEntity) execution,\n-        DeleteReason.EVENT_BASED_GATEWAY_CANCEL);\n+                                                                                          DeleteReason.EVENT_BASED_GATEWAY_CANCEL);\n   }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}