{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1147",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.entity;\n\nimport gov.hhs.fha.nhinc.orchestration.OrchestrationContext;\nimport org.slf4j.Logger;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\nindex 3af25bf0cdf..a45e82ca605 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.orchestration.OrchestrationContext;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\nindex 3af25bf0cdf..3df9f4770ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.orchestration.OrchestrationContext;\n@@ -31,21 +32,20 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author nnguyen\n  */\n // CHECKSTYLE:OFF\n public class OutboundAdminDistributionOrchestrationContextBuilder_g1\n-        extends OutboundAdminDistributionOrchestrationContextBuilder {\n-    // CHECKSTYLE:ON\n-    private static final Logger LOG = LoggerFactory\n-            .getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n+    extends OutboundAdminDistributionOrchestrationContextBuilder {\n+  // CHECKSTYLE:ON\n+  private static final Logger LOG = LoggerFactory\n+      .getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n \n-    @Override\n-    public OrchestrationContext build() {\n-        LOG.debug(\"begin build\");\n-        return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(),\n-                new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(),\n-                        getAssertionType()));\n-    }\n+  @Override\n+  public OrchestrationContext build() {\n+    LOG.debug(\"begin build\");\n+    return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(),\n+        new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(),\n+            getAssertionType()));\n+  }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\nindex 3af25bf0cdf..7d4d2df070f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.orchestration.OrchestrationContext;\n@@ -35,17 +36,14 @@ import org.slf4j.LoggerFactory;\n  * @author nnguyen\n  */\n // CHECKSTYLE:OFF\n-public class OutboundAdminDistributionOrchestrationContextBuilder_g1\n-        extends OutboundAdminDistributionOrchestrationContextBuilder {\n+public class OutboundAdminDistributionOrchestrationContextBuilder_g1 extends OutboundAdminDistributionOrchestrationContextBuilder {\n     // CHECKSTYLE:ON\n-    private static final Logger LOG = LoggerFactory\n-            .getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n \n-    @Override\n+@Override\n     public OrchestrationContext build() {\n         LOG.debug(\"begin build\");\n-        return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(),\n-                new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(),\n-                        getAssertionType()));\n+\n+return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(), new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(), getAssertionType()));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\nindex 3af25bf0cdf..b9fa285ae76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n@@ -35,17 +35,19 @@ import org.slf4j.LoggerFactory;\n  * @author nnguyen\n  */\n // CHECKSTYLE:OFF\n-public class OutboundAdminDistributionOrchestrationContextBuilder_g1\n-        extends OutboundAdminDistributionOrchestrationContextBuilder {\n+\n+\n+public class OutboundAdminDistributionOrchestrationContextBuilder_g1 extends\n+    OutboundAdminDistributionOrchestrationContextBuilder {\n     // CHECKSTYLE:ON\n-    private static final Logger LOG = LoggerFactory\n-            .getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(OutboundAdminDistributionOrchestrationContextBuilder_g1.class);\n+\n \n     @Override\n     public OrchestrationContext build() {\n         LOG.debug(\"begin build\");\n-        return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(),\n-                new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(),\n-                        getAssertionType()));\n+        return new OrchestrationContext(new OutboundAdminDistributionStrategyImpl_g1(), new OutboundAdminDistributionOrchestratable(getNhinDelegate(), getRequest(), getTargetSystem(), getAssertionType()));\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\nindex 3af25bf0cdf..a45e82ca605 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1147/OutboundAdminDistributionOrchestrationContextBuilder_g1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity;\n \n import gov.hhs.fha.nhinc.orchestration.OrchestrationContext;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}