{
    "project_name": "benetech-ServiceNet",
    "violation_id": "8",
    "information": {
        "violations": [
            {
                "line": "289",
                "severity": "error",
                "message": "Line is longer than 125 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                    log.error(matchingException.getMessage(), matchingException);\n                }\n                organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n            }\n        } catch (SQLException sqlEx) {\n            log.error(sqlEx.getMessage(), sqlEx);",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/8/OrganizationMatchServiceImpl.java\nindex 0554fa276d1..0472564c60a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/8/OrganizationMatchServiceImpl.java\n@@ -286,7 +286,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n                 } catch (SQLException matchingException) {\n                     log.error(matchingException.getMessage(), matchingException);\n                 }\n-                organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n+            organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n             }\n         } catch (SQLException sqlEx) {\n             log.error(sqlEx.getMessage(), sqlEx);\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/8/OrganizationMatchServiceImpl.java\nindex 0554fa276d1..333ececd43d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/8/OrganizationMatchServiceImpl.java\n@@ -123,7 +123,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n     public OrganizationMatch saveOrUpdate(OrganizationMatch organizationMatch) {\n         List<OrganizationMatch> existingMatches =\n             organizationMatchRepository.findByOrganizationRecordAndPartnerVersion(\n-            organizationMatch.getOrganizationRecord(), organizationMatch.getPartnerVersion());\n+                organizationMatch.getOrganizationRecord(), organizationMatch.getPartnerVersion());\n         if (existingMatches.size() > 0) {\n             Iterator<OrganizationMatch> matchIterator = existingMatches.iterator();\n             OrganizationMatch existingMatch = matchIterator.next();\n@@ -286,7 +286,8 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n                 } catch (SQLException matchingException) {\n                     log.error(matchingException.getMessage(), matchingException);\n                 }\n-                organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n+                organizationOptional =\n+                    organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n             }\n         } catch (SQLException sqlEx) {\n             log.error(sqlEx.getMessage(), sqlEx);\n@@ -357,7 +358,9 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n \n             userService.getCurrentUserProfileOptional().ifPresentOrElse(\n                 match::setDismissedBy,\n-                () -> { throw new IllegalStateException(\"No current user found\"); }\n+                () -> {\n+                    throw new IllegalStateException(\"No current user found\");\n+                }\n             );\n \n             organizationMatchRepository.save(match);\n@@ -388,7 +391,9 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n \n             userService.getCurrentUserProfileOptional().ifPresentOrElse(\n                 match::setHiddenBy,\n-                () -> { throw new IllegalStateException(\"No current user found\"); }\n+                () -> {\n+                    throw new IllegalStateException(\"No current user found\");\n+                }\n             );\n \n             organizationMatchRepository.save(match);\n@@ -458,7 +463,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n     }\n \n     private List<OrganizationMatch> findAndPersistMatches(Organization organization,\n-        List<Organization> partnerOrganizations) {\n+                                                          List<Organization> partnerOrganizations) {\n         List<OrganizationMatch> matches = new LinkedList<>();\n         long startTime = System.currentTimeMillis();\n         //TODO: Remove time counting logic (#264)\n@@ -496,7 +501,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n     }\n \n     public List<OrganizationMatch> createOrganizationMatches(Organization organization, Organization partner,\n-        List<MatchSimilarityDTO> similarityDTOS) {\n+                                                             List<MatchSimilarityDTO> similarityDTOS) {\n         List<OrganizationMatch> matches = new LinkedList<>();\n \n         BigDecimal similaritySum = similarityDTOS.stream()\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "288",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/8/OrganizationMatchServiceImpl.java\nindex 0554fa276d1..381a2fc39b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/8/OrganizationMatchServiceImpl.java\n@@ -122,8 +122,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n \n     public OrganizationMatch saveOrUpdate(OrganizationMatch organizationMatch) {\n         List<OrganizationMatch> existingMatches =\n-            organizationMatchRepository.findByOrganizationRecordAndPartnerVersion(\n-            organizationMatch.getOrganizationRecord(), organizationMatch.getPartnerVersion());\n+            organizationMatchRepository.findByOrganizationRecordAndPartnerVersion(organizationMatch.getOrganizationRecord(), organizationMatch.getPartnerVersion());\n         if (existingMatches.size() > 0) {\n             Iterator<OrganizationMatch> matchIterator = existingMatches.iterator();\n             OrganizationMatch existingMatch = matchIterator.next();\n@@ -304,8 +303,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n     public void createOrUpdateOrganizationMatchesSynchronously(UUID organizationId, Long total) {\n         Organization organization = organizationService.findOneWithEagerAssociations(organizationId);\n         if (total != null) {\n-            log.info(organization.getName() + \": Updating organization matches, \" + total\n-                + \" remaining.\");\n+            log.info(organization.getName() + \": Updating organization matches, \" + total + \" remaining.\");\n         } else {\n             log.info(organization.getName() + \": Updating organization matches\");\n         }\n@@ -539,4 +537,4 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n             .map(MatchSimilarityDTO::getSimilarity)\n             .reduce(BigDecimal.ZERO, BigDecimal::add).compareTo(orgMatchThreshold) >= 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "289",
                    "column": "33",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/8/OrganizationMatchServiceImpl.java\nindex 0554fa276d1..816e82978b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/8/OrganizationMatchServiceImpl.java\n@@ -286,7 +286,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n                 } catch (SQLException matchingException) {\n                     log.error(matchingException.getMessage(), matchingException);\n                 }\n-                organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n+            organizationOptional= organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n             }\n         } catch (SQLException sqlEx) {\n             log.error(sqlEx.getMessage(), sqlEx);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/8/OrganizationMatchServiceImpl.java\nindex 0554fa276d1..0472564c60a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/8/OrganizationMatchServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/8/OrganizationMatchServiceImpl.java\n@@ -286,7 +286,7 @@ public class OrganizationMatchServiceImpl implements OrganizationMatchService {\n                 } catch (SQLException matchingException) {\n                     log.error(matchingException.getMessage(), matchingException);\n                 }\n-                organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n+            organizationOptional = organizationService.findFirstThatNeedsMatchingExcept(organizationOptional.get().getId());\n             }\n         } catch (SQLException sqlEx) {\n             log.error(sqlEx.getMessage(), sqlEx);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}