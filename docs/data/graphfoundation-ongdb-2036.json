{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2036",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2036/RelationshipTypeTypeCaster.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2036/RelationshipTypeTypeCaster.java\nindex 31d875e6e48..392b8133064 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2036/RelationshipTypeTypeCaster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2036/RelationshipTypeTypeCaster.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import org.neo4j.graphdb.RelationshipType;\n@@ -25,30 +26,30 @@ import org.neo4j.server.rest.repr.BadInputException;\n \n class RelationshipTypeTypeCaster extends TypeCaster\n {\n-    @Override\n-    Object get( GraphDatabaseAPI graphDb, ParameterList parameters, String name ) throws BadInputException\n+  @Override\n+  Object get(GraphDatabaseAPI graphDb, ParameterList parameters, String name) throws BadInputException\n+  {\n+    String typeName = parameters.getString(name);\n+    if (typeName == null)\n     {\n-        String typeName = parameters.getString( name );\n-        if ( typeName == null )\n-        {\n-            return null;\n-        }\n-        return RelationshipType.withName( typeName );\n+      return null;\n     }\n+    return RelationshipType.withName(typeName);\n+  }\n \n-    @Override\n-    Object[] getList( GraphDatabaseAPI graphDb, ParameterList parameters, String name ) throws BadInputException\n+  @Override\n+  Object[] getList(GraphDatabaseAPI graphDb, ParameterList parameters, String name) throws BadInputException\n+  {\n+    String[] strings = parameters.getStringList(name);\n+    if (strings == null)\n+    {\n+      return null;\n+    }\n+    RelationshipType[] result = new RelationshipType[strings.length];\n+    for (int i = 0; i < result.length; i++)\n     {\n-        String[] strings = parameters.getStringList( name );\n-        if ( strings == null )\n-        {\n-            return null;\n-        }\n-        RelationshipType[] result = new RelationshipType[strings.length];\n-        for ( int i = 0; i < result.length; i++ )\n-        {\n-            result[i] = RelationshipType.withName( strings[i] );\n-        }\n-        return result;\n+      result[i] = RelationshipType.withName(strings[i]);\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2036/RelationshipTypeTypeCaster.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2036/RelationshipTypeTypeCaster.java\nindex 31d875e6e48..7927695022d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2036/RelationshipTypeTypeCaster.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2036/RelationshipTypeTypeCaster.java\n@@ -33,7 +33,8 @@ class RelationshipTypeTypeCaster extends TypeCaster\n         {\n             return null;\n         }\n-        return RelationshipType.withName( typeName );\n+\n+return RelationshipType.withName( typeName );\n     }\n \n     @Override\n@@ -44,11 +45,13 @@ class RelationshipTypeTypeCaster extends TypeCaster\n         {\n             return null;\n         }\n-        RelationshipType[] result = new RelationshipType[strings.length];\n+\n+RelationshipType[] result = new RelationshipType[strings.length];\n         for ( int i = 0; i < result.length; i++ )\n         {\n             result[i] = RelationshipType.withName( strings[i] );\n         }\n-        return result;\n+\n+return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}