{
    "project_name": "opencb-opencga",
    "violation_id": "293",
    "information": {
        "violations": [
            {
                "line": "22",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                                     List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n                                     CustomStatusParams status, SampleInternal internal) {\n        super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n        this.internal = internal;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/293/SamplePrivateUpdateParams.java\nindex d7a4dc23ba4..664e9e5892d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/293/SamplePrivateUpdateParams.java\n@@ -19,7 +19,7 @@ public class SamplePrivateUpdateParams extends SampleUpdateParams {\n                                      SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n                                      List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n                                      CustomStatusParams status, SampleInternal internal) {\n-        super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n+                                         super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n         this.internal = internal;\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/293/SamplePrivateUpdateParams.java\nindex d7a4dc23ba4..561bf22a06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/293/SamplePrivateUpdateParams.java\n@@ -10,33 +10,33 @@ import java.util.Map;\n \n public class SamplePrivateUpdateParams extends SampleUpdateParams {\n \n-    private SampleInternal internal;\n-\n-    public SamplePrivateUpdateParams() {\n-    }\n-\n-    public SamplePrivateUpdateParams(String id, String description, String individualId, SampleProcessing processing,\n-                                     SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n-                                     List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n-                                     CustomStatusParams status, SampleInternal internal) {\n-        super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n-        this.internal = internal;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"SamplePrivateUpdateParams{\");\n-        sb.append(\"internal=\").append(internal);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    public SampleInternal getInternal() {\n-        return internal;\n-    }\n-\n-    public SamplePrivateUpdateParams setInternal(SampleInternal internal) {\n-        this.internal = internal;\n-        return this;\n-    }\n+  private SampleInternal internal;\n+\n+  public SamplePrivateUpdateParams() {\n+  }\n+\n+  public SamplePrivateUpdateParams(String id, String description, String individualId, SampleProcessing processing,\n+                                   SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n+                                   List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n+                                   CustomStatusParams status, SampleInternal internal) {\n+    super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n+    this.internal = internal;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"SamplePrivateUpdateParams{\");\n+    sb.append(\"internal=\").append(internal);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  public SampleInternal getInternal() {\n+    return internal;\n+  }\n+\n+  public SamplePrivateUpdateParams setInternal(SampleInternal internal) {\n+    this.internal = internal;\n+    return this;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/293/SamplePrivateUpdateParams.java\nindex d7a4dc23ba4..7a4b7ac1ebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/293/SamplePrivateUpdateParams.java\n@@ -17,8 +17,7 @@ public class SamplePrivateUpdateParams extends SampleUpdateParams {\n \n     public SamplePrivateUpdateParams(String id, String description, String individualId, SampleProcessing processing,\n                                      SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n-                                     List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n-                                     CustomStatusParams status, SampleInternal internal) {\n+                                     List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes, CustomStatusParams status, SampleInternal internal) {\n         super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n         this.internal = internal;\n     }\n@@ -39,4 +38,4 @@ public class SamplePrivateUpdateParams extends SampleUpdateParams {\n         this.internal = internal;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "column": "77",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "23",
                    "column": "91",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "23",
                    "column": "102",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "23",
                    "column": "137",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "23",
                    "column": "139",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "23",
                    "column": "153",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "23",
                    "column": "174",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/293/SamplePrivateUpdateParams.java\nindex d7a4dc23ba4..899a2c225e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/293/SamplePrivateUpdateParams.java\n@@ -19,8 +19,9 @@ public class SamplePrivateUpdateParams extends SampleUpdateParams {\n                                      SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n                                      List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n                                      CustomStatusParams status, SampleInternal internal) {\n-        super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n-        this.internal = internal;\n+\n+                                         super(id, description, individualId , processing,collection,qualityControl, somatic, phenotypes ,annotationSets , attributes, status );\n+        this .internal = internal;\n     }\n \n     @Override\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/293/SamplePrivateUpdateParams.java\nindex d7a4dc23ba4..664e9e5892d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/293/SamplePrivateUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/293/SamplePrivateUpdateParams.java\n@@ -19,7 +19,7 @@ public class SamplePrivateUpdateParams extends SampleUpdateParams {\n                                      SampleCollection collection, SampleQualityControl qualityControl, Boolean somatic,\n                                      List<Phenotype> phenotypes, List<AnnotationSet> annotationSets, Map<String, Object> attributes,\n                                      CustomStatusParams status, SampleInternal internal) {\n-        super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n+                                         super(id, description, individualId, processing, collection, qualityControl, somatic, phenotypes, annotationSets, attributes, status);\n         this.internal = internal;\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}