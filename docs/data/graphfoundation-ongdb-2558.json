{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2558",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2558/CommittedRecords.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2558/CommittedRecords.java\nindex 41ea932434d..022f1766e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2558/CommittedRecords.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2558/CommittedRecords.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.txlog;\n \n import java.util.HashMap;\n@@ -37,30 +38,30 @@ import org.neo4j.tools.txlog.checktypes.CheckType;\n  */\n class CommittedRecords<R extends AbstractBaseRecord>\n {\n-    private final CheckType<?,R> checkType;\n-    private final Map<Long,RecordInfo<R>> recordsById;\n+  private final CheckType<?, R> checkType;\n+  private final Map<Long, RecordInfo<R>> recordsById;\n \n-    CommittedRecords( CheckType<?,R> check )\n-    {\n-        this.checkType = check;\n-        this.recordsById = new HashMap<>();\n-    }\n+  CommittedRecords(CheckType<?, R> check)\n+  {\n+    this.checkType = check;\n+    this.recordsById = new HashMap<>();\n+  }\n \n-    public void put( R record, long logVersion, long txId )\n-    {\n-        recordsById.put( record.getId(), new RecordInfo<>( record, logVersion, txId ) );\n-    }\n+  public void put(R record, long logVersion, long txId)\n+  {\n+    recordsById.put(record.getId(), new RecordInfo<>(record, logVersion, txId));\n+  }\n \n-    public RecordInfo<R> get( long id )\n-    {\n-        return recordsById.get( id );\n-    }\n+  public RecordInfo<R> get(long id)\n+  {\n+    return recordsById.get(id);\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"CommittedRecords{\" +\n-               \"command=\" + checkType.name() +\n-               \", recordsById.size=\" + recordsById.size() + \"}\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"CommittedRecords{\" +\n+        \"command=\" + checkType.name() +\n+        \", recordsById.size=\" + recordsById.size() + \"}\";\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2558/CommittedRecords.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2558/CommittedRecords.java\nindex 41ea932434d..d7cc33a73da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2558/CommittedRecords.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2558/CommittedRecords.java\n@@ -59,8 +59,6 @@ class CommittedRecords<R extends AbstractBaseRecord>\n     @Override\n     public String toString()\n     {\n-        return \"CommittedRecords{\" +\n-               \"command=\" + checkType.name() +\n-               \", recordsById.size=\" + recordsById.size() + \"}\";\n+        return \"CommittedRecords{\" + \"command=\" + checkType.name() + \", recordsById.size=\" + recordsById.size() + \"}\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}