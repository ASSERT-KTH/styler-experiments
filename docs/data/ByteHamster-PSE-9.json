{
    "project_name": "ByteHamster-PSE",
    "violation_id": "9",
    "information": {
        "violations": [
            {
                "line": "14",
                "column": "39",
                "severity": "warning",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "     * @param reason Explains why the check failed\n     */\n    public InvalidPercentageException (String tried, String reason) {\n        throw new RuntimeException(\"Not implemented!\");\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ByteHamster-PSE/styler/05_predictions/final/files-repaired/9/InvalidPercentageException.java\nindex 1928303d433..eb46ee55044 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ByteHamster-PSE/styler/05_predictions/final/files-repaired/9/InvalidPercentageException.java\n@@ -11,7 +11,7 @@ public class InvalidPercentageException extends java.lang.IllegalArgumentExcepti\n      * @param tried The string that was tried to be parsed\n      * @param reason Explains why the check failed\n      */\n-    public InvalidPercentageException (String tried, String reason) {\n+    public InvalidPercentageException(String tried, String reason) {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/checkstyle_idea/9/InvalidPercentageException.java\nindex 1928303d433..9e1d255d0bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/checkstyle_idea/9/InvalidPercentageException.java\n@@ -8,10 +8,11 @@ public class InvalidPercentageException extends java.lang.IllegalArgumentExcepti\n \n     /**\n      * Creates a new InvalidPercentageException\n-     * @param tried The string that was tried to be parsed\n+     *\n+     * @param tried  The string that was tried to be parsed\n      * @param reason Explains why the check failed\n      */\n-    public InvalidPercentageException (String tried, String reason) {\n+    public InvalidPercentageException(String tried, String reason) {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "8",
                    "column": "128",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "17",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "column": "34",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "17",
                    "column": "65",
                    "severity": "warning",
                    "message": "'{' at column 65 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "17",
                    "column": "93",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "17",
                    "column": "114",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "17",
                    "column": "115",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/codebuff/9/InvalidPercentageException.java\nindex 1928303d433..6cb643019a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/codebuff/9/InvalidPercentageException.java\n@@ -3,15 +3,16 @@ package edu.kit.pse.osip.core.utils.formatting;\n /**\n  * This exception signifies that a percentage is invalid.\n  */\n-public class InvalidPercentageException extends java.lang.IllegalArgumentException {\n-    private static final long serialVersionUID = 6133492534710708929L;\n+\n+\n+public class InvalidPercentageException extends java.lang.IllegalArgumentException { private static final long serialVersionUID= 6133492534710708929L;\n \n     /**\n      * Creates a new InvalidPercentageException\n      * @param tried The string that was tried to be parsed\n      * @param reason Explains why the check failed\n      */\n-    public InvalidPercentageException (String tried, String reason) {\n-        throw new RuntimeException(\"Not implemented!\");\n-    }\n-}\n+\n+\n+public InvalidPercentageException( String tried, String reason) { throw new RuntimeException( \"Not implemented!\");}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/random/files-repaired/9/InvalidPercentageException.java\nindex 1928303d433..eb46ee55044 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/random/files-repaired/9/InvalidPercentageException.java\n@@ -11,7 +11,7 @@ public class InvalidPercentageException extends java.lang.IllegalArgumentExcepti\n      * @param tried The string that was tried to be parsed\n      * @param reason Explains why the check failed\n      */\n-    public InvalidPercentageException (String tried, String reason) {\n+    public InvalidPercentageException(String tried, String reason) {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/three_grams/files-repaired/9/InvalidPercentageException.java\nindex 1928303d433..43afcf22a67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/9/InvalidPercentageException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/three_grams/files-repaired/9/InvalidPercentageException.java\n@@ -11,7 +11,8 @@ public class InvalidPercentageException extends java.lang.IllegalArgumentExcepti\n      * @param tried The string that was tried to be parsed\n      * @param reason Explains why the check failed\n      */\n-    public InvalidPercentageException (String tried, String reason) {\n+    public InvalidPercentageException(\n+    String tried, String reason) {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}