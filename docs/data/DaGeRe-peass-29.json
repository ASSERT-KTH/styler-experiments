{
    "project_name": "DaGeRe-peass",
    "violation_id": "29",
    "information": {
        "violations": [
            {
                "line": "21",
                "column": "4",
                "severity": "error",
                "message": "';' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": " */\npublic enum ModuleInfoEditor {\n   ;\n\n   public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n      CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/DaGeRe-peass/styler/05_predictions/final/files-repaired/29/ModuleInfoEditor.java\nindex 96265d3616b..7a06f6f7342 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/DaGeRe-peass/styler/05_predictions/final/files-repaired/29/ModuleInfoEditor.java\n@@ -18,7 +18,8 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n  *\n  */\n public enum ModuleInfoEditor {\n-   ;\n+\n+;\n \n    public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n       CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "20",
                    "column": "3",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/checkstyle_idea/29/ModuleInfoEditor.java\nindex 96265d3616b..a15e47ec256 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/checkstyle_idea/29/ModuleInfoEditor.java\n@@ -13,25 +13,24 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n \n /**\n  * If a module-info exists, kieker needs to be added as required, since its used directly in the source code.\n- * \n- * @author DaGeRe\n  *\n+ * @author DaGeRe\n  */\n public enum ModuleInfoEditor {\n-   ;\n+  ;\n \n-   public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n-      CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n-      ModuleDeclaration module = unit.getModule().get();\n+  public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n+    CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n+    ModuleDeclaration module = unit.getModule().get();\n \n-      addRequiresKieker(module);\n+    addRequiresKieker(module);\n \n-      Files.write(moduleInfoFile.toPath(), unit.toString().getBytes(StandardCharsets.UTF_8));\n-   }\n+    Files.write(moduleInfoFile.toPath(), unit.toString().getBytes(StandardCharsets.UTF_8));\n+  }\n \n-   private static void addRequiresKieker(final ModuleDeclaration module) {\n-      ModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n-      kiekerRequirement.setName(\"kieker\");\n-      module.getDirectives().add(kiekerRequirement);\n-   }\n+  private static void addRequiresKieker(final ModuleDeclaration module) {\n+    ModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n+    kiekerRequirement.setName(\"kieker\");\n+    module.getDirectives().add(kiekerRequirement);\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "20",
                    "column": "30",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/naturalize/29/ModuleInfoEditor.java\nindex 96265d3616b..633f4a60301 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/naturalize/29/ModuleInfoEditor.java\n@@ -17,21 +17,20 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n  * @author DaGeRe\n  *\n  */\n-public enum ModuleInfoEditor {\n-   ;\n+public enum ModuleInfoEditor {;\n \n    public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n-      CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n+\tCompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n       ModuleDeclaration module = unit.getModule().get();\n \n       addRequiresKieker(module);\n \n       Files.write(moduleInfoFile.toPath(), unit.toString().getBytes(StandardCharsets.UTF_8));\n-   }\n+\t}\n \n    private static void addRequiresKieker(final ModuleDeclaration module) {\n-      ModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n+\tModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n       kiekerRequirement.setName(\"kieker\");\n       module.getDirectives().add(kiekerRequirement);\n-   }\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "21",
                    "column": "2",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/codebuff/29/ModuleInfoEditor.java\nindex 96265d3616b..53d4e45af73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/codebuff/29/ModuleInfoEditor.java\n@@ -4,11 +4,9 @@ import java.io.File;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n-\n import com.github.javaparser.ast.CompilationUnit;\n import com.github.javaparser.ast.modules.ModuleDeclaration;\n import com.github.javaparser.ast.modules.ModuleRequiresDirective;\n-\n import de.peass.dependency.changesreading.JavaParserProvider;\n \n /**\n@@ -17,21 +15,21 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n  * @author DaGeRe\n  *\n  */\n-public enum ModuleInfoEditor {\n-   ;\n \n-   public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n-      CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n-      ModuleDeclaration module = unit.getModule().get();\n \n-      addRequiresKieker(module);\n-\n-      Files.write(moduleInfoFile.toPath(), unit.toString().getBytes(StandardCharsets.UTF_8));\n-   }\n-\n-   private static void addRequiresKieker(final ModuleDeclaration module) {\n-      ModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n-      kiekerRequirement.setName(\"kieker\");\n-      module.getDirectives().add(kiekerRequirement);\n-   }\n-}\n+public enum ModuleInfoEditor {\n+ ;\n+\n+ public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n+  CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n+  ModuleDeclaration module = unit.getModule().get();\n+  addRequiresKieker(module);\n+  Files.write(moduleInfoFile.toPath(), unit.toString().getBytes(StandardCharsets.UTF_8));\n+ }\n+\n+ private static void addRequiresKieker(final ModuleDeclaration module) {\n+  ModuleRequiresDirective kiekerRequirement = new ModuleRequiresDirective();\n+  kiekerRequirement.setName(\"kieker\");\n+  module.getDirectives().add(kiekerRequirement);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "20",
                    "column": "30",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/random/files-repaired/29/ModuleInfoEditor.java\nindex 96265d3616b..c28ecf26b5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/random/files-repaired/29/ModuleInfoEditor.java\n@@ -17,10 +17,9 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n  * @author DaGeRe\n  *\n  */\n-public enum ModuleInfoEditor {\n-   ;\n+public enum ModuleInfoEditor {;\n \n-   public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n+public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n       CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n       ModuleDeclaration module = unit.getModule().get();\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "column": "1",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/three_grams/files-repaired/29/ModuleInfoEditor.java\nindex 96265d3616b..7a06f6f7342 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/29/ModuleInfoEditor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/three_grams/files-repaired/29/ModuleInfoEditor.java\n@@ -18,7 +18,8 @@ import de.peass.dependency.changesreading.JavaParserProvider;\n  *\n  */\n public enum ModuleInfoEditor {\n-   ;\n+\n+;\n \n    public static void addKiekerRequires(final File moduleInfoFile) throws IOException {\n       CompilationUnit unit = JavaParserProvider.parse(moduleInfoFile);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}