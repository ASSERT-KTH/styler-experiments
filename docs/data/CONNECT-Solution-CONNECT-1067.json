{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1067",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..771abb52c95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..e0dea574feb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -36,24 +37,23 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author svalluripalli\n  */\n public class AdapterComponentDocRepositoryProxyNoOpImpl implements AdapterComponentDocRepositoryProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocRepositoryProxyNoOpImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocRepositoryProxyNoOpImpl.class);\n \n-    @Override\n-    public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n-        LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n-        return new RetrieveDocumentSetResponseType();\n-    }\n+  @Override\n+  public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request,\n+                                                          AssertionType assertion) {\n+    LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n+    return new RetrieveDocumentSetResponseType();\n+  }\n \n-    @Override\n-    public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body,\n-            AssertionType assertion) {\n-        LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n-        return new RegistryResponseType();\n-    }\n+  @Override\n+  public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body,\n+                                                            AssertionType assertion) {\n+    LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n+    return new RegistryResponseType();\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..bf75ca9a181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -44,16 +45,16 @@ public class AdapterComponentDocRepositoryProxyNoOpImpl implements AdapterCompon\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocRepositoryProxyNoOpImpl.class);\n \n     @Override\n-    public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n+    public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n-        return new RetrieveDocumentSetResponseType();\n+\n+return new RetrieveDocumentSetResponseType();\n     }\n \n     @Override\n-    public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body,\n-            AssertionType assertion) {\n+    public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n-        return new RegistryResponseType();\n+\n+return new RegistryResponseType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..a8407a69722 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -31,7 +31,6 @@ import ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;\n import ihe.iti.xds_b._2007.RetrieveDocumentSetRequestType;\n import ihe.iti.xds_b._2007.RetrieveDocumentSetResponseType;\n import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryResponseType;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -39,21 +38,24 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author svalluripalli\n  */\n+\n+\n public class AdapterComponentDocRepositoryProxyNoOpImpl implements AdapterComponentDocRepositoryProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocRepositoryProxyNoOpImpl.class);\n \n+\n     @Override\n-    public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n+    public RetrieveDocumentSetResponseType retrieveDocument(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n         return new RetrieveDocumentSetResponseType();\n     }\n \n+\n     @Override\n-    public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body,\n-            AssertionType assertion) {\n+    public RegistryResponseType provideAndRegisterDocumentSet(ProvideAndRegisterDocumentSetRequestType body, AssertionType assertion) {\n         LOG.debug(\"Using NoOp Implementation for Adapter Component Doc Repository Service\");\n         return new RegistryResponseType();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..771abb52c95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\nindex 557a71f8251..771abb52c95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1067/AdapterComponentDocRepositoryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docrepository.adapter.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}