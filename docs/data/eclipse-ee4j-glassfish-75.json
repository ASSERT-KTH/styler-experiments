{
    "project_name": "eclipse-ee4j-glassfish",
    "violation_id": "75",
    "information": {
        "violations": [
            {
                "line": "66",
                "column": "40",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\n        FileListerRelative lister = new FileListerRelative(backupFileDir);\n        lister.keepEmptyDirectories(); // we want to restore any empty directories too!\n        String[] files = lister.getFiles();\n\n        LoggerHelper.fine(\"Writing \" + zipName);",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/75/ZipStorage.java\nindex f3fb117f58e..71f86a34fc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/75/ZipStorage.java\n@@ -63,7 +63,10 @@ class ZipStorage {\n         String domainDirName = FileUtils.safeGetCanonicalPath(backupFileDir);\n \n         FileListerRelative lister = new FileListerRelative(backupFileDir);\n-        lister.keepEmptyDirectories(); // we want to restore any empty directories too!\n+        lister.keepEmptyDirectories();\n+\n+        // we want to restore any empty directories too!\n+\n         String[] files = lister.getFiles();\n \n         LoggerHelper.fine(\"Writing \" + zipName);\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "69",
                    "column": "40",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/75/ZipStorage.java\nindex f3fb117f58e..153a7d529e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/75/ZipStorage.java\n@@ -29,6 +29,7 @@ import java.io.*;\n \n /**\n  * This class implements storing backups as zip files.\n+ *\n  * @author Byron Nevins\n  */\n class ZipStorage {\n@@ -39,22 +40,24 @@ class ZipStorage {\n      */\n     ZipStorage(BackupRequest req) throws BackupException {\n \n-        if(req == null)\n+        if (req == null) {\n             throw new BackupException(\"backup-res.NoBackupRequest\",\n                 getClass().getName() + \".ctor\");\n+        }\n \n         request = req;\n     }\n \n     /**\n      * Backups the files to a zip file.\n+     *\n      * @throws BackupException if there were any errors writing the file.\n      */\n     void store() throws BackupException {\n \n         File backupFileDir = null;\n         if (request.configOnly) {\n-            backupFileDir = new File(request.domainDir, Constants.CONFIG_DIR) ;\n+            backupFileDir = new File(request.domainDir, Constants.CONFIG_DIR);\n         } else {\n             backupFileDir = request.domainDir;\n         }\n@@ -72,19 +75,19 @@ class ZipStorage {\n \n             ZipWriter writer = new ZipWriter(zipName, domainDirName, files);\n \n-            if(request.excludeDirs != null && request.excludeDirs.length > 0)\n+            if (request.excludeDirs != null && request.excludeDirs.length > 0) {\n                 writer.excludeDirs(request.excludeDirs);\n+            }\n \n             writer.safeWrite();\n-        }\n-        catch(ZipFileException zfe)  {\n+        } catch (ZipFileException zfe) {\n             throw new BackupException(\"backup-res.ZipBackupError\", zfe, zipName);\n         }\n     }\n \n-    void write() throws BackupException  {\n+    void write() throws BackupException {\n \n     }\n \n-    private    BackupRequest request;\n+    private BackupRequest request;\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/75/ZipStorage.java\nindex f3fb117f58e..0c5058868e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/75/ZipStorage.java\n@@ -54,7 +54,7 @@ class ZipStorage {\n \n         File backupFileDir = null;\n         if (request.configOnly) {\n-            backupFileDir = new File(request.domainDir, Constants.CONFIG_DIR) ;\n+            backupFileDir = new File(request.domainDir, Constants.CONFIG_DIR);\n         } else {\n             backupFileDir = request.domainDir;\n         }\n@@ -63,7 +63,9 @@ class ZipStorage {\n         String domainDirName = FileUtils.safeGetCanonicalPath(backupFileDir);\n \n         FileListerRelative lister = new FileListerRelative(backupFileDir);\n-        lister.keepEmptyDirectories(); // we want to restore any empty directories too!\n+        lister.keepEmptyDirectories();\n+\n+// we want to restore any empty directories too!\n         String[] files = lister.getFiles();\n \n         LoggerHelper.fine(\"Writing \" + zipName);\n@@ -77,7 +79,7 @@ class ZipStorage {\n \n             writer.safeWrite();\n         }\n-        catch(ZipFileException zfe)  {\n+        catch(ZipFileException zfe) {\n             throw new BackupException(\"backup-res.ZipBackupError\", zfe, zipName);\n         }\n     }\n@@ -86,5 +88,5 @@ class ZipStorage {\n \n     }\n \n-    private    BackupRequest request;\n-}\n+    private BackupRequest    request;\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "69",
                    "column": "10",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/75/ZipStorage.java\nindex f3fb117f58e..47ed56bc3a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/75/ZipStorage.java\n@@ -63,8 +63,10 @@ class ZipStorage {\n         String domainDirName = FileUtils.safeGetCanonicalPath(backupFileDir);\n \n         FileListerRelative lister = new FileListerRelative(backupFileDir);\n-        lister.keepEmptyDirectories(); // we want to restore any empty directories too!\n-        String[] files = lister.getFiles();\n+        lister.keepEmptyDirectories();\n+            // we want to restore any empty directories too! String[] files = lister.getFiles();\n+\n+         String[] files = lister.getFiles();\n \n         LoggerHelper.fine(\"Writing \" + zipName);\n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/75/ZipStorage.java\nindex f3fb117f58e..71f86a34fc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/75/ZipStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/75/ZipStorage.java\n@@ -63,7 +63,10 @@ class ZipStorage {\n         String domainDirName = FileUtils.safeGetCanonicalPath(backupFileDir);\n \n         FileListerRelative lister = new FileListerRelative(backupFileDir);\n-        lister.keepEmptyDirectories(); // we want to restore any empty directories too!\n+        lister.keepEmptyDirectories();\n+\n+        // we want to restore any empty directories too!\n+\n         String[] files = lister.getFiles();\n \n         LoggerHelper.fine(\"Writing \" + zipName);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "codebuff",
        "styler_random"
    ]
}