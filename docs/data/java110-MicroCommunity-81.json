{
    "project_name": "java110-MicroCommunity",
    "violation_id": "81",
    "information": {
        "violations": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 214).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n\n        if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n            return inspectionRoutes;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..375490b4207 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -42,7 +42,7 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n             inspectionRouteDto.setPage((page - 1) * inspectionRouteDto.getRow());\n         }\n \n-        List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n+        List <InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n \n         if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n             return inspectionRoutes;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..71ed60ba943 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -32,7 +32,7 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<InspectionRouteDto> queryInspectionRoutes(@RequestBody  InspectionRouteDto inspectionRouteDto) {\n+    public List<InspectionRouteDto> queryInspectionRoutes(@RequestBody InspectionRouteDto inspectionRouteDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -42,7 +42,9 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n             inspectionRouteDto.setPage((page - 1) * inspectionRouteDto.getRow());\n         }\n \n-        List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n+        List<InspectionRouteDto> inspectionRoutes =\n+            BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)),\n+                InspectionRouteDto.class);\n \n         if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n             return inspectionRoutes;\n@@ -52,11 +54,10 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n     }\n \n \n-\n-\n     @Override\n     public int queryInspectionRoutesCount(@RequestBody InspectionRouteDto inspectionRouteDto) {\n-        return inspectionRouteServiceDaoImpl.queryInspectionRoutesCount(BeanConvertUtil.beanCovertMap(inspectionRouteDto));    }\n+        return inspectionRouteServiceDaoImpl.queryInspectionRoutesCount(BeanConvertUtil.beanCovertMap(inspectionRouteDto));\n+    }\n \n     public IInspectionRouteServiceDao getInspectionRouteServiceDaoImpl() {\n         return inspectionRouteServiceDaoImpl;\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..addab3783c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -51,10 +51,7 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n         return inspectionRoutes;\n     }\n \n-\n-\n-\n-    @Override\n+@Override\n     public int queryInspectionRoutesCount(@RequestBody InspectionRouteDto inspectionRouteDto) {\n         return inspectionRouteServiceDaoImpl.queryInspectionRoutesCount(BeanConvertUtil.beanCovertMap(inspectionRouteDto));    }\n \n@@ -73,4 +70,4 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..f68a70c8414 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.community.dao.IInspectionRouteServiceDao;\n import com.java110.utils.util.BeanConvertUtil;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -11,7 +10,6 @@ import com.java110.dto.inspectionRoute.InspectionRouteDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implements IInspectionRouteInnerServiceSMO {\n \n@@ -32,31 +32,28 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<InspectionRouteDto> queryInspectionRoutes(@RequestBody  InspectionRouteDto inspectionRouteDto) {\n+    public List<InspectionRouteDto> queryInspectionRoutes(@RequestBody InspectionRouteDto inspectionRouteDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = inspectionRouteDto.getPage();\n \n+\n+        int page = inspectionRouteDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionRouteDto.setPage((page - 1) * inspectionRouteDto.getRow());\n         }\n \n         List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n-\n         if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n             return inspectionRoutes;\n         }\n-\n         return inspectionRoutes;\n     }\n \n-\n-\n-\n     @Override\n     public int queryInspectionRoutesCount(@RequestBody InspectionRouteDto inspectionRouteDto) {\n-        return inspectionRouteServiceDaoImpl.queryInspectionRoutesCount(BeanConvertUtil.beanCovertMap(inspectionRouteDto));    }\n+        return inspectionRouteServiceDaoImpl.queryInspectionRoutesCount(BeanConvertUtil.beanCovertMap(inspectionRouteDto));\n+    }\n \n     public IInspectionRouteServiceDao getInspectionRouteServiceDaoImpl() {\n         return inspectionRouteServiceDaoImpl;\n@@ -73,4 +70,4 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..375490b4207 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -42,7 +42,7 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n             inspectionRouteDto.setPage((page - 1) * inspectionRouteDto.getRow());\n         }\n \n-        List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n+        List <InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n \n         if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n             return inspectionRoutes;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\nindex 8980047fe6d..632f74a7d2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/81/InspectionRouteInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/81/InspectionRouteInnerServiceSMOImpl.java\n@@ -41,7 +41,6 @@ public class InspectionRouteInnerServiceSMOImpl extends BaseServiceSMO implement\n         if (page != PageDto.DEFAULT_PAGE) {\n             inspectionRouteDto.setPage((page - 1) * inspectionRouteDto.getRow());\n         }\n-\n         List<InspectionRouteDto> inspectionRoutes = BeanConvertUtil.covertBeanList(inspectionRouteServiceDaoImpl.getInspectionRouteInfo(BeanConvertUtil.beanCovertMap(inspectionRouteDto)), InspectionRouteDto.class);\n \n         if (inspectionRoutes == null || inspectionRoutes.size() == 0) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}