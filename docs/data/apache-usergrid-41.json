{
    "project_name": "apache-usergrid",
    "violation_id": "41",
    "information": {
        "violations": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Parser for reading and writing secondary index composites\n *\n * @author tnine\n */\npublic class UUIDIndexSliceParser implements SliceParser {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/41/UUIDIndexSliceParser.java\nindex f948cf8ee26..cb00ab76228 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/41/UUIDIndexSliceParser.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query.ir.result;\n \n \n@@ -37,15 +38,15 @@ public class UUIDIndexSliceParser implements SliceParser {\n      * @see org.apache.usergrid.persistence.query.ir.result.SliceParser#parse(java.nio.ByteBuffer)\n      */\n     @Override\n-    public ScanColumn parse( ByteBuffer buff ) {\n-        return new UUIDColumn( SERIALIZER.fromByteBuffer( buff.duplicate() ), buff );\n+    public ScanColumn parse(ByteBuffer buff) {\n+        return new UUIDColumn(SERIALIZER.fromByteBuffer(buff.duplicate()), buff);\n     }\n \n \n     public static class UUIDColumn extends AbstractScanColumn {\n \n-        public UUIDColumn( UUID uuid, ByteBuffer buffer ) {\n-            super( uuid, buffer );\n+        public UUIDColumn(UUID uuid, ByteBuffer buffer) {\n+            super(uuid, buffer);\n         }\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/41/UUIDIndexSliceParser.java\nindex f948cf8ee26..c00f757a259 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/41/UUIDIndexSliceParser.java\n@@ -48,4 +48,4 @@ public class UUIDIndexSliceParser implements SliceParser {\n             super( uuid, buffer );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/41/UUIDIndexSliceParser.java\nindex f948cf8ee26..cfd75366a31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/41/UUIDIndexSliceParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/41/UUIDIndexSliceParser.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.query.ir.result;\n \n import java.nio.ByteBuffer;\n import java.util.UUID;\n-\n import me.prettyprint.cassandra.serializers.UUIDSerializer;\n \n \n@@ -28,6 +27,8 @@ import me.prettyprint.cassandra.serializers.UUIDSerializer;\n  *\n  * @author tnine\n  */\n+\n+\n public class UUIDIndexSliceParser implements SliceParser {\n \n     private static final UUIDSerializer SERIALIZER = UUIDSerializer.get();\n@@ -36,6 +37,7 @@ public class UUIDIndexSliceParser implements SliceParser {\n     /* (non-Javadoc)\n      * @see org.apache.usergrid.persistence.query.ir.result.SliceParser#parse(java.nio.ByteBuffer)\n      */\n+\n     @Override\n     public ScanColumn parse( ByteBuffer buff ) {\n         return new UUIDColumn( SERIALIZER.fromByteBuffer( buff.duplicate() ), buff );\n@@ -48,4 +50,4 @@ public class UUIDIndexSliceParser implements SliceParser {\n             super( uuid, buffer );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}