{
    "project_name": "neo4j-neo4j",
    "violation_id": "3075",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3075/CypherVariablesFormatter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3075/CypherVariablesFormatter.java\nindex ffdf64abb09..ba755ad0038 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3075/CypherVariablesFormatter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3075/CypherVariablesFormatter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.prettyprint;\n \n import java.util.regex.Matcher;\n@@ -26,30 +27,29 @@ import javax.annotation.Nonnull;\n public class CypherVariablesFormatter\n {\n     private static final String BACKTICK = \"`\";\n-    private static final Pattern ALPHA_NUMERIC = Pattern.compile( \"^[\\\\p{L}_][\\\\p{L}0-9_]*\" );\n+    private static final Pattern ALPHA_NUMERIC = Pattern.compile(\"^[\\\\p{L}_][\\\\p{L}0-9_]*\");\n \n     @Nonnull\n-    public static String escape( @Nonnull String string )\n+    public static String escape(@Nonnull String string)\n     {\n-        Matcher alphaNumericMatcher = ALPHA_NUMERIC.matcher( string );\n-        if ( !alphaNumericMatcher.matches() )\n+        Matcher alphaNumericMatcher = ALPHA_NUMERIC.matcher(string);\n+        if (!alphaNumericMatcher.matches())\n         {\n-            String reEscapeBackTicks = string.replaceAll( BACKTICK, BACKTICK + BACKTICK );\n+            String reEscapeBackTicks = string.replaceAll(BACKTICK, BACKTICK + BACKTICK);\n             return BACKTICK + reEscapeBackTicks + BACKTICK;\n         }\n         return string;\n     }\n \n     @Nonnull\n-    public static String unescapedCypherVariable( @Nonnull String string )\n+    public static String unescapedCypherVariable(@Nonnull String string)\n     {\n-        Matcher alphaNumericMatcher = ALPHA_NUMERIC.matcher( string );\n-        if ( !alphaNumericMatcher.matches() )\n+        Matcher alphaNumericMatcher = ALPHA_NUMERIC.matcher(string);\n+        if (!alphaNumericMatcher.matches())\n         {\n-            String substring = string.substring( 1, string.length() - 1 );\n-            return substring.replace( BACKTICK + BACKTICK, BACKTICK );\n-        }\n-        else\n+            String substring = string.substring(1, string.length() - 1);\n+            return substring.replace(BACKTICK + BACKTICK, BACKTICK);\n+        } else\n         {\n             return string;\n         }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}