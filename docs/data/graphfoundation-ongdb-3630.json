{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3630",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3630/LabelTokenRecordCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3630/LabelTokenRecordCheck.java\nindex 85957988cff..7700b3e6964 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3630/LabelTokenRecordCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3630/LabelTokenRecordCheck.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking;\n \n import org.neo4j.consistency.report.ConsistencyReport;\n@@ -26,23 +27,23 @@ import org.neo4j.kernel.impl.store.record.DynamicRecord;\n import org.neo4j.kernel.impl.store.record.LabelTokenRecord;\n \n public class LabelTokenRecordCheck\n-    extends TokenRecordCheck<LabelTokenRecord,ConsistencyReport.LabelTokenConsistencyReport>\n+    extends TokenRecordCheck<LabelTokenRecord, ConsistencyReport.LabelTokenConsistencyReport>\n {\n-    @Override\n-    protected RecordReference<DynamicRecord> name( RecordAccess records, int id )\n-    {\n-        return records.labelName( id );\n-    }\n+  @Override\n+  protected RecordReference<DynamicRecord> name(RecordAccess records, int id)\n+  {\n+    return records.labelName(id);\n+  }\n \n-    @Override\n-    void nameNotInUse( ConsistencyReport.LabelTokenConsistencyReport report, DynamicRecord name )\n-    {\n-        report.nameBlockNotInUse( name );\n-    }\n+  @Override\n+  void nameNotInUse(ConsistencyReport.LabelTokenConsistencyReport report, DynamicRecord name)\n+  {\n+    report.nameBlockNotInUse(name);\n+  }\n \n-    @Override\n-    void emptyName( ConsistencyReport.LabelTokenConsistencyReport report, DynamicRecord name )\n-    {\n-        report.emptyName( name );\n-    }\n+  @Override\n+  void emptyName(ConsistencyReport.LabelTokenConsistencyReport report, DynamicRecord name)\n+  {\n+    report.emptyName(name);\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "125",
                    "severity": "error",
                    "message": "'{' at column 125 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3630/LabelTokenRecordCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3630/LabelTokenRecordCheck.java\nindex 85957988cff..69f0c54e715 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3630/LabelTokenRecordCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3630/LabelTokenRecordCheck.java\n@@ -25,9 +25,7 @@ import org.neo4j.consistency.store.RecordReference;\n import org.neo4j.kernel.impl.store.record.DynamicRecord;\n import org.neo4j.kernel.impl.store.record.LabelTokenRecord;\n \n-public class LabelTokenRecordCheck\n-    extends TokenRecordCheck<LabelTokenRecord,ConsistencyReport.LabelTokenConsistencyReport>\n-{\n+public class LabelTokenRecordCheck extends TokenRecordCheck<LabelTokenRecord,ConsistencyReport.LabelTokenConsistencyReport> {\n     @Override\n     protected RecordReference<DynamicRecord> name( RecordAccess records, int id )\n     {\n@@ -45,4 +43,4 @@ public class LabelTokenRecordCheck\n     {\n         report.emptyName( name );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}