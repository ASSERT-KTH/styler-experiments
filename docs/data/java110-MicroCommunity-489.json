{
    "project_name": "java110-MicroCommunity",
    "violation_id": "489",
    "information": {
        "violations": [
            {
                "line": "44",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 244).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n\n\n        return payFeeDetailDiscounts;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..05e48d65d8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -41,6 +41,7 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n             payFeeDetailDiscountDto.setPage((page - 1) * payFeeDetailDiscountDto.getRow());\n         }\n \n+\n         List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n \n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..b59d5592c97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -41,14 +41,15 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n             payFeeDetailDiscountDto.setPage((page - 1) * payFeeDetailDiscountDto.getRow());\n         }\n \n-        List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n+        List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(\n+            payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)),\n+            PayFeeDetailDiscountDto.class);\n \n \n         return payFeeDetailDiscounts;\n     }\n \n \n-\n     /**\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..ccf54a8d051 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -43,13 +43,10 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n \n         List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n \n-\n-        return payFeeDetailDiscounts;\n+return payFeeDetailDiscounts;\n     }\n \n-\n-\n-    /**\n+/**\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param payFeeDetailDiscount \u5c0f\u533a\u7f34\u8d39\u4f18\u60e0\u4fe1\u606f\n@@ -92,4 +89,4 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..12ac9bebbe8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.intf.fee.IPayFeeDetailDiscountInnerServiceSMO;\n import com.java110.dto.PageDto;\n@@ -11,7 +10,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -23,27 +21,27 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO implements IPayFeeDetailDiscountInnerServiceSMO {\n \n     @Autowired\n     private IPayFeeDetailDiscountServiceDao payFeeDetailDiscountServiceDaoImpl;\n \n-\n     @Override\n     public List<PayFeeDetailDiscountDto> queryPayFeeDetailDiscounts(@RequestBody PayFeeDetailDiscountDto payFeeDetailDiscountDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = payFeeDetailDiscountDto.getPage();\n \n+\n+        int page = payFeeDetailDiscountDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             payFeeDetailDiscountDto.setPage((page - 1) * payFeeDetailDiscountDto.getRow());\n         }\n \n         List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n-\n-\n         return payFeeDetailDiscounts;\n     }\n \n@@ -55,6 +53,8 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n      * @param payFeeDetailDiscount \u5c0f\u533a\u7f34\u8d39\u4f18\u60e0\u4fe1\u606f\n      * @param users                \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshPayFeeDetailDiscount(PayFeeDetailDiscountDto payFeeDetailDiscount, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (payFeeDetailDiscount.getDetailDiscountId().equals(user.getUserId())) {\n@@ -69,12 +69,13 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n      * @param payFeeDetailDiscounts \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<PayFeeDetailDiscountDto> payFeeDetailDiscounts) {\n         List<String> userIds = new ArrayList<String>();\n         for (PayFeeDetailDiscountDto payFeeDetailDiscount : payFeeDetailDiscounts) {\n             userIds.add(payFeeDetailDiscount.getDetailDiscountId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -92,4 +93,4 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..fa97791b16b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -39,9 +39,7 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             payFeeDetailDiscountDto.setPage((page - 1) * payFeeDetailDiscountDto.getRow());\n-        }\n-\n-        List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n+        } List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n \n \n         return payFeeDetailDiscounts;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\nindex da23a7af59a..05e48d65d8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/489/PayFeeDetailDiscountInnerServiceSMOImpl.java\n@@ -41,6 +41,7 @@ public class PayFeeDetailDiscountInnerServiceSMOImpl extends BaseServiceSMO impl\n             payFeeDetailDiscountDto.setPage((page - 1) * payFeeDetailDiscountDto.getRow());\n         }\n \n+\n         List<PayFeeDetailDiscountDto> payFeeDetailDiscounts = BeanConvertUtil.covertBeanList(payFeeDetailDiscountServiceDaoImpl.getPayFeeDetailDiscountInfo(BeanConvertUtil.beanCovertMap(payFeeDetailDiscountDto)), PayFeeDetailDiscountDto.class);\n \n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}