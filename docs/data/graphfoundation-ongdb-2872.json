{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2872",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2872/IndexDefineCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2872/IndexDefineCommand.java\nindex 1411edadcc1..4e52fab555c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2872/IndexDefineCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2872/IndexDefineCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index;\n \n import java.io.IOException;\n@@ -42,193 +43,193 @@ import static org.neo4j.kernel.impl.util.IoPrimitiveUtils.write2bLengthAndString\n  * to ids instead of names. This reduced the number of bytes needed for commands\n  * roughly 50% for transaction with more than a couple of commands in it,\n  * depending on the size of the value.\n- *\n+ * <p>\n  * After this command has been created it will act as a factory for other\n  * commands so that it can spit out correct index name and key ids.\n  */\n public class IndexDefineCommand extends Command\n {\n-    static final int HIGHEST_POSSIBLE_ID = 0xFFFF - 1; // -1 since the actual value -1 is reserved for all-ones\n-    private final AtomicInteger nextIndexNameId = new AtomicInteger();\n-    private final AtomicInteger nextKeyId = new AtomicInteger();\n-    private Map<String,Integer> indexNameIdRange;\n-    private Map<String,Integer> keyIdRange;\n-    private PrimitiveIntObjectMap<String> idToIndexName;\n-    private PrimitiveIntObjectMap<String> idToKey;\n-\n-    public IndexDefineCommand()\n-    {\n-        setIndexNameIdRange( new HashMap<>() );\n-        setKeyIdRange( new HashMap<>() );\n-        idToIndexName = intObjectMap( 16 );\n-        idToKey = intObjectMap( 16 );\n-    }\n+  static final int HIGHEST_POSSIBLE_ID = 0xFFFF - 1; // -1 since the actual value -1 is reserved for all-ones\n+  private final AtomicInteger nextIndexNameId = new AtomicInteger();\n+  private final AtomicInteger nextKeyId = new AtomicInteger();\n+  private Map<String, Integer> indexNameIdRange;\n+  private Map<String, Integer> keyIdRange;\n+  private PrimitiveIntObjectMap<String> idToIndexName;\n+  private PrimitiveIntObjectMap<String> idToKey;\n \n-    public void init( Map<String,Integer> indexNames, Map<String,Integer> keys )\n-    {\n-        this.setIndexNameIdRange( indexNames );\n-        this.setKeyIdRange( keys );\n-        idToIndexName = reverse( indexNames );\n-        idToKey = reverse( keys );\n-    }\n+  public IndexDefineCommand()\n+  {\n+    setIndexNameIdRange(new HashMap<>());\n+    setKeyIdRange(new HashMap<>());\n+    idToIndexName = intObjectMap(16);\n+    idToKey = intObjectMap(16);\n+  }\n \n-    private static PrimitiveIntObjectMap<String> reverse( Map<String,Integer> map )\n-    {\n-        PrimitiveIntObjectMap<String> result = Primitive.intObjectMap( map.size() );\n-        for ( Map.Entry<String,Integer> entry : map.entrySet() )\n-        {\n-            result.put( entry.getValue(), entry.getKey() );\n-        }\n-        return result;\n-    }\n-\n-    private static String getFromMap( PrimitiveIntObjectMap<String> map, int id )\n-    {\n-        if ( id == -1 )\n-        {\n-            return null;\n-        }\n-        String result = map.get( id );\n-        if ( result == null )\n-        {\n-            throw new IllegalArgumentException( \"\" + id );\n-        }\n-        return result;\n-    }\n+  public void init(Map<String, Integer> indexNames, Map<String, Integer> keys)\n+  {\n+    this.setIndexNameIdRange(indexNames);\n+    this.setKeyIdRange(keys);\n+    idToIndexName = reverse(indexNames);\n+    idToKey = reverse(keys);\n+  }\n \n-    public String getIndexName( int id )\n+  private static PrimitiveIntObjectMap<String> reverse(Map<String, Integer> map)\n+  {\n+    PrimitiveIntObjectMap<String> result = Primitive.intObjectMap(map.size());\n+    for (Map.Entry<String, Integer> entry : map.entrySet())\n     {\n-        return getFromMap( idToIndexName, id );\n+      result.put(entry.getValue(), entry.getKey());\n     }\n+    return result;\n+  }\n \n-    public String getKey( int id )\n+  private static String getFromMap(PrimitiveIntObjectMap<String> map, int id)\n+  {\n+    if (id == -1)\n     {\n-        return getFromMap( idToKey, id );\n+      return null;\n     }\n-\n-    public int getOrAssignIndexNameId( String indexName )\n+    String result = map.get(id);\n+    if (result == null)\n     {\n-        return getOrAssignId( indexNameIdRange, idToIndexName, nextIndexNameId, indexName );\n+      throw new IllegalArgumentException(\"\" + id);\n     }\n+    return result;\n+  }\n \n-    public int getOrAssignKeyId( String key )\n-    {\n-        return getOrAssignId( keyIdRange, idToKey, nextKeyId, key );\n-    }\n+  public String getIndexName(int id)\n+  {\n+    return getFromMap(idToIndexName, id);\n+  }\n \n-    private int getOrAssignId( Map<String,Integer> stringToId, PrimitiveIntObjectMap<String> idToString,\n-            AtomicInteger nextId, String string )\n-    {\n-        if ( string == null )\n-        {\n-            return -1;\n-        }\n-\n-        Integer id = stringToId.get( string );\n-        if ( id != null )\n-        {\n-            return id;\n-        }\n-\n-        int nextIdInt = nextId.incrementAndGet();\n-        if ( nextIdInt > HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID )\n-        {\n-            throw new IllegalStateException( format(\n-                    \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n-                    HIGHEST_POSSIBLE_ID + 1 ) );\n-        }\n-        id = nextIdInt;\n-\n-        stringToId.put( string, id );\n-        idToString.put( id, string );\n-        return id;\n-    }\n+  public String getKey(int id)\n+  {\n+    return getFromMap(idToKey, id);\n+  }\n+\n+  public int getOrAssignIndexNameId(String indexName)\n+  {\n+    return getOrAssignId(indexNameIdRange, idToIndexName, nextIndexNameId, indexName);\n+  }\n+\n+  public int getOrAssignKeyId(String key)\n+  {\n+    return getOrAssignId(keyIdRange, idToKey, nextKeyId, key);\n+  }\n+\n+  private int getOrAssignId(Map<String, Integer> stringToId, PrimitiveIntObjectMap<String> idToString,\n+                            AtomicInteger nextId, String string)\n+  {\n+    if (string == null)\n+    {\n+      return -1;\n+    }\n+\n+    Integer id = stringToId.get(string);\n+    if (id != null)\n+    {\n+      return id;\n+    }\n+\n+    int nextIdInt = nextId.incrementAndGet();\n+    if (nextIdInt > HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID)\n+    {\n+      throw new IllegalStateException(format(\n+          \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n+          HIGHEST_POSSIBLE_ID + 1));\n+    }\n+    id = nextIdInt;\n+\n+    stringToId.put(string, id);\n+    idToString.put(id, string);\n+    return id;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+    if (!super.equals(o))\n+    {\n+      return false;\n+    }\n+    IndexDefineCommand that = (IndexDefineCommand) o;\n+    return nextIndexNameId.get() == that.nextIndexNameId.get() &&\n+        nextKeyId.get() == that.nextKeyId.get() &&\n+        Objects.equals(indexNameIdRange, that.indexNameIdRange) &&\n+        Objects.equals(keyIdRange, that.keyIdRange) &&\n+        Objects.equals(idToIndexName, that.idToIndexName) &&\n+        Objects.equals(idToKey, that.idToKey);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(super.hashCode(), nextIndexNameId.get(), nextKeyId.get(), indexNameIdRange, keyIdRange,\n+        idToIndexName, idToKey);\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        if ( !super.equals( o ) )\n-        {\n-            return false;\n-        }\n-        IndexDefineCommand that = (IndexDefineCommand) o;\n-        return nextIndexNameId.get() == that.nextIndexNameId.get() &&\n-               nextKeyId.get() == that.nextKeyId.get() &&\n-               Objects.equals( indexNameIdRange, that.indexNameIdRange ) &&\n-               Objects.equals( keyIdRange, that.keyIdRange ) &&\n-               Objects.equals( idToIndexName, that.idToIndexName ) &&\n-               Objects.equals( idToKey, that.idToKey );\n-    }\n+  @Override\n+  public boolean handle(CommandVisitor visitor) throws IOException\n+  {\n+    return visitor.visitIndexDefineCommand(this);\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return Objects.hash( super.hashCode(), nextIndexNameId.get(), nextKeyId.get(), indexNameIdRange, keyIdRange,\n-                idToIndexName, idToKey );\n-    }\n+  public Map<String, Integer> getIndexNameIdRange()\n+  {\n+    return indexNameIdRange;\n+  }\n \n-    @Override\n-    public boolean handle( CommandVisitor visitor ) throws IOException\n-    {\n-        return visitor.visitIndexDefineCommand( this );\n-    }\n-\n-    public Map<String,Integer> getIndexNameIdRange()\n-    {\n-        return indexNameIdRange;\n-    }\n-\n-    private void setIndexNameIdRange( Map<String,Integer> indexNameIdRange )\n-    {\n-        this.indexNameIdRange = indexNameIdRange;\n-    }\n-\n-    public Map<String,Integer> getKeyIdRange()\n-    {\n-        return keyIdRange;\n-    }\n-\n-    private void setKeyIdRange( Map<String,Integer> keyIdRange )\n-    {\n-        this.keyIdRange = keyIdRange;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return getClass().getSimpleName() + \"[names:\" + indexNameIdRange + \", keys:\" + keyIdRange + \"]\";\n-    }\n-\n-    @Override\n-    public void serialize( WritableChannel channel ) throws IOException\n-    {\n-        channel.put( NeoCommandType.INDEX_DEFINE_COMMAND );\n-        byte zero = 0;\n-        IndexCommand.writeIndexCommandHeader( channel, zero, zero, zero, zero, zero, zero, zero );\n-        writeMap( channel, getIndexNameIdRange() );\n-        writeMap( channel, getKeyIdRange() );\n-    }\n-\n-    private void writeMap( WritableChannel channel, Map<String,Integer> map ) throws IOException\n-    {\n-        assert map.size() <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n-            \"Can not write map with size larger than 2 bytes. Actual size \" + map.size();\n-        channel.putShort( (short) map.size() );\n-        for ( Map.Entry<String,Integer> entry : map.entrySet() )\n-        {\n-            write2bLengthAndString( channel, entry.getKey() );\n-            int id = entry.getValue();\n-            assert id <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n-                \"Can not write id larger than 2 bytes. Actual value \" + id;\n-            channel.putShort( (short) id );\n-        }\n-    }\n+  private void setIndexNameIdRange(Map<String, Integer> indexNameIdRange)\n+  {\n+    this.indexNameIdRange = indexNameIdRange;\n+  }\n+\n+  public Map<String, Integer> getKeyIdRange()\n+  {\n+    return keyIdRange;\n+  }\n+\n+  private void setKeyIdRange(Map<String, Integer> keyIdRange)\n+  {\n+    this.keyIdRange = keyIdRange;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return getClass().getSimpleName() + \"[names:\" + indexNameIdRange + \", keys:\" + keyIdRange + \"]\";\n+  }\n+\n+  @Override\n+  public void serialize(WritableChannel channel) throws IOException\n+  {\n+    channel.put(NeoCommandType.INDEX_DEFINE_COMMAND);\n+    byte zero = 0;\n+    IndexCommand.writeIndexCommandHeader(channel, zero, zero, zero, zero, zero, zero, zero);\n+    writeMap(channel, getIndexNameIdRange());\n+    writeMap(channel, getKeyIdRange());\n+  }\n+\n+  private void writeMap(WritableChannel channel, Map<String, Integer> map) throws IOException\n+  {\n+    assert map.size() <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n+        \"Can not write map with size larger than 2 bytes. Actual size \" + map.size();\n+    channel.putShort((short) map.size());\n+    for (Map.Entry<String, Integer> entry : map.entrySet())\n+    {\n+      write2bLengthAndString(channel, entry.getKey());\n+      int id = entry.getValue();\n+      assert id <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n+          \"Can not write id larger than 2 bytes. Actual value \" + id;\n+      channel.putShort((short) id);\n+    }\n+  }\n }\n",
            "diff_size": 225
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "137",
                    "column": "23",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "169",
                    "column": "68",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "227",
                    "column": "68",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "234",
                    "column": "64",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2872/IndexDefineCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2872/IndexDefineCommand.java\nindex 1411edadcc1..98a281ad52e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2872/IndexDefineCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2872/IndexDefineCommand.java\n@@ -79,7 +79,8 @@ public class IndexDefineCommand extends Command\n         {\n             result.put( entry.getValue(), entry.getKey() );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     private static String getFromMap( PrimitiveIntObjectMap<String> map, int id )\n@@ -88,12 +89,14 @@ public class IndexDefineCommand extends Command\n         {\n             return null;\n         }\n-        String result = map.get( id );\n+\n+String result = map.get( id );\n         if ( result == null )\n         {\n             throw new IllegalArgumentException( \"\" + id );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     public String getIndexName( int id )\n@@ -131,13 +134,13 @@ public class IndexDefineCommand extends Command\n         }\n \n         int nextIdInt = nextId.incrementAndGet();\n-        if ( nextIdInt > HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID )\n+        if ( nextIdInt> HIGHEST_POSSIBLE_ID || stringToId.size() >= HIGHEST_POSSIBLE_ID )\n         {\n-            throw new IllegalStateException( format(\n-                    \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n+            throw new IllegalStateException( format( \"Modifying more than %d indexes or keys in a single transaction is not supported\",\n                     HIGHEST_POSSIBLE_ID + 1 ) );\n         }\n-        id = nextIdInt;\n+\n+id = nextIdInt;\n \n         stringToId.put( string, id );\n         idToString.put( id, string );\n@@ -151,17 +154,19 @@ public class IndexDefineCommand extends Command\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n         {\n             return false;\n         }\n-        IndexDefineCommand that = (IndexDefineCommand) o;\n-        return nextIndexNameId.get() == that.nextIndexNameId.get() &&\n-               nextKeyId.get() == that.nextKeyId.get() &&\n+\n+IndexDefineCommand that = (IndexDefineCommand) o;\n+        return nextIndexNameId.get() == that.nextIndexNameId.get() &&nextKeyId.get() == that.nextKeyId.get() &&\n                Objects.equals( indexNameIdRange, that.indexNameIdRange ) &&\n                Objects.equals( keyIdRange, that.keyIdRange ) &&\n                Objects.equals( idToIndexName, that.idToIndexName ) &&\n@@ -219,16 +224,16 @@ public class IndexDefineCommand extends Command\n \n     private void writeMap( WritableChannel channel, Map<String,Integer> map ) throws IOException\n     {\n-        assert map.size() <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n+        assert map.size() <= IndexDefineCommand.HIGHEST_POSSIBLE_ID:\n             \"Can not write map with size larger than 2 bytes. Actual size \" + map.size();\n-        channel.putShort( (short) map.size() );\n+channel.putShort( (short) map.size() );\n         for ( Map.Entry<String,Integer> entry : map.entrySet() )\n         {\n             write2bLengthAndString( channel, entry.getKey() );\n             int id = entry.getValue();\n-            assert id <= IndexDefineCommand.HIGHEST_POSSIBLE_ID :\n+            assert id <= IndexDefineCommand.HIGHEST_POSSIBLE_ID:\n                 \"Can not write id larger than 2 bytes. Actual value \" + id;\n             channel.putShort( (short) id );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}