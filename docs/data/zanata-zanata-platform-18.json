{
    "project_name": "zanata-zanata-platform",
    "violation_id": "18",
    "information": {
        "violations": [
            {
                "line": "47",
                "column": "59",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     * If absent, the Reply-To address will be omitted.\n     */\n    public Optional<InternetAddress[]> getReplyToAddress(){\n        return Optional.absent();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/zanata-zanata-platform/styler/05_predictions/final/files-repaired/18/AbstractEmailStrategy.java\nindex e4454f9ed3a..f40f3d2f169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/zanata-zanata-platform/styler/05_predictions/final/files-repaired/18/AbstractEmailStrategy.java\n@@ -44,7 +44,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/checkstyle_idea/18/AbstractEmailStrategy.java\nindex e4454f9ed3a..a273333abeb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/checkstyle_idea/18/AbstractEmailStrategy.java\n@@ -18,6 +18,7 @@\n  * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n  */\n+\n package org.zanata.email;\n \n import javax.mail.internet.InternetAddress;\n@@ -28,25 +29,26 @@ import com.google.common.base.Optional;\n /**\n  * Strategy class for EmailBuilder to customise the content and recipients\n  * of an email.\n+ *\n  * @author Sean Flanigan <a href=\"mailto:sflaniga@redhat.com\">sflaniga@redhat.com</a>\n  */\n public abstract class AbstractEmailStrategy {\n \n-    /**\n-     * Returns the From address to be used for this email.\n-     * If absent, use the default From address configured by the server\n-     */\n-    public Optional<InternetAddress> getFromAddress() {\n-        return Optional.absent();\n-    }\n+  /**\n+   * Returns the From address to be used for this email.\n+   * If absent, use the default From address configured by the server\n+   */\n+  public Optional<InternetAddress> getFromAddress() {\n+    return Optional.absent();\n+  }\n \n-    /**\n-     * Returns the Reply-To address to be used for this email, if any.\n-     * If absent, the Reply-To address will be omitted.\n-     */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n-        return Optional.absent();\n-    }\n+  /**\n+   * Returns the Reply-To address to be used for this email, if any.\n+   * If absent, the Reply-To address will be omitted.\n+   */\n+  public Optional<InternetAddress[]> getReplyToAddress() {\n+    return Optional.absent();\n+  }\n \n-    public abstract String getSubject(Messages msgs);\n+  public abstract String getSubject(Messages msgs);\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/codebuff/18/AbstractEmailStrategy.java\nindex e4454f9ed3a..5f5dcaf3d89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/codebuff/18/AbstractEmailStrategy.java\n@@ -21,7 +21,6 @@\n package org.zanata.email;\n \n import javax.mail.internet.InternetAddress;\n-\n import org.zanata.i18n.Messages;\n import com.google.common.base.Optional;\n \n@@ -30,6 +29,8 @@ import com.google.common.base.Optional;\n  * of an email.\n  * @author Sean Flanigan <a href=\"mailto:sflaniga@redhat.com\">sflaniga@redhat.com</a>\n  */\n+\n+\n public abstract class AbstractEmailStrategy {\n \n     /**\n@@ -44,9 +45,10 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n     public abstract String getSubject(Messages msgs);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/styler/05_predictions/random/files-repaired/18/AbstractEmailStrategy.java\nindex e4454f9ed3a..f40f3d2f169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/styler/05_predictions/random/files-repaired/18/AbstractEmailStrategy.java\n@@ -44,7 +44,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/styler/05_predictions/three_grams/files-repaired/18/AbstractEmailStrategy.java\nindex e4454f9ed3a..f40f3d2f169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/violations/18/AbstractEmailStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/zanata-zanata-platform/styler/05_predictions/three_grams/files-repaired/18/AbstractEmailStrategy.java\n@@ -44,7 +44,7 @@ public abstract class AbstractEmailStrategy {\n      * Returns the Reply-To address to be used for this email, if any.\n      * If absent, the Reply-To address will be omitted.\n      */\n-    public Optional<InternetAddress[]> getReplyToAddress(){\n+    public Optional<InternetAddress[]> getReplyToAddress() {\n         return Optional.absent();\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}