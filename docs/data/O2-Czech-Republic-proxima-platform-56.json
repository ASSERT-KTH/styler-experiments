{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "violation_id": "56",
    "information": {
        "violations": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public ToolsClassLoader() {\n    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n  }\n\n  final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "46",
                    "column": "75",
                    "severity": "error",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/56/ToolsClassLoader.java\nindex 8fb2e26a98d..7e561761344 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/56/ToolsClassLoader.java\n@@ -43,7 +43,8 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n+    super(Thread.currentThread().getContextClassLoader(),ClassloaderUtils .\n+      createConfiguration());\n   }\n \n   final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/56/ToolsClassLoader.java\nindex 8fb2e26a98d..1947d6c28e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/56/ToolsClassLoader.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.tools.groovy;\n \n import cz.o2.proxima.tools.groovy.internal.ClassloaderUtils;\n@@ -43,7 +44,8 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n+    super(Thread.currentThread().getContextClassLoader(),\n+        ClassloaderUtils.createConfiguration());\n   }\n \n   final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/56/ToolsClassLoader.java\nindex 8fb2e26a98d..aa920fc2b95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/56/ToolsClassLoader.java\n@@ -61,4 +61,4 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   public byte[] getClassByteCode(String name) {\n     return Objects.requireNonNull(byteCode.get(name));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/56/ToolsClassLoader.java\nindex 8fb2e26a98d..468f8c432f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/56/ToolsClassLoader.java\n@@ -27,6 +27,8 @@ import org.codehaus.groovy.control.CompilationUnit;\n import org.codehaus.groovy.control.SourceUnit;\n \n /** {@link GroovyClassLoader} keeping track of generated bytecode. */\n+\n+\n public class ToolsClassLoader extends GroovyClassLoader {\n \n   class Collector extends ClassCollector {\n@@ -61,4 +63,4 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   public byte[] getClassByteCode(String name) {\n     return Objects.requireNonNull(byteCode.get(name));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "46",
                    "column": "75",
                    "severity": "error",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/random/files-repaired/56/ToolsClassLoader.java\nindex 8fb2e26a98d..7e561761344 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/random/files-repaired/56/ToolsClassLoader.java\n@@ -43,7 +43,8 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n+    super(Thread.currentThread().getContextClassLoader(),ClassloaderUtils .\n+      createConfiguration());\n   }\n \n   final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "47",
                    "column": "3",
                    "severity": "error",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/56/ToolsClassLoader.java\nindex 8fb2e26a98d..2382d3c60ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/56/ToolsClassLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/56/ToolsClassLoader.java\n@@ -43,7 +43,10 @@ public class ToolsClassLoader extends GroovyClassLoader {\n   }\n \n   public ToolsClassLoader() {\n-    super(Thread.currentThread().getContextClassLoader(), ClassloaderUtils.createConfiguration());\n+    super(Thread.currentThread().getContextClassLoader(),ClassloaderUtils\n+  .\n+\n+    createConfiguration());\n   }\n \n   final Map<String, byte[]> byteCode = new ConcurrentHashMap<>();\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}