{
    "project_name": "griddynamics-jagger",
    "violation_id": "93",
    "information": {
        "violations": [
            {
                "line": "73",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 202).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                kernel.setConnected(true);\n            } catch (Throwable e) {\n                log.warn(\"ThreadId {}. KernelID {} Unable to connect to Coordinator. Waiting for {} ms\", new Object[]{Thread.currentThread().getId(), kernel.getKernelId(), kernel.getReconnectPeriod()});\n                log.warn(\"cause: \", e);\n                try {\n                    Thread.sleep(kernel.getReconnectPeriod());",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/93/KernelRegistrar.java\nindex 5bce1aaae3b..6aff506eada 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/93/KernelRegistrar.java\n@@ -70,7 +70,8 @@ public class KernelRegistrar implements Runnable {\n                 });\n                 kernel.setConnected(true);\n             } catch (Throwable e) {\n-                log.warn(\"ThreadId {}. KernelID {} Unable to connect to Coordinator. Waiting for {} ms\", new Object[]{Thread.currentThread().getId(), kernel.getKernelId(), kernel.getReconnectPeriod()});\n+                log.warn(\"ThreadId {}. KernelID {} Unable to connect to Coordinator. Waiting for {} ms\",\n+                        new Object[] {Thread.currentThread().getId(), kernel.getKernelId(), kernel.getReconnectPeriod()});\n                 log.warn(\"cause: \", e);\n                 try {\n                     Thread.sleep(kernel.getReconnectPeriod());\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/93/KernelRegistrar.java\nindex 5bce1aaae3b..2217975cdc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/93/KernelRegistrar.java\n@@ -80,4 +80,4 @@ public class KernelRegistrar implements Runnable {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/93/KernelRegistrar.java\nindex 5bce1aaae3b..9b5d1ccdf24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/93/KernelRegistrar.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/93/KernelRegistrar.java\n@@ -39,7 +39,6 @@ import static com.google.common.base.Preconditions.checkNotNull;\n public class KernelRegistrar implements Runnable {\n \n     private final Logger log = LoggerFactory.getLogger(KernelRegistrar.class);\n-\n     private Kernel kernel;\n     private Coordinator coordinator;\n \n@@ -80,4 +79,4 @@ public class KernelRegistrar implements Runnable {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}