{
    "project_name": "Internet2-grouper",
    "violation_id": "15",
    "information": {
        "violations": [
            {
                "line": "75",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "  /**\n   * Return the source identifier.\n   * \n   * @return the source id.\n   */\n  public String getSourceId() {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/checkstyle_idea/15/MemberSourceFilter.java\nindex 8525ba71ffb..45a6fd96afe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/checkstyle_idea/15/MemberSourceFilter.java\n@@ -1,12 +1,12 @@\n /**\n  * Copyright 2014 Internet2\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -72,7 +72,7 @@ public class MemberSourceFilter extends AbstractFilter<Member> {\n \n   /**\n    * Return the source identifier.\n-   * \n+   *\n    * @return the source id.\n    */\n   public String getSourceId() {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/naturalize/15/MemberSourceFilter.java\nindex 8525ba71ffb..1eb6b058219 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/naturalize/15/MemberSourceFilter.java\n@@ -79,4 +79,4 @@ public class MemberSourceFilter extends AbstractFilter<Member> {\n     return sourceId;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 57.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/codebuff/15/MemberSourceFilter.java\nindex 8525ba71ffb..15bfa29cfa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/codebuff/15/MemberSourceFilter.java\n@@ -33,7 +33,6 @@ package edu.internet2.middleware.grouper.shibboleth.filter;\n \n import java.util.Set;\n import java.util.TreeSet;\n-\n import edu.internet2.middleware.grouper.GrouperSession;\n import edu.internet2.middleware.grouper.Member;\n import edu.internet2.middleware.grouper.MemberFinder;\n@@ -44,39 +43,48 @@ import edu.internet2.middleware.subject.Source;\n /**\n  * Selects {@link Member}s from a {@link Source}.\n  */\n+\n+\n public class MemberSourceFilter extends AbstractFilter<Member> {\n \n   /** The ID of the {@link Source}. */\n-  private String sourceId;\n \n-  public MemberSourceFilter(String sourceId) {\n-    this.sourceId = sourceId;\n+    private String sourceId;\n+\n+    public MemberSourceFilter(String sourceId) {\n+        this.sourceId = sourceId;\n     // test to see if source is available, will throw exceptions if not\n-    SubjectFinder.getSource(sourceId);\n-  }\n+        SubjectFinder.getSource(sourceId);\n+    }\n \n   /** {@inheritDoc} */\n-  public Set<Member> getResults(GrouperSession s) throws QueryException {\n-    Set<Member> members = new TreeSet<Member>();\n-    members.addAll(MemberFinder.findAll(s, SubjectFinder.getSource(sourceId)));\n-    return members;\n-  }\n+\n+\n+\n+    public Set<Member> getResults(GrouperSession s) throws QueryException {\n+        Set<Member> members = new TreeSet<Member>();\n+        members.addAll(MemberFinder.findAll(s, SubjectFinder.getSource(sourceId)));\n+        return members;\n+    }\n \n   /** {@inheritDoc} */\n-  public boolean matches(Object member) {\n-    if (!(member instanceof Member)) {\n-      return false;\n+\n+\n+    public boolean matches(Object member) {\n+        if (!(member instanceof Member)) {\n+            return false;\n+        }\n+        return ((Member) member).getSubjectSourceId().equals(sourceId);\n     }\n-    return ((Member) member).getSubjectSourceId().equals(sourceId);\n-  }\n \n   /**\n    * Return the source identifier.\n    * \n    * @return the source id.\n    */\n-  public String getSourceId() {\n-    return sourceId;\n-  }\n \n-}\n+\n+    public String getSourceId() {\n+        return sourceId;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/random/files-repaired/15/MemberSourceFilter.java\nindex 8525ba71ffb..e6745cba79e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/15/MemberSourceFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/random/files-repaired/15/MemberSourceFilter.java\n@@ -75,6 +75,7 @@ public class MemberSourceFilter extends AbstractFilter<Member> {\n    * \n    * @return the source id.\n    */\n+\n   public String getSourceId() {\n     return sourceId;\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}