{
    "project_name": "dzhw-metadatamanagement",
    "violation_id": "12",
    "information": {
        "violations": [
            {
                "line": "22",
                "column": "67",
                "severity": "error",
                "message": "'}' at column 67 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidSurveyDesign constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/12/ValidSurveyDesignValidator.java\nindex 9330bd6508d..aaa3cb1c5be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/12/ValidSurveyDesignValidator.java\n@@ -19,7 +19,9 @@ public class ValidSurveyDesignValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSurveyDesign constraintAnnotation) {}\n+  public void initialize(ValidSurveyDesign constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/12/ValidSurveyDesignValidator.java\nindex 9330bd6508d..025ca3e34e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/12/ValidSurveyDesignValidator.java\n@@ -8,10 +8,10 @@ import eu.dzhw.fdz.metadatamanagement.datapackagemanagement.domain.SurveyDesigns\n \n /**\n  * Checks the surveydesign field for valid values.\n- * \n+ *\n  * @author Daniel Katzberg\n  */\n-public class ValidSurveyDesignValidator implements \n+public class ValidSurveyDesignValidator implements\n     ConstraintValidator<ValidSurveyDesign, I18nString> {\n \n   /*\n@@ -19,16 +19,17 @@ public class ValidSurveyDesignValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSurveyDesign constraintAnnotation) {}\n+  public void initialize(ValidSurveyDesign constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n+   * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n   public boolean isValid(I18nString surveyDesign, ConstraintValidatorContext context) {\n-    \n+\n     if (surveyDesign == null) {\n       return true;\n     }\n@@ -37,5 +38,5 @@ public class ValidSurveyDesignValidator implements\n     return SurveyDesigns.ALL.contains(surveyDesign);\n   }\n \n-  \n+\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "21",
                    "column": "67",
                    "severity": "error",
                    "message": "'}' at column 67 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/12/ValidSurveyDesignValidator.java\nindex 9330bd6508d..e7ae3726cc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/12/ValidSurveyDesignValidator.java\n@@ -13,7 +13,6 @@ import eu.dzhw.fdz.metadatamanagement.datapackagemanagement.domain.SurveyDesigns\n  */\n public class ValidSurveyDesignValidator implements \n     ConstraintValidator<ValidSurveyDesign, I18nString> {\n-\n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n@@ -28,8 +27,7 @@ public class ValidSurveyDesignValidator implements\n    */\n   @Override\n   public boolean isValid(I18nString surveyDesign, ConstraintValidatorContext context) {\n-    \n-    if (surveyDesign == null) {\n+  if (surveyDesign == null) {\n       return true;\n     }\n \n@@ -37,5 +35,4 @@ public class ValidSurveyDesignValidator implements\n     return SurveyDesigns.ALL.contains(surveyDesign);\n   }\n \n-  \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/12/ValidSurveyDesignValidator.java\nindex 9330bd6508d..f6e49f1840c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/12/ValidSurveyDesignValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.datapackagemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n import eu.dzhw.fdz.metadatamanagement.datapackagemanagement.domain.SurveyDesigns;\n \n@@ -11,31 +10,36 @@ import eu.dzhw.fdz.metadatamanagement.datapackagemanagement.domain.SurveyDesigns\n  * \n  * @author Daniel Katzberg\n  */\n-public class ValidSurveyDesignValidator implements \n-    ConstraintValidator<ValidSurveyDesign, I18nString> {\n+\n+\n+public class ValidSurveyDesignValidator implements ConstraintValidator<ValidSurveyDesign, I18nString> {\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidSurveyDesign constraintAnnotation) {}\n+  public void initialize(ValidSurveyDesign constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object, \n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(I18nString surveyDesign, ConstraintValidatorContext context) {\n-    \n+  public boolean isValid(I18nString surveyDesign,\n+    ConstraintValidatorContext context) {\n     if (surveyDesign == null) {\n       return true;\n     }\n \n     // check for survey designs\n+\n     return SurveyDesigns.ALL.contains(surveyDesign);\n   }\n-\n-  \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/12/ValidSurveyDesignValidator.java\nindex 9330bd6508d..aaa3cb1c5be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/12/ValidSurveyDesignValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/12/ValidSurveyDesignValidator.java\n@@ -19,7 +19,9 @@ public class ValidSurveyDesignValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidSurveyDesign constraintAnnotation) {}\n+  public void initialize(ValidSurveyDesign constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "column": "67",
                    "severity": "error",
                    "message": "'}' at column 67 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}