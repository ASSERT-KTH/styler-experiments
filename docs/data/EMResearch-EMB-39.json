{
    "project_name": "EMResearch-EMB",
    "violation_id": "39",
    "information": {
        "violations": [
            {
                "line": "39",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 145).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        mailMessage.setFrom(sourceAddress);\n        mailMessage.setSubject(\"GitHub crawler failed to fetch data\");\n        mailMessage.setText(format(\"%s\\n%s\", e.getMessage(), stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n        return mailMessage;\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/39/MailSender.java\nindex c655fc6e986..72f54b1bfcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/39/MailSender.java\n@@ -36,7 +36,8 @@ public class MailSender {\n         mailMessage.setTo(destinationAddress);\n         mailMessage.setFrom(sourceAddress);\n         mailMessage.setSubject(\"GitHub crawler failed to fetch data\");\n-        mailMessage.setText(format(\"%s\\n%s\", e.getMessage(), stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n+        mailMessage.setText(format(\"%s\\n%s\", e.getMessage(),\n+            stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n         return mailMessage;\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/39/MailSender.java\nindex c655fc6e986..abec6d3395f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/39/MailSender.java\n@@ -19,9 +19,9 @@ public class MailSender {\n \n     @Autowired\n     public MailSender(JavaMailSender javaMailSender,\n-                      @Value(\"${mail.to}\") String destinationAddress,\n+        @Value(\"${mail.to}\") String destinationAddress,\n                       @Value(\"${mail.from}\") String sourceAddress) {\n-        this.javaMailSender = javaMailSender;\n+    this.javaMailSender = javaMailSender;\n         this.destinationAddress = destinationAddress;\n         this.sourceAddress = sourceAddress;\n     }\n@@ -40,4 +40,4 @@ public class MailSender {\n         return mailMessage;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/39/MailSender.java\nindex c655fc6e986..13196beab0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/39/MailSender.java\n@@ -10,6 +10,7 @@ import static java.lang.String.format;\n import static java.util.Arrays.stream;\n import static java.util.stream.Collectors.joining;\n \n+\n @Service\n public class MailSender {\n \n@@ -19,8 +20,10 @@ public class MailSender {\n \n     @Autowired\n     public MailSender(JavaMailSender javaMailSender,\n-                      @Value(\"${mail.to}\") String destinationAddress,\n-                      @Value(\"${mail.from}\") String sourceAddress) {\n+                      @Value(\"${mail.to}\")\n+                          String destinationAddress,\n+                      @Value(\"${mail.from}\")\n+                          String sourceAddress) {\n         this.javaMailSender = javaMailSender;\n         this.destinationAddress = destinationAddress;\n         this.sourceAddress = sourceAddress;\n@@ -36,8 +39,10 @@ public class MailSender {\n         mailMessage.setTo(destinationAddress);\n         mailMessage.setFrom(sourceAddress);\n         mailMessage.setSubject(\"GitHub crawler failed to fetch data\");\n-        mailMessage.setText(format(\"%s\\n%s\", e.getMessage(), stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n+        mailMessage.setText(format(\"%s\\n%s\",\n+                                   e.getMessage(),\n+                                   stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n         return mailMessage;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "39",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "37",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "37",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "39",
                    "column": "48",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "41",
                    "column": "13",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/styler/05_predictions/random/files-repaired/39/MailSender.java\nindex c655fc6e986..5f4df5964cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/39/MailSender.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/styler/05_predictions/random/files-repaired/39/MailSender.java\n@@ -36,7 +36,9 @@ public class MailSender {\n         mailMessage.setTo(destinationAddress);\n         mailMessage.setFrom(sourceAddress);\n         mailMessage.setSubject(\"GitHub crawler failed to fetch data\");\n-        mailMessage.setText(format(\"%s\\n%s\", e.getMessage(), stream(e.getStackTrace()).map(StackTraceElement::toString).collect(joining(\"\\n\"))));\n+        mailMessage.setText( format ( \"%s\\n%s\" ,e.getMessage(\n+        ),stream(e.getStackTrace()).\n+        map (StackTraceElement::toString).collect(joining(\"\\n\"))));\n         return mailMessage;\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}