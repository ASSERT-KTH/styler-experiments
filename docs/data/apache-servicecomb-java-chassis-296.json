{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "296",
    "information": {
        "violations": [
            {
                "line": "67",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      startListen(startFuture);\n    } catch (Throwable e) {\n      // vert.x got some states that not print error and execute call back in VertexUtils.blockDeploy, we add a log our self.\n      LOGGER.error(\"\", e);\n      throw e;\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/296/HighwayServerVerticle.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/296/HighwayServerVerticle.java\nindex 162c63ff5f4..e80982bf3bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/296/HighwayServerVerticle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/296/HighwayServerVerticle.java\n@@ -93,4 +93,4 @@ public class HighwayServerVerticle extends AbstractVerticle {\n       startFuture.fail(ar.cause());\n     });\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/296/HighwayServerVerticle.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/296/HighwayServerVerticle.java\nindex 162c63ff5f4..9a31ea9a381 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/296/HighwayServerVerticle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/296/HighwayServerVerticle.java\n@@ -19,14 +19,12 @@ package org.apache.servicecomb.transport.highway;\n \n import java.net.InetSocketAddress;\n import java.util.concurrent.atomic.AtomicInteger;\n-\n import org.apache.servicecomb.core.Endpoint;\n import org.apache.servicecomb.core.transport.AbstractTransport;\n import org.apache.servicecomb.foundation.common.net.URIEndpointObject;\n import org.apache.servicecomb.foundation.common.utils.BeanUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import io.vertx.core.AbstractVerticle;\n import io.vertx.core.Context;\n import io.vertx.core.Future;\n@@ -83,8 +81,8 @@ public class HighwayServerVerticle extends AbstractVerticle {\n       if (ar.succeeded()) {\n         InetSocketAddress socketAddress = ar.result();\n         LOGGER.info(\"highway listen success. address={}:{}\",\n-            socketAddress.getHostString(),\n-            socketAddress.getPort());\n+socketAddress.getHostString(),\n+socketAddress.getPort());\n         startFuture.complete();\n         return;\n       }\n@@ -93,4 +91,4 @@ public class HighwayServerVerticle extends AbstractVerticle {\n       startFuture.fail(ar.cause());\n     });\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}