{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1734",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1734/LogPruning.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1734/LogPruning.java\nindex 74e619ecf58..9b1eaed94d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1734/LogPruning.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1734/LogPruning.java\n@@ -17,38 +17,39 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n public interface LogPruning\n {\n-    /**\n-     * Prunes logs that have version less than {@code currentVersion}. This is a best effort service and there is no\n-     * guarantee that any logs will be removed.\n-     *\n-     * @param currentVersion The lowest version expected to remain after pruning completes.\n-     */\n-    void pruneLogs( long currentVersion );\n+  /**\n+   * Prunes logs that have version less than {@code currentVersion}. This is a best effort service and there is no\n+   * guarantee that any logs will be removed.\n+   *\n+   * @param currentVersion The lowest version expected to remain after pruning completes.\n+   */\n+  void pruneLogs(long currentVersion);\n \n-    /**\n-     * Check if there might be a desire to prune logs. This could be used as a hint to schedule some log pruning soon,\n-     * and/or increase the check pointing frequency.\n-     *\n-     * @return {@code true} if calling {@link #pruneLogs(long)} now <em>might</em> cause log files to be deleted.\n-     * Otherwise {@code false} if we are pretty sure that we don't need to prune any logs right now.\n-     */\n-    boolean mightHaveLogsToPrune();\n+  /**\n+   * Check if there might be a desire to prune logs. This could be used as a hint to schedule some log pruning soon,\n+   * and/or increase the check pointing frequency.\n+   *\n+   * @return {@code true} if calling {@link #pruneLogs(long)} now <em>might</em> cause log files to be deleted.\n+   * Otherwise {@code false} if we are pretty sure that we don't need to prune any logs right now.\n+   */\n+  boolean mightHaveLogsToPrune();\n \n-    LogPruning NO_PRUNING = new LogPruning()\n+  LogPruning NO_PRUNING = new LogPruning()\n+  {\n+    @Override\n+    public void pruneLogs(long currentVersion)\n     {\n-        @Override\n-        public void pruneLogs( long currentVersion )\n-        {\n-        }\n+    }\n \n-        @Override\n-        public boolean mightHaveLogsToPrune()\n-        {\n-            return false;\n-        }\n-    };\n+    @Override\n+    public boolean mightHaveLogsToPrune()\n+    {\n+      return false;\n+    }\n+  };\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1734/LogPruning.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1734/LogPruning.java\nindex 74e619ecf58..c628a6f089d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1734/LogPruning.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1734/LogPruning.java\n@@ -37,8 +37,7 @@ public interface LogPruning\n      * Otherwise {@code false} if we are pretty sure that we don't need to prune any logs right now.\n      */\n     boolean mightHaveLogsToPrune();\n-\n-    LogPruning NO_PRUNING = new LogPruning()\n+LogPruning NO_PRUNING = new LogPruning()\n     {\n         @Override\n         public void pruneLogs( long currentVersion )\n@@ -51,4 +50,4 @@ public interface LogPruning\n             return false;\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}