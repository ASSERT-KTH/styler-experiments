{
    "project_name": "intuit-Tank",
    "violation_id": "35",
    "information": {
        "violations": [
            {
                "line": "36",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * \n */\n@XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class HDTestVariables {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "36",
                    "column": "60",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "36",
                    "column": "75",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/35/HDTestVariables.java\nindex a20722941b3..3be795c6bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/35/HDTestVariables.java\n@@ -33,8 +33,8 @@ import javax.xml.bind.annotation.XmlType;\n  * @author dangleton\n  * \n  */\n-@XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"variables\", propOrder = { \"allowOverride\" , \"variables\" },namespace\n+=HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n public class HDTestVariables {\n \n     @XmlAttribute\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/35/HDTestVariables.java\nindex a20722941b3..2e8794d7753 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/35/HDTestVariables.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.harness.data;\n \n /*\n@@ -29,83 +30,80 @@ import javax.xml.bind.annotation.XmlType;\n \n /**\n  * HDTestVariables\n- * \n+ *\n  * @author dangleton\n- * \n  */\n-@XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"variables\", propOrder = {\"allowOverride\", \"variables\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDTestVariables {\n \n-    @XmlAttribute\n-    private boolean allowOverride;\n-\n-    @XmlElementWrapper(name = \"variables\")\n-    private List<HDVariable> variables = new ArrayList<HDVariable>();\n-\n-    /**\n-     * \n-     */\n-    public HDTestVariables() {\n-        super();\n-    }\n-\n-    /**\n-     * @param allowOverride\n-     */\n-    public HDTestVariables(boolean allowOverride) {\n-        super();\n-        this.allowOverride = allowOverride;\n+  @XmlAttribute\n+  private boolean allowOverride;\n+\n+  @XmlElementWrapper(name = \"variables\")\n+  private List<HDVariable> variables = new ArrayList<HDVariable>();\n+\n+  /**\n+   *\n+   */\n+  public HDTestVariables() {\n+    super();\n+  }\n+\n+  /**\n+   * @param allowOverride\n+   */\n+  public HDTestVariables(boolean allowOverride) {\n+    super();\n+    this.allowOverride = allowOverride;\n+  }\n+\n+  /**\n+   * @param allowOverride\n+   */\n+  public HDTestVariables(boolean allowOverride, Map<String, String> vars) {\n+    super();\n+    this.allowOverride = allowOverride;\n+    addVariables(vars);\n+  }\n+\n+  /**\n+   * @return the allowOverride\n+   */\n+  public boolean isAllowOverride() {\n+    return allowOverride;\n+  }\n+\n+  /**\n+   * @param allowOverride the allowOverride to set\n+   */\n+  public void setAllowOverride(boolean allowOverride) {\n+    this.allowOverride = allowOverride;\n+  }\n+\n+  /**\n+   * @return the variables\n+   */\n+  public List<HDVariable> getVariables() {\n+    return variables;\n+  }\n+\n+  /**\n+   * @param variables the variables to set\n+   */\n+  public void setVariables(List<HDVariable> variables) {\n+    this.variables = variables;\n+  }\n+\n+  public void addVariable(String key, String value) {\n+    this.variables.add(new HDVariable(key, value));\n+  }\n+\n+  public void addVariables(Map<String, String> vars) {\n+    for (Entry<String, String> var : vars.entrySet()) {\n+      this.variables.add(new HDVariable(var.getKey(), var.getValue()));\n     }\n \n-    /**\n-     * @param allowOverride\n-     */\n-    public HDTestVariables(boolean allowOverride, Map<String, String> vars) {\n-        super();\n-        this.allowOverride = allowOverride;\n-        addVariables(vars);\n-    }\n-\n-    /**\n-     * @return the allowOverride\n-     */\n-    public boolean isAllowOverride() {\n-        return allowOverride;\n-    }\n-\n-    /**\n-     * @param allowOverride\n-     *            the allowOverride to set\n-     */\n-    public void setAllowOverride(boolean allowOverride) {\n-        this.allowOverride = allowOverride;\n-    }\n-\n-    /**\n-     * @return the variables\n-     */\n-    public List<HDVariable> getVariables() {\n-        return variables;\n-    }\n-\n-    /**\n-     * @param variables\n-     *            the variables to set\n-     */\n-    public void setVariables(List<HDVariable> variables) {\n-        this.variables = variables;\n-    }\n-\n-    public void addVariable(String key, String value) {\n-        this.variables.add(new HDVariable(key, value));\n-    }\n-\n-    public void addVariables(Map<String, String> vars) {\n-        for (Entry<String, String> var : vars.entrySet()) {\n-            this.variables.add(new HDVariable(var.getKey(), var.getValue()));\n-        }\n-\n-    }\n+  }\n \n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/35/HDTestVariables.java\nindex a20722941b3..dd33286cf95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/35/HDTestVariables.java\n@@ -108,4 +108,4 @@ public class HDTestVariables {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/35/HDTestVariables.java\nindex a20722941b3..810dc06a2cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/35/HDTestVariables.java\n@@ -16,11 +16,12 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n-\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n@@ -33,10 +34,10 @@ import javax.xml.bind.annotation.XmlType;\n  * @author dangleton\n  * \n  */\n+\n @XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDTestVariables {\n-\n     @XmlAttribute\n     private boolean allowOverride;\n \n@@ -46,6 +47,7 @@ public class HDTestVariables {\n     /**\n      * \n      */\n+\n     public HDTestVariables() {\n         super();\n     }\n@@ -53,6 +55,8 @@ public class HDTestVariables {\n     /**\n      * @param allowOverride\n      */\n+\n+\n     public HDTestVariables(boolean allowOverride) {\n         super();\n         this.allowOverride = allowOverride;\n@@ -61,6 +65,8 @@ public class HDTestVariables {\n     /**\n      * @param allowOverride\n      */\n+\n+\n     public HDTestVariables(boolean allowOverride, Map<String, String> vars) {\n         super();\n         this.allowOverride = allowOverride;\n@@ -70,6 +76,8 @@ public class HDTestVariables {\n     /**\n      * @return the allowOverride\n      */\n+\n+\n     public boolean isAllowOverride() {\n         return allowOverride;\n     }\n@@ -78,6 +86,8 @@ public class HDTestVariables {\n      * @param allowOverride\n      *            the allowOverride to set\n      */\n+\n+\n     public void setAllowOverride(boolean allowOverride) {\n         this.allowOverride = allowOverride;\n     }\n@@ -85,6 +95,8 @@ public class HDTestVariables {\n     /**\n      * @return the variables\n      */\n+\n+\n     public List<HDVariable> getVariables() {\n         return variables;\n     }\n@@ -93,19 +105,22 @@ public class HDTestVariables {\n      * @param variables\n      *            the variables to set\n      */\n+\n+\n     public void setVariables(List<HDVariable> variables) {\n         this.variables = variables;\n     }\n \n+\n     public void addVariable(String key, String value) {\n         this.variables.add(new HDVariable(key, value));\n     }\n \n+\n     public void addVariables(Map<String, String> vars) {\n         for (Entry<String, String> var : vars.entrySet()) {\n             this.variables.add(new HDVariable(var.getKey(), var.getValue()));\n         }\n-\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "36",
                    "column": "60",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "36",
                    "column": "75",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "1",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/35/HDTestVariables.java\nindex a20722941b3..3be795c6bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/35/HDTestVariables.java\n@@ -33,8 +33,8 @@ import javax.xml.bind.annotation.XmlType;\n  * @author dangleton\n  * \n  */\n-@XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"variables\", propOrder = { \"allowOverride\" , \"variables\" },namespace\n+=HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n public class HDTestVariables {\n \n     @XmlAttribute\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "37",
                    "column": "14",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "14",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "26",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "36",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "36",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "53",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "66",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "37",
                    "column": "76",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "76",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/35/HDTestVariables.java\nindex a20722941b3..fb5d1834c86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/35/HDTestVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/35/HDTestVariables.java\n@@ -33,7 +33,8 @@ import javax.xml.bind.annotation.XmlType;\n  * @author dangleton\n  * \n  */\n-@XmlType(name = \"variables\", propOrder = { \"allowOverride\", \"variables\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+\n+@XmlType(name=\"variables\",propOrder={\"allowOverride\",\"variables\"},namespace=HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDTestVariables {\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}