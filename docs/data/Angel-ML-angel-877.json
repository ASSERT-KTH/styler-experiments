{
    "project_name": "Angel-ML-angel",
    "violation_id": "877",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/877/ComputeW.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/877/ComputeW.java\nindex bcd0aa8a058..3d58341c2dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/877/ComputeW.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/877/ComputeW.java\n@@ -27,37 +27,38 @@ import com.tencent.angel.ps.storage.vector.ServerRow;\n \n public class ComputeW extends MultiRowUpdateFunc {\n \n-  public ComputeW(int matrixId, int[] rowIds, double[][] values) {\n-    super(matrixId, rowIds, values);\n-  }\n-\n-  public ComputeW(int matrixId, double alpha, double beta, double lambda1, double lambda2) {\n-    this(matrixId, new int[]{0, 1, 2}, new double[][]{{alpha, beta, lambda1, lambda2}});\n-  }\n-\n-  public ComputeW() {}\n-\n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    if (partParam instanceof MultiRowPartitionUpdateParam) {\n-      MultiRowPartitionUpdateParam param = (MultiRowPartitionUpdateParam) partParam;\n-      int[] rowIds = param.getRowIds();\n-      double[][] values = param.getValues();\n-      double alpha = values[0][0];\n-      double beta  = values[0][1];\n-      double lambda1 = values[0][2];\n-      double lambda2 = values[0][3];\n-\n-      ServerPartition part = psContext.getMatrixStorageManager().getPart(param.getPartKey());\n-      Vector z = part.getRow(rowIds[0]).getSplit();\n-      Vector n = part.getRow(rowIds[1]).getSplit();\n-      Vector w = Ufuncs.ftrlthreshold(z, n, alpha, beta, lambda1, lambda2);\n-      part.getRow(rowIds[2]).setSplit(w.filter(1e-11));\n+    public ComputeW(int matrixId, int[] rowIds, double[][] values) {\n+        super(matrixId, rowIds, values);\n     }\n-  }\n \n-  @Override\n-  public void update(ServerRow row, double[] values) {\n-    // Do nothing.\n-  }\n+    public ComputeW(int matrixId, double alpha, double beta, double lambda1, double lambda2) {\n+        this(matrixId, new int[] {0, 1, 2}, new double[][] {{alpha, beta, lambda1, lambda2}});\n+    }\n+\n+    public ComputeW() {\n+    }\n+\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        if (partParam instanceof MultiRowPartitionUpdateParam) {\n+            MultiRowPartitionUpdateParam param = (MultiRowPartitionUpdateParam) partParam;\n+            int[] rowIds = param.getRowIds();\n+            double[][] values = param.getValues();\n+            double alpha = values[0][0];\n+            double beta = values[0][1];\n+            double lambda1 = values[0][2];\n+            double lambda2 = values[0][3];\n+\n+            ServerPartition part = psContext.getMatrixStorageManager().getPart(param.getPartKey());\n+            Vector z = part.getRow(rowIds[0]).getSplit();\n+            Vector n = part.getRow(rowIds[1]).getSplit();\n+            Vector w = Ufuncs.ftrlthreshold(z, n, alpha, beta, lambda1, lambda2);\n+            part.getRow(rowIds[2]).setSplit(w.filter(1e-11));\n+        }\n+    }\n+\n+    @Override\n+    public void update(ServerRow row, double[] values) {\n+        // Do nothing.\n+    }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/877/ComputeW.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/877/ComputeW.java\nindex bcd0aa8a058..a3b49b7025e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/877/ComputeW.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/877/ComputeW.java\n@@ -44,7 +44,7 @@ public class ComputeW extends MultiRowUpdateFunc {\n       int[] rowIds = param.getRowIds();\n       double[][] values = param.getValues();\n       double alpha = values[0][0];\n-      double beta  = values[0][1];\n+      double beta = values[0][1];\n       double lambda1 = values[0][2];\n       double lambda2 = values[0][3];\n \n@@ -60,4 +60,4 @@ public class ComputeW extends MultiRowUpdateFunc {\n   public void update(ServerRow row, double[] values) {\n     // Do nothing.\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}