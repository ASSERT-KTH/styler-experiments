{
    "project_name": "Angel-ML-angel",
    "violation_id": "302",
    "information": {
        "violations": [
            {
                "line": "25",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 116).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partParam.getPartKey(), 0);\n    return new ScalarPartitionAggrResult(row.size());\n  }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/302/NumNodes.java\nindex 03a36773f2e..114da482679 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/302/NumNodes.java\n@@ -22,7 +22,9 @@ public class NumNodes extends GetFunc {\n \n   @Override\n   public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partParam.getPartKey(), 0);\n+    ServerLongAnyRow row = (ServerLongAnyRow)psContext.getMatrixStorageManager()\n+        . getRow( partParam . getPartKey( ) ,0)\n+  ;\n     return new ScalarPartitionAggrResult(row.size());\n   }\n \n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/302/NumNodes.java\nindex 03a36773f2e..a04ef895c0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/302/NumNodes.java\n@@ -8,33 +8,34 @@ import java.util.List;\n \n public class NumNodes extends GetFunc {\n \n-  public NumNodes(int matrixId) {\n-    this(new GetParam(matrixId));\n-  }\n-\n-  public NumNodes(GetParam param) {\n-    super(param);\n-  }\n-\n-  public NumNodes() {\n-    super(null);\n-  }\n-\n-  @Override\n-  public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partParam.getPartKey(), 0);\n-    return new ScalarPartitionAggrResult(row.size());\n-  }\n-\n-  @Override\n-  public GetResult merge(List<PartitionGetResult> partResults) {\n-    long numNodes = 0;\n-    for (PartitionGetResult result : partResults) {\n-      if (result instanceof ScalarPartitionAggrResult) {\n-        long value = (long)((ScalarPartitionAggrResult) result).result;\n-        numNodes += value;\n-      }\n+    public NumNodes(int matrixId) {\n+        this(new GetParam(matrixId));\n+    }\n+\n+    public NumNodes(GetParam param) {\n+        super(param);\n+    }\n+\n+    public NumNodes() {\n+        super(null);\n+    }\n+\n+    @Override\n+    public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n+        ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n+                .getRow(partParam.getPartKey(), 0);\n+        return new ScalarPartitionAggrResult(row.size());\n+    }\n+\n+    @Override\n+    public GetResult merge(List<PartitionGetResult> partResults) {\n+        long numNodes = 0;\n+        for (PartitionGetResult result : partResults) {\n+            if (result instanceof ScalarPartitionAggrResult) {\n+                long value = (long) ((ScalarPartitionAggrResult) result).result;\n+                numNodes += value;\n+            }\n+        }\n+        return new NumNodesResult(numNodes);\n     }\n-    return new NumNodesResult(numNodes);\n-  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/302/NumNodes.java\nindex 03a36773f2e..2247c2a11bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/302/NumNodes.java\n@@ -37,4 +37,4 @@ public class NumNodes extends GetFunc {\n     }\n     return new NumNodesResult(numNodes);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/302/NumNodes.java\nindex 03a36773f2e..0431bf09240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/302/NumNodes.java\n@@ -3,7 +3,6 @@ package com.tencent.angel.spark.ml.psf.hyperanf;\n import com.tencent.angel.ml.matrix.psf.aggr.enhance.ScalarPartitionAggrResult;\n import com.tencent.angel.ml.matrix.psf.get.base.*;\n import com.tencent.angel.ps.storage.vector.ServerLongAnyRow;\n-\n import java.util.List;\n \n public class NumNodes extends GetFunc {\n@@ -31,10 +30,11 @@ public class NumNodes extends GetFunc {\n     long numNodes = 0;\n     for (PartitionGetResult result : partResults) {\n       if (result instanceof ScalarPartitionAggrResult) {\n-        long value = (long)((ScalarPartitionAggrResult) result).result;\n+        long value = (long) ((ScalarPartitionAggrResult) result).result;\n         numNodes += value;\n       }\n     }\n     return new NumNodesResult(numNodes);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/302/NumNodes.java\nindex 03a36773f2e..114da482679 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/302/NumNodes.java\n@@ -22,7 +22,9 @@ public class NumNodes extends GetFunc {\n \n   @Override\n   public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partParam.getPartKey(), 0);\n+    ServerLongAnyRow row = (ServerLongAnyRow)psContext.getMatrixStorageManager()\n+        . getRow( partParam . getPartKey( ) ,0)\n+  ;\n     return new ScalarPartitionAggrResult(row.size());\n   }\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/302/NumNodes.java\nindex 03a36773f2e..592d3008455 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/302/NumNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/302/NumNodes.java\n@@ -22,7 +22,9 @@ public class NumNodes extends GetFunc {\n \n   @Override\n   public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(partParam.getPartKey(), 0);\n+    ServerLongAnyRow row =(\n+        ServerLongAnyRow )psContext . getMatrixStorageManager(\n+    ) .getRow(partParam.getPartKey(), 0);\n     return new ScalarPartitionAggrResult(row.size());\n   }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}