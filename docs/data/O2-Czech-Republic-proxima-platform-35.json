{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "violation_id": "35",
    "information": {
        "violations": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 100).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "          conn.close();\n        }\n        conn = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n        client = conn.getTable(tableName());\n      } catch (IOException ex) {\n        log.error(\"Error connecting to cluster\", ex);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/35/HBaseClientWrapper.java\nindex 241047b34ec..81252c59e1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/35/HBaseClientWrapper.java\n@@ -60,8 +60,9 @@ class HBaseClientWrapper implements AutoCloseable {\n         if (conn != null && !conn.isClosed()) {\n           conn.close();\n         }\n-        conn = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n-        client = conn.getTable(tableName());\n+      conn\n+        = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n+         client = conn.getTable(tableName());\n       } catch (IOException ex) {\n         log.error(\"Error connecting to cluster\", ex);\n         throw new RuntimeException(ex);\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/35/HBaseClientWrapper.java\nindex 241047b34ec..6e74ba54948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/35/HBaseClientWrapper.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.hbase;\n \n import java.io.ByteArrayInputStream;\n@@ -38,8 +39,10 @@ class HBaseClientWrapper implements AutoCloseable {\n   final URI uri;\n   final byte[] serializedConf;\n   final byte[] family;\n-  @Nullable Connection conn;\n-  @Nullable Table client;\n+  @Nullable\n+  Connection conn;\n+  @Nullable\n+  Table client;\n \n   HBaseClientWrapper(URI uri, Configuration conf) {\n     this.uri = uri;\n@@ -60,7 +63,8 @@ class HBaseClientWrapper implements AutoCloseable {\n         if (conn != null && !conn.isClosed()) {\n           conn.close();\n         }\n-        conn = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n+        conn = ConnectionFactory.createConnection(\n+            deserialize(serializedConf, new Configuration()));\n         client = conn.getTable(tableName());\n       } catch (IOException ex) {\n         log.error(\"Error connecting to cluster\", ex);\n@@ -87,7 +91,7 @@ class HBaseClientWrapper implements AutoCloseable {\n \n   private static byte[] serialize(Writable obj) {\n     try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        DataOutputStream dos = new DataOutputStream(baos)) {\n+         DataOutputStream dos = new DataOutputStream(baos)) {\n \n       obj.write(dos);\n       dos.flush();\n@@ -99,7 +103,7 @@ class HBaseClientWrapper implements AutoCloseable {\n \n   static <W extends Writable> W deserialize(byte[] bytes, W obj) {\n     try (ByteArrayInputStream bais = new ByteArrayInputStream(bytes);\n-        DataInputStream dis = new DataInputStream(bais)) {\n+         DataInputStream dis = new DataInputStream(bais)) {\n       obj.readFields(dis);\n       return obj;\n     } catch (IOException ex) {\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/35/HBaseClientWrapper.java\nindex 241047b34ec..a3c275283d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/35/HBaseClientWrapper.java\n@@ -34,7 +34,6 @@ import org.apache.hadoop.io.Writable;\n /** Class containing embedded HBase client. */\n @Slf4j\n class HBaseClientWrapper implements AutoCloseable {\n-\n   final URI uri;\n   final byte[] serializedConf;\n   final byte[] family;\n@@ -88,8 +87,7 @@ class HBaseClientWrapper implements AutoCloseable {\n   private static byte[] serialize(Writable obj) {\n     try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         DataOutputStream dos = new DataOutputStream(baos)) {\n-\n-      obj.write(dos);\n+  obj.write(dos);\n       dos.flush();\n       return baos.toByteArray();\n     } catch (IOException ex) {\n@@ -106,4 +104,4 @@ class HBaseClientWrapper implements AutoCloseable {\n       throw new RuntimeException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/35/HBaseClientWrapper.java\nindex 241047b34ec..322f4b33e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/35/HBaseClientWrapper.java\n@@ -32,13 +32,19 @@ import org.apache.hadoop.hbase.client.Table;\n import org.apache.hadoop.io.Writable;\n \n /** Class containing embedded HBase client. */\n+\n+\n @Slf4j\n class HBaseClientWrapper implements AutoCloseable {\n \n   final URI uri;\n+\n   final byte[] serializedConf;\n+\n   final byte[] family;\n+\n   @Nullable Connection conn;\n+\n   @Nullable Table client;\n \n   HBaseClientWrapper(URI uri, Configuration conf) {\n@@ -88,7 +94,6 @@ class HBaseClientWrapper implements AutoCloseable {\n   private static byte[] serialize(Writable obj) {\n     try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         DataOutputStream dos = new DataOutputStream(baos)) {\n-\n       obj.write(dos);\n       dos.flush();\n       return baos.toByteArray();\n@@ -106,4 +111,4 @@ class HBaseClientWrapper implements AutoCloseable {\n       throw new RuntimeException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/35/HBaseClientWrapper.java\nindex 241047b34ec..81252c59e1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/35/HBaseClientWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/35/HBaseClientWrapper.java\n@@ -60,8 +60,9 @@ class HBaseClientWrapper implements AutoCloseable {\n         if (conn != null && !conn.isClosed()) {\n           conn.close();\n         }\n-        conn = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n-        client = conn.getTable(tableName());\n+      conn\n+        = ConnectionFactory.createConnection(deserialize(serializedConf, new Configuration()));\n+         client = conn.getTable(tableName());\n       } catch (IOException ex) {\n         log.error(\"Error connecting to cluster\", ex);\n         throw new RuntimeException(ex);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}