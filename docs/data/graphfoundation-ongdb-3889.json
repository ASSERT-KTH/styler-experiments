{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3889",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3889/WaitingOnLockEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3889/WaitingOnLockEvent.java\nindex 9c97767649d..92a7cc70778 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3889/WaitingOnLockEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3889/WaitingOnLockEvent.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.query;\n \n import org.neo4j.kernel.impl.locking.LockWaitEvent;\n@@ -31,36 +32,36 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n  */\n class WaitingOnLockEvent extends WaitingOnLock implements LockWaitEvent\n {\n-    private final ExecutingQueryStatus previous;\n-    private final ExecutingQuery executingQuery;\n+  private final ExecutingQueryStatus previous;\n+  private final ExecutingQuery executingQuery;\n \n-    WaitingOnLockEvent(\n-            String mode,\n-            ResourceType resourceType,\n-            long[] resourceIds,\n-            ExecutingQuery executingQuery,\n-            long currentTimeNanos,\n-            ExecutingQueryStatus previous )\n-    {\n-        super( mode, resourceType, resourceIds, currentTimeNanos );\n-        this.executingQuery = executingQuery;\n-        this.previous = previous;\n-    }\n+  WaitingOnLockEvent(\n+      String mode,\n+      ResourceType resourceType,\n+      long[] resourceIds,\n+      ExecutingQuery executingQuery,\n+      long currentTimeNanos,\n+      ExecutingQueryStatus previous)\n+  {\n+    super(mode, resourceType, resourceIds, currentTimeNanos);\n+    this.executingQuery = executingQuery;\n+    this.previous = previous;\n+  }\n \n-    ExecutingQueryStatus previousStatus()\n-    {\n-        return previous;\n-    }\n+  ExecutingQueryStatus previousStatus()\n+  {\n+    return previous;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        executingQuery.doneWaitingOnLock( this );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    executingQuery.doneWaitingOnLock(this);\n+  }\n \n-    @Override\n-    boolean isPlanning()\n-    {\n-        return previous.isPlanning();\n-    }\n+  @Override\n+  boolean isPlanning()\n+  {\n+    return previous.isPlanning();\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3889/WaitingOnLockEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3889/WaitingOnLockEvent.java\nindex 9c97767649d..53f31ec16fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3889/WaitingOnLockEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3889/WaitingOnLockEvent.java\n@@ -34,8 +34,7 @@ class WaitingOnLockEvent extends WaitingOnLock implements LockWaitEvent\n     private final ExecutingQueryStatus previous;\n     private final ExecutingQuery executingQuery;\n \n-    WaitingOnLockEvent(\n-            String mode,\n+    WaitingOnLockEvent( String mode,\n             ResourceType resourceType,\n             long[] resourceIds,\n             ExecutingQuery executingQuery,\n@@ -63,4 +62,4 @@ class WaitingOnLockEvent extends WaitingOnLock implements LockWaitEvent\n     {\n         return previous.isPlanning();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}