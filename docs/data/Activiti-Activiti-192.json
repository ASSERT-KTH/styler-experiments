{
    "project_name": "Activiti-Activiti",
    "violation_id": "192",
    "information": {
        "violations": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.bpmn.webservice;\n\nimport org.activiti.engine.delegate.DelegateExecution;\nimport org.activiti.engine.delegate.Expression;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/192/MessageImplicitDataOutputAssociation.java\nindex 197217cf662..7aed3c913b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/192/MessageImplicitDataOutputAssociation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/192/MessageImplicitDataOutputAssociation.java\nindex 197217cf662..5873b0bb93f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/192/MessageImplicitDataOutputAssociation.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import org.activiti.engine.delegate.DelegateExecution;\n@@ -20,27 +21,25 @@ import org.activiti.engine.impl.bpmn.data.FieldBaseStructureInstance;\n \n /**\n  * An implicit data output association between a source and a target. source is a property in the message and target is a variable in the current execution context\n- * \n-\n  */\n public class MessageImplicitDataOutputAssociation extends AbstractDataAssociation {\n \n-  private static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n-  public MessageImplicitDataOutputAssociation(String targetRef, Expression sourceExpression) {\n-    super(sourceExpression, targetRef);\n-  }\n+    public MessageImplicitDataOutputAssociation(String targetRef, Expression sourceExpression) {\n+        super(sourceExpression, targetRef);\n+    }\n \n-  public MessageImplicitDataOutputAssociation(String targetRef, String sourceRef) {\n-    super(sourceRef, targetRef);\n-  }\n+    public MessageImplicitDataOutputAssociation(String targetRef, String sourceRef) {\n+        super(sourceRef, targetRef);\n+    }\n \n-  @Override\n-  public void evaluate(DelegateExecution execution) {\n-    MessageInstance message = (MessageInstance) execution.getVariable(WebServiceActivityBehavior.CURRENT_MESSAGE);\n-    if (message.getStructureInstance() instanceof FieldBaseStructureInstance) {\n-      FieldBaseStructureInstance structure = (FieldBaseStructureInstance) message.getStructureInstance();\n-      execution.setVariable(this.getTarget(), structure.getFieldValue(this.getSource()));\n+    @Override\n+    public void evaluate(DelegateExecution execution) {\n+        MessageInstance message = (MessageInstance) execution.getVariable(WebServiceActivityBehavior.CURRENT_MESSAGE);\n+        if (message.getStructureInstance() instanceof FieldBaseStructureInstance) {\n+            FieldBaseStructureInstance structure = (FieldBaseStructureInstance) message.getStructureInstance();\n+            execution.setVariable(this.getTarget(), structure.getFieldValue(this.getSource()));\n+        }\n     }\n-  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/192/MessageImplicitDataOutputAssociation.java\nindex 197217cf662..b64e48b886f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/192/MessageImplicitDataOutputAssociation.java\n@@ -23,6 +23,8 @@ import org.activiti.engine.impl.bpmn.data.FieldBaseStructureInstance;\n  * \n \n  */\n+\n+\n public class MessageImplicitDataOutputAssociation extends AbstractDataAssociation {\n \n   private static final long serialVersionUID = 1L;\n@@ -40,7 +42,8 @@ public class MessageImplicitDataOutputAssociation extends AbstractDataAssociatio\n     MessageInstance message = (MessageInstance) execution.getVariable(WebServiceActivityBehavior.CURRENT_MESSAGE);\n     if (message.getStructureInstance() instanceof FieldBaseStructureInstance) {\n       FieldBaseStructureInstance structure = (FieldBaseStructureInstance) message.getStructureInstance();\n-      execution.setVariable(this.getTarget(), structure.getFieldValue(this.getSource()));\n+      execution.setVariable(this.getTarget(),\n+                            structure.getFieldValue(this.getSource()));\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/192/MessageImplicitDataOutputAssociation.java\nindex 197217cf662..7aed3c913b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/192/MessageImplicitDataOutputAssociation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/192/MessageImplicitDataOutputAssociation.java\nindex 197217cf662..7aed3c913b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/192/MessageImplicitDataOutputAssociation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/192/MessageImplicitDataOutputAssociation.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.bpmn.webservice;\n \n import org.activiti.engine.delegate.DelegateExecution;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}