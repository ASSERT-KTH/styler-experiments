{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1442",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1442/AdapterDocRetrieveProxyJavaImpl.java\nindex 3e93eff9036..c645da20585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1442/AdapterDocRetrieveProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -43,29 +44,29 @@ import org.slf4j.LoggerFactory;\n  */\n public class AdapterDocRetrieveProxyJavaImpl implements AdapterDocRetrieveProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterDocRetrieveProxyJavaImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterDocRetrieveProxyJavaImpl.class);\n \n-    /**\n-     * Retrieve the specified document.\n-     *\n-     * @param request The identifier(s) if the document(s) to be retrieved.\n-     * @param assertion The assertion information.\n-     * @return The retrieved documents.\n-     */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n-    @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n-        LOG.trace(\"Entering AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n+  /**\n+   * Retrieve the specified document.\n+   *\n+   * @param request   The identifier(s) if the document(s) to be retrieved.\n+   * @param assertion The assertion information.\n+   * @return The retrieved documents.\n+   */\n+  @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n+      afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n+      serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+  @Override\n+  public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n+                                                             AssertionType assertion) {\n+    LOG.trace(\"Entering AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n \n-        AdapterDocRetrieveOrchImpl oOrchestrator = new AdapterDocRetrieveOrchImpl();\n-        RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request,\n-                assertion);\n+    AdapterDocRetrieveOrchImpl oOrchestrator = new AdapterDocRetrieveOrchImpl();\n+    RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request,\n+        assertion);\n \n-        LOG.trace(\"Leaving AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n+    LOG.trace(\"Leaving AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n \n-        return oResponse;\n-    }\n+    return oResponse;\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1442/AdapterDocRetrieveProxyJavaImpl.java\nindex 3e93eff9036..e33d138bdce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1442/AdapterDocRetrieveProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docretrieve.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -52,20 +53,15 @@ public class AdapterDocRetrieveProxyJavaImpl implements AdapterDocRetrieveProxy\n      * @param assertion The assertion information.\n      * @return The retrieved documents.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n-    @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n+    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class, afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class, serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+@Override\n+    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n         LOG.trace(\"Entering AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n \n         AdapterDocRetrieveOrchImpl oOrchestrator = new AdapterDocRetrieveOrchImpl();\n-        RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request,\n-                assertion);\n-\n-        LOG.trace(\"Leaving AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n+        RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request, assertion);\n+LOG.trace(\"Leaving AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n \n         return oResponse;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 237).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1442/AdapterDocRetrieveProxyJavaImpl.java\nindex 3e93eff9036..b379ad6d862 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1442/AdapterDocRetrieveProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1442/AdapterDocRetrieveProxyJavaImpl.java\n@@ -41,6 +41,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Les Westberg\n  */\n+\n+\n public class AdapterDocRetrieveProxyJavaImpl implements AdapterDocRetrieveProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterDocRetrieveProxyJavaImpl.class);\n@@ -52,20 +54,16 @@ public class AdapterDocRetrieveProxyJavaImpl implements AdapterDocRetrieveProxy\n      * @param assertion The assertion information.\n      * @return The retrieved documents.\n      */\n-    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class,\n-            afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class,\n-            serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n+\n+\n+    @AdapterDelegationEvent(beforeBuilder = RetrieveDocumentSetRequestTypeDescriptionBuilder.class, afterReturningBuilder = RetrieveDocumentSetResponseTypeDescriptionBuilder.class, serviceType = \"Retrieve Document\", version = \"LEVEL_a0\")\n     @Override\n-    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request,\n-            AssertionType assertion) {\n+    public RetrieveDocumentSetResponseType retrieveDocumentSet(RetrieveDocumentSetRequestType request, AssertionType assertion) {\n         LOG.trace(\"Entering AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n-\n         AdapterDocRetrieveOrchImpl oOrchestrator = new AdapterDocRetrieveOrchImpl();\n-        RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request,\n-                assertion);\n-\n+        RetrieveDocumentSetResponseType oResponse = oOrchestrator.respondingGatewayCrossGatewayRetrieve(request, assertion);\n         LOG.trace(\"Leaving AdapterDocRetrieveProxyJavaImpl.retrieveDocumentSet\");\n-\n         return oResponse;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}