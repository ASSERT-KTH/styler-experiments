{
    "project_name": "couchbase-couchbase-jvm-core",
    "violation_id": "55",
    "information": {
        "violations": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public void shouldQueryNonExistentView() {\n        ViewQueryResponse single = cluster()\n            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n            .toBlocking()\n            .single();\n        assertEquals(ResponseStatus.NOT_EXISTS, single.status());",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/final/files-repaired/55/ViewMessageTest.java\nindex 703aab61c21..6521b81ea64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/final/files-repaired/55/ViewMessageTest.java\n@@ -37,9 +37,8 @@ public class ViewMessageTest extends ClusterDependentTest {\n \n     @Test\n     public void shouldQueryNonExistentView() {\n-        ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n-            .toBlocking()\n+        ViewQueryResponse single = cluster().<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n+        .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/checkstyle_idea/55/ViewMessageTest.java\nindex 703aab61c21..ba7e237b855 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/checkstyle_idea/55/ViewMessageTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.cluster;\n \n import com.couchbase.client.core.message.ResponseStatus;\n@@ -38,7 +39,8 @@ public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n         ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n+            .<ViewQueryResponse>send(\n+                new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n             .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/naturalize/55/ViewMessageTest.java\nindex 703aab61c21..43b3ff5fdd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/naturalize/55/ViewMessageTest.java\n@@ -53,4 +53,4 @@ public class ViewMessageTest extends ClusterDependentTest {\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/codebuff/55/ViewMessageTest.java\nindex 703aab61c21..f2d022744e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/codebuff/55/ViewMessageTest.java\n@@ -23,8 +23,8 @@ import io.netty.buffer.ByteBuf;\n import io.netty.util.ReferenceCountUtil;\n import org.junit.Test;\n import rx.functions.Action1;\n-\n import static org.junit.Assert.assertEquals;\n+\n import static org.junit.Assert.assertNotNull;\n \n /**\n@@ -33,18 +33,14 @@ import static org.junit.Assert.assertNotNull;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n-public class ViewMessageTest extends ClusterDependentTest {\n \n+public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n-        ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n-            .toBlocking()\n-            .single();\n+        ViewQueryResponse single = cluster().<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password())).toBlocking().single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n         assertNotNull(error);\n-\n         single.rows().toBlocking().forEach(new Action1<ByteBuf>() {\n             @Override\n             public void call(ByteBuf byteBuf) {\n@@ -52,5 +48,4 @@ public class ViewMessageTest extends ClusterDependentTest {\n             }\n         });\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "40",
                    "column": "45",
                    "severity": "warning",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'<' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/random/files-repaired/55/ViewMessageTest.java\nindex 703aab61c21..9dfc02de64a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/random/files-repaired/55/ViewMessageTest.java\n@@ -37,9 +37,9 @@ public class ViewMessageTest extends ClusterDependentTest {\n \n     @Test\n     public void shouldQueryNonExistentView() {\n-        ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n-            .toBlocking()\n+        ViewQueryResponse single = cluster().\n+        <ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n+        .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/three_grams/files-repaired/55/ViewMessageTest.java\nindex 703aab61c21..6521b81ea64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/violations/55/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/couchbase-couchbase-jvm-core/styler/05_predictions/three_grams/files-repaired/55/ViewMessageTest.java\n@@ -37,9 +37,8 @@ public class ViewMessageTest extends ClusterDependentTest {\n \n     @Test\n     public void shouldQueryNonExistentView() {\n-        ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n-            .toBlocking()\n+        ViewQueryResponse single = cluster().<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), password()))\n+        .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}