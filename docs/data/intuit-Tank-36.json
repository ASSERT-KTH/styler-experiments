{
    "project_name": "intuit-Tank",
    "violation_id": "36",
    "information": {
        "violations": [
            {
                "line": "25",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class HDValidation {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "25",
                    "column": "42",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "63",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "84",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "95",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/36/HDValidation.java\nindex 165ed8e98a9..5e90ee2fe75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/36/HDValidation.java\n@@ -22,8 +22,8 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(propOrder = {\"headerValidation\" , \"cookieValidation\" , \"bodyValidation\" } , namespace=\n+HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n public class HDValidation {\n \n     @XmlElementWrapper(name = \"headerValidations\")\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/36/HDValidation.java\nindex 165ed8e98a9..85e90cd1083 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/36/HDValidation.java\n@@ -22,39 +22,40 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(propOrder = {\"headerValidation\", \"cookieValidation\",\n+  \"bodyValidation\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDValidation {\n \n-    @XmlElementWrapper(name = \"headerValidations\")\n-    @XmlElement(name = \"validation\")\n-    private List<ValidationData> headerValidation = new ArrayList<ValidationData>();\n-    @XmlElementWrapper(name = \"cookieValidations\")\n-    @XmlElement(name = \"validation\")\n-    private List<ValidationData> cookieValidation = new ArrayList<ValidationData>();\n-    @XmlElementWrapper(name = \"bodyValidations\")\n-    @XmlElement(name = \"validation\")\n-    private List<ValidationData> bodyValidation = new ArrayList<ValidationData>();\n-\n-    /**\n-     * @return the headerValidation\n-     */\n-    public List<ValidationData> getHeaderValidation() {\n-        return headerValidation;\n-    }\n-\n-    /**\n-     * @return the cookieValidation\n-     */\n-    public List<ValidationData> getCookieValidation() {\n-        return cookieValidation;\n-    }\n-\n-    /**\n-     * @return the bodyValidation\n-     */\n-    public List<ValidationData> getBodyValidation() {\n-        return bodyValidation;\n-    }\n+  @XmlElementWrapper(name = \"headerValidations\")\n+  @XmlElement(name = \"validation\")\n+  private List<ValidationData> headerValidation = new ArrayList<ValidationData>();\n+  @XmlElementWrapper(name = \"cookieValidations\")\n+  @XmlElement(name = \"validation\")\n+  private List<ValidationData> cookieValidation = new ArrayList<ValidationData>();\n+  @XmlElementWrapper(name = \"bodyValidations\")\n+  @XmlElement(name = \"validation\")\n+  private List<ValidationData> bodyValidation = new ArrayList<ValidationData>();\n+\n+  /**\n+   * @return the headerValidation\n+   */\n+  public List<ValidationData> getHeaderValidation() {\n+    return headerValidation;\n+  }\n+\n+  /**\n+   * @return the cookieValidation\n+   */\n+  public List<ValidationData> getCookieValidation() {\n+    return cookieValidation;\n+  }\n+\n+  /**\n+   * @return the bodyValidation\n+   */\n+  public List<ValidationData> getBodyValidation() {\n+    return bodyValidation;\n+  }\n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/36/HDValidation.java\nindex 165ed8e98a9..be74b0d9667 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/36/HDValidation.java\n@@ -57,4 +57,4 @@ public class HDValidation {\n         return bodyValidation;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/36/HDValidation.java\nindex 165ed8e98a9..4649ec62687 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/36/HDValidation.java\n@@ -13,9 +13,10 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n-\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlElement;\n@@ -25,13 +26,14 @@ import javax.xml.bind.annotation.XmlType;\n @XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDValidation {\n-\n     @XmlElementWrapper(name = \"headerValidations\")\n     @XmlElement(name = \"validation\")\n     private List<ValidationData> headerValidation = new ArrayList<ValidationData>();\n+\n     @XmlElementWrapper(name = \"cookieValidations\")\n     @XmlElement(name = \"validation\")\n     private List<ValidationData> cookieValidation = new ArrayList<ValidationData>();\n+\n     @XmlElementWrapper(name = \"bodyValidations\")\n     @XmlElement(name = \"validation\")\n     private List<ValidationData> bodyValidation = new ArrayList<ValidationData>();\n@@ -39,6 +41,8 @@ public class HDValidation {\n     /**\n      * @return the headerValidation\n      */\n+\n+\n     public List<ValidationData> getHeaderValidation() {\n         return headerValidation;\n     }\n@@ -46,6 +50,8 @@ public class HDValidation {\n     /**\n      * @return the cookieValidation\n      */\n+\n+\n     public List<ValidationData> getCookieValidation() {\n         return cookieValidation;\n     }\n@@ -53,8 +59,10 @@ public class HDValidation {\n     /**\n      * @return the bodyValidation\n      */\n+\n+\n     public List<ValidationData> getBodyValidation() {\n         return bodyValidation;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "25",
                    "column": "42",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "63",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "84",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "25",
                    "column": "95",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/36/HDValidation.java\nindex 165ed8e98a9..5e90ee2fe75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/36/HDValidation.java\n@@ -22,8 +22,8 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(propOrder = {\"headerValidation\" , \"cookieValidation\" , \"bodyValidation\" } , namespace=\n+HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n public class HDValidation {\n \n     @XmlElementWrapper(name = \"headerValidations\")\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "25",
                    "column": "19",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "25",
                    "column": "19",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "25",
                    "column": "39",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "25",
                    "column": "58",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "25",
                    "column": "76",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "25",
                    "column": "86",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "25",
                    "column": "86",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/36/HDValidation.java\nindex 165ed8e98a9..b5abc1908c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/36/HDValidation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/36/HDValidation.java\n@@ -22,8 +22,7 @@ import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlElementWrapper;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(propOrder = { \"headerValidation\", \"cookieValidation\", \"bodyValidation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n-@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(propOrder={\"headerValidation\",\"cookieValidation\",\"bodyValidation\"},namespace=HarnessDataNamespace.NAMESPACE_V1)@XmlAccessorType(XmlAccessType.FIELD)\n public class HDValidation {\n \n     @XmlElementWrapper(name = \"headerValidations\")\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}