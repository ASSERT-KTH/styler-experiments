{
    "project_name": "Angel-ML-angel",
    "violation_id": "354",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/354/PullNeighborPartitionResult.java\nindex b539e2f5659..49ba3e87f24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/354/PullNeighborPartitionResult.java\n@@ -14,6 +14,7 @@\n  * the License.\r\n  *\r\n  */\r\n+\r\n package com.tencent.angel.graph.embedding.node2vec;\r\n \r\n import com.tencent.angel.graph.client.node2vec.utils.SerDe;\r\n@@ -23,33 +24,33 @@ import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \r\n public class PullNeighborPartitionResult extends PartitionGetResult {\r\n \r\n-  private Long2ObjectOpenHashMap<long[]> partResult;\r\n+    private Long2ObjectOpenHashMap<long[]> partResult;\r\n \r\n-  public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\r\n-    super();\r\n-    this.partResult = part;\r\n-  }\r\n+    public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\r\n+        super();\r\n+        this.partResult = part;\r\n+    }\r\n \r\n-  public PullNeighborPartitionResult() {\r\n-    super();\r\n-  }\r\n+    public PullNeighborPartitionResult() {\r\n+        super();\r\n+    }\r\n \r\n-  public Long2ObjectOpenHashMap<long[]> getPartResult() {\r\n-    return partResult;\r\n-  }\r\n+    public Long2ObjectOpenHashMap<long[]> getPartResult() {\r\n+        return partResult;\r\n+    }\r\n \r\n-  @Override\r\n-  public void serialize(ByteBuf output) {\r\n-    SerDe.serLong2ArrayHashMap(partResult, output);\r\n-  }\r\n+    @Override\r\n+    public void serialize(ByteBuf output) {\r\n+        SerDe.serLong2ArrayHashMap(partResult, output);\r\n+    }\r\n \r\n-  @Override\r\n-  public void deserialize(ByteBuf input) {\r\n-    this.partResult = SerDe.deserLong2LongArray(input);\r\n-  }\r\n+    @Override\r\n+    public void deserialize(ByteBuf input) {\r\n+        this.partResult = SerDe.deserLong2LongArray(input);\r\n+    }\r\n \r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return SerDe.getLong2ArrayHashMapSerSize(partResult);\r\n-  }\r\n+    @Override\r\n+    public int bufferLen() {\r\n+        return SerDe.getLong2ArrayHashMapSerSize(partResult);\r\n+    }\r\n }\r\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/354/PullNeighborPartitionResult.java\nindex b539e2f5659..a4c8cf140de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/354/PullNeighborPartitionResult.java\n@@ -52,4 +52,4 @@ public class PullNeighborPartitionResult extends PartitionGetResult {\n   public int bufferLen() {\r\n     return SerDe.getLong2ArrayHashMapSerSize(partResult);\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/354/PullNeighborPartitionResult.java\nindex b539e2f5659..e574adfaa23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/354/PullNeighborPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/354/PullNeighborPartitionResult.java\n@@ -14,42 +14,43 @@\n  * the License.\r\n  *\r\n  */\r\n-package com.tencent.angel.graph.embedding.node2vec;\r\n-\r\n-import com.tencent.angel.graph.client.node2vec.utils.SerDe;\r\n-import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\r\n-import io.netty.buffer.ByteBuf;\r\n-import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\r\n-\r\n-public class PullNeighborPartitionResult extends PartitionGetResult {\r\n-\r\n-  private Long2ObjectOpenHashMap<long[]> partResult;\r\n-\r\n-  public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\r\n-    super();\r\n-    this.partResult = part;\r\n-  }\r\n-\r\n-  public PullNeighborPartitionResult() {\r\n-    super();\r\n-  }\r\n-\r\n-  public Long2ObjectOpenHashMap<long[]> getPartResult() {\r\n-    return partResult;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf output) {\r\n-    SerDe.serLong2ArrayHashMap(partResult, output);\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf input) {\r\n-    this.partResult = SerDe.deserLong2LongArray(input);\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return SerDe.getLong2ArrayHashMapSerSize(partResult);\r\n-  }\r\n-}\r\n+package com.tencent.angel.graph.embedding.node2vec;\n+\n+import com.tencent.angel.graph.client.node2vec.utils.SerDe;\n+import com.tencent.angel.ml.matrix.psf.get.base.PartitionGetResult;\n+import io.netty.buffer.ByteBuf;\n+import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n+\n+public class PullNeighborPartitionResult extends PartitionGetResult {\n+\n+  private Long2ObjectOpenHashMap<long[]> partResult;\n+\n+  public PullNeighborPartitionResult(Long2ObjectOpenHashMap<long[]> part) {\n+    super();\n+    this.partResult = part;\n+  }\n+\n+  public PullNeighborPartitionResult() {\n+    super();\n+  }\n+\n+  public Long2ObjectOpenHashMap<long[]> getPartResult() {\n+    return partResult;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf output) {\n+    SerDe.serLong2ArrayHashMap(partResult, output);\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf input) {\n+    this.partResult = SerDe.deserLong2LongArray(input);\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return SerDe.getLong2ArrayHashMapSerSize(partResult);\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}