{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2484",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2484/PrintingImportLogicMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2484/PrintingImportLogicMonitor.java\nindex b922d2c4d17..63282531fd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2484/PrintingImportLogicMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2484/PrintingImportLogicMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling;\n \n import java.io.PrintStream;\n@@ -27,56 +28,56 @@ import static org.neo4j.helpers.Format.bytes;\n \n class PrintingImportLogicMonitor implements ImportLogic.Monitor\n {\n-    private final PrintStream out;\n-    private final PrintStream err;\n+  private final PrintStream out;\n+  private final PrintStream err;\n \n-    PrintingImportLogicMonitor( PrintStream out, PrintStream err )\n-    {\n-        this.out = out;\n-        this.err = err;\n-    }\n+  PrintingImportLogicMonitor(PrintStream out, PrintStream err)\n+  {\n+    this.out = out;\n+    this.err = err;\n+  }\n \n-    @Override\n-    public void doubleRelationshipRecordUnitsEnabled()\n-    {\n-        out.println( \"Will use double record units for all relationships\" );\n-    }\n+  @Override\n+  public void doubleRelationshipRecordUnitsEnabled()\n+  {\n+    out.println(\"Will use double record units for all relationships\");\n+  }\n \n-    @Override\n-    public void mayExceedNodeIdCapacity( long capacity, long estimatedCount )\n-    {\n-        err.printf( \"WARNING: estimated number of relationships %d may exceed capacity %d of selected record format%n\",\n-                estimatedCount, capacity );\n-    }\n+  @Override\n+  public void mayExceedNodeIdCapacity(long capacity, long estimatedCount)\n+  {\n+    err.printf(\"WARNING: estimated number of relationships %d may exceed capacity %d of selected record format%n\",\n+        estimatedCount, capacity);\n+  }\n \n-    @Override\n-    public void mayExceedRelationshipIdCapacity( long capacity, long estimatedCount )\n-    {\n-        err.printf( \"WARNING: estimated number of nodes %d may exceed capacity %d of selected record format%n\",\n-                estimatedCount, capacity );\n-    }\n+  @Override\n+  public void mayExceedRelationshipIdCapacity(long capacity, long estimatedCount)\n+  {\n+    err.printf(\"WARNING: estimated number of nodes %d may exceed capacity %d of selected record format%n\",\n+        estimatedCount, capacity);\n+  }\n \n-    @Override\n-    public void insufficientHeapSize( long optimalMinimalHeapSize, long heapSize )\n-    {\n-        err.printf( \"WARNING: heap size %s may be too small to complete this import. Suggested heap size is %s\",\n-                bytes( heapSize ), bytes( optimalMinimalHeapSize ) );\n-    }\n+  @Override\n+  public void insufficientHeapSize(long optimalMinimalHeapSize, long heapSize)\n+  {\n+    err.printf(\"WARNING: heap size %s may be too small to complete this import. Suggested heap size is %s\",\n+        bytes(heapSize), bytes(optimalMinimalHeapSize));\n+  }\n \n-    @Override\n-    public void abundantHeapSize( long optimalMinimalHeapSize, long heapSize )\n-    {\n-        err.printf( \"WARNING: heap size %s is unnecessarily large for completing this import.%n\" +\n-                \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\",\n-                bytes( heapSize ), bytes( optimalMinimalHeapSize ) );\n-    }\n+  @Override\n+  public void abundantHeapSize(long optimalMinimalHeapSize, long heapSize)\n+  {\n+    err.printf(\"WARNING: heap size %s is unnecessarily large for completing this import.%n\" +\n+            \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\",\n+        bytes(heapSize), bytes(optimalMinimalHeapSize));\n+  }\n \n-    @Override\n-    public void insufficientAvailableMemory( long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory )\n-    {\n-        err.printf( \"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" +\n-                \"heap size: %s%n\" +\n-                \"minimum free and available memory excluding heap size: %s\",\n-                bytes( availableMemory ), bytes( optimalMinimalHeapSize ), bytes( estimatedCacheSize ) );\n-    }\n+  @Override\n+  public void insufficientAvailableMemory(long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory)\n+  {\n+    err.printf(\"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" +\n+            \"heap size: %s%n\" +\n+            \"minimum free and available memory excluding heap size: %s\",\n+        bytes(availableMemory), bytes(optimalMinimalHeapSize), bytes(estimatedCacheSize));\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 296).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2484/PrintingImportLogicMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2484/PrintingImportLogicMonitor.java\nindex b922d2c4d17..b5babc11c88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2484/PrintingImportLogicMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2484/PrintingImportLogicMonitor.java\n@@ -66,17 +66,12 @@ class PrintingImportLogicMonitor implements ImportLogic.Monitor\n     @Override\n     public void abundantHeapSize( long optimalMinimalHeapSize, long heapSize )\n     {\n-        err.printf( \"WARNING: heap size %s is unnecessarily large for completing this import.%n\" +\n-                \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\",\n-                bytes( heapSize ), bytes( optimalMinimalHeapSize ) );\n+        err.printf( \"WARNING: heap size %s is unnecessarily large for completing this import.%n\" + \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\", bytes( heapSize ), bytes( optimalMinimalHeapSize ) );\n     }\n \n     @Override\n     public void insufficientAvailableMemory( long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory )\n     {\n-        err.printf( \"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" +\n-                \"heap size: %s%n\" +\n-                \"minimum free and available memory excluding heap size: %s\",\n-                bytes( availableMemory ), bytes( optimalMinimalHeapSize ), bytes( estimatedCacheSize ) );\n+        err.printf( \"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" + \"heap size: %s%n\" + \"minimum free and available memory excluding heap size: %s\", bytes( availableMemory ), bytes( optimalMinimalHeapSize ), bytes( estimatedCacheSize ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}