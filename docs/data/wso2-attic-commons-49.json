{
    "project_name": "wso2-attic-commons",
    "violation_id": "49",
    "information": {
        "violations": [
            {
                "line": "71",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 187).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n        Movie movie = new Movie();\n        JsonParser parser = Json.createParser(in);\n        while (parser.hasNext()) {",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/49/MovieReader.java\nindex 47ed374d402..30d97cba0fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/49/MovieReader.java\n@@ -68,8 +68,9 @@ public class MovieReader implements MessageBodyReader<Movie> {\n     }\n \n     @Override\n-    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n-        Movie movie = new Movie();\n+    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns,\n+        MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n+         Movie movie = new Movie();\n         JsonParser parser = Json.createParser(in);\n         while (parser.hasNext()) {\n             switch (parser.next()) {\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/49/MovieReader.java\nindex 47ed374d402..258e2c6a67f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/49/MovieReader.java\n@@ -62,39 +62,40 @@ import org.glassfish.movieplex7.entities.Movie;\n @Consumes(MediaType.APPLICATION_JSON)\n public class MovieReader implements MessageBodyReader<Movie> {\n \n-    @Override\n-    public boolean isReadable(Class<?> type, Type type1, Annotation[] antns, MediaType mt) {\n-        return Movie.class.isAssignableFrom(type);\n-    }\n+  @Override\n+  public boolean isReadable(Class<?> type, Type type1, Annotation[] antns, MediaType mt) {\n+    return Movie.class.isAssignableFrom(type);\n+  }\n \n-    @Override\n-    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n-        Movie movie = new Movie();\n-        JsonParser parser = Json.createParser(in);\n-        while (parser.hasNext()) {\n-            switch (parser.next()) {\n-                case KEY_NAME:\n-                    String key = parser.getString();\n-                    parser.next();\n-                    switch (key) {\n-                        case \"id\":\n-                            movie.setId(parser.getInt());\n-                            break;\n-                        case \"name\":\n-                            movie.setName(parser.getString());\n-                            break;\n-                        case \"actors\":\n-                            movie.setActors(parser.getString());\n-                            break;\n-                        default:\n-                            break;\n-                    }\n-                    break;\n-                default:\n-                    break;\n-            }\n+  @Override\n+  public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt,\n+                        MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n+    Movie movie = new Movie();\n+    JsonParser parser = Json.createParser(in);\n+    while (parser.hasNext()) {\n+      switch (parser.next()) {\n+      case KEY_NAME:\n+        String key = parser.getString();\n+        parser.next();\n+        switch (key) {\n+        case \"id\":\n+          movie.setId(parser.getInt());\n+          break;\n+        case \"name\":\n+          movie.setName(parser.getString());\n+          break;\n+        case \"actors\":\n+          movie.setActors(parser.getString());\n+          break;\n+        default:\n+          break;\n         }\n-        return movie;\n+        break;\n+      default:\n+        break;\n+      }\n     }\n+    return movie;\n+  }\n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/49/MovieReader.java\nindex 47ed374d402..a958aa9bf09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/49/MovieReader.java\n@@ -97,4 +97,4 @@ public class MovieReader implements MessageBodyReader<Movie> {\n         return movie;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/49/MovieReader.java\nindex 47ed374d402..b9f0c7cecb0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/49/MovieReader.java\n@@ -68,8 +68,7 @@ public class MovieReader implements MessageBodyReader<Movie> {\n     }\n \n     @Override\n-    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n-        Movie movie = new Movie();\n+    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException,WebApplicationException{ Moviemovie movie = new Movie();\n         JsonParser parser = Json.createParser(in);\n         while (parser.hasNext()) {\n             switch (parser.next()) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/49/MovieReader.java\nindex 47ed374d402..30d97cba0fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/49/MovieReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/49/MovieReader.java\n@@ -68,8 +68,9 @@ public class MovieReader implements MessageBodyReader<Movie> {\n     }\n \n     @Override\n-    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns, MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n-        Movie movie = new Movie();\n+    public Movie readFrom(Class<Movie> type, Type type1, Annotation[] antns,\n+        MediaType mt, MultivaluedMap<String, String> mm, InputStream in) throws IOException, WebApplicationException {\n+         Movie movie = new Movie();\n         JsonParser parser = Json.createParser(in);\n         while (parser.hasNext()) {\n             switch (parser.next()) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}