{
    "project_name": "griddynamics-jagger",
    "violation_id": "53",
    "information": {
        "violations": [
            {
                "line": "85",
                "column": "11",
                "severity": "warning",
                "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        pdu.setType(PDU.GET);\n        ResponseEvent event = snmp.send(pdu, getTarget(), null);\n        if(event != null) {\n            return event;\n        }\n        throw new RuntimeException(\"GET timed out\");",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/53/SNMPProvider.java\nindex 38b06fb61ed..358db980474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/53/SNMPProvider.java\n@@ -82,7 +82,7 @@ public class SNMPProvider {\n         }\n         pdu.setType(PDU.GET);\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n         throw new RuntimeException(\"GET timed out\");\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/53/SNMPProvider.java\nindex 38b06fb61ed..358db980474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/53/SNMPProvider.java\n@@ -82,7 +82,7 @@ public class SNMPProvider {\n         }\n         pdu.setType(PDU.GET);\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n         throw new RuntimeException(\"GET timed out\");\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/53/SNMPProvider.java\nindex 38b06fb61ed..25124aecfda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/53/SNMPProvider.java\n@@ -82,7 +82,7 @@ public class SNMPProvider {\n         }\n         pdu.setType(PDU.GET);\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n         throw new RuntimeException(\"GET timed out\");\n@@ -98,4 +98,4 @@ public class SNMPProvider {\n         target.setVersion(SnmpConstants.version2c);\n         return target;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/53/SNMPProvider.java\nindex 38b06fb61ed..11625d19e3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/53/SNMPProvider.java\n@@ -33,7 +33,6 @@ import org.snmp4j.smi.OID;\n import org.snmp4j.smi.OctetString;\n import org.snmp4j.smi.VariableBinding;\n import org.snmp4j.transport.DefaultUdpTransportMapping;\n-\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.List;\n@@ -41,13 +40,17 @@ import java.util.List;\n /**\n  * User: dkotlyarov\n  */\n+\n+\n public class SNMPProvider {\n+\n     private final String address;\n     private final Snmp snmp;\n \n     public SNMPProvider(String address) {\n         try {\n             this.address = address;\n+\n             TransportMapping transport = new DefaultUdpTransportMapping();\n             this.snmp = new Snmp(transport);\n             transport.listen();\n@@ -62,17 +65,23 @@ public class SNMPProvider {\n \n     public int getAsInt(OID oid) throws IOException {\n         ResponseEvent event = get(Arrays.asList(oid));\n-        return event.getResponse().get(0).getVariable().toInt();\n+        return event.getResponse().get(0)\n+                                  .getVariable()\n+                                  .toInt();\n     }\n \n     public long getAsLong(OID oid) throws IOException {\n         ResponseEvent event = get(Arrays.asList(oid));\n-        return event.getResponse().get(0).getVariable().toLong();\n+        return event.getResponse().get(0)\n+                                  .getVariable()\n+                                  .toLong();\n     }\n \n     public String getAsString(OID oid) throws IOException {\n         ResponseEvent event = get(Arrays.asList(oid));\n-        return event.getResponse().get(0).getVariable().toString();\n+        return event.getResponse().get(0)\n+                                  .getVariable()\n+                                  .toString();\n     }\n \n     public ResponseEvent get(List<OID> oids) throws IOException {\n@@ -81,15 +90,18 @@ public class SNMPProvider {\n             pdu.add(new VariableBinding(oid));\n         }\n         pdu.setType(PDU.GET);\n+\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n+\n         throw new RuntimeException(\"GET timed out\");\n     }\n \n     private Target getTarget() {\n         Address targetAddress = GenericAddress.parse(address);\n+\n         CommunityTarget target = new CommunityTarget();\n         target.setCommunity(new OctetString(\"public\"));\n         target.setAddress(targetAddress);\n@@ -98,4 +110,4 @@ public class SNMPProvider {\n         target.setVersion(SnmpConstants.version2c);\n         return target;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/53/SNMPProvider.java\nindex 38b06fb61ed..358db980474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/53/SNMPProvider.java\n@@ -82,7 +82,7 @@ public class SNMPProvider {\n         }\n         pdu.setType(PDU.GET);\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n         throw new RuntimeException(\"GET timed out\");\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/53/SNMPProvider.java\nindex 38b06fb61ed..358db980474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/53/SNMPProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/53/SNMPProvider.java\n@@ -82,7 +82,7 @@ public class SNMPProvider {\n         }\n         pdu.setType(PDU.GET);\n         ResponseEvent event = snmp.send(pdu, getTarget(), null);\n-        if(event != null) {\n+        if (event != null) {\n             return event;\n         }\n         throw new RuntimeException(\"GET timed out\");\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}