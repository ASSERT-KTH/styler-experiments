{
    "project_name": "Activiti-Activiti",
    "violation_id": "978",
    "information": {
        "violations": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.converter.child;\n\nimport javax.xml.stream.XMLStreamReader;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/978/ErrorEventDefinitionParser.java\nindex ca69f930817..90d490aaba5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/978/ErrorEventDefinitionParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/978/ErrorEventDefinitionParser.java\nindex ca69f930817..793579a096c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/978/ErrorEventDefinitionParser.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n@@ -35,14 +36,14 @@ public class ErrorEventDefinitionParser extends BaseChildElementParser {\n \n         ErrorEventDefinition eventDefinition = new ErrorEventDefinition();\n         BpmnXMLUtil.addXMLLocation(eventDefinition,\n-                                   xtr);\n+                xtr);\n         eventDefinition.setErrorCode(xtr.getAttributeValue(null,\n-                                                           \"errorRef\"));\n+                \"errorRef\"));\n \n         BpmnXMLUtil.parseChildElements(ELEMENT_EVENT_ERRORDEFINITION,\n-                                       eventDefinition,\n-                                       xtr,\n-                                       model);\n+                eventDefinition,\n+                xtr,\n+                model);\n \n         ((Event) parentElement).getEventDefinitions().add(eventDefinition);\n     }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/978/ErrorEventDefinitionParser.java\nindex ca69f930817..2d4bc4dd037 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/978/ErrorEventDefinitionParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n@@ -29,21 +30,18 @@ public class ErrorEventDefinitionParser extends BaseChildElementParser {\n     public void parseChildElement(XMLStreamReader xtr,\n                                   BaseElement parentElement,\n                                   BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Event)) {\n+  if (!(parentElement instanceof Event)) {\n             return;\n         }\n \n         ErrorEventDefinition eventDefinition = new ErrorEventDefinition();\n-        BpmnXMLUtil.addXMLLocation(eventDefinition,\n-                                   xtr);\n+        BpmnXMLUtil.addXMLLocation(eventDefinition, xtr);\n         eventDefinition.setErrorCode(xtr.getAttributeValue(null,\n-                                                           \"errorRef\"));\n-\n-        BpmnXMLUtil.parseChildElements(ELEMENT_EVENT_ERRORDEFINITION,\n+                           \"errorRef\"));\n+BpmnXMLUtil.parseChildElements(ELEMENT_EVENT_ERRORDEFINITION,\n                                        eventDefinition,\n                                        xtr,\n                                        model);\n-\n-        ((Event) parentElement).getEventDefinitions().add(eventDefinition);\n+((Event) parentElement).getEventDefinitions().add(eventDefinition);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/978/ErrorEventDefinitionParser.java\nindex ca69f930817..32b2dc28b67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/978/ErrorEventDefinitionParser.java\n@@ -13,37 +13,31 @@\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n-\n import org.activiti.bpmn.converter.util.BpmnXMLUtil;\n import org.activiti.bpmn.model.BaseElement;\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.bpmn.model.ErrorEventDefinition;\n import org.activiti.bpmn.model.Event;\n \n-public class ErrorEventDefinitionParser extends BaseChildElementParser {\n-\n-    public String getElementName() {\n-        return ELEMENT_EVENT_ERRORDEFINITION;\n-    }\n \n-    public void parseChildElement(XMLStreamReader xtr,\n-                                  BaseElement parentElement,\n-                                  BpmnModel model) throws Exception {\n-        if (!(parentElement instanceof Event)) {\n-            return;\n-        }\n-\n-        ErrorEventDefinition eventDefinition = new ErrorEventDefinition();\n-        BpmnXMLUtil.addXMLLocation(eventDefinition,\n-                                   xtr);\n-        eventDefinition.setErrorCode(xtr.getAttributeValue(null,\n-                                                           \"errorRef\"));\n+public class ErrorEventDefinitionParser extends BaseChildElementParser {\n \n-        BpmnXMLUtil.parseChildElements(ELEMENT_EVENT_ERRORDEFINITION,\n-                                       eventDefinition,\n-                                       xtr,\n-                                       model);\n+  public String getElementName() {\n+    return ELEMENT_EVENT_ERRORDEFINITION;\n+  }\n \n-        ((Event) parentElement).getEventDefinitions().add(eventDefinition);\n+  public void parseChildElement(XMLStreamReader xtr, BaseElement parentElement, BpmnModel model) throws Exception {\n+    if (!(parentElement instanceof Event)) {\n+      return;\n     }\n-}\n+\n+    ErrorEventDefinition eventDefinition = new ErrorEventDefinition();\n+    BpmnXMLUtil.addXMLLocation(eventDefinition, xtr);\n+    eventDefinition.setErrorCode(xtr.getAttributeValue(null, \"errorRef\"));\n+    BpmnXMLUtil.parseChildElements(ELEMENT_EVENT_ERRORDEFINITION,\n+                                   eventDefinition,\n+                                   xtr,\n+                                   model);\n+    ((Event) parentElement).getEventDefinitions().add(eventDefinition);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/978/ErrorEventDefinitionParser.java\nindex ca69f930817..90d490aaba5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/978/ErrorEventDefinitionParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/978/ErrorEventDefinitionParser.java\nindex ca69f930817..90d490aaba5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/978/ErrorEventDefinitionParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/978/ErrorEventDefinitionParser.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.converter.child;\n \n import javax.xml.stream.XMLStreamReader;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}