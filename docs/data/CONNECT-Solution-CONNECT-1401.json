{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1401",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.event.builder;\n\nimport com.google.common.base.Function;\nimport oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryError;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1401/ErrorExtractor.java\nindex e1d6025fbbf..3c66fa5e2e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1401/ErrorExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event.builder;\n \n import com.google.common.base.Function;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1401/ErrorExtractor.java\nindex e1d6025fbbf..52bb96d18f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1401/ErrorExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event.builder;\n \n import com.google.common.base.Function;\n@@ -33,21 +34,20 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * Extracts the error code from the RegistryError.\n- *\n+ * <p>\n  * RegistryError[@errorCode]\n- *\n  */\n public class ErrorExtractor implements Function<RegistryError, String> {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ErrorExtractor.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(ErrorExtractor.class);\n \n-    @Override\n-    public String apply(RegistryError error) {\n-        String errorCode = error.getErrorCode();\n-        if (errorCode == null) {\n-            LOG.error(\"Encountered an invalid registry error without an error code.\");\n-        }\n-\n-        return errorCode;\n+  @Override\n+  public String apply(RegistryError error) {\n+    String errorCode = error.getErrorCode();\n+    if (errorCode == null) {\n+      LOG.error(\"Encountered an invalid registry error without an error code.\");\n     }\n+\n+    return errorCode;\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1401/ErrorExtractor.java\nindex e1d6025fbbf..45c028b8dea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1401/ErrorExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event.builder;\n \n import com.google.common.base.Function;\n@@ -50,4 +51,4 @@ public class ErrorExtractor implements Function<RegistryError, String> {\n \n         return errorCode;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1401/ErrorExtractor.java\nindex e1d6025fbbf..a2e42644434 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1401/ErrorExtractor.java\n@@ -37,17 +37,20 @@ import org.slf4j.LoggerFactory;\n  * RegistryError[@errorCode]\n  *\n  */\n+\n+\n public class ErrorExtractor implements Function<RegistryError, String> {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ErrorExtractor.class);\n \n+\n     @Override\n     public String apply(RegistryError error) {\n         String errorCode = error.getErrorCode();\n         if (errorCode == null) {\n             LOG.error(\"Encountered an invalid registry error without an error code.\");\n         }\n-\n         return errorCode;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/1401/ErrorExtractor.java\nindex e1d6025fbbf..3c66fa5e2e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/1401/ErrorExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event.builder;\n \n import com.google.common.base.Function;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1401/ErrorExtractor.java\nindex e1d6025fbbf..3c66fa5e2e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1401/ErrorExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1401/ErrorExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.event.builder;\n \n import com.google.common.base.Function;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}