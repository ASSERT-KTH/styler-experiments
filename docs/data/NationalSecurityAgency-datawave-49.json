{
    "project_name": "NationalSecurityAgency-datawave",
    "violation_id": "49",
    "information": {
        "violations": [
            {
                "line": "9",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import org.apache.accumulo.core.client.TableNotFoundException;\nimport org.apache.accumulo.core.client.admin.TableOperations;\nimport org.apache.accumulo.core.conf.Property;\nimport org.apache.accumulo.core.iterators.IteratorUtil;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.log4j.Logger;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/49/MetricsSummaryTableConfigHelper.java\nindex 517ce0b99ac..8c990466788 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/49/MetricsSummaryTableConfigHelper.java\n@@ -12,49 +12,59 @@ import org.apache.hadoop.conf.Configuration;\n import org.apache.log4j.Logger;\n \n public class MetricsSummaryTableConfigHelper extends AbstractTableConfigHelper {\n-    protected Logger mLog;\n-    \n-    protected Configuration mConf;\n-    protected String mTableName;\n-    \n-    public static final String ENABLE_BLOOM_FILTERS = MetricsSummaryDataTypeHandler.METRICS_SUMMARY_PROP_PREFIX + \"summary.enable.bloom.filters\";\n-    protected boolean mEnableBloomFilters = false;\n-    \n-    @Override\n-    public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n-        mLog = log;\n-        mConf = config;\n-        mTableName = tableName;\n-        \n-        String mMetricsSummaryTableName = mConf.get(MetricsSummaryDataTypeHandler.METRICS_SUMMARY_TABLE_NAME);\n-        \n-        if (mMetricsSummaryTableName == null) {\n-            throw new IllegalArgumentException(\"Metrics Summary Table is not defined in the Configuration.\");\n-        }\n-        \n-        mEnableBloomFilters = mConf.getBoolean(ENABLE_BLOOM_FILTERS, false);\n-        \n-        if (!mTableName.equals(mMetricsSummaryTableName)) {\n-            throw new IllegalArgumentException(\"Invalid Metrics Summary Table Definition For: \" + mTableName);\n-        }\n+  protected Logger mLog;\n+\n+  protected Configuration mConf;\n+  protected String mTableName;\n+\n+  public static final String ENABLE_BLOOM_FILTERS =\n+      MetricsSummaryDataTypeHandler.METRICS_SUMMARY_PROP_PREFIX + \"summary.enable.bloom.filters\";\n+  protected boolean mEnableBloomFilters = false;\n+\n+  @Override\n+  public void setup(String tableName, Configuration config, Logger log)\n+      throws IllegalArgumentException {\n+    mLog = log;\n+    mConf = config;\n+    mTableName = tableName;\n+\n+    String mMetricsSummaryTableName =\n+        mConf.get(MetricsSummaryDataTypeHandler.METRICS_SUMMARY_TABLE_NAME);\n+\n+    if (mMetricsSummaryTableName == null) {\n+      throw new IllegalArgumentException(\n+          \"Metrics Summary Table is not defined in the Configuration.\");\n     }\n-    \n-    @Override\n-    public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n-        // add the SummingCombiner Iterator for each iterator scope (majc, minc, scan)\n-        for (IteratorUtil.IteratorScope scope : IteratorUtil.IteratorScope.values()) {\n-            final StringBuilder propName = new StringBuilder(String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scope.name(), \"sum\"));\n-            setPropertyIfNecessary(mTableName, propName.toString(), \"19,org.apache.accumulo.core.iterators.user.SummingCombiner\", tops, mLog);\n-            propName.append(\".opt.\");\n-            setPropertyIfNecessary(mTableName, propName + \"all\", \"true\", tops, mLog);\n-            setPropertyIfNecessary(mTableName, propName + \"lossy\", \"FALSE\", tops, mLog);\n-            setPropertyIfNecessary(mTableName, propName + \"type\", \"STRING\", tops, mLog);\n-        }\n-        \n-        // enable bloom filters if necessary.\n-        if (mEnableBloomFilters) {\n-            setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_KEY_FUNCTOR.getKey(), ShardIndexKeyFunctor.class.getName(), tops, mLog);\n-        }\n-        setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_ENABLED.getKey(), Boolean.toString(mEnableBloomFilters), tops, mLog);\n+\n+    mEnableBloomFilters = mConf.getBoolean(ENABLE_BLOOM_FILTERS, false);\n+\n+    if (!mTableName.equals(mMetricsSummaryTableName)) {\n+      throw new IllegalArgumentException(\n+          \"Invalid Metrics Summary Table Definition For: \" + mTableName);\n+    }\n+  }\n+\n+  @Override\n+  public void configure(TableOperations tops)\n+      throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n+    // add the SummingCombiner Iterator for each iterator scope (majc, minc, scan)\n+    for (IteratorUtil.IteratorScope scope : IteratorUtil.IteratorScope.values()) {\n+      final StringBuilder propName = new StringBuilder(\n+          String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scope.name(), \"sum\"));\n+      setPropertyIfNecessary(mTableName, propName.toString(),\n+          \"19,org.apache.accumulo.core.iterators.user.SummingCombiner\", tops, mLog);\n+      propName.append(\".opt.\");\n+      setPropertyIfNecessary(mTableName, propName + \"all\", \"true\", tops, mLog);\n+      setPropertyIfNecessary(mTableName, propName + \"lossy\", \"FALSE\", tops, mLog);\n+      setPropertyIfNecessary(mTableName, propName + \"type\", \"STRING\", tops, mLog);\n+    }\n+\n+    // enable bloom filters if necessary.\n+    if (mEnableBloomFilters) {\n+      setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_KEY_FUNCTOR.getKey(),\n+          ShardIndexKeyFunctor.class.getName(), tops, mLog);\n     }\n+    setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_ENABLED.getKey(),\n+        Boolean.toString(mEnableBloomFilters), tops, mLog);\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/49/MetricsSummaryTableConfigHelper.java\nindex 517ce0b99ac..858226008c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/49/MetricsSummaryTableConfigHelper.java\n@@ -57,4 +57,4 @@ public class MetricsSummaryTableConfigHelper extends AbstractTableConfigHelper {\n         }\n         setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_ENABLED.getKey(), Boolean.toString(mEnableBloomFilters), tops, mLog);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/49/MetricsSummaryTableConfigHelper.java\nindex 517ce0b99ac..dd179e720ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/49/MetricsSummaryTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/49/MetricsSummaryTableConfigHelper.java\n@@ -11,34 +11,32 @@ import org.apache.accumulo.core.iterators.IteratorUtil;\n import org.apache.hadoop.conf.Configuration;\n import org.apache.log4j.Logger;\n \n+\n public class MetricsSummaryTableConfigHelper extends AbstractTableConfigHelper {\n+\n     protected Logger mLog;\n-    \n     protected Configuration mConf;\n     protected String mTableName;\n-    \n+\n     public static final String ENABLE_BLOOM_FILTERS = MetricsSummaryDataTypeHandler.METRICS_SUMMARY_PROP_PREFIX + \"summary.enable.bloom.filters\";\n     protected boolean mEnableBloomFilters = false;\n-    \n+\n     @Override\n     public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n         mLog = log;\n         mConf = config;\n         mTableName = tableName;\n-        \n+\n         String mMetricsSummaryTableName = mConf.get(MetricsSummaryDataTypeHandler.METRICS_SUMMARY_TABLE_NAME);\n-        \n         if (mMetricsSummaryTableName == null) {\n             throw new IllegalArgumentException(\"Metrics Summary Table is not defined in the Configuration.\");\n         }\n-        \n         mEnableBloomFilters = mConf.getBoolean(ENABLE_BLOOM_FILTERS, false);\n-        \n         if (!mTableName.equals(mMetricsSummaryTableName)) {\n             throw new IllegalArgumentException(\"Invalid Metrics Summary Table Definition For: \" + mTableName);\n         }\n     }\n-    \n+\n     @Override\n     public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n         // add the SummingCombiner Iterator for each iterator scope (majc, minc, scan)\n@@ -52,9 +50,11 @@ public class MetricsSummaryTableConfigHelper extends AbstractTableConfigHelper {\n         }\n         \n         // enable bloom filters if necessary.\n+\n+\n         if (mEnableBloomFilters) {\n             setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_KEY_FUNCTOR.getKey(), ShardIndexKeyFunctor.class.getName(), tops, mLog);\n         }\n         setPropertyIfNecessary(mTableName, Property.TABLE_BLOOM_ENABLED.getKey(), Boolean.toString(mEnableBloomFilters), tops, mLog);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}