{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "945",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientlocationquery.outbound;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..c9f109b6796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/945/StandardOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..943bf603ead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/945/StandardOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -32,18 +33,17 @@ import gov.hhs.fha.nhinc.common.nhinccommonentity.RespondingGatewayPatientLocati\n import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n \n /**\n- *\n  * @author tjafri\n  */\n public class StandardOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n-    @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n-        //Step 1: audit request\n-        //Step 2 a: process request, if needed\n-        //Step 2 b: send request to Nhin\n-        //Step 3: return the response\n-        return new RespondingGatewayPatientLocationQueryResponseType();\n-    }\n+  @Override\n+  public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n+      PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    //Step 1: audit request\n+    //Step 2 a: process request, if needed\n+    //Step 2 b: send request to Nhin\n+    //Step 3: return the response\n+    return new RespondingGatewayPatientLocationQueryResponseType();\n+  }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..492f96708fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/945/StandardOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -38,12 +39,11 @@ import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n public class StandardOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n     @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n         //Step 1: audit request\n         //Step 2 a: process request, if needed\n         //Step 2 b: send request to Nhin\n         //Step 3: return the response\n         return new RespondingGatewayPatientLocationQueryResponseType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..1f9c3c2abbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/945/StandardOutboundPatientLocationQuery.java\n@@ -35,15 +35,18 @@ import ihe.iti.xcpd._2009.PatientLocationQueryRequestType;\n  *\n  * @author tjafri\n  */\n+\n+\n public class StandardOutboundPatientLocationQuery implements OutboundPatientLocationQuery {\n \n+\n     @Override\n-    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(\n-        PatientLocationQueryRequestType request, AssertionType assertion, NhinTargetCommunitiesType target) {\n+    public RespondingGatewayPatientLocationQueryResponseType processPatientLocationQuery(PatientLocationQueryRequestType request,\n+        AssertionType assertion, NhinTargetCommunitiesType target) {\n         //Step 1: audit request\n         //Step 2 a: process request, if needed\n         //Step 2 b: send request to Nhin\n         //Step 3: return the response\n         return new RespondingGatewayPatientLocationQueryResponseType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..c9f109b6796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/random/files-repaired/945/StandardOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/945/StandardOutboundPatientLocationQuery.java\nindex 7fd43624ed9..c9f109b6796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/945/StandardOutboundPatientLocationQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/945/StandardOutboundPatientLocationQuery.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientlocationquery.outbound;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}