{
    "project_name": "wso2-attic-commons",
    "violation_id": "161",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\t {\n\t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\n\t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\n\t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\n\t\t\t return result;\n\t\t }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/161/SoapSessionService.java\nindex 1e0bc234c12..7662c9a01fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/161/SoapSessionService.java\n@@ -16,8 +16,9 @@ public class SoapSessionService {\n \t\t } else\r\n \t\t {\r\n \t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n-\t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n+    int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer)serviceContext.getProperty(\r\n+    \"VALUE\")).intValue();\r\n+    serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n \t\t\t return result;\r\n \t\t }\r\n \t\t \r\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/161/SoapSessionService.java\nindex 1e0bc234c12..888feb0e3a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/161/SoapSessionService.java\n@@ -3,27 +3,26 @@ package org.wso2.wsas.service;\n import org.apache.axis2.context.MessageContext;\r\n import org.apache.axis2.context.ServiceContext;\r\n \r\n-/* This is a working example to test Soap session handling in WSAS */ \r\n+/* This is a working example to test Soap session handling in WSAS */\r\n public class SoapSessionService {\r\n \r\n-\t public int multiply(int k, int j){\r\n-\t\t \r\n-\t\t ServiceContext serviceContext =\r\n-             MessageContext.getCurrentMessageContext().getServiceContext();\r\n-\t\t if ((Integer) serviceContext.getProperty(\"VALUE\") == null){\r\n-\t\t serviceContext.setProperty(\"VALUE\", new Integer(k*j));\r\n-\t\t return ((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t } else\r\n-\t\t {\r\n-\t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n-\t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n-\t\t\t return result;\r\n-\t\t }\r\n-\t\t \r\n-\t\t\t\t \r\n-\t }\r\n-\t \r\n-\t \r\n+  public int multiply(int k, int j) {\r\n+\r\n+    ServiceContext serviceContext =\r\n+      MessageContext.getCurrentMessageContext().getServiceContext();\r\n+    if ((Integer) serviceContext.getProperty(\"VALUE\") == null) {\r\n+      serviceContext.setProperty(\"VALUE\", new Integer(k * j));\r\n+      return ((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n+    } else {\r\n+      serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n+      int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue() +\r\n+        ((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n+      serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n+      return result;\r\n+    }\r\n+\r\n+\r\n+  }\r\n+\r\n \r\n }\r\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/161/SoapSessionService.java\nindex 1e0bc234c12..2cd59913073 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/161/SoapSessionService.java\n@@ -3,27 +3,20 @@ package org.wso2.wsas.service;\n import org.apache.axis2.context.MessageContext;\r\n import org.apache.axis2.context.ServiceContext;\r\n \r\n-/* This is a working example to test Soap session handling in WSAS */ \r\n+/* This is a working example to test Soap session handling in WSAS */\n+\n public class SoapSessionService {\r\n \r\n-\t public int multiply(int k, int j){\r\n-\t\t \r\n-\t\t ServiceContext serviceContext =\r\n-             MessageContext.getCurrentMessageContext().getServiceContext();\r\n-\t\t if ((Integer) serviceContext.getProperty(\"VALUE\") == null){\r\n+\t public int multiply(int k, int j){\n+    ServiceContext serviceContext = MessageContext.getCurrentMessageContext().getServiceContext();\n+if ((Integer) serviceContext.getProperty(\"VALUE\") == null){\r\n \t\t serviceContext.setProperty(\"VALUE\", new Integer(k*j));\r\n-\t\t return ((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t } else\r\n-\t\t {\r\n+\t\t return ((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\n+        } else {\r\n \t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n \t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n \t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n \t\t\t return result;\r\n-\t\t }\r\n-\t\t \r\n-\t\t\t\t \r\n-\t }\r\n-\t \r\n-\t \r\n-\r\n-}\r\n+\t\t }\n+\t}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/161/SoapSessionService.java\nindex 1e0bc234c12..7662c9a01fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/161/SoapSessionService.java\n@@ -16,8 +16,9 @@ public class SoapSessionService {\n \t\t } else\r\n \t\t {\r\n \t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n-\t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n+    int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer)serviceContext.getProperty(\r\n+    \"VALUE\")).intValue();\r\n+    serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n \t\t\t return result;\r\n \t\t }\r\n \t\t \r\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/161/SoapSessionService.java\nindex 1e0bc234c12..22f070ba31c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/161/SoapSessionService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/161/SoapSessionService.java\n@@ -16,8 +16,9 @@ public class SoapSessionService {\n \t\t } else\r\n \t\t {\r\n \t\t\t serviceContext.setProperty(\"VALUE1\", (Integer) serviceContext.getProperty(\"VALUE\"));\r\n-\t\t\t int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n-\t\t\t serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n+    int result = ((Integer) serviceContext.getProperty(\"VALUE1\")).\r\n+    intValue()+((Integer) serviceContext.getProperty(\"VALUE\")).intValue();\r\n+    serviceContext.setProperty(\"VALUE\", (Integer) result);\r\n \t\t\t return result;\r\n \t\t }\r\n \t\t \r\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}