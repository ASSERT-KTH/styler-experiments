{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2758",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "25",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "25",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2758/IndexSamplingMode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2758/IndexSamplingMode.java\nindex 0ce6c5892f7..8a0cfeb9103 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2758/IndexSamplingMode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2758/IndexSamplingMode.java\n@@ -17,41 +17,42 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n public enum IndexSamplingMode\n {\n-    TRIGGER_REBUILD_ALL( false, true )\n-            {\n-                @Override\n-                public String toString()\n-                {\n-                    return \"FORCE REBUILD\";\n-                }\n-            },\n-    TRIGGER_REBUILD_UPDATED( true, true )\n-            {\n-                @Override\n-                public String toString()\n-                {\n-                    return \"REBUILD OUTDATED\";\n-                }\n-            },\n-    BACKGROUND_REBUILD_UPDATED( true, false )\n-            {\n-                @Override\n-                public String toString()\n-                {\n-                    return \"BACKGROUND-REBUILD OF OUTDATED\";\n-                }\n-            };\n+  TRIGGER_REBUILD_ALL(false, true)\n+      {\n+        @Override\n+        public String toString()\n+        {\n+          return \"FORCE REBUILD\";\n+        }\n+      },\n+  TRIGGER_REBUILD_UPDATED(true, true)\n+      {\n+        @Override\n+        public String toString()\n+        {\n+          return \"REBUILD OUTDATED\";\n+        }\n+      },\n+  BACKGROUND_REBUILD_UPDATED(true, false)\n+      {\n+        @Override\n+        public String toString()\n+        {\n+          return \"BACKGROUND-REBUILD OF OUTDATED\";\n+        }\n+      };\n \n-    public final boolean sampleOnlyIfUpdated;\n-    public final boolean blockUntilAllScheduled;\n+  public final boolean sampleOnlyIfUpdated;\n+  public final boolean blockUntilAllScheduled;\n \n-    IndexSamplingMode( boolean sampleOnlyIfUpdated, boolean blockUntilAllScheduled )\n-    {\n-        this.sampleOnlyIfUpdated = sampleOnlyIfUpdated;\n-        this.blockUntilAllScheduled = blockUntilAllScheduled;\n-    }\n+  IndexSamplingMode(boolean sampleOnlyIfUpdated, boolean blockUntilAllScheduled)\n+  {\n+    this.sampleOnlyIfUpdated = sampleOnlyIfUpdated;\n+    this.blockUntilAllScheduled = blockUntilAllScheduled;\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2758/IndexSamplingMode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2758/IndexSamplingMode.java\nindex 0ce6c5892f7..19b8b1b73f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2758/IndexSamplingMode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2758/IndexSamplingMode.java\n@@ -22,23 +22,21 @@ package org.neo4j.kernel.impl.api.index.sampling;\n public enum IndexSamplingMode\n {\n     TRIGGER_REBUILD_ALL( false, true )\n-            {\n+{\n                 @Override\n                 public String toString()\n                 {\n                     return \"FORCE REBUILD\";\n                 }\n-            },\n-    TRIGGER_REBUILD_UPDATED( true, true )\n-            {\n+            }, TRIGGER_REBUILD_UPDATED( true, true )\n+{\n                 @Override\n                 public String toString()\n                 {\n                     return \"REBUILD OUTDATED\";\n                 }\n-            },\n-    BACKGROUND_REBUILD_UPDATED( true, false )\n-            {\n+            }, BACKGROUND_REBUILD_UPDATED( true, false )\n+{\n                 @Override\n                 public String toString()\n                 {\n@@ -46,12 +44,13 @@ public enum IndexSamplingMode\n                 }\n             };\n \n-    public final boolean sampleOnlyIfUpdated;\n-    public final boolean blockUntilAllScheduled;\n+public final boolean sampleOnlyIfUpdated;\n+\n+public final boolean blockUntilAllScheduled;\n \n     IndexSamplingMode( boolean sampleOnlyIfUpdated, boolean blockUntilAllScheduled )\n     {\n         this.sampleOnlyIfUpdated = sampleOnlyIfUpdated;\n         this.blockUntilAllScheduled = blockUntilAllScheduled;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}