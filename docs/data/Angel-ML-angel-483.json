{
    "project_name": "Angel-ML-angel",
    "violation_id": "483",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/483/PushNeighborPartitionParam.java\nindex c3eef29d624..2973799e13d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/483/PushNeighborPartitionParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.pushneighbor;\n \n import com.tencent.angel.PartitionKey;\n@@ -24,53 +25,53 @@ import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;\n \n public class PushNeighborPartitionParam extends PartitionUpdateParam {\n \n-  private long[] keyIds;\n-  private int startIdx;\n-  private int endIdx;\n-  private Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices;\n+    private long[] keyIds;\n+    private int startIdx;\n+    private int endIdx;\n+    private Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices;\n \n-  public PushNeighborPartitionParam(int matrixId, PartitionKey partKey,\n-      Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices,\n-      long[] nodeIds, int startIndex, int endIndex) {\n-    super(matrixId, partKey, false);\n-    this.keyIds = nodeIds;\n-    this.startIdx = startIndex;\n-    this.endIdx = endIndex;\n-    this.nodeIdToNeighborIndices = nodeIdToNeighborIndices;\n-  }\n+    public PushNeighborPartitionParam(int matrixId, PartitionKey partKey,\n+                                      Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices,\n+                                      long[] nodeIds, int startIndex, int endIndex) {\n+        super(matrixId, partKey, false);\n+        this.keyIds = nodeIds;\n+        this.startIdx = startIndex;\n+        this.endIdx = endIndex;\n+        this.nodeIdToNeighborIndices = nodeIdToNeighborIndices;\n+    }\n \n-  public PushNeighborPartitionParam() {\n+    public PushNeighborPartitionParam() {\n \n-  }\n+    }\n \n-  public Long2ObjectOpenHashMap<long[]> getNodeIdToNeighborIndices() {\n-    return nodeIdToNeighborIndices;\n-  }\n+    public Long2ObjectOpenHashMap<long[]> getNodeIdToNeighborIndices() {\n+        return nodeIdToNeighborIndices;\n+    }\n \n-  protected void clear() {\n-    keyIds = null;\n-    startIdx = -1;\n-    endIdx = -1;\n-    nodeIdToNeighborIndices = null;\n-  }\n+    protected void clear() {\n+        keyIds = null;\n+        startIdx = -1;\n+        endIdx = -1;\n+        nodeIdToNeighborIndices = null;\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    SerDe.serLong2ArrayHashMap(keyIds, startIdx, endIdx, nodeIdToNeighborIndices, buf);\n-    //clear();\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        SerDe.serLong2ArrayHashMap(keyIds, startIdx, endIdx, nodeIdToNeighborIndices, buf);\n+        //clear();\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    nodeIdToNeighborIndices = SerDe.deserLong2LongArray(buf);\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        nodeIdToNeighborIndices = SerDe.deserLong2LongArray(buf);\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    int len = super.bufferLen();\n-    len += SerDe.getLong2ArrayHashMapSerSize(keyIds, startIdx, endIdx, nodeIdToNeighborIndices);\n-    return len;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        int len = super.bufferLen();\n+        len += SerDe.getLong2ArrayHashMapSerSize(keyIds, startIdx, endIdx, nodeIdToNeighborIndices);\n+        return len;\n+    }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/483/PushNeighborPartitionParam.java\nindex c3eef29d624..943bd474638 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/483/PushNeighborPartitionParam.java\n@@ -73,4 +73,4 @@ public class PushNeighborPartitionParam extends PartitionUpdateParam {\n     len += SerDe.getLong2ArrayHashMapSerSize(keyIds, startIdx, endIdx, nodeIdToNeighborIndices);\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/483/PushNeighborPartitionParam.java\nindex c3eef29d624..7b6a29d2a55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/483/PushNeighborPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/483/PushNeighborPartitionParam.java\n@@ -29,9 +29,10 @@ public class PushNeighborPartitionParam extends PartitionUpdateParam {\n   private int endIdx;\n   private Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices;\n \n-  public PushNeighborPartitionParam(int matrixId, PartitionKey partKey,\n-      Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices,\n-      long[] nodeIds, int startIndex, int endIndex) {\n+  public PushNeighborPartitionParam(int matrixId,\n+                                    PartitionKey partKey,\n+                                    Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices,\n+                                    long[] nodeIds, int startIndex, int endIndex) {\n     super(matrixId, partKey, false);\n     this.keyIds = nodeIds;\n     this.startIdx = startIndex;\n@@ -39,9 +40,7 @@ public class PushNeighborPartitionParam extends PartitionUpdateParam {\n     this.nodeIdToNeighborIndices = nodeIdToNeighborIndices;\n   }\n \n-  public PushNeighborPartitionParam() {\n-\n-  }\n+  public PushNeighborPartitionParam() {}\n \n   public Long2ObjectOpenHashMap<long[]> getNodeIdToNeighborIndices() {\n     return nodeIdToNeighborIndices;\n@@ -73,4 +72,5 @@ public class PushNeighborPartitionParam extends PartitionUpdateParam {\n     len += SerDe.getLong2ArrayHashMapSerSize(keyIds, startIdx, endIdx, nodeIdToNeighborIndices);\n     return len;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}