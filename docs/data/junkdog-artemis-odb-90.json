{
    "project_name": "junkdog-artemis-odb",
    "violation_id": "90",
    "information": {
        "violations": [
            {
                "line": "24",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 138).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n                .setAccessLevel(AccessLevel.PUBLIC)\n                .build();\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..a542674029e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/90/ComponentMapperFieldsStrategy.java\n@@ -21,8 +21,8 @@ public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n     }\n \n     private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n+\t\t\t\t\treturn new FieldBuilder (newParameterizedTypeImpl(ComponentMapper.class,component.getComponentType(\n+    )),\"m\"+component.getName()).setAccessLevelsetAccessLevel(AccessLevel.PUBLIC)\n                 .build();\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..e6c38d6efba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/90/ComponentMapperFieldsStrategy.java\n@@ -15,15 +15,17 @@ import com.artemis.generator.util.MethodBuilder;\n  */\n public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n \n-    @Override\n-    protected void apply(ComponentDescriptor component, TypeModel model) {\n-        model.add(createComponentMapper(component));\n-    }\n+  @Override\n+  protected void apply(ComponentDescriptor component, TypeModel model) {\n+    model.add(createComponentMapper(component));\n+  }\n \n-    private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n-                .build();\n-    }\n+  private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n+    return new FieldBuilder(\n+        new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()),\n+        \"m\" + component.getName())\n+        .setAccessLevel(AccessLevel.PUBLIC)\n+        .build();\n+  }\n \n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..41cfb332ca2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/90/ComponentMapperFieldsStrategy.java\n@@ -14,16 +14,14 @@ import com.artemis.generator.util.MethodBuilder;\n  * @author Daan van Yperen\n  */\n public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n-\n-    @Override\n+\t@Override\n     protected void apply(ComponentDescriptor component, TypeModel model) {\n         model.add(createComponentMapper(component));\n     }\n \n     private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n+\treturn new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n+\t.setAccessLevel(AccessLevel.PUBLIC)\n                 .build();\n-    }\n-\n-}\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..8973ba36314 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/90/ComponentMapperFieldsStrategy.java\n@@ -4,6 +4,7 @@ import com.artemis.ComponentMapper;\n import com.artemis.E;\n import com.artemis.generator.common.IterativeModelStrategy;\n import com.artemis.generator.model.artemis.ComponentDescriptor;\n+\n import com.artemis.generator.model.type.*;\n import com.artemis.generator.util.FieldBuilder;\n import com.artemis.generator.util.MethodBuilder;\n@@ -13,17 +14,16 @@ import com.artemis.generator.util.MethodBuilder;\n  *\n  * @author Daan van Yperen\n  */\n-public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n \n-    @Override\n-    protected void apply(ComponentDescriptor component, TypeModel model) {\n-        model.add(createComponentMapper(component));\n-    }\n-\n-    private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n-                .build();\n-    }\n+public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n+ @Override\n+ protected void apply(ComponentDescriptor component, TypeModel model) {\n+  model.add(createComponentMapper(component));\n+ }\n \n-}\n+ private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n+  return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()),\n+   \"m\" + component.getName()).setAccessLevel(AccessLevel.PUBLIC)\n+                             .build();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..a542674029e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/90/ComponentMapperFieldsStrategy.java\n@@ -21,8 +21,8 @@ public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n     }\n \n     private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n+\t\t\t\t\treturn new FieldBuilder (newParameterizedTypeImpl(ComponentMapper.class,component.getComponentType(\n+    )),\"m\"+component.getName()).setAccessLevelsetAccessLevel(AccessLevel.PUBLIC)\n                 .build();\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/90/ComponentMapperFieldsStrategy.java\nindex cf0c17d82d5..17fa954987a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/90/ComponentMapperFieldsStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/90/ComponentMapperFieldsStrategy.java\n@@ -21,8 +21,9 @@ public class ComponentMapperFieldsStrategy extends IterativeModelStrategy {\n     }\n \n     private FieldDescriptor createComponentMapper(ComponentDescriptor component) {\n-        return new FieldBuilder(new ParameterizedTypeImpl(ComponentMapper.class, component.getComponentType()), \"m\" + component.getName())\n-                .setAccessLevel(AccessLevel.PUBLIC)\n+\t\t\t\t\treturn newFieldBuilder(new ParameterizedTypeImpl( ComponentMapper .class,component .getComponentType()\n+\t\t\t), \"m\" + component.getName())\n+                .setAccessLevelsetAccessLevel(AccessLevel.PUBLIC)\n                 .build();\n     }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}