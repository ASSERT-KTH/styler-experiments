{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "1229",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\nindex 9de44194c4b..5ef792919f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\nindex 9de44194c4b..757b0ffdee0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -42,24 +43,24 @@ import org.slf4j.LoggerFactory;\n  */\n public class AdapterPolicyEngineOrchProxyPermitNoOpImpl implements AdapterPolicyEngineOrchProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterPolicyEngineOrchProxyPermitNoOpImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterPolicyEngineOrchProxyPermitNoOpImpl.class);\n \n-    /**\n-     * Given a request to check the access policy, this service will always return a permit response.\n-     *\n-     * @param checkPolicyRequest The request to check defined policy\n-     * @return The response which contains the access decision\n-     */\n-    @Override\n-    public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n-        LOG.trace(\"Begin AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n-        CheckPolicyResponseType oPolicyResponse = new CheckPolicyResponseType();\n-        ResponseType oResponse = new ResponseType();\n-        ResultType oResult = new ResultType();\n-        oResult.setDecision(DecisionType.PERMIT);\n-        oResponse.getResult().add(oResult);\n-        oPolicyResponse.setResponse(oResponse);\n-        LOG.trace(\"End AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n-        return oPolicyResponse;\n-    }\n+  /**\n+   * Given a request to check the access policy, this service will always return a permit response.\n+   *\n+   * @param checkPolicyRequest The request to check defined policy\n+   * @return The response which contains the access decision\n+   */\n+  @Override\n+  public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n+    LOG.trace(\"Begin AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n+    CheckPolicyResponseType oPolicyResponse = new CheckPolicyResponseType();\n+    ResponseType oResponse = new ResponseType();\n+    ResultType oResult = new ResultType();\n+    oResult.setDecision(DecisionType.PERMIT);\n+    oResponse.getResult().add(oResult);\n+    oPolicyResponse.setResponse(oResponse);\n+    LOG.trace(\"End AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n+    return oPolicyResponse;\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\nindex 9de44194c4b..b19aa9331fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -60,6 +61,7 @@ public class AdapterPolicyEngineOrchProxyPermitNoOpImpl implements AdapterPolicy\n         oResponse.getResult().add(oResult);\n         oPolicyResponse.setResponse(oResponse);\n         LOG.trace(\"End AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n-        return oPolicyResponse;\n+\n+return oPolicyResponse;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\nindex 9de44194c4b..4f55f03200c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n@@ -40,6 +40,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Les Westberg\n  */\n+\n+\n public class AdapterPolicyEngineOrchProxyPermitNoOpImpl implements AdapterPolicyEngineOrchProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterPolicyEngineOrchProxyPermitNoOpImpl.class);\n@@ -50,6 +52,8 @@ public class AdapterPolicyEngineOrchProxyPermitNoOpImpl implements AdapterPolicy\n      * @param checkPolicyRequest The request to check defined policy\n      * @return The response which contains the access decision\n      */\n+\n+\n     @Override\n     public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n         LOG.trace(\"Begin AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n@@ -62,4 +66,5 @@ public class AdapterPolicyEngineOrchProxyPermitNoOpImpl implements AdapterPolicy\n         LOG.trace(\"End AdapterPolicyEngineOrchProxyPermitNoOpImpl.checkPolicy\");\n         return oPolicyResponse;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\nindex 9de44194c4b..5ef792919f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/1229/AdapterPolicyEngineOrchProxyPermitNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.orchestrator.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}