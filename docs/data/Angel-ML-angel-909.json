{
    "project_name": "Angel-ML-angel",
    "violation_id": "909",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/909/PSAttemptRegisterEvent.java\nindex 9b2f259ac5b..5a71a311058 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/909/PSAttemptRegisterEvent.java\n@@ -23,24 +23,28 @@ import com.tencent.angel.ps.PSAttemptId;\n  * A ps attempt register to master.\n  */\n public class PSAttemptRegisterEvent extends PSAttemptEvent {\n-  /**the ps attempt location(ip and listening port)*/\n-  private final Location location;\n+    /**\n+     * the ps attempt location(ip and listening port)\n+     */\n+    private final Location location;\n \n-  /**\n-   * Create a PSAttemptRegisterEvent\n-   * @param psAttemptId ps attempt id\n-   * @param location location\n-   */\n-  public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n-    super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n-    this.location = location;\n-  }\n+    /**\n+     * Create a PSAttemptRegisterEvent\n+     *\n+     * @param psAttemptId ps attempt id\n+     * @param location    location\n+     */\n+    public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n+        super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n+        this.location = location;\n+    }\n \n-  /**\n-   * Get location\n-   * @return location\n-   */\n-  public Location getLocation() {\n-    return location;\n-  }\n+    /**\n+     * Get location\n+     *\n+     * @return location\n+     */\n+    public Location getLocation() {\n+        return location;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/909/PSAttemptRegisterEvent.java\nindex 9b2f259ac5b..8cbee8ce6ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/909/PSAttemptRegisterEvent.java\n@@ -43,4 +43,4 @@ public class PSAttemptRegisterEvent extends PSAttemptEvent {\n   public Location getLocation() {\n     return location;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/909/PSAttemptRegisterEvent.java\nindex 9b2f259ac5b..3a24132db6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/909/PSAttemptRegisterEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/909/PSAttemptRegisterEvent.java\n@@ -22,8 +22,10 @@ import com.tencent.angel.ps.PSAttemptId;\n /**\n  * A ps attempt register to master.\n  */\n+\n public class PSAttemptRegisterEvent extends PSAttemptEvent {\n   /**the ps attempt location(ip and listening port)*/\n+\n   private final Location location;\n \n   /**\n@@ -31,6 +33,7 @@ public class PSAttemptRegisterEvent extends PSAttemptEvent {\n    * @param psAttemptId ps attempt id\n    * @param location location\n    */\n+\n   public PSAttemptRegisterEvent(PSAttemptId psAttemptId, Location location) {\n     super(PSAttemptEventType.PA_REGISTER, psAttemptId);\n     this.location = location;\n@@ -40,7 +43,9 @@ public class PSAttemptRegisterEvent extends PSAttemptEvent {\n    * Get location\n    * @return location\n    */\n+\n   public Location getLocation() {\n     return location;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}