{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "4264",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4264/InputPosition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4264/InputPosition.java\nindex 167ce818302..7223f7e5aaf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4264/InputPosition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4264/InputPosition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n /**\n@@ -24,93 +25,97 @@ package org.neo4j.graphdb;\n  */\n public final class InputPosition\n {\n-    private final int offset;\n-    private final int line;\n-    private final int column;\n+  private final int offset;\n+  private final int line;\n+  private final int column;\n \n-    /**\n-     * The empty position\n-     */\n-    public static final InputPosition empty = new InputPosition( -1, -1, -1 );\n+  /**\n+   * The empty position\n+   */\n+  public static final InputPosition empty = new InputPosition(-1, -1, -1);\n \n-    /**\n-     * Creating a position from and offset, line number and a column number.\n-     * @param offset the offset from the start of the string, starting from 0.\n-     * @param line the line number, starting from 1.\n-     * @param column the column number, starting from 1.\n-     */\n-    public InputPosition( int offset, int line, int column )\n-    {\n-        this.offset = offset;\n-        this.line = line;\n-        this.column = column;\n-    }\n+  /**\n+   * Creating a position from and offset, line number and a column number.\n+   *\n+   * @param offset the offset from the start of the string, starting from 0.\n+   * @param line   the line number, starting from 1.\n+   * @param column the column number, starting from 1.\n+   */\n+  public InputPosition(int offset, int line, int column)\n+  {\n+    this.offset = offset;\n+    this.line = line;\n+    this.column = column;\n+  }\n \n-    /**\n-     * The character offset referred to by this position; offset numbers start at 0.\n-     * @return the offset of this position.\n-     */\n-    public int getOffset()\n-    {\n-        return offset;\n-    }\n+  /**\n+   * The character offset referred to by this position; offset numbers start at 0.\n+   *\n+   * @return the offset of this position.\n+   */\n+  public int getOffset()\n+  {\n+    return offset;\n+  }\n \n-    /**\n-     * The line number referred to by the position; line numbers start at 1.\n-     * @return the line number of this position.\n-     */\n-    public int getLine()\n-    {\n-        return line;\n-    }\n+  /**\n+   * The line number referred to by the position; line numbers start at 1.\n+   *\n+   * @return the line number of this position.\n+   */\n+  public int getLine()\n+  {\n+    return line;\n+  }\n \n-    /**\n-     * The column number referred to by the position; column numbers start at 1.\n-     * @return the column number of this position.\n-     */\n-    public int getColumn()\n+  /**\n+   * The column number referred to by the position; column numbers start at 1.\n+   *\n+   * @return the column number of this position.\n+   */\n+  public int getColumn()\n+  {\n+    return column;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return column;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        InputPosition that = (InputPosition) o;\n-\n-        if ( offset != that.offset )\n-        {\n-            return false;\n-        }\n-        if ( line != that.line )\n-        {\n-            return false;\n-        }\n-        return column == that.column;\n-\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode()\n+    InputPosition that = (InputPosition) o;\n+\n+    if (offset != that.offset)\n     {\n-        int result = offset;\n-        result = 31 * result + line;\n-        result = 31 * result + column;\n-        return result;\n+      return false;\n     }\n-\n-    @Override\n-    public String toString()\n+    if (line != that.line)\n     {\n-        return \"InputPosition{\" + \"offset=\" + offset + \", line=\" + line + \", column=\" + column + '}';\n+      return false;\n     }\n+    return column == that.column;\n+\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = offset;\n+    result = 31 * result + line;\n+    result = 31 * result + column;\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"InputPosition{\" + \"offset=\" + offset + \", line=\" + line + \", column=\" + column + '}';\n+  }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4264/InputPosition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4264/InputPosition.java\nindex 167ce818302..bb43ded7de3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4264/InputPosition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4264/InputPosition.java\n@@ -80,7 +80,8 @@ public final class InputPosition\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -91,12 +92,13 @@ public final class InputPosition\n         {\n             return false;\n         }\n-        if ( line != that.line )\n+\n+if ( line != that.line )\n         {\n             return false;\n         }\n-        return column == that.column;\n \n+return column == that.column;\n     }\n \n     @Override\n@@ -113,4 +115,4 @@ public final class InputPosition\n     {\n         return \"InputPosition{\" + \"offset=\" + offset + \", line=\" + line + \", column=\" + column + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}