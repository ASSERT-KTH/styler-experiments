{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1273",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1273/IndexIdentifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1273/IndexIdentifier.java\nindex fdf735426ff..3c391bdba94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1273/IndexIdentifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1273/IndexIdentifier.java\n@@ -17,51 +17,52 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.neo4j.kernel.impl.index.IndexEntityType;\n \n class IndexIdentifier\n {\n-    final IndexEntityType entityType;\n-    final String indexName;\n-    private final int hashCode;\n+  final IndexEntityType entityType;\n+  final String indexName;\n+  private final int hashCode;\n \n-    IndexIdentifier( IndexEntityType entityType, String indexName )\n-    {\n-        this.entityType = entityType;\n-        this.indexName = indexName;\n-        this.hashCode = calculateHashCode();\n-    }\n+  IndexIdentifier(IndexEntityType entityType, String indexName)\n+  {\n+    this.entityType = entityType;\n+    this.indexName = indexName;\n+    this.hashCode = calculateHashCode();\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (o == null || !getClass().equals(o.getClass()))\n     {\n-        if ( o == null || !getClass().equals( o.getClass() ) )\n-        {\n-            return false;\n-        }\n-        IndexIdentifier i = (IndexIdentifier) o;\n-        return entityType == i.entityType && indexName.equals( i.indexName );\n+      return false;\n     }\n+    IndexIdentifier i = (IndexIdentifier) o;\n+    return entityType == i.entityType && indexName.equals(i.indexName);\n+  }\n \n-    private int calculateHashCode()\n-    {\n-        int code = 17;\n-        code += 7 * entityType.hashCode();\n-        code += 7 * indexName.hashCode();\n-        return code;\n-    }\n+  private int calculateHashCode()\n+  {\n+    int code = 17;\n+    code += 7 * entityType.hashCode();\n+    code += 7 * indexName.hashCode();\n+    return code;\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return this.hashCode;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return this.hashCode;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"Index[\" + indexName + \",\" + entityType.nameToLowerCase() + \"]\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"Index[\" + indexName + \",\" + entityType.nameToLowerCase() + \"]\";\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1273/IndexIdentifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1273/IndexIdentifier.java\nindex fdf735426ff..48bd9adc513 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1273/IndexIdentifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1273/IndexIdentifier.java\n@@ -41,7 +41,8 @@ class IndexIdentifier\n         {\n             return false;\n         }\n-        IndexIdentifier i = (IndexIdentifier) o;\n+\n+IndexIdentifier i = (IndexIdentifier) o;\n         return entityType == i.entityType && indexName.equals( i.indexName );\n     }\n \n@@ -64,4 +65,4 @@ class IndexIdentifier\n     {\n         return \"Index[\" + indexName + \",\" + entityType.nameToLowerCase() + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}