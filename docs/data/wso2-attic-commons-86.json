{
    "project_name": "wso2-attic-commons",
    "violation_id": "86",
    "information": {
        "violations": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 215).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n\n    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n    }\n    ",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\nindex b3fd6742587..04cc37f260d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\n@@ -17,9 +17,10 @@ import org.apache.ode.bpel.rapi.PartnerLinkModel;\n  *\n  */\n public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n-\n-    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n-        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n+TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid,\n+\tString mexId, PartnerLinkModel oplink, Operation\n+operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n+          super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n     }\n     \n     \n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/86/TransactedPartnerRoleMessageExchangeImpl.java\nindex b3fd6742587..553283ec2bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/86/TransactedPartnerRoleMessageExchangeImpl.java\n@@ -11,45 +11,44 @@ import org.apache.ode.bpel.rapi.PartnerLinkModel;\n \n \n /**\n- * \n- * \n  * @author Maciej Szefler\n- *\n  */\n public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n \n-    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n-        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n-    }\n-    \n-    \n-    /**\n-     * The criteria for issuing a replyXXX call on TRANSACTED message exchanges is that the replyXXX must come while the\n-     * engine is blocked in an  \n-     * {@link MessageExchangeContext#invokePartnerBlocking(org.apache.ode.bpel.iapi.PartnerRoleMessageExchange)}. \n-     * method, AND the call must come from the engine thread. \n-     */\n-    @Override\n-    protected void checkReplyContextOk() {\n-        if (_state != State.INVOKE_XXX)\n-            throw new BpelEngineException(\"replyXXX operation attempted outside of transacted region!\");\n-        \n-        assert _contexts.isTransacted() : \"Internal Error: owner thread must be transactional!?!?!!?\"; \n+  TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,\n+                                           Operation operation, EndpointReference epr, EndpointReference myRoleEPR,\n+                                           PartnerRoleChannel channel) {\n+    super(process, iid, mexId, oplink, operation, epr, myRoleEPR, channel);\n+  }\n+\n+\n+  /**\n+   * The criteria for issuing a replyXXX call on TRANSACTED message exchanges is that the replyXXX must come while the\n+   * engine is blocked in an\n+   * {@link MessageExchangeContext#invokePartnerBlocking(org.apache.ode.bpel.iapi.PartnerRoleMessageExchange)}.\n+   * method, AND the call must come from the engine thread.\n+   */\n+  @Override\n+  protected void checkReplyContextOk() {\n+    if (_state != State.INVOKE_XXX) {\n+      throw new BpelEngineException(\"replyXXX operation attempted outside of transacted region!\");\n     }\n \n+    assert _contexts.isTransacted() : \"Internal Error: owner thread must be transactional!?!?!!?\";\n+  }\n \n-    @Override\n-    public InvocationStyle getInvocationStyle() {\n-        return InvocationStyle.TRANSACTED;\n-    }\n \n+  @Override\n+  public InvocationStyle getInvocationStyle() {\n+    return InvocationStyle.TRANSACTED;\n+  }\n \n-    @Override\n-    protected void asyncACK() {\n-        throw new IllegalStateException(\"Async responses not supported for transaction invocations.\");\n-        \n-    }\n \n+  @Override\n+  protected void asyncACK() {\n+    throw new IllegalStateException(\"Async responses not supported for transaction invocations.\");\n+\n+  }\n \n \n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/86/TransactedPartnerRoleMessageExchangeImpl.java\nindex b3fd6742587..d03eb30a7c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/86/TransactedPartnerRoleMessageExchangeImpl.java\n@@ -18,8 +18,8 @@ import org.apache.ode.bpel.rapi.PartnerLinkModel;\n  */\n public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n \n-    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n-        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n+    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink, Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n+        super(process, iid, mexId, oplink, operation, epr, myRoleEPR, channel);\n     }\n     \n     \n@@ -34,11 +34,11 @@ public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessage\n         if (_state != State.INVOKE_XXX)\n             throw new BpelEngineException(\"replyXXX operation attempted outside of transacted region!\");\n         \n-        assert _contexts.isTransacted() : \"Internal Error: owner thread must be transactional!?!?!!?\"; \n-    }\n+        assert _contexts.isTransacted() : \"Internal Error: owner thread must be transactional!?!?!!?\";\n \n+ }\n \n-    @Override\n+@Override\n     public InvocationStyle getInvocationStyle() {\n         return InvocationStyle.TRANSACTED;\n     }\n@@ -49,7 +49,4 @@ public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessage\n         throw new IllegalStateException(\"Async responses not supported for transaction invocations.\");\n         \n     }\n-\n-\n-\n-}\n+            }\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 204).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\nindex b3fd6742587..57805654027 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\n@@ -18,8 +18,8 @@ import org.apache.ode.bpel.rapi.PartnerLinkModel;\n  */\n public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n \n-    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n-        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n+    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel\n+        channel){ super (process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n     }\n     \n     \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\nindex b3fd6742587..04cc37f260d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/86/TransactedPartnerRoleMessageExchangeImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/86/TransactedPartnerRoleMessageExchangeImpl.java\n@@ -17,9 +17,10 @@ import org.apache.ode.bpel.rapi.PartnerLinkModel;\n  *\n  */\n public class TransactedPartnerRoleMessageExchangeImpl extends PartnerRoleMessageExchangeImpl {\n-\n-    TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid, String mexId, PartnerLinkModel oplink,Operation operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n-        super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n+TransactedPartnerRoleMessageExchangeImpl(ODEProcess process, long iid,\n+\tString mexId, PartnerLinkModel oplink, Operation\n+operation, EndpointReference epr, EndpointReference myRoleEPR, PartnerRoleChannel channel) {\n+          super(process, iid, mexId, oplink,  operation, epr, myRoleEPR, channel);\n     }\n     \n     \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}