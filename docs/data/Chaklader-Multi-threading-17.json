{
    "project_name": "Chaklader-Multi-threading",
    "violation_id": "17",
    "information": {
        "violations": [
            {
                "line": "39",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private void performTryLock() {\n\n        LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n        try {\n            boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n            if (isLockAcquired) {",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/17/SharedObjectWithLock.java\nindex 67a8f04494a..8d54d31da55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/17/SharedObjectWithLock.java\n@@ -35,8 +35,7 @@ public class SharedObjectWithLock {\n     }\n \n     private void performTryLock() {\n-\n-        LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n+      LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n         try {\n             boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n             if (isLockAcquired) {\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/17/SharedObjectWithLock.java\nindex 67a8f04494a..6d3b7974351 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/17/SharedObjectWithLock.java\n@@ -36,7 +36,8 @@ public class SharedObjectWithLock {\n \n     private void performTryLock() {\n \n-        LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n+        LOG.info(\n+            \"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n         try {\n             boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n             if (isLockAcquired) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/17/SharedObjectWithLock.java\nindex 67a8f04494a..b163493e364 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/17/SharedObjectWithLock.java\n@@ -86,4 +86,4 @@ public class SharedObjectWithLock {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/17/SharedObjectWithLock.java\nindex 67a8f04494a..e3a5d77d5bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/17/SharedObjectWithLock.java\n@@ -2,7 +2,6 @@ package com.baeldung.concurrent.locks;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n@@ -10,19 +9,16 @@ import java.util.concurrent.locks.ReentrantLock;\n \n import static java.lang.Thread.sleep;\n \n-\n public class SharedObjectWithLock {\n \n     private static final Logger LOG = LoggerFactory.getLogger(SharedObjectWithLock.class);\n-\n     private ReentrantLock lock = new ReentrantLock(true);\n-\n     private int counter = 0;\n \n     void perform() {\n-\n         lock.lock();\n         LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" acquired the lock\");\n+\n         try {\n             LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" processing\");\n             counter++;\n@@ -35,20 +31,18 @@ public class SharedObjectWithLock {\n     }\n \n     private void performTryLock() {\n-\n         LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n+\n         try {\n             boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n             if (isLockAcquired) {\n                 try {\n                     LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" acquired the lock\");\n-\n                     LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" processing\");\n                     sleep(1000);\n                 } finally {\n                     lock.unlock();\n                     LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" released the lock\");\n-\n                 }\n             }\n         } catch (InterruptedException exception) {\n@@ -74,16 +68,12 @@ public class SharedObjectWithLock {\n     }\n \n     public static void main(String[] args) {\n-\n         final int threadCount = 2;\n         final ExecutorService service = Executors.newFixedThreadPool(threadCount);\n         final SharedObjectWithLock object = new SharedObjectWithLock();\n \n         service.execute(object::perform);\n         service.execute(object::performTryLock);\n-\n         service.shutdown();\n-\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "column": "64",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "39",
                    "column": "64",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/17/SharedObjectWithLock.java\nindex 67a8f04494a..72501c4e0be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/17/SharedObjectWithLock.java\n@@ -36,7 +36,8 @@ public class SharedObjectWithLock {\n \n     private void performTryLock() {\n \n-        LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n+        LOG.info(\"Thread - \"+Thread . currentThread().getName()+\" attempting to acquire the lock\"\n+        );\n         try {\n             boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n             if (isLockAcquired) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/17/SharedObjectWithLock.java\nindex 67a8f04494a..8d54d31da55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/17/SharedObjectWithLock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/17/SharedObjectWithLock.java\n@@ -35,8 +35,7 @@ public class SharedObjectWithLock {\n     }\n \n     private void performTryLock() {\n-\n-        LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n+      LOG.info(\"Thread - \" + Thread.currentThread().getName() + \" attempting to acquire the lock\");\n         try {\n             boolean isLockAcquired = lock.tryLock(2, TimeUnit.SECONDS);\n             if (isLockAcquired) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}