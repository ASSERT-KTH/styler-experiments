{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "4513",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4513/CacheInvalidationTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4513/CacheInvalidationTransactionApplier.java\nindex 44158bcd0d2..43a1cb79fbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4513/CacheInvalidationTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4513/CacheInvalidationTransactionApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.command;\n \n import java.io.IOException;\n@@ -35,50 +36,50 @@ import org.neo4j.storageengine.api.Token;\n \n public class CacheInvalidationTransactionApplier extends TransactionApplier.Adapter\n {\n-    private final CacheAccessBackDoor cacheAccess;\n-    private final RelationshipTypeTokenStore relationshipTypeTokenStore;\n-    private final LabelTokenStore labelTokenStore;\n-    private final PropertyKeyTokenStore propertyKeyTokenStore;\n+  private final CacheAccessBackDoor cacheAccess;\n+  private final RelationshipTypeTokenStore relationshipTypeTokenStore;\n+  private final LabelTokenStore labelTokenStore;\n+  private final PropertyKeyTokenStore propertyKeyTokenStore;\n \n-    public CacheInvalidationTransactionApplier( NeoStores neoStores,\n-                                                CacheAccessBackDoor cacheAccess )\n-    {\n-        this.cacheAccess = cacheAccess;\n-        this.relationshipTypeTokenStore = neoStores.getRelationshipTypeTokenStore();\n-        this.labelTokenStore = neoStores.getLabelTokenStore();\n-        this.propertyKeyTokenStore = neoStores.getPropertyKeyTokenStore();\n-    }\n+  public CacheInvalidationTransactionApplier(NeoStores neoStores,\n+                                             CacheAccessBackDoor cacheAccess)\n+  {\n+    this.cacheAccess = cacheAccess;\n+    this.relationshipTypeTokenStore = neoStores.getRelationshipTypeTokenStore();\n+    this.labelTokenStore = neoStores.getLabelTokenStore();\n+    this.propertyKeyTokenStore = neoStores.getPropertyKeyTokenStore();\n+  }\n \n-    @Override\n-    public boolean visitRelationshipTypeTokenCommand( RelationshipTypeTokenCommand command )\n-    {\n-        RelationshipTypeToken type = relationshipTypeTokenStore.getToken( (int) command.getKey() );\n-        cacheAccess.addRelationshipTypeToken( type );\n+  @Override\n+  public boolean visitRelationshipTypeTokenCommand(RelationshipTypeTokenCommand command)\n+  {\n+    RelationshipTypeToken type = relationshipTypeTokenStore.getToken((int) command.getKey());\n+    cacheAccess.addRelationshipTypeToken(type);\n \n-        return false;\n-    }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean visitLabelTokenCommand( LabelTokenCommand command )\n-    {\n-        Token labelId = labelTokenStore.getToken( (int) command.getKey() );\n-        cacheAccess.addLabelToken( labelId );\n+  @Override\n+  public boolean visitLabelTokenCommand(LabelTokenCommand command)\n+  {\n+    Token labelId = labelTokenStore.getToken((int) command.getKey());\n+    cacheAccess.addLabelToken(labelId);\n \n-        return false;\n-    }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean visitPropertyKeyTokenCommand( PropertyKeyTokenCommand command )\n-    {\n-        Token index = propertyKeyTokenStore.getToken( (int) command.getKey() );\n-        cacheAccess.addPropertyKeyToken( index );\n+  @Override\n+  public boolean visitPropertyKeyTokenCommand(PropertyKeyTokenCommand command)\n+  {\n+    Token index = propertyKeyTokenStore.getToken((int) command.getKey());\n+    cacheAccess.addPropertyKeyToken(index);\n \n-        return false;\n-    }\n+    return false;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        // Nothing to close\n-    }\n+  @Override\n+  public void close()\n+  {\n+    // Nothing to close\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4513/CacheInvalidationTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4513/CacheInvalidationTransactionApplier.java\nindex 44158bcd0d2..558272b461d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4513/CacheInvalidationTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4513/CacheInvalidationTransactionApplier.java\n@@ -40,9 +40,8 @@ public class CacheInvalidationTransactionApplier extends TransactionApplier.Adap\n     private final LabelTokenStore labelTokenStore;\n     private final PropertyKeyTokenStore propertyKeyTokenStore;\n \n-    public CacheInvalidationTransactionApplier( NeoStores neoStores,\n-                                                CacheAccessBackDoor cacheAccess )\n-    {\n+    public CacheInvalidationTransactionApplier( NeoStores neoStores, CacheAccessBackDoor cacheAccess )\n+{\n         this.cacheAccess = cacheAccess;\n         this.relationshipTypeTokenStore = neoStores.getRelationshipTypeTokenStore();\n         this.labelTokenStore = neoStores.getLabelTokenStore();\n@@ -52,28 +51,25 @@ public class CacheInvalidationTransactionApplier extends TransactionApplier.Adap\n     @Override\n     public boolean visitRelationshipTypeTokenCommand( RelationshipTypeTokenCommand command )\n     {\n-        RelationshipTypeToken type = relationshipTypeTokenStore.getToken( (int) command.getKey() );\n+        RelationshipTypeToken type = relationshipTypeTokenStore.getToken( ( int) command.getKey() );\n         cacheAccess.addRelationshipTypeToken( type );\n-\n-        return false;\n+return false;\n     }\n \n     @Override\n     public boolean visitLabelTokenCommand( LabelTokenCommand command )\n     {\n-        Token labelId = labelTokenStore.getToken( (int) command.getKey() );\n+        Token labelId = labelTokenStore.getToken( ( int) command.getKey() );\n         cacheAccess.addLabelToken( labelId );\n-\n-        return false;\n+return false;\n     }\n \n     @Override\n     public boolean visitPropertyKeyTokenCommand( PropertyKeyTokenCommand command )\n     {\n-        Token index = propertyKeyTokenStore.getToken( (int) command.getKey() );\n+        Token index = propertyKeyTokenStore.getToken( ( int) command.getKey() );\n         cacheAccess.addPropertyKeyToken( index );\n-\n-        return false;\n+return false;\n     }\n \n     @Override\n@@ -81,4 +77,4 @@ public class CacheInvalidationTransactionApplier extends TransactionApplier.Adap\n     {\n         // Nothing to close\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}