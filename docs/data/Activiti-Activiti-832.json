{
    "project_name": "Activiti-Activiti",
    "violation_id": "832",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.core.common.spring.security;\n\nimport static java.util.Collections.emptyList;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\nindex f438fe3f4b3..9b1f6d36e02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import static java.util.Collections.emptyList;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/832/SimpleGrantedAuthoritiesResolver.java\nindex f438fe3f4b3..f112ebaaa0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/832/SimpleGrantedAuthoritiesResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import static java.util.Collections.emptyList;\n@@ -42,7 +43,7 @@ public class SimpleGrantedAuthoritiesResolver implements GrantedAuthoritiesResol\n \n     protected <T> Collection<? extends GrantedAuthority> getAuthorities(Authentication authentication) {\n         return Optional.ofNullable(authentication.getAuthorities())\n-                       .orElseGet(this::emptyAuthorities);\n+                .orElseGet(this::emptyAuthorities);\n     }\n \n     protected <T> Collection<T> emptyAuthorities() {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/832/SimpleGrantedAuthoritiesResolver.java\nindex f438fe3f4b3..1033e7d122e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/832/SimpleGrantedAuthoritiesResolver.java\n@@ -16,44 +16,38 @@\n package org.activiti.core.common.spring.security;\n \n import static java.util.Collections.emptyList;\n-\n import org.springframework.lang.NonNull;\n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.GrantedAuthority;\n-\n import java.security.Principal;\n import java.util.Collection;\n import java.util.Optional;\n \n+\n public class SimpleGrantedAuthoritiesResolver implements GrantedAuthoritiesResolver {\n \n-    @Override\n-    public Collection<? extends GrantedAuthority> getAuthorities(@NonNull Principal principal) {\n-        return Optional.of(principal)\n-                .filter(this::isSupportedPrincipal)\n-                .map(this.getPrincipalClass()::cast)\n-                .map(this::getAuthorities)\n-                .orElseThrow(this::securityException);\n-    }\n-\n-    protected SecurityException securityException() {\n-        return new SecurityException(\"Invalid principal authorities\");\n-    }\n-\n-    protected <T> Collection<? extends GrantedAuthority> getAuthorities(Authentication authentication) {\n-        return Optional.ofNullable(authentication.getAuthorities())\n-                       .orElseGet(this::emptyAuthorities);\n-    }\n-\n-    protected <T> Collection<T> emptyAuthorities() {\n-        return emptyList();\n-    }\n-\n-    protected Boolean isSupportedPrincipal(Principal principal) {\n-        return getPrincipalClass().isInstance(principal);\n-    }\n-\n-    protected <T> Class<? extends Authentication> getPrincipalClass() {\n-        return Authentication.class;\n-    }\n-}\n+  @Override\n+  public Collection<? extends GrantedAuthority> getAuthorities(@NonNull Principal principal) {\n+    return Optional.of(principal).filter(this::isSupportedPrincipal).map(this.getPrincipalClass()::cast).map(this::getAuthorities).orElseThrow(this::securityException);\n+  }\n+\n+  protected SecurityException securityException() {\n+    return new SecurityException(\"Invalid principal authorities\");\n+  }\n+\n+  protected <T> Collection<? extends GrantedAuthority> getAuthorities(Authentication authentication) {\n+    return Optional.ofNullable(authentication.getAuthorities()).orElseGet(this::emptyAuthorities);\n+  }\n+\n+  protected <T> Collection<T> emptyAuthorities() {\n+    return emptyList();\n+  }\n+\n+  protected Boolean isSupportedPrincipal(Principal principal) {\n+    return getPrincipalClass().isInstance(principal);\n+  }\n+\n+  protected <T> Class<? extends Authentication> getPrincipalClass() {\n+    return Authentication.class;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\nindex f438fe3f4b3..9b1f6d36e02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import static java.util.Collections.emptyList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\nindex f438fe3f4b3..9b1f6d36e02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/832/SimpleGrantedAuthoritiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/832/SimpleGrantedAuthoritiesResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.core.common.spring.security;\n \n import static java.util.Collections.emptyList;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}