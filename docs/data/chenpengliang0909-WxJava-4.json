{
    "project_name": "chenpengliang0909-WxJava",
    "violation_id": "4",
    "information": {
        "violations": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n    JsonObject o = json.getAsJsonObject();\n    WxCpUser user = new WxCpUser();\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/final/files-repaired/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..a1824bad9ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/final/files-repaired/4/WxCpUserGsonAdapter.java\n@@ -34,9 +34,9 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   private static final String EXTERNAL_ATTR = \"external_attr\";\n   private static final String EXTATTR = \"extattr\";\n \n-  @Override\n-  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n-    JsonObject o = json.getAsJsonObject();\n+  @Override public\n+  WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n+     JsonObject o = json.getAsJsonObject();\n     WxCpUser user = new WxCpUser();\n \n     if (o.get(\"department\") != null) {\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..fd0a69102bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/4/WxCpUserGsonAdapter.java\n@@ -35,7 +35,8 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   private static final String EXTATTR = \"extattr\";\n \n   @Override\n-  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n+  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\n+      throws JsonParseException {\n     JsonObject o = json.getAsJsonObject();\n     WxCpUser user = new WxCpUser();\n \n@@ -91,8 +92,8 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     JsonArray attrJsonElements = o.get(EXTATTR).getAsJsonObject().get(\"attrs\").getAsJsonArray();\n     for (JsonElement attrJsonElement : attrJsonElements) {\n       WxCpUser.Attr attr = new WxCpUser.Attr(\n-        GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"name\"),\n-        GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"value\")\n+          GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"name\"),\n+          GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"value\")\n       );\n       user.getExtAttrs().add(attr);\n     }\n@@ -107,37 +108,37 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n       switch (type) {\n         case 0: {\n           user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .value(GsonHelper.getString(element.getAsJsonObject().get(\"text\").getAsJsonObject(), \"value\"))\n-              .build()\n-            );\n+              .add(WxCpUser.ExternalAttribute.builder()\n+                  .type(type)\n+                  .name(name)\n+                  .value(GsonHelper.getString(element.getAsJsonObject().get(\"text\").getAsJsonObject(), \"value\"))\n+                  .build()\n+              );\n           break;\n         }\n         case 1: {\n           final JsonObject web = element.getAsJsonObject().get(\"web\").getAsJsonObject();\n           user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .url(GsonHelper.getString(web, \"url\"))\n-              .title(GsonHelper.getString(web, \"title\"))\n-              .build()\n-            );\n+              .add(WxCpUser.ExternalAttribute.builder()\n+                  .type(type)\n+                  .name(name)\n+                  .url(GsonHelper.getString(web, \"url\"))\n+                  .title(GsonHelper.getString(web, \"title\"))\n+                  .build()\n+              );\n           break;\n         }\n         case 2: {\n           final JsonObject miniprogram = element.getAsJsonObject().get(\"miniprogram\").getAsJsonObject();\n           user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .appid(GsonHelper.getString(miniprogram, \"appid\"))\n-              .pagePath(GsonHelper.getString(miniprogram, \"pagepath\"))\n-              .title(GsonHelper.getString(miniprogram, \"title\"))\n-              .build()\n-            );\n+              .add(WxCpUser.ExternalAttribute.builder()\n+                  .type(type)\n+                  .name(name)\n+                  .appid(GsonHelper.getString(miniprogram, \"appid\"))\n+                  .pagePath(GsonHelper.getString(miniprogram, \"pagepath\"))\n+                  .title(GsonHelper.getString(miniprogram, \"title\"))\n+                  .build()\n+              );\n           break;\n         }\n         default://ignored\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..fd22a9ed86b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/4/WxCpUserGsonAdapter.java\n@@ -103,9 +103,8 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     for (JsonElement element : attrJsonElements) {\n       final Integer type = GsonHelper.getInteger(element.getAsJsonObject(), \"type\");\n       final String name = GsonHelper.getString(element.getAsJsonObject(), \"name\");\n-\n-      switch (type) {\n-        case 0: {\n+switch (type) {\n+        case 0 : {\n           user.getExternalAttrs()\n             .add(WxCpUser.ExternalAttribute.builder()\n               .type(type)\n@@ -115,7 +114,7 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n             );\n           break;\n         }\n-        case 1: {\n+        case 1 : {\n           final JsonObject web = element.getAsJsonObject().get(\"web\").getAsJsonObject();\n           user.getExternalAttrs()\n             .add(WxCpUser.ExternalAttribute.builder()\n@@ -127,7 +126,7 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n             );\n           break;\n         }\n-        case 2: {\n+        case 2 : {\n           final JsonObject miniprogram = element.getAsJsonObject().get(\"miniprogram\").getAsJsonObject();\n           user.getExternalAttrs()\n             .add(WxCpUser.ExternalAttribute.builder()\n@@ -140,7 +139,8 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n             );\n           break;\n         }\n-        default://ignored\n+        default:\n+  //ignored\n       }\n     }\n   }\n@@ -233,20 +233,20 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n         attrJson.addProperty(\"type\", attr.getType());\n         attrJson.addProperty(\"name\", attr.getName());\n         switch (attr.getType()) {\n-          case 0: {\n+          case 0 : {\n             JsonObject text = new JsonObject();\n             text.addProperty(\"value\", attr.getValue());\n             attrJson.add(\"text\", text);\n             break;\n           }\n-          case 1: {\n+          case 1 : {\n             JsonObject web = new JsonObject();\n             web.addProperty(\"url\", attr.getUrl());\n             web.addProperty(\"title\", attr.getTitle());\n             attrJson.add(\"web\", web);\n             break;\n           }\n-          case 2: {\n+          case 2 : {\n             JsonObject miniprogram = new JsonObject();\n             miniprogram.addProperty(\"appid\", attr.getAppid());\n             miniprogram.addProperty(\"pagepath\", attr.getPagePath());\n@@ -254,7 +254,8 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n             attrJson.add(\"miniprogram\", miniprogram);\n             break;\n           }\n-          default://\u5ffd\u7565\n+          default:\n+  //\u5ffd\u7565\n         }\n         attrsJsonArray.add(attrJson);\n       }\n@@ -267,4 +268,4 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     return o;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 264).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..01b3557a8f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/4/WxCpUserGsonAdapter.java\n@@ -10,7 +10,6 @@\n package me.chanjar.weixin.cp.util.json;\n \n import java.lang.reflect.Type;\n-\n import com.google.gson.JsonArray;\n import com.google.gson.JsonDeserializationContext;\n import com.google.gson.JsonDeserializer;\n@@ -29,6 +28,8 @@ import me.chanjar.weixin.cp.bean.WxCpUser;\n  *\n  * @author Daniel Qian\n  */\n+\n+\n public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSerializer<WxCpUser> {\n   private static final String EXTERNAL_PROFILE = \"external_profile\";\n   private static final String EXTERNAL_ATTR = \"external_attr\";\n@@ -38,13 +39,12 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n     JsonObject o = json.getAsJsonObject();\n     WxCpUser user = new WxCpUser();\n-\n     if (o.get(\"department\") != null) {\n       JsonArray departJsonArray = o.get(\"department\").getAsJsonArray();\n       Long[] departIds = new Long[departJsonArray.size()];\n       int i = 0;\n       for (JsonElement jsonElement : departJsonArray) {\n-        departIds[i++] = jsonElement.getAsLong();\n+        departIds[i ++] = jsonElement.getAsLong();\n       }\n       user.setDepartIds(departIds);\n     }\n@@ -54,11 +54,10 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n       Integer[] orders = new Integer[departJsonArray.size()];\n       int i = 0;\n       for (JsonElement jsonElement : departJsonArray) {\n-        orders[i++] = jsonElement.getAsInt();\n+        orders[i ++] = jsonElement.getAsInt();\n       }\n       user.setOrders(orders);\n     }\n-\n     user.setUserId(GsonHelper.getString(o, \"userid\"));\n     user.setName(GsonHelper.getString(o, \"name\"));\n     user.setPosition(GsonHelper.getString(o, \"position\"));\n@@ -75,7 +74,6 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     user.setTelephone(GsonHelper.getString(o, \"telephone\"));\n     user.setQrCode(GsonHelper.getString(o, \"qr_code\"));\n     user.setToInvite(GsonHelper.getBoolean(o, \"to_invite\"));\n-\n     if (GsonHelper.isNotNull(o.get(EXTATTR))) {\n       this.buildExtraAttrs(o, user);\n     }\n@@ -90,10 +88,7 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   private void buildExtraAttrs(JsonObject o, WxCpUser user) {\n     JsonArray attrJsonElements = o.get(EXTATTR).getAsJsonObject().get(\"attrs\").getAsJsonArray();\n     for (JsonElement attrJsonElement : attrJsonElements) {\n-      WxCpUser.Attr attr = new WxCpUser.Attr(\n-        GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"name\"),\n-        GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"value\")\n-      );\n+      WxCpUser.Attr attr = new WxCpUser.Attr(GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"name\"), GsonHelper.getString(attrJsonElement.getAsJsonObject(), \"value\"));\n       user.getExtAttrs().add(attr);\n     }\n   }\n@@ -103,43 +98,24 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     for (JsonElement element : attrJsonElements) {\n       final Integer type = GsonHelper.getInteger(element.getAsJsonObject(), \"type\");\n       final String name = GsonHelper.getString(element.getAsJsonObject(), \"name\");\n-\n       switch (type) {\n-        case 0: {\n-          user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .value(GsonHelper.getString(element.getAsJsonObject().get(\"text\").getAsJsonObject(), \"value\"))\n-              .build()\n-            );\n-          break;\n-        }\n-        case 1: {\n-          final JsonObject web = element.getAsJsonObject().get(\"web\").getAsJsonObject();\n-          user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .url(GsonHelper.getString(web, \"url\"))\n-              .title(GsonHelper.getString(web, \"title\"))\n-              .build()\n-            );\n-          break;\n-        }\n-        case 2: {\n-          final JsonObject miniprogram = element.getAsJsonObject().get(\"miniprogram\").getAsJsonObject();\n-          user.getExternalAttrs()\n-            .add(WxCpUser.ExternalAttribute.builder()\n-              .type(type)\n-              .name(name)\n-              .appid(GsonHelper.getString(miniprogram, \"appid\"))\n-              .pagePath(GsonHelper.getString(miniprogram, \"pagepath\"))\n-              .title(GsonHelper.getString(miniprogram, \"title\"))\n-              .build()\n-            );\n-          break;\n-        }\n+        case 0:\n+          {\n+            user.getExternalAttrs().add(WxCpUser.ExternalAttribute.builder().type(type).name(name).value(GsonHelper.getString(element.getAsJsonObject().get(\"text\").getAsJsonObject(), \"value\")).build());\n+            break;\n+          }\n+        case 1:\n+          {\n+            final JsonObject web = element.getAsJsonObject().get(\"web\").getAsJsonObject();\n+            user.getExternalAttrs().add(WxCpUser.ExternalAttribute.builder().type(type).name(name).url(GsonHelper.getString(web, \"url\")).title(GsonHelper.getString(web, \"title\")).build());\n+            break;\n+          }\n+        case 2:\n+          {\n+            final JsonObject miniprogram = element.getAsJsonObject().get(\"miniprogram\").getAsJsonObject();\n+            user.getExternalAttrs().add(WxCpUser.ExternalAttribute.builder().type(type).name(name).appid(GsonHelper.getString(miniprogram, \"appid\")).pagePath(GsonHelper.getString(miniprogram, \"pagepath\")).title(GsonHelper.getString(miniprogram, \"title\")).build());\n+            break;\n+          }\n         default://ignored\n       }\n     }\n@@ -151,9 +127,11 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     if (user.getUserId() != null) {\n       o.addProperty(\"userid\", user.getUserId());\n     }\n+\n     if (user.getName() != null) {\n       o.addProperty(\"name\", user.getName());\n     }\n+\n     if (user.getDepartIds() != null) {\n       JsonArray jsonArray = new JsonArray();\n       for (Long departId : user.getDepartIds()) {\n@@ -173,42 +151,55 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n     if (user.getPosition() != null) {\n       o.addProperty(\"position\", user.getPosition());\n     }\n+\n     if (user.getMobile() != null) {\n       o.addProperty(\"mobile\", user.getMobile());\n     }\n+\n     if (user.getGender() != null) {\n       o.addProperty(\"gender\", user.getGender().getCode());\n     }\n+\n     if (user.getEmail() != null) {\n       o.addProperty(\"email\", user.getEmail());\n     }\n+\n     if (user.getAvatar() != null) {\n       o.addProperty(\"avatar\", user.getAvatar());\n     }\n+\n     if (user.getAvatarMediaId() != null) {\n       o.addProperty(\"avatar_mediaid\", user.getAvatarMediaId());\n     }\n+\n     if (user.getStatus() != null) {\n       o.addProperty(\"status\", user.getStatus());\n     }\n+\n     if (user.getEnable() != null) {\n       o.addProperty(\"enable\", user.getEnable());\n     }\n+\n     if (user.getIsLeader() != null) {\n       o.addProperty(\"isleader\", user.getIsLeader());\n     }\n+\n     if (user.getHideMobile() != null) {\n       o.addProperty(\"hide_mobile\", user.getHideMobile());\n     }\n+\n     if (user.getEnglishName() != null) {\n       o.addProperty(\"english_name\", user.getEnglishName());\n     }\n+\n     if (user.getTelephone() != null) {\n       o.addProperty(\"telephone\", user.getTelephone());\n     }\n+\n     if (user.getQrCode() != null) {\n       o.addProperty(\"qr_code\", user.getQrCode());\n     }\n+\n     if (user.getToInvite() != null) {\n       o.addProperty(\"to_invite\", user.getToInvite());\n     }\n@@ -221,6 +212,7 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n         attrJson.addProperty(\"value\", attr.getValue());\n         attrsJsonArray.add(attrJson);\n       }\n+\n       JsonObject attrsJson = new JsonObject();\n       attrsJson.add(\"attrs\", attrsJsonArray);\n       o.add(EXTATTR, attrsJson);\n@@ -233,27 +225,30 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n         attrJson.addProperty(\"type\", attr.getType());\n         attrJson.addProperty(\"name\", attr.getName());\n         switch (attr.getType()) {\n-          case 0: {\n-            JsonObject text = new JsonObject();\n-            text.addProperty(\"value\", attr.getValue());\n-            attrJson.add(\"text\", text);\n-            break;\n-          }\n-          case 1: {\n-            JsonObject web = new JsonObject();\n-            web.addProperty(\"url\", attr.getUrl());\n-            web.addProperty(\"title\", attr.getTitle());\n-            attrJson.add(\"web\", web);\n-            break;\n-          }\n-          case 2: {\n-            JsonObject miniprogram = new JsonObject();\n-            miniprogram.addProperty(\"appid\", attr.getAppid());\n-            miniprogram.addProperty(\"pagepath\", attr.getPagePath());\n-            miniprogram.addProperty(\"title\", attr.getTitle());\n-            attrJson.add(\"miniprogram\", miniprogram);\n-            break;\n-          }\n+          case 0:\n+            {\n+              JsonObject text = new JsonObject();\n+              text.addProperty(\"value\", attr.getValue());\n+              attrJson.add(\"text\", text);\n+              break;\n+            }\n+          case 1:\n+            {\n+              JsonObject web = new JsonObject();\n+              web.addProperty(\"url\", attr.getUrl());\n+              web.addProperty(\"title\", attr.getTitle());\n+              attrJson.add(\"web\", web);\n+              break;\n+            }\n+          case 2:\n+            {\n+              JsonObject miniprogram = new JsonObject();\n+              miniprogram.addProperty(\"appid\", attr.getAppid());\n+              miniprogram.addProperty(\"pagepath\", attr.getPagePath());\n+              miniprogram.addProperty(\"title\", attr.getTitle());\n+              attrJson.add(\"miniprogram\", miniprogram);\n+              break;\n+            }\n           default://\u5ffd\u7565\n         }\n         attrsJsonArray.add(attrJson);\n@@ -266,5 +261,4 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n \n     return o;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 90
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/random/files-repaired/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..a1824bad9ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/random/files-repaired/4/WxCpUserGsonAdapter.java\n@@ -34,9 +34,9 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   private static final String EXTERNAL_ATTR = \"external_attr\";\n   private static final String EXTATTR = \"extattr\";\n \n-  @Override\n-  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n-    JsonObject o = json.getAsJsonObject();\n+  @Override public\n+  WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n+     JsonObject o = json.getAsJsonObject();\n     WxCpUser user = new WxCpUser();\n \n     if (o.get(\"department\") != null) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/4/WxCpUserGsonAdapter.java\nindex 84ee7c0f2fd..a2c91ba1b4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/4/WxCpUserGsonAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/4/WxCpUserGsonAdapter.java\n@@ -34,8 +34,7 @@ public class WxCpUserGsonAdapter implements JsonDeserializer<WxCpUser>, JsonSeri\n   private static final String EXTERNAL_ATTR = \"external_attr\";\n   private static final String EXTATTR = \"extattr\";\n \n-  @Override\n-  public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n+  @Override public WxCpUser deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n     JsonObject o = json.getAsJsonObject();\n     WxCpUser user = new WxCpUser();\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}