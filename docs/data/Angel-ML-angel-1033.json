{
    "project_name": "Angel-ML-angel",
    "violation_id": "1033",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1033/HashPSPartitioner.java\nindex da501271d77..30119e10d37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1033/HashPSPartitioner.java\n@@ -23,13 +23,15 @@ import com.tencent.angel.protobuf.generated.MLProtos.Partition;\n  */\n public class HashPSPartitioner extends PSPartitioner {\n \n-  public HashPSPartitioner() {\n-    super();\n-  }\n+    public HashPSPartitioner() {\n+        super();\n+    }\n \n-  /** partition by id mod the num of parameter servers  */\n-  @Override\n-  public int getServerIndex(Partition partition, int numServer) {\n-    return partition.getPartitionId() % numServer;\n-  }\n+    /**\n+     * partition by id mod the num of parameter servers\n+     */\n+    @Override\n+    public int getServerIndex(Partition partition, int numServer) {\n+        return partition.getPartitionId() % numServer;\n+    }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1033/HashPSPartitioner.java\nindex da501271d77..85444439c5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1033/HashPSPartitioner.java\n@@ -32,4 +32,4 @@ public class HashPSPartitioner extends PSPartitioner {\n   public int getServerIndex(Partition partition, int numServer) {\n     return partition.getPartitionId() % numServer;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1033/HashPSPartitioner.java\nindex da501271d77..6184e26f188 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1033/HashPSPartitioner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1033/HashPSPartitioner.java\n@@ -21,6 +21,7 @@ import com.tencent.angel.protobuf.generated.MLProtos.Partition;\n /**\n  * Partitions by partition id mod the num of parameter servers.\n  */\n+\n public class HashPSPartitioner extends PSPartitioner {\n \n   public HashPSPartitioner() {\n@@ -28,8 +29,9 @@ public class HashPSPartitioner extends PSPartitioner {\n   }\n \n   /** partition by id mod the num of parameter servers  */\n+\n   @Override\n   public int getServerIndex(Partition partition, int numServer) {\n     return partition.getPartitionId() % numServer;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}