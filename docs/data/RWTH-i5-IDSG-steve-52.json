{
    "project_name": "RWTH-i5-IDSG-steve",
    "violation_id": "52",
    "information": {
        "violations": [
            {
                "line": "21",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 127).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n    }\n\n    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/checkstyle_idea/52/WebSocketLogger.java\nindex dda1d11979c..81c6b5e7d5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/checkstyle_idea/52/WebSocketLogger.java\n@@ -11,41 +11,43 @@ import org.springframework.web.socket.WebSocketSession;\n @Slf4j\n public final class WebSocketLogger {\n \n-    private WebSocketLogger() { }\n+  private WebSocketLogger() {\n+  }\n \n-    public static void connected(String chargeBoxId, WebSocketSession session) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Connection is established\", chargeBoxId, session.getId());\n-    }\n+  public static void connected(String chargeBoxId, WebSocketSession session) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Connection is established\", chargeBoxId, session.getId());\n+  }\n \n-    public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n-    }\n+  public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n+    log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(),\n+      closeStatus);\n+  }\n \n-    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+  public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n+  }\n \n-    public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n-    }\n+  public static void sendingPing(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Sending ping message\", chargeBoxId, session.getId());\n+  }\n \n-    public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n-        log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n-    }\n+  public static void receivedPong(String chargeBoxId, WebSocketSession session) {\n+    log.debug(\"[chargeBoxId={}, sessionId={}] Received pong message\", chargeBoxId, session.getId());\n+  }\n \n-    public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n-        log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n-    }\n+  public static void receivedText(String chargeBoxId, WebSocketSession session, String msg) {\n+    log.info(\"[chargeBoxId={}, sessionId={}] Received: {}\", chargeBoxId, session.getId(), msg);\n+  }\n \n-    public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n-        }\n+  public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+      log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n     }\n+  }\n \n-    public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n-        if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n-        }\n+  public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n+    if (log.isErrorEnabled()) {\n+      log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n     }\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/naturalize/52/WebSocketLogger.java\nindex dda1d11979c..907fb6efe60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/naturalize/52/WebSocketLogger.java\n@@ -48,4 +48,4 @@ public final class WebSocketLogger {\n             log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/codebuff/52/WebSocketLogger.java\nindex dda1d11979c..ceb5495d6b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/codebuff/52/WebSocketLogger.java\n@@ -8,9 +8,10 @@ import org.springframework.web.socket.WebSocketSession;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 10.05.2018\n  */\n+\n+\n @Slf4j\n public final class WebSocketLogger {\n-\n     private WebSocketLogger() { }\n \n     public static void connected(String chargeBoxId, WebSocketSession session) {\n@@ -18,7 +19,10 @@ public final class WebSocketLogger {\n     }\n \n     public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n+        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\",\n+                 chargeBoxId,\n+                 session.getId(),\n+                 closeStatus);\n     }\n \n     public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n@@ -39,13 +43,17 @@ public final class WebSocketLogger {\n \n     public static void pingError(String chargeBoxId, WebSocketSession session, Throwable t) {\n         if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Ping error\", t);\n+            log.error(\"[chargeBoxId=\" + chargeBoxId\n+            + \", sessionId=\"\n+            + session.getId() + \"] Ping error\", t);\n         }\n     }\n \n     public static void transportError(String chargeBoxId, WebSocketSession session, Throwable t) {\n         if (log.isErrorEnabled()) {\n-            log.error(\"[chargeBoxId=\" + chargeBoxId + \", sessionId=\" + session.getId() + \"] Transport error\", t);\n+            log.error(\"[chargeBoxId=\" + chargeBoxId\n+            + \", sessionId=\"\n+            + session.getId() + \"] Transport error\", t);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "21",
                    "column": "96",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "21",
                    "column": "111",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/three_grams/files-repaired/52/WebSocketLogger.java\nindex dda1d11979c..0859691ea4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/violations/52/WebSocketLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/RWTH-i5-IDSG-steve/styler/05_predictions/three_grams/files-repaired/52/WebSocketLogger.java\n@@ -18,10 +18,13 @@ public final class WebSocketLogger {\n     }\n \n     public static void closed(String chargeBoxId, WebSocketSession session, CloseStatus closeStatus) {\n-        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId, session.getId(), closeStatus);\n-    }\n+        log.warn(\"[chargeBoxId={}, sessionId={}] Connection is closed, status: {}\", chargeBoxId,session.getId (),\n+    closeStatus\n+\n+        );\n+     }\n \n-    public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n+     public static void sending(String chargeBoxId, WebSocketSession session, String msg) {\n         log.info(\"[chargeBoxId={}, sessionId={}] Sending: {}\", chargeBoxId, session.getId(), msg);\n     }\n \n",
            "diff_size": 6
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}