{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3166",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3166/RelationshipStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3166/RelationshipStore.java\nindex 922d1bbbd2d..309cf86b498 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3166/RelationshipStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3166/RelationshipStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.io.File;\n@@ -36,28 +37,28 @@ import static org.neo4j.kernel.impl.store.NoStoreHeaderFormat.NO_STORE_HEADER_FO\n /**\n  * Implementation of the relationship store.\n  */\n-public class RelationshipStore extends CommonAbstractStore<RelationshipRecord,NoStoreHeader> implements StorageStatement.Relationships\n+public class RelationshipStore extends CommonAbstractStore<RelationshipRecord, NoStoreHeader> implements StorageStatement.Relationships\n {\n-    public static final String TYPE_DESCRIPTOR = \"RelationshipStore\";\n+  public static final String TYPE_DESCRIPTOR = \"RelationshipStore\";\n \n-    public RelationshipStore(\n-            File fileName,\n-            Config configuration,\n-            IdGeneratorFactory idGeneratorFactory,\n-            PageCache pageCache,\n-            LogProvider logProvider,\n-            RecordFormats recordFormats,\n-            OpenOption... openOptions )\n-    {\n-        super( fileName, configuration, IdType.RELATIONSHIP, idGeneratorFactory,\n-                pageCache, logProvider, TYPE_DESCRIPTOR, recordFormats.relationship(), NO_STORE_HEADER_FORMAT,\n-                recordFormats.storeVersion(), openOptions );\n-    }\n+  public RelationshipStore(\n+      File fileName,\n+      Config configuration,\n+      IdGeneratorFactory idGeneratorFactory,\n+      PageCache pageCache,\n+      LogProvider logProvider,\n+      RecordFormats recordFormats,\n+      OpenOption... openOptions)\n+  {\n+    super(fileName, configuration, IdType.RELATIONSHIP, idGeneratorFactory,\n+        pageCache, logProvider, TYPE_DESCRIPTOR, recordFormats.relationship(), NO_STORE_HEADER_FORMAT,\n+        recordFormats.storeVersion(), openOptions);\n+  }\n \n-    @Override\n-    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, RelationshipRecord record )\n-            throws FAILURE\n-    {\n-        processor.processRelationship( this, record );\n-    }\n+  @Override\n+  public <FAILURE extends Exception> void accept(Processor<FAILURE> processor, RelationshipRecord record)\n+      throws FAILURE\n+  {\n+    processor.processRelationship(this, record);\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3166/RelationshipStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3166/RelationshipStore.java\nindex 922d1bbbd2d..3317d0807e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3166/RelationshipStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3166/RelationshipStore.java\n@@ -40,8 +40,7 @@ public class RelationshipStore extends CommonAbstractStore<RelationshipRecord,No\n {\n     public static final String TYPE_DESCRIPTOR = \"RelationshipStore\";\n \n-    public RelationshipStore(\n-            File fileName,\n+    public RelationshipStore( File fileName,\n             Config configuration,\n             IdGeneratorFactory idGeneratorFactory,\n             PageCache pageCache,\n@@ -55,9 +54,8 @@ public class RelationshipStore extends CommonAbstractStore<RelationshipRecord,No\n     }\n \n     @Override\n-    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, RelationshipRecord record )\n-            throws FAILURE\n-    {\n+    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, RelationshipRecord record ) throws FAILURE\n+{\n         processor.processRelationship( this, record );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}