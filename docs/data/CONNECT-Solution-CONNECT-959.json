{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "959",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admingui.validator;\n\nimport gov.hhs.fha.nhinc.admingui.util.HelperUtil;\nimport java.text.MessageFormat;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/959/CheckboxRequiredTrueValidator.java\nindex 4b4f763fb68..e3c5b986d63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/959/CheckboxRequiredTrueValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.validator;\n \n import gov.hhs.fha.nhinc.admingui.util.HelperUtil;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/959/CheckboxRequiredTrueValidator.java\nindex 4b4f763fb68..5ffe67faf88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/959/CheckboxRequiredTrueValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.validator;\n \n import gov.hhs.fha.nhinc.admingui.util.HelperUtil;\n@@ -38,27 +39,26 @@ import org.apache.commons.lang.StringUtils;\n \n /**\n  * @author Tran Tang\n- *\n  */\n @FacesValidator(\"CheckboxRequiredTrueValidator\")\n public class CheckboxRequiredTrueValidator implements Validator {\n \n-    @Override\n-    public void validate(FacesContext context, UIComponent component, Object value) {\n+  @Override\n+  public void validate(FacesContext context, UIComponent component, Object value) {\n \n-        if (!Boolean.TRUE.equals(value)) {\n-            String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n+    if (!Boolean.TRUE.equals(value)) {\n+      String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n \n-            if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = ((UIInput) component).getRequiredMessage();\n-            }\n+      if (StringUtils.isBlank(errorMessage)) {\n+        errorMessage = ((UIInput) component).getRequiredMessage();\n+      }\n \n-            if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n-            }\n-\n-            throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n-        }\n+      if (StringUtils.isBlank(errorMessage)) {\n+        errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n+      }\n \n+      throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n     }\n+\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/959/CheckboxRequiredTrueValidator.java\nindex 4b4f763fb68..5ae599b6a09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/959/CheckboxRequiredTrueValidator.java\n@@ -40,25 +40,27 @@ import org.apache.commons.lang.StringUtils;\n  * @author Tran Tang\n  *\n  */\n+\n+\n @FacesValidator(\"CheckboxRequiredTrueValidator\")\n public class CheckboxRequiredTrueValidator implements Validator {\n \n-    @Override\n-    public void validate(FacesContext context, UIComponent component, Object value) {\n-\n-        if (!Boolean.TRUE.equals(value)) {\n-            String errorMessage = (String) component.getAttributes().get(\"errorMessage\");\n \n+    @Override\n+    public void validate(FacesContext context,\n+        UIComponent component, Object value) {\n+        if (!\n+                Boolean.TRUE.equals(value)) {\n+            String errorMessage = (String)\n+                                      component.getAttributes().get(\"errorMessage\");\n             if (StringUtils.isBlank(errorMessage)) {\n-                errorMessage = ((UIInput) component).getRequiredMessage();\n+                errorMessage = ((UIInput)\n+                                    component ).getRequiredMessage();\n             }\n-\n             if (StringUtils.isBlank(errorMessage)) {\n                 errorMessage = MessageFormat.format(\"'{0}' is required.\", component.getId());\n             }\n-\n             throw new ValidatorException(HelperUtil.getMsgError(errorMessage));\n         }\n-\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/959/CheckboxRequiredTrueValidator.java\nindex 4b4f763fb68..e3c5b986d63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/959/CheckboxRequiredTrueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/959/CheckboxRequiredTrueValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admingui.validator;\n \n import gov.hhs.fha.nhinc.admingui.util.HelperUtil;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}