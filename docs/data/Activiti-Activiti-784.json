{
    "project_name": "Activiti-Activiti",
    "violation_id": "784",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.event.impl;\n\nimport org.activiti.api.process.model.ProcessInstance;\nimport org.activiti.api.process.model.events.ProcessRuntimeEvent;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..649c01a2666 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/784/ProcessStartedEventImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import org.activiti.api.process.model.ProcessInstance;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..649c01a2666 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/784/ProcessStartedEventImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import org.activiti.api.process.model.ProcessInstance;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..c7df476b582 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/784/ProcessStartedEventImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import org.activiti.api.process.model.ProcessInstance;\n@@ -61,4 +62,4 @@ public class ProcessStartedEventImpl extends RuntimeEventImpl<ProcessInstance, P\n                 \", nestedProcessInstanceId='\" + nestedProcessInstanceId + '\\'' +\n                 '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..9d978ced132 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/784/ProcessStartedEventImpl.java\n@@ -20,45 +20,42 @@ import org.activiti.api.process.model.events.ProcessRuntimeEvent;\n import org.activiti.api.process.runtime.events.ProcessStartedEvent;\n import org.activiti.api.runtime.event.impl.RuntimeEventImpl;\n \n-public class ProcessStartedEventImpl extends RuntimeEventImpl<ProcessInstance, ProcessRuntimeEvent.ProcessEvents>\n-        implements ProcessStartedEvent {\n \n-    private String nestedProcessDefinitionId;\n-    private String nestedProcessInstanceId;\n+public class ProcessStartedEventImpl extends RuntimeEventImpl<ProcessInstance, ProcessRuntimeEvent.ProcessEvents> implements ProcessStartedEvent {\n \n-    public ProcessStartedEventImpl(ProcessInstance entity) {\n-        super(entity);\n-    }\n+  private String nestedProcessDefinitionId;\n \n-    public void setNestedProcessDefinitionId(String nestedProcessDefinitionId) {\n-        this.nestedProcessDefinitionId = nestedProcessDefinitionId;\n-    }\n+  private String nestedProcessInstanceId;\n \n-    @Override\n-    public String getNestedProcessDefinitionId() {\n-        return nestedProcessDefinitionId;\n-    }\n+  public ProcessStartedEventImpl(ProcessInstance entity) {\n+    super(entity);\n+  }\n \n-    public void setNestedProcessInstanceId(String nestedProcessInstanceId) {\n-        this.nestedProcessInstanceId = nestedProcessInstanceId;\n-    }\n+  public void setNestedProcessDefinitionId(String nestedProcessDefinitionId) {\n+    this.nestedProcessDefinitionId = nestedProcessDefinitionId;\n+  }\n \n-    @Override\n-    public String getNestedProcessInstanceId() {\n-        return nestedProcessInstanceId;\n-    }\n+  @Override\n+  public String getNestedProcessDefinitionId() {\n+    return nestedProcessDefinitionId;\n+  }\n \n-    @Override\n-    public ProcessEvents getEventType() {\n-        return ProcessEvents.PROCESS_STARTED;\n-    }\n+  public void setNestedProcessInstanceId(String nestedProcessInstanceId) {\n+    this.nestedProcessInstanceId = nestedProcessInstanceId;\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"ProcessStartedEventImpl{\" +\n-                super.toString() +\n-                \"nestedProcessDefinitionId='\" + nestedProcessDefinitionId + '\\'' +\n-                \", nestedProcessInstanceId='\" + nestedProcessInstanceId + '\\'' +\n-                '}';\n-    }\n-}\n+  @Override\n+  public String getNestedProcessInstanceId() {\n+    return nestedProcessInstanceId;\n+  }\n+\n+  @Override\n+  public ProcessEvents getEventType() {\n+    return ProcessEvents.PROCESS_STARTED;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"ProcessStartedEventImpl{\" + super.toString() + \"nestedProcessDefinitionId='\" + nestedProcessDefinitionId + '\\'' + \", nestedProcessInstanceId='\" + nestedProcessInstanceId + '\\'' + '}';\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..649c01a2666 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/784/ProcessStartedEventImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import org.activiti.api.process.model.ProcessInstance;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/784/ProcessStartedEventImpl.java\nindex ccbe644ea74..649c01a2666 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/784/ProcessStartedEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/784/ProcessStartedEventImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import org.activiti.api.process.model.ProcessInstance;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}