{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3657",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3657/BoltProtocolPipelineInstallerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3657/BoltProtocolPipelineInstallerFactory.java\nindex 1e1edf9291d..220b7fec243 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3657/BoltProtocolPipelineInstallerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3657/BoltProtocolPipelineInstallerFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import org.neo4j.bolt.BoltChannel;\n@@ -29,13 +30,13 @@ import org.neo4j.bolt.BoltChannel;\n @FunctionalInterface\n public interface BoltProtocolPipelineInstallerFactory\n {\n-    /**\n-     * Instantiate a handler for Bolt protocol with the specified version. Return {@code null} when handler for the\n-     * given version can't be instantiated.\n-     *\n-     * @param protocolVersion the version as negotiated by the initial handshake.\n-     * @param channel the channel representing network connection from the client.\n-     * @return new protocol handler when given protocol version is known and valid, {@code null} otherwise.\n-     */\n-    BoltProtocolPipelineInstaller create( long protocolVersion, BoltChannel channel );\n+  /**\n+   * Instantiate a handler for Bolt protocol with the specified version. Return {@code null} when handler for the\n+   * given version can't be instantiated.\n+   *\n+   * @param protocolVersion the version as negotiated by the initial handshake.\n+   * @param channel         the channel representing network connection from the client.\n+   * @return new protocol handler when given protocol version is known and valid, {@code null} otherwise.\n+   */\n+  BoltProtocolPipelineInstaller create(long protocolVersion, BoltChannel channel);\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3657/BoltProtocolPipelineInstallerFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3657/BoltProtocolPipelineInstallerFactory.java\nindex 1e1edf9291d..bcc4f4b2ea6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3657/BoltProtocolPipelineInstallerFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3657/BoltProtocolPipelineInstallerFactory.java\n@@ -38,4 +38,4 @@ public interface BoltProtocolPipelineInstallerFactory\n      * @return new protocol handler when given protocol version is known and valid, {@code null} otherwise.\n      */\n     BoltProtocolPipelineInstaller create( long protocolVersion, BoltChannel channel );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}