{
    "project_name": "intuit-Tank",
    "violation_id": "31",
    "information": {
        "violations": [
            {
                "line": "49",
                "column": "29",
                "severity": "warning",
                "message": "'{' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "     */\n    public String[] getLineCommentStartAndEnd() {\n        return new String[] { \"<!--\", \"-->\" };\n    }\n\n    /**",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/31/AbstractMarkupTokenMaker.java\nindex 632d21fb938..3538d1e1b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/31/AbstractMarkupTokenMaker.java\n@@ -46,7 +46,7 @@ public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n      * @return The start and end strings to add to a line to \"comment\" it out.\n      */\n     public String[] getLineCommentStartAndEnd() {\n-        return new String[] { \"<!--\", \"-->\" };\n+        return new String[] {\"<!--\", \"-->\" };\n     }\n \n     /**\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/31/AbstractMarkupTokenMaker.java\nindex 632d21fb938..b363c9f7964 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/31/AbstractMarkupTokenMaker.java\n@@ -21,41 +21,42 @@\n  * License along with this library; if not, write to the Free Software\n  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA.\n  */\n+\n package org.fife.ui.rsyntaxtextarea.modes;\n \n import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;\n \n /**\n  * Base class for token makers for markup languages.\n- * \n+ *\n  * @author Robert Futrell\n  * @version 1.0\n  */\n public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n \n-    /**\n-     * Returns whether markup close tags should be completed.\n-     * \n-     * @return Whether closing markup tags are to be completed.\n-     */\n-    public abstract boolean getCompleteCloseTags();\n+  /**\n+   * Returns whether markup close tags should be completed.\n+   *\n+   * @return Whether closing markup tags are to be completed.\n+   */\n+  public abstract boolean getCompleteCloseTags();\n \n-    /**\n-     * Returns the text to place at the beginning and end of a line to \"comment\" it in a this programming language.\n-     * \n-     * @return The start and end strings to add to a line to \"comment\" it out.\n-     */\n-    public String[] getLineCommentStartAndEnd() {\n-        return new String[] { \"<!--\", \"-->\" };\n-    }\n+  /**\n+   * Returns the text to place at the beginning and end of a line to \"comment\" it in a this programming language.\n+   *\n+   * @return The start and end strings to add to a line to \"comment\" it out.\n+   */\n+  public String[] getLineCommentStartAndEnd() {\n+    return new String[] {\"<!--\", \"-->\"};\n+  }\n \n-    /**\n-     * Overridden to return <code>true</code>.\n-     * \n-     * @return <code>true</code> always.\n-     */\n-    public final boolean isMarkupLanguage() {\n-        return true;\n-    }\n+  /**\n+   * Overridden to return <code>true</code>.\n+   *\n+   * @return <code>true</code> always.\n+   */\n+  public final boolean isMarkupLanguage() {\n+    return true;\n+  }\n \n }\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/31/AbstractMarkupTokenMaker.java\nindex 632d21fb938..546e4e6bcbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/31/AbstractMarkupTokenMaker.java\n@@ -23,6 +23,8 @@\n  */\n package org.fife.ui.rsyntaxtextarea.modes;\n \n+\n+\n import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;\n \n /**\n@@ -31,6 +33,8 @@ import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;\n  * @author Robert Futrell\n  * @version 1.0\n  */\n+\n+\n public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n \n     /**\n@@ -45,8 +49,13 @@ public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n      * \n      * @return The start and end strings to add to a line to \"comment\" it out.\n      */\n+\n+\n     public String[] getLineCommentStartAndEnd() {\n-        return new String[] { \"<!--\", \"-->\" };\n+        return new String[] {\n+            \"<!--\",\n+            \"-->\"\n+};\n     }\n \n     /**\n@@ -54,8 +63,9 @@ public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n      * \n      * @return <code>true</code> always.\n      */\n+\n+\n     public final boolean isMarkupLanguage() {\n         return true;\n     }\n-\n }\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/31/AbstractMarkupTokenMaker.java\nindex 632d21fb938..3538d1e1b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/31/AbstractMarkupTokenMaker.java\n@@ -46,7 +46,7 @@ public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n      * @return The start and end strings to add to a line to \"comment\" it out.\n      */\n     public String[] getLineCommentStartAndEnd() {\n-        return new String[] { \"<!--\", \"-->\" };\n+        return new String[] {\"<!--\", \"-->\" };\n     }\n \n     /**\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/31/AbstractMarkupTokenMaker.java\nindex 632d21fb938..3538d1e1b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/31/AbstractMarkupTokenMaker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/31/AbstractMarkupTokenMaker.java\n@@ -46,7 +46,7 @@ public abstract class AbstractMarkupTokenMaker extends AbstractJFlexTokenMaker {\n      * @return The start and end strings to add to a line to \"comment\" it out.\n      */\n     public String[] getLineCommentStartAndEnd() {\n-        return new String[] { \"<!--\", \"-->\" };\n+        return new String[] {\"<!--\", \"-->\" };\n     }\n \n     /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}