{
    "project_name": "twilio-twilio-java",
    "violation_id": "808",
    "information": {
        "violations": [
            {
                "line": "19",
                "column": "73",
                "severity": "error",
                "message": "WhitespaceAround: '=' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n\n    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n\n    /**\n     * Parse a @see java.time.ZonedDateTime from a String.",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/twilio-twilio-java/styler/05_predictions/final/files-repaired/808/DateConverter.java\nindex c508611c66d..58833d4b1a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/twilio-twilio-java/styler/05_predictions/final/files-repaired/808/DateConverter.java\n@@ -16,7 +16,7 @@ public class DateConverter {\n     private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n             DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n \n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/checkstyle_idea/808/DateConverter.java\nindex c508611c66d..aa0978fffdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/checkstyle_idea/808/DateConverter.java\n@@ -11,12 +11,12 @@ public class DateConverter {\n     private static final String RFC2822_DATE_TIME = \"EEE, dd MMM yyyy HH:mm:ss Z\";\n \n     private static final DateTimeFormatter DATE_FORMATTER =\n-            DateTimeFormatter.ofPattern(DATE_PATTERN);\n+        DateTimeFormatter.ofPattern(DATE_PATTERN);\n \n     private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n-            DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n+        DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n \n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 130 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/naturalize/808/DateConverter.java\nindex c508611c66d..feb42dcb67f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/naturalize/808/DateConverter.java\n@@ -10,13 +10,11 @@ public class DateConverter {\n     private static final String DATE_PATTERN = \"yyyy-MM-dd\";\n     private static final String RFC2822_DATE_TIME = \"EEE, dd MMM yyyy HH:mm:ss Z\";\n \n-    private static final DateTimeFormatter DATE_FORMATTER =\n-            DateTimeFormatter.ofPattern(DATE_PATTERN);\n+    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(DATE_PATTERN);\n \n-    private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n-            DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n+    private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n \n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n@@ -73,4 +71,4 @@ public class DateConverter {\n             return null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/codebuff/808/DateConverter.java\nindex c508611c66d..c1cce2f6f94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/codebuff/808/DateConverter.java\n@@ -6,17 +6,12 @@ import java.time.format.DateTimeFormatter;\n import java.util.Locale;\n \n public class DateConverter {\n-\n     private static final String DATE_PATTERN = \"yyyy-MM-dd\";\n     private static final String RFC2822_DATE_TIME = \"EEE, dd MMM yyyy HH:mm:ss Z\";\n-\n-    private static final DateTimeFormatter DATE_FORMATTER =\n-            DateTimeFormatter.ofPattern(DATE_PATTERN);\n-\n-    private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n-            DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n-\n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(DATE_PATTERN);\n+    private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(RFC2822_DATE_TIME)\n+        .withLocale(new Locale(\"en_US\"));\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n@@ -24,7 +19,9 @@ public class DateConverter {\n      * @param dateTimeString timestamp to parse\n      * @return parsed @see java.time.ZonedDateTime if parseable, null otherwise\n      */\n+\n     public static ZonedDateTime rfc2822DateTimeFromString(String dateTimeString) {\n+\n         try {\n             return ZonedDateTime.parse(dateTimeString, RFC2822_DATE_TIME_FORMATTER);\n         } catch (Exception e) {\n@@ -38,7 +35,10 @@ public class DateConverter {\n      * @param dateTimeString timestamp to parse\n      * @return parsed @see java.time.ZonedDateTime if parseable, null otherwise\n      */\n+\n+\n     public static ZonedDateTime iso8601DateTimeFromString(String dateTimeString) {\n+\n         try {\n             return ZonedDateTime.parse(dateTimeString, ISO8601_DATE_TIME_FORMATTER);\n         } catch (Exception e) {\n@@ -52,7 +52,10 @@ public class DateConverter {\n      * @param dateString the date String\n      * @return parsed @see java.time.LocalDate if parseable, null otherwise;\n      */\n+\n+\n     public static LocalDate localDateFromString(String dateString) {\n+\n         try {\n             return LocalDate.parse(dateString, DATE_FORMATTER);\n         } catch (Exception e) {\n@@ -66,11 +69,14 @@ public class DateConverter {\n      * @param date date to format\n      * @return formatted date in YYYY-MM-DD\n      */\n+\n+\n     public static String dateStringFromLocalDate(LocalDate date) {\n+\n         try {\n             return date.format(DATE_FORMATTER);\n         } catch (Exception e) {\n             return null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/random/files-repaired/808/DateConverter.java\nindex c508611c66d..58833d4b1a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/random/files-repaired/808/DateConverter.java\n@@ -16,7 +16,7 @@ public class DateConverter {\n     private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n             DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n \n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/three_grams/files-repaired/808/DateConverter.java\nindex c508611c66d..58833d4b1a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/808/DateConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/three_grams/files-repaired/808/DateConverter.java\n@@ -16,7 +16,7 @@ public class DateConverter {\n     private static final DateTimeFormatter RFC2822_DATE_TIME_FORMATTER =\n             DateTimeFormatter.ofPattern(RFC2822_DATE_TIME).withLocale(new Locale(\"en_US\"));\n \n-    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER =DateTimeFormatter.ISO_ZONED_DATE_TIME;\n+    private static final DateTimeFormatter ISO8601_DATE_TIME_FORMATTER = DateTimeFormatter.ISO_ZONED_DATE_TIME;\n \n     /**\n      * Parse a @see java.time.ZonedDateTime from a String.\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}