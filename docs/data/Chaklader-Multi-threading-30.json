{
    "project_name": "Chaklader-Multi-threading",
    "violation_id": "30",
    "information": {
        "violations": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        isRecording = false;\n\n        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n    }\n\n    public boolean isRecording() {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "33",
                    "column": "23",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/30/Channel.java\nindex bc2f6e7905d..59c42435def 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/30/Channel.java\n@@ -29,10 +29,12 @@ public class Channel {\n     public void stopRecording() {\n         isRecording = false;\n \n-        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n-    }\n+        System.out.printf(\"State of channel[%d][%d]: %d\\n\",\n+        sender.getId(),receiver\n+        .getId(), state);\n+     }\n \n-    public boolean isRecording() {\n+     public boolean isRecording() {\n         return isRecording;\n     }\n \n",
            "diff_size": 5
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/30/Channel.java\nindex bc2f6e7905d..76ac1913ecb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/30/Channel.java\n@@ -29,7 +29,8 @@ public class Channel {\n     public void stopRecording() {\n         isRecording = false;\n \n-        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n+        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(),\n+            state);\n     }\n \n     public boolean isRecording() {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/30/Channel.java\nindex bc2f6e7905d..7c8a010ed3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/30/Channel.java\n@@ -19,7 +19,6 @@ public class Channel {\n \n         isRecording = false;\n         state = 0;\n-\n     }\n \n     public void startRecording() {\n@@ -47,4 +46,4 @@ public class Channel {\n         }\n         return front;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/30/Channel.java\nindex bc2f6e7905d..285e52d6a97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/30/Channel.java\n@@ -8,7 +8,6 @@ public class Channel {\n     private Account sender;\n     private Account receiver;\n     private Queue<Event> queue;\n-\n     private boolean isRecording;\n     private int state;\n \n@@ -16,10 +15,8 @@ public class Channel {\n         this.sender = sender;\n         this.receiver = receiver;\n         queue = new LinkedList<>();\n-\n         isRecording = false;\n         state = 0;\n-\n     }\n \n     public void startRecording() {\n@@ -28,7 +25,6 @@ public class Channel {\n \n     public void stopRecording() {\n         isRecording = false;\n-\n         System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n     }\n \n@@ -47,4 +43,4 @@ public class Channel {\n         }\n         return front;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "33",
                    "column": "23",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/30/Channel.java\nindex bc2f6e7905d..59c42435def 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/30/Channel.java\n@@ -29,10 +29,12 @@ public class Channel {\n     public void stopRecording() {\n         isRecording = false;\n \n-        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n-    }\n+        System.out.printf(\"State of channel[%d][%d]: %d\\n\",\n+        sender.getId(),receiver\n+        .getId(), state);\n+     }\n \n-    public boolean isRecording() {\n+     public boolean isRecording() {\n         return isRecording;\n     }\n \n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "column": "28",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/30/Channel.java\nindex bc2f6e7905d..c2a8c0ded9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/30/Channel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/30/Channel.java\n@@ -27,9 +27,7 @@ public class Channel {\n     }\n \n     public void stopRecording() {\n-        isRecording = false;\n-\n-        System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n+        isRecording = false;System.out.printf(\"State of channel[%d][%d]: %d\\n\", sender.getId(), receiver.getId(), state);\n     }\n \n     public boolean isRecording() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}