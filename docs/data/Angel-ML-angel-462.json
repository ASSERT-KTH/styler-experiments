{
    "project_name": "Angel-ML-angel",
    "violation_id": "462",
    "information": {
        "violations": [
            {
                "line": "12",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "public class TextModelLineConvert implements ModelLineConvert {\n  private final String seperator;\n  \n  public TextModelLineConvert() {\n    seperator = \":\";\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..4bbda74383b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/462/TextModelLineConvert.java\n@@ -9,7 +9,7 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..32e02fa8f07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/462/TextModelLineConvert.java\n@@ -8,38 +8,43 @@ import java.io.IOException;\n  * Text serializer\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n-  private final String seperator;\n-  \n-  public TextModelLineConvert() {\n-    seperator = \":\";\n-  }\n-\n-  public TextModelLineConvert(String seperator) {\n-    this.seperator = seperator;\n-  }\n-\n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n-    output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n-  }\n-\n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n-\n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n-    output.writeBytes(index + \":\" + value + \"\\n\");\n-  }\n+    private final String seperator;\n+\n+    public TextModelLineConvert() {\n+        seperator = \":\";\n+    }\n+\n+    public TextModelLineConvert(String seperator) {\n+        this.seperator = seperator;\n+    }\n+\n+    @Override\n+    public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n+            IOException {\n+        output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertDouble(FSDataOutputStream output, int index, double value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertFloat(FSDataOutputStream output, int index, float value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertInt(FSDataOutputStream output, int index, float value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n+\n+    @Override\n+    public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n+            throws IOException {\n+        output.writeBytes(index + \":\" + value + \"\\n\");\n+    }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..72288281d3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/462/TextModelLineConvert.java\n@@ -9,37 +9,37 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n-  public TextModelLineConvert() {\n-    seperator = \":\";\n+\n+public TextModelLineConvert() {\n+  seperator = \":\";\n   }\n \n   public TextModelLineConvert(String seperator) {\n     this.seperator = seperator;\n   }\n \n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n+  @Override\n+public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws IOException {\n     output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n   }\n \n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n+  @Override\n+public void convertDouble(FSDataOutputStream output, int index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+public void convertFloat(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+public void convertInt(FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n+  @Override\n+public void convertDoubleLongKey(FSDataOutputStream output, long index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..44d83200d3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/462/TextModelLineConvert.java\n@@ -1,15 +1,16 @@\n package com.tencent.angel.tools;\n \n import org.apache.hadoop.fs.FSDataOutputStream;\n-\n import java.io.IOException;\n \n /**\n  * Text serializer\n  */\n+\n public class TextModelLineConvert implements ModelLineConvert {\n+\n   private final String seperator;\n-  \n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n@@ -18,28 +19,32 @@ public class TextModelLineConvert implements ModelLineConvert {\n     this.seperator = seperator;\n   }\n \n-  @Override public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws\n-    IOException {\n+  @Override\n+  public void convertRowIndex(FSDataOutputStream output, int rowIndex) throws IOException {\n     output.writeBytes(\"rowindex=\" + rowIndex + \"\\n\");\n   }\n \n-  @Override public void convertDouble(FSDataOutputStream output, int index, double value)\n-    throws IOException {\n+  @Override\n+  public void convertDouble(\n+    FSDataOutputStream output, int index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertFloat(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+  public void convertFloat(\n+    FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertInt(FSDataOutputStream output, int index, float value)\n-    throws IOException {\n+  @Override\n+  public void convertInt(\n+    FSDataOutputStream output, int index, float value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n \n-  @Override public void convertDoubleLongKey(FSDataOutputStream output, long index, double value)\n-    throws IOException {\n+  @Override\n+  public void convertDoubleLongKey(\n+    FSDataOutputStream output, long index, double value) throws IOException {\n     output.writeBytes(index + \":\" + value + \"\\n\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..4bbda74383b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/462/TextModelLineConvert.java\n@@ -9,7 +9,7 @@ import java.io.IOException;\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n   private final String seperator;\n-  \n+\n   public TextModelLineConvert() {\n     seperator = \":\";\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/462/TextModelLineConvert.java\nindex 9fb1d6db2ad..0444fe0554f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/462/TextModelLineConvert.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/462/TextModelLineConvert.java\n@@ -8,9 +8,7 @@ import java.io.IOException;\n  * Text serializer\n  */\n public class TextModelLineConvert implements ModelLineConvert {\n-  private final String seperator;\n-  \n-  public TextModelLineConvert() {\n+  private final String seperator ;public TextModelLineConvert() {\n     seperator = \":\";\n   }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}