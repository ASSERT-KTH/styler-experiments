{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "152",
    "information": {
        "violations": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 138).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "@SwaggerDefinition(consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\npublic class ApiOperationSpringMVCSchema {\n  @RequestMapping(value = \"/testMediaType1\", method = RequestMethod.POST, consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n  @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n  public String testMediaType1(@RequestBody String input) {\n    return input;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/152/ApiOperationSpringMVCSchema.java\nindex 78781f69abb..d4986b37ff2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/152/ApiOperationSpringMVCSchema.java\n@@ -43,4 +43,4 @@ public class ApiOperationSpringMVCSchema {\n   public String testMediaType2(@RequestBody String input) {\n     return input;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/152/ApiOperationSpringMVCSchema.java\nindex 78781f69abb..b8fc4f585a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/152/ApiOperationSpringMVCSchema.java\n@@ -18,13 +18,11 @@\n package org.apache.servicecomb.it.schema;\n \n import javax.ws.rs.core.MediaType;\n-\n import org.apache.servicecomb.provider.rest.common.RestSchema;\n import org.springframework.web.bind.annotation.PutMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n-\n import io.swagger.annotations.ApiOperation;\n import io.swagger.annotations.SwaggerDefinition;\n \n@@ -43,4 +41,4 @@ public class ApiOperationSpringMVCSchema {\n   public String testMediaType2(@RequestBody String input) {\n     return input;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "35",
                    "column": "21",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "27",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "column": "28",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "36",
                    "column": "31",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "36",
                    "column": "39",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/152/ApiOperationSpringMVCSchema.java\nindex 78781f69abb..51b557d74f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/152/ApiOperationSpringMVCSchema.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/152/ApiOperationSpringMVCSchema.java\n@@ -32,8 +32,10 @@ import io.swagger.annotations.SwaggerDefinition;\n @RequestMapping(value = \"/apiOperationSpringMVCSchema\", consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n @SwaggerDefinition(consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n public class ApiOperationSpringMVCSchema {\n-  @RequestMapping(value = \"/testMediaType1\", method = RequestMethod.POST, consumes = MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n-  @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n+  @ RequestMapping ( value=\"/testMediaType1\",\n+  method = RequestMethod.POST,consumes=\n+  MediaType.TEXT_PLAIN, produces = MediaType.TEXT_HTML)\n+    @ApiOperation(value = \"testMediaType1\", consumes = MediaType.APPLICATION_JSON, produces = MediaType.APPLICATION_XML)\n   public String testMediaType1(@RequestBody String input) {\n     return input;\n   }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}