{
    "project_name": "wso2-attic-commons",
    "violation_id": "235",
    "information": {
        "violations": [
            {
                "line": "118",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @param values property values as a CorrelationKey object\n   */\n  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n  \n  /**\n   * Gets a correlation.",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/235/BpelManagementFacade.java\nindex 27d29d953b0..8f1587e667e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/235/BpelManagementFacade.java\n@@ -115,8 +115,8 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param propertyNames properties to set on correlation set\n    * @param values property values as a CorrelationKey object\n    */\n-  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n-  \n+  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values)\n+  throws ManagementException;\n   /**\n    * Gets a correlation.\n    * @param iid\n@@ -124,7 +124,7 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param correlationSet\n    * @return\n    */\n-  CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n+   CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n   \n   /**\n    * Single step through a process instance.\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/235/BpelManagementFacade.java\nindex 27d29d953b0..7d74e963d7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/235/BpelManagementFacade.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.pmapi;\n \n import org.apache.ode.bpel.bdi.breaks.ActivityBreakpoint;\n@@ -44,104 +45,114 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n \n   /**\n    * Get the time that a process instance was started (created).\n+   *\n    * @param iid process instance identifier\n    * @return time the instance was started\n    */\n   Date getStartTime(Long iid) throws ManagementException;\n-  \n+\n   /**\n    * Get the state of a process instance.\n+   *\n    * @param iid process instance identifier\n    * @return state of the instance\n    */\n   short getState(Long iid) throws ManagementException;\n-  \n- \n+\n+\n   /**\n    * Get the process instance with the given correlation correlationKey.\n    *\n-   * @param pid the process identifier\n+   * @param pid  the process identifier\n    * @param ckey the correlation correlationKey to match\n    * @return process instance identifier of instance matching the given correlationKey\n    */\n   Long getProcessInstance(String pid, CorrelationKey ckey) throws ManagementException;\n-  \n+\n   /**\n    * Get exeuction event history for a process instance.\n-   * @param iid process instance identifier\n+   *\n+   * @param iid      process instance identifier\n    * @param startIdx first evet\n-   * @param count maximum number of events to get\n+   * @param count    maximum number of events to get\n    * @return array of {@link ProcessInstanceEvent}s.\n    */\n   EventInfoListDocument getEvents(Long iid, int startIdx, int count) throws ManagementException;\n-  \n+\n   /**\n    * Get the current number of events for an instance.\n+   *\n    * @param iid process instance identifier\n    * @return number of events in event history\n    */\n   int getEventCount(Long iid) throws ManagementException;\n-  \n-  /** \n+\n+  /**\n    * Returns all the scope instance ids for a given instance and scope name.\n    * Multiple scopes instances are only possible due to a BPEL 'while' activity.\n-   *  \n-   * */\n+   */\n   public Long[] getScopeInstancesForScope(Long iid, String scopeName) throws ManagementException;\n-  \n+\n   /**\n    * Gets variable data.\n+   *\n    * @param iid\n    * @param scopeId\n    * @param varName\n    * @return\n    */\n   String getVariable(Long iid, Long scopeId, String varName) throws ManagementException;\n-  \n+\n   /**\n    * Sets a variable\n+   *\n    * @param iid\n    * @param scopeId\n    * @param varName\n    * @param data\n    */\n   void setVariable(Long iid, Long scopeId, String varName, String data);\n-  \n+\n   /**\n    * Sets a correlation.\n+   *\n    * @param iid\n    * @param scopeId\n    * @param correlationSet name of the correlation set\n-   * @param propertyNames properties to set on correlation set\n-   * @param values property values as a CorrelationKey object\n+   * @param propertyNames  properties to set on correlation set\n+   * @param values         property values as a CorrelationKey object\n    */\n-  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n-  \n+  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values)\n+    throws ManagementException;\n+\n   /**\n    * Gets a correlation.\n+   *\n    * @param iid\n    * @param scopeId\n    * @param correlationSet\n    * @return\n    */\n   CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n-  \n+\n   /**\n    * Single step through a process instance.\n+   *\n    * @param iid\n    */\n   void step(Long iid) throws ManagementException;\n-  \n+\n   /**\n    * Gets the fault associated with a completed process instance.\n+   *\n    * @param iid\n    * @return\n    */\n   QName getCompletedFault(Long iid) throws ManagementException;\n-  \n+\n   /**\n    * Returns the breakpoints registered with the process instance.\n-   * \n+   *\n    * @param iid process instance identifier\n    * @return array of {@link Breakpoint}s.\n    */\n@@ -149,49 +160,54 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n \n   /**\n    * Returns the global breakpoints registered with the process instance.\n-   * \n+   *\n    * @param procId\n    * @return array of {@link Breakpoint}s.\n    */\n   Breakpoint[] getGlobalBreakpoints(String procId) throws ManagementException;\n-  \n+\n   /**\n    * Removes a breakpoint\n+   *\n    * @param iid a iid of null removes a global breakpoint.\n    * @param sp\n    */\n   void removeBreakpoint(Long iid, Breakpoint sp) throws ManagementException;\n-  \n+\n   /**\n    * Removes a global breakpoint\n+   *\n    * @param procId\n    * @param sp\n    */\n   void removeGlobalBreakpoint(String procId, Breakpoint sp) throws ManagementException;\n-  \n+\n   /**\n    * Adds an activity breakpoint.\n-   * @param iid a iid of null adds a global activity breakpoint.\n+   *\n+   * @param iid      a iid of null adds a global activity breakpoint.\n    * @param activity\n    * @return\n    */\n   ActivityBreakpoint addActivityBreakpoint(Long iid, String activity) throws ManagementException;\n-  \n+\n   /**\n    * Adds an global activity breakpoint.\n+   *\n    * @param procId\n    * @param activity\n    * @return\n    */\n   ActivityBreakpoint addGlobalActivityBreakpoint(String procId, String activity) throws ManagementException;\n-  \n+\n   /**\n    * Adds a variable modification breakpoint.\n+   *\n    * @param iid\n    * @param scopeName\n    * @param variable\n    * @return\n    */\n   VariableModificationBreakpoint addVariableModificationBreakpoint(Long iid, String scopeName, String variable);\n-  \n+\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/235/BpelManagementFacade.java\nindex 27d29d953b0..e5edca6b934 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/235/BpelManagementFacade.java\n@@ -55,9 +55,8 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @return state of the instance\n    */\n   short getState(Long iid) throws ManagementException;\n-  \n- \n-  /**\n+\n+   /**\n    * Get the process instance with the given correlation correlationKey.\n    *\n    * @param pid the process identifier\n@@ -105,7 +104,7 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param varName\n    * @param data\n    */\n-  void setVariable(Long iid, Long scopeId, String varName, String data);\n+void setVariable(Long iid, Long scopeId, String varName, String data);\n   \n   /**\n    * Sets a correlation.\n@@ -115,7 +114,7 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param propertyNames properties to set on correlation set\n    * @param values property values as a CorrelationKey object\n    */\n-  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n+void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n   \n   /**\n    * Gets a correlation.\n@@ -130,7 +129,7 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * Single step through a process instance.\n    * @param iid\n    */\n-  void step(Long iid) throws ManagementException;\n+void step(Long iid) throws ManagementException;\n   \n   /**\n    * Gets the fault associated with a completed process instance.\n@@ -160,14 +159,14 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param iid a iid of null removes a global breakpoint.\n    * @param sp\n    */\n-  void removeBreakpoint(Long iid, Breakpoint sp) throws ManagementException;\n+void removeBreakpoint(Long iid, Breakpoint sp) throws ManagementException;\n   \n   /**\n    * Removes a global breakpoint\n    * @param procId\n    * @param sp\n    */\n-  void removeGlobalBreakpoint(String procId, Breakpoint sp) throws ManagementException;\n+void removeGlobalBreakpoint(String procId, Breakpoint sp) throws ManagementException;\n   \n   /**\n    * Adds an activity breakpoint.\n@@ -194,4 +193,4 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    */\n   VariableModificationBreakpoint addVariableModificationBreakpoint(Long iid, String scopeName, String variable);\n   \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/235/BpelManagementFacade.java\nindex 27d29d953b0..390987991d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/235/BpelManagementFacade.java\n@@ -115,16 +115,15 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param propertyNames properties to set on correlation set\n    * @param values property values as a CorrelationKey object\n    */\n-  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n-  \n-  /**\n+  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values)\n+  throws ManagementException;/**\n    * Gets a correlation.\n    * @param iid\n    * @param scopeId\n    * @param correlationSet\n    * @return\n    */\n-  CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n+   CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n   \n   /**\n    * Single step through a process instance.\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/235/BpelManagementFacade.java\nindex 27d29d953b0..8f1587e667e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/235/BpelManagementFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/235/BpelManagementFacade.java\n@@ -115,8 +115,8 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param propertyNames properties to set on correlation set\n    * @param values property values as a CorrelationKey object\n    */\n-  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values) throws ManagementException;\n-  \n+  void setCorrelation(Long iid, Long scopeId, String correlationSet, QName[] propertyNames, CorrelationKey values)\n+  throws ManagementException;\n   /**\n    * Gets a correlation.\n    * @param iid\n@@ -124,7 +124,7 @@ public interface BpelManagementFacade extends ProcessManagement, InstanceManagem\n    * @param correlationSet\n    * @return\n    */\n-  CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n+   CorrelationKey getCorrelation(Long iid, Long scopeId, String correlationSet) throws ManagementException;\n   \n   /**\n    * Single step through a process instance.\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}