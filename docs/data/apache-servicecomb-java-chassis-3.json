{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "3",
    "information": {
        "violations": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  }\n\n  public void write(ResponseHeader header, ResponseRootSerializer responseRootSerializer, Object body) throws Exception {\n    write(ResponseHeader.getRootSerializer().serialize(header), responseRootSerializer.serialize(body));\n  }\n",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/3/HighwayOutputStream.java\nindex 3eac9783d4b..6cb94814f68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/3/HighwayOutputStream.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.transport.highway;\n \n import org.apache.servicecomb.codec.protobuf.definition.RequestRootSerializer;\n@@ -32,7 +33,8 @@ public class HighwayOutputStream extends TcpOutputStream {\n     write(RequestHeader.getRootSerializer().serialize(header), requestRootSerializer.serialize(body));\n   }\n \n-  public void write(ResponseHeader header, ResponseRootSerializer responseRootSerializer, Object body) throws Exception {\n+  public void write(ResponseHeader header, ResponseRootSerializer responseRootSerializer, Object body)\n+      throws Exception {\n     write(ResponseHeader.getRootSerializer().serialize(header), responseRootSerializer.serialize(body));\n   }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/3/HighwayOutputStream.java\nindex 3eac9783d4b..5c09b9c8813 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/3/HighwayOutputStream.java\n@@ -46,7 +46,7 @@ public class HighwayOutputStream extends TcpOutputStream {\n \n   public void write(RootSerializer headerSchema, Object header, RootSerializer bodySchema, Object body)\n       throws Exception {\n-    byte[] headerBytes = new byte[0];\n+  byte[] headerBytes = new byte[0];\n     byte[] bodyBytes = new byte[0];\n \n     // \u5199header\n@@ -81,4 +81,4 @@ public class HighwayOutputStream extends TcpOutputStream {\n     this.write(headerBytes);\n     this.write(bodyBytes);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/3/HighwayOutputStream.java\nindex 3eac9783d4b..4ee429605ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/3/HighwayOutputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/3/HighwayOutputStream.java\n@@ -28,12 +28,16 @@ public class HighwayOutputStream extends TcpOutputStream {\n     super(msgId);\n   }\n \n-  public void write(RequestHeader header, RequestRootSerializer requestRootSerializer, Object body) throws Exception {\n-    write(RequestHeader.getRootSerializer().serialize(header), requestRootSerializer.serialize(body));\n+  public void write(RequestHeader header,\n+    RequestRootSerializer requestRootSerializer, Object body) throws Exception {\n+    write(RequestHeader.getRootSerializer().serialize(header),\n+      requestRootSerializer.serialize(body));\n   }\n \n-  public void write(ResponseHeader header, ResponseRootSerializer responseRootSerializer, Object body) throws Exception {\n-    write(ResponseHeader.getRootSerializer().serialize(header), responseRootSerializer.serialize(body));\n+  public void write(ResponseHeader header,\n+    ResponseRootSerializer responseRootSerializer, Object body) throws Exception {\n+    write(ResponseHeader.getRootSerializer().serialize(header),\n+      responseRootSerializer.serialize(body));\n   }\n \n   public void write(RequestHeader header, RootSerializer bodySchema, Object body) throws Exception {\n@@ -44,8 +48,9 @@ public class HighwayOutputStream extends TcpOutputStream {\n     write(ResponseHeader.getRootSerializer(), header, bodySchema, body);\n   }\n \n-  public void write(RootSerializer headerSchema, Object header, RootSerializer bodySchema, Object body)\n-      throws Exception {\n+  public void write(RootSerializer headerSchema,\n+    Object header,\n+      RootSerializer bodySchema, Object body) throws Exception {\n     byte[] headerBytes = new byte[0];\n     byte[] bodyBytes = new byte[0];\n \n@@ -56,6 +61,7 @@ public class HighwayOutputStream extends TcpOutputStream {\n \n     // \u5199body\n     // void\u65f6bodySchema\u4e3anull\n+\n     if (bodySchema != null) {\n       bodyBytes = bodySchema.serialize(body);\n     }\n@@ -63,11 +69,9 @@ public class HighwayOutputStream extends TcpOutputStream {\n     write(headerBytes, bodyBytes);\n   }\n \n-  private void write(byte[] headerBytes, byte[] bodyBytes)\n-      throws Exception {\n+  private void write(byte[] headerBytes, byte[] bodyBytes) throws Exception {\n     int headerLength = 0;\n     int totalLength = 0;\n-\n     if (headerBytes != null) {\n       headerLength = headerBytes.length;\n       totalLength = totalLength + headerLength;\n@@ -81,4 +85,4 @@ public class HighwayOutputStream extends TcpOutputStream {\n     this.write(headerBytes);\n     this.write(bodyBytes);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}