{
    "project_name": "GluuFederation-oxCore",
    "violation_id": "135",
    "information": {
        "violations": [
            {
                "line": "17",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n\n\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n\n    public LdapAuthConnectionProvider(Properties connectionProperties) {\n        Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..b10116a4b42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/135/LdapAuthConnectionProvider.java\n@@ -14,7 +14,7 @@ import com.unboundid.ldap.sdk.ResultCode;\n  */\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n     public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..89eeabb6d46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/135/LdapAuthConnectionProvider.java\n@@ -14,14 +14,14 @@ import com.unboundid.ldap.sdk.ResultCode;\n  */\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n     public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n         create(bindConnectionProperties);\n         if (ResultCode.INAPPROPRIATE_AUTHENTICATION.equals(getCreationResultCode())) {\n             LOG.warn(\"It's not possible to create authentication LDAP connection pool using anonymous bind. \"\n-                    + \"Attempting to create it using binDN/bindPassword\");\n+                + \"Attempting to create it using binDN/bindPassword\");\n             create(connectionProperties);\n         }\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..0d3bb9988cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/135/LdapAuthConnectionProvider.java\n@@ -14,9 +14,9 @@ import com.unboundid.ldap.sdk.ResultCode;\n  */\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n-    public LdapAuthConnectionProvider(Properties connectionProperties) {\n+public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n         create(bindConnectionProperties);\n         if (ResultCode.INAPPROPRIATE_AUTHENTICATION.equals(getCreationResultCode())) {\n@@ -34,4 +34,4 @@ public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n         return bindProperties;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..b0733d8fc2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/135/LdapAuthConnectionProvider.java\n@@ -1,10 +1,8 @@\n package org.gluu.persist.ldap.operation.impl;\n \n import java.util.Properties;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import com.unboundid.ldap.sdk.ResultCode;\n \n /**\n@@ -12,16 +10,17 @@ import com.unboundid.ldap.sdk.ResultCode;\n  *\n  * @author Yuriy Movchan Date: 12/29/2017\n  */\n+\n+\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n     public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n         create(bindConnectionProperties);\n         if (ResultCode.INAPPROPRIATE_AUTHENTICATION.equals(getCreationResultCode())) {\n-            LOG.warn(\"It's not possible to create authentication LDAP connection pool using anonymous bind. \"\n-                    + \"Attempting to create it using binDN/bindPassword\");\n+            LOG.warn(\"It's not possible to create authentication LDAP connection pool using anonymous bind. \" + \"Attempting to create it using binDN/bindPassword\");\n             create(connectionProperties);\n         }\n     }\n@@ -30,8 +29,7 @@ public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n         Properties bindProperties = (Properties) connectionProperties.clone();\n         bindProperties.remove(\"bindDN\");\n         bindProperties.remove(\"bindPassword\");\n-\n         return bindProperties;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..b10116a4b42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/135/LdapAuthConnectionProvider.java\n@@ -14,7 +14,7 @@ import com.unboundid.ldap.sdk.ResultCode;\n  */\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n     public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/135/LdapAuthConnectionProvider.java\nindex 75088d5d692..b10116a4b42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/135/LdapAuthConnectionProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/135/LdapAuthConnectionProvider.java\n@@ -14,7 +14,7 @@ import com.unboundid.ldap.sdk.ResultCode;\n  */\n public class LdapAuthConnectionProvider extends LdapConnectionProvider {\n \n-\tprivate static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(LdapAuthConnectionProvider.class);\n \n     public LdapAuthConnectionProvider(Properties connectionProperties) {\n         Properties bindConnectionProperties = prepareBindConnectionProperties(connectionProperties);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}