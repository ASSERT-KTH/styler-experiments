{
    "project_name": "wso2-attic-commons",
    "violation_id": "348",
    "information": {
        "violations": [
            {
                "line": "59",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n        // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n        Set set = kernel.listGBeans(abstractNameQuery);\n        for (Iterator iterator = set.iterator(); iterator.hasNext();) {\n            AbstractName abstractName = (AbstractName) iterator.next();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/348/GeronimoFactory.java\nindex d1b52f9a37c..348ed63944d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/348/GeronimoFactory.java\n@@ -56,7 +56,8 @@ public class GeronimoFactory {\n         MultiParentClassLoader loader = (MultiParentClassLoader) ctxManager.getClass().getClassLoader();\n \n         // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n-        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n+        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.\n+        getName());\n         Set set = kernel.listGBeans(abstractNameQuery);\n         for (Iterator iterator = set.iterator(); iterator.hasNext();) {\n             AbstractName abstractName = (AbstractName) iterator.next();\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/348/GeronimoFactory.java\nindex d1b52f9a37c..2cf59ea94d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/348/GeronimoFactory.java\n@@ -39,41 +39,42 @@ import java.util.Set;\n \n public class GeronimoFactory {\n \n-    /* Public no-arg contructor is required */\n-    public GeronimoFactory() {\n-    }\n-\n-    public TransactionManager getTransactionManager() {\n-        Kernel kernel = KernelRegistry.getSingleKernel();\n-        TransactionContextManager ctxManager = null;\n+  /* Public no-arg contructor is required */\n+  public GeronimoFactory() {\n+  }\n \n-        try {\n-            ctxManager = (TransactionContextManager) kernel.getGBean(TransactionContextManager.class);\n-        } catch (GBeanNotFoundException except) {\n-            throw new RuntimeException( \"Can't lookup GBean: \" + TransactionContextManager.class, except);\n-        }\n+  public TransactionManager getTransactionManager() {\n+    Kernel kernel = KernelRegistry.getSingleKernel();\n+    TransactionContextManager ctxManager = null;\n \n-        MultiParentClassLoader loader = (MultiParentClassLoader) ctxManager.getClass().getClassLoader();\n+    try {\n+      ctxManager = (TransactionContextManager) kernel.getGBean(TransactionContextManager.class);\n+    } catch (GBeanNotFoundException except) {\n+      throw new RuntimeException(\"Can't lookup GBean: \" + TransactionContextManager.class, except);\n+    }\n \n-        // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n-        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n-        Set set = kernel.listGBeans(abstractNameQuery);\n-        for (Iterator iterator = set.iterator(); iterator.hasNext();) {\n-            AbstractName abstractName = (AbstractName) iterator.next();\n-            File f = null;\n-            try {\n-                Repository repo = (Repository) kernel.getGBean(abstractName);\n-                f = repo.getLocation(new Artifact(\"org.jencks\", \"jencks\", \"1.3\", \"jar\"));\n-                loader.addURL(f.toURL());\n-            } catch (GBeanNotFoundException except) {\n-                throw new RuntimeException(\"Can't lookup GBean: \" + abstractName, except);\n-            } catch (MalformedURLException except) {\n-                throw new RuntimeException(\"Invalid URL for jencks: \" + f, except);\n-            }\n-        }\n+    MultiParentClassLoader loader = (MultiParentClassLoader) ctxManager.getClass().getClassLoader();\n \n-        // Use Jenck to wrap TransactionContextManager back to TransactionManager\n-        return new GeronimoTransactionManager(ctxManager);\n+    // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n+    AbstractNameQuery abstractNameQuery =\n+      new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n+    Set set = kernel.listGBeans(abstractNameQuery);\n+    for (Iterator iterator = set.iterator(); iterator.hasNext(); ) {\n+      AbstractName abstractName = (AbstractName) iterator.next();\n+      File f = null;\n+      try {\n+        Repository repo = (Repository) kernel.getGBean(abstractName);\n+        f = repo.getLocation(new Artifact(\"org.jencks\", \"jencks\", \"1.3\", \"jar\"));\n+        loader.addURL(f.toURL());\n+      } catch (GBeanNotFoundException except) {\n+        throw new RuntimeException(\"Can't lookup GBean: \" + abstractName, except);\n+      } catch (MalformedURLException except) {\n+        throw new RuntimeException(\"Invalid URL for jencks: \" + f, except);\n+      }\n     }\n \n+    // Use Jenck to wrap TransactionContextManager back to TransactionManager\n+    return new GeronimoTransactionManager(ctxManager);\n+  }\n+\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/348/GeronimoFactory.java\nindex d1b52f9a37c..b67dd9fc05c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/348/GeronimoFactory.java\n@@ -76,4 +76,4 @@ public class GeronimoFactory {\n         return new GeronimoTransactionManager(ctxManager);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/348/GeronimoFactory.java\nindex d1b52f9a37c..348ed63944d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/348/GeronimoFactory.java\n@@ -56,7 +56,8 @@ public class GeronimoFactory {\n         MultiParentClassLoader loader = (MultiParentClassLoader) ctxManager.getClass().getClassLoader();\n \n         // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n-        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n+        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.\n+        getName());\n         Set set = kernel.listGBeans(abstractNameQuery);\n         for (Iterator iterator = set.iterator(); iterator.hasNext();) {\n             AbstractName abstractName = (AbstractName) iterator.next();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/348/GeronimoFactory.java\nindex d1b52f9a37c..9353dbffc0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/348/GeronimoFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/348/GeronimoFactory.java\n@@ -56,7 +56,8 @@ public class GeronimoFactory {\n         MultiParentClassLoader loader = (MultiParentClassLoader) ctxManager.getClass().getClassLoader();\n \n         // Add Jencks to Geronimo's root classloader to avoid InvalidAccessError\n-        AbstractNameQuery abstractNameQuery = new AbstractNameQuery(null, Collections.EMPTY_MAP, Repository.class.getName());\n+        AbstractNameQuery abstractNameQuery = new AbstractNameQuery\n+            (null, Collections.EMPTY_MAP, Repository.class.getName());\n         Set set = kernel.listGBeans(abstractNameQuery);\n         for (Iterator iterator = set.iterator(); iterator.hasNext();) {\n             AbstractName abstractName = (AbstractName) iterator.next();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}