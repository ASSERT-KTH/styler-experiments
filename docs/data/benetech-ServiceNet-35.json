{
    "project_name": "benetech-ServiceNet",
    "violation_id": "35",
    "information": {
        "violations": [
            {
                "line": "78",
                "severity": "error",
                "message": "Line is longer than 125 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        Join<Organization, Service> serviceJoin = subRoot.join(Organization_.SERVICES, JoinType.LEFT);\n        Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT);\n        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n\n        Predicate predicate = cb.in(root.get(Taxonomy_.ID)).value(subquery);\n        query.where(predicate);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/35/TaxonomyRepositoryImpl.java\nindex b89d60202db..8e4448afe37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/35/TaxonomyRepositoryImpl.java\n@@ -74,8 +74,8 @@ public class TaxonomyRepositoryImpl implements TaxonomyRepositoryCustom {\n         Subquery<UUID> subquery = query.subquery(UUID.class);\n         Root<Organization> subRoot = subquery.from(Organization.class);\n         Join<Organization, Service> serviceJoin = subRoot.join(Organization_.SERVICES, JoinType.LEFT);\n-        Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT);\n-        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n+        Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT); subquery\n+            .select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n \n         Predicate predicate = cb.in(root.get(Taxonomy_.ID)).value(subquery);\n         query.where(predicate);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/35/TaxonomyRepositoryImpl.java\nindex b89d60202db..d3300d9198c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/35/TaxonomyRepositoryImpl.java\n@@ -75,7 +75,8 @@ public class TaxonomyRepositoryImpl implements TaxonomyRepositoryCustom {\n         Root<Organization> subRoot = subquery.from(Organization.class);\n         Join<Organization, Service> serviceJoin = subRoot.join(Organization_.SERVICES, JoinType.LEFT);\n         Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT);\n-        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n+        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID))\n+            .where(subRoot.get(Organization_.ACTIVE));\n \n         Predicate predicate = cb.in(root.get(Taxonomy_.ID)).value(subquery);\n         query.where(predicate);\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/35/TaxonomyRepositoryImpl.java\nindex b89d60202db..2b57bc90074 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/35/TaxonomyRepositoryImpl.java\n@@ -81,4 +81,4 @@ public class TaxonomyRepositoryImpl implements TaxonomyRepositoryCustom {\n         query.where(predicate);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/35/TaxonomyRepositoryImpl.java\nindex b89d60202db..8e4448afe37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/35/TaxonomyRepositoryImpl.java\n@@ -74,8 +74,8 @@ public class TaxonomyRepositoryImpl implements TaxonomyRepositoryCustom {\n         Subquery<UUID> subquery = query.subquery(UUID.class);\n         Root<Organization> subRoot = subquery.from(Organization.class);\n         Join<Organization, Service> serviceJoin = subRoot.join(Organization_.SERVICES, JoinType.LEFT);\n-        Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT);\n-        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n+        Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT); subquery\n+            .select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n \n         Predicate predicate = cb.in(root.get(Taxonomy_.ID)).value(subquery);\n         query.where(predicate);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "78",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/35/TaxonomyRepositoryImpl.java\nindex b89d60202db..ee4e8b30e12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/35/TaxonomyRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/35/TaxonomyRepositoryImpl.java\n@@ -75,7 +75,8 @@ public class TaxonomyRepositoryImpl implements TaxonomyRepositoryCustom {\n         Root<Organization> subRoot = subquery.from(Organization.class);\n         Join<Organization, Service> serviceJoin = subRoot.join(Organization_.SERVICES, JoinType.LEFT);\n         Join<Service, ServiceTaxonomy> taxonomiesJoin = serviceJoin.join(Service_.TAXONOMIES, JoinType.LEFT);\n-        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get(Taxonomy_.ID)).where(subRoot.get(Organization_.ACTIVE));\n+        subquery.select(taxonomiesJoin.get(ServiceTaxonomy_.TAXONOMY).get ( Taxonomy_ .ID)).where(\n+        subRoot .get(Organization_.ACTIVE));\n \n         Predicate predicate = cb.in(root.get(Taxonomy_.ID)).value(subquery);\n         query.where(predicate);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}