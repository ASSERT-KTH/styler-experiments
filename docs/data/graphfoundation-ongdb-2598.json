{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2598",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2598/Collector.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2598/Collector.java\nindex b6cdc2dcbc2..126849f4e13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2598/Collector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2598/Collector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n /**\n@@ -25,57 +26,57 @@ package org.neo4j.unsafe.impl.batchimport.input;\n  */\n public interface Collector extends AutoCloseable\n {\n-    void collectBadRelationship(\n-            Object startId, String startIdGroup, String type,\n-            Object endId, String endIdGroup, Object specificValue );\n+  void collectBadRelationship(\n+      Object startId, String startIdGroup, String type,\n+      Object endId, String endIdGroup, Object specificValue);\n \n-    void collectDuplicateNode( Object id, long actualId, String group );\n+  void collectDuplicateNode(Object id, long actualId, String group);\n \n-    void collectExtraColumns( String source, long row, String value );\n+  void collectExtraColumns(String source, long row, String value);\n \n-    long badEntries();\n+  long badEntries();\n \n-    boolean isCollectingBadRelationships();\n+  boolean isCollectingBadRelationships();\n \n-    /**\n-     * Flushes whatever changes to the underlying resource supplied from the importer.\n-     */\n-    @Override\n-    void close();\n+  /**\n+   * Flushes whatever changes to the underlying resource supplied from the importer.\n+   */\n+  @Override\n+  void close();\n \n-    Collector EMPTY = new Collector()\n+  Collector EMPTY = new Collector()\n+  {\n+    @Override\n+    public void collectExtraColumns(String source, long row, String value)\n     {\n-        @Override\n-        public void collectExtraColumns( String source, long row, String value )\n-        {\n-        }\n+    }\n \n-        @Override\n-        public void close()\n-        {\n-        }\n+    @Override\n+    public void close()\n+    {\n+    }\n \n-        @Override\n-        public long badEntries()\n-        {\n-            return 0;\n-        }\n+    @Override\n+    public long badEntries()\n+    {\n+      return 0;\n+    }\n \n-        @Override\n-        public void collectBadRelationship( Object startId, String startIdGroup, String type, Object endId, String endIdGroup,\n-                Object specificValue )\n-        {\n-        }\n+    @Override\n+    public void collectBadRelationship(Object startId, String startIdGroup, String type, Object endId, String endIdGroup,\n+                                       Object specificValue)\n+    {\n+    }\n \n-        @Override\n-        public void collectDuplicateNode( Object id, long actualId, String group )\n-        {\n-        }\n+    @Override\n+    public void collectDuplicateNode(Object id, long actualId, String group)\n+    {\n+    }\n \n-        @Override\n-        public boolean isCollectingBadRelationships()\n-        {\n-            return true;\n-        }\n-    };\n+    @Override\n+    public boolean isCollectingBadRelationships()\n+    {\n+      return true;\n+    }\n+  };\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "137",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2598/Collector.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2598/Collector.java\nindex b6cdc2dcbc2..e8744195fe0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2598/Collector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2598/Collector.java\n@@ -25,11 +25,8 @@ package org.neo4j.unsafe.impl.batchimport.input;\n  */\n public interface Collector extends AutoCloseable\n {\n-    void collectBadRelationship(\n-            Object startId, String startIdGroup, String type,\n-            Object endId, String endIdGroup, Object specificValue );\n-\n-    void collectDuplicateNode( Object id, long actualId, String group );\n+    void collectBadRelationship( Object startId, String startIdGroup, String type,\n+            Object endId, String endIdGroup, Object specificValue ); void collectDuplicateNode( Object id, long actualId, String group );\n \n     void collectExtraColumns( String source, long row, String value );\n \n@@ -42,8 +39,7 @@ public interface Collector extends AutoCloseable\n      */\n     @Override\n     void close();\n-\n-    Collector EMPTY = new Collector()\n+Collector EMPTY = new Collector()\n     {\n         @Override\n         public void collectExtraColumns( String source, long row, String value )\n@@ -64,7 +60,7 @@ public interface Collector extends AutoCloseable\n         @Override\n         public void collectBadRelationship( Object startId, String startIdGroup, String type, Object endId, String endIdGroup,\n                 Object specificValue )\n-        {\n+{\n         }\n \n         @Override\n@@ -78,4 +74,4 @@ public interface Collector extends AutoCloseable\n             return true;\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}