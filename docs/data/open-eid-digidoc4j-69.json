{
    "project_name": "open-eid-digidoc4j",
    "violation_id": "69",
    "information": {
        "violations": [
            {
                "line": "48",
                "column": "43",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n  private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n    logger.debug(\"File name: \" + fileName +\n        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n    try {\n      DigestDocument document = new DigestDocument();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/69/DigestDataFile.java\nindex aaf587a2bfd..20a6a23d32d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/69/DigestDataFile.java\n@@ -45,8 +45,8 @@ public class DigestDataFile extends DataFile {\n   }\n \n   private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName\n+      + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/69/DigestDataFile.java\nindex aaf587a2bfd..cdc3186baaf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/69/DigestDataFile.java\n@@ -51,8 +51,9 @@ public class DigestDataFile extends DataFile {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n       document.addDigest(digestAlgorithm.getDssDigestAlgorithm(), Base64.encodeBase64String(digest));\n-      if (mimeType != null)\n+      if (mimeType != null) {\n         document.setMimeType(mimeType);\n+      }\n       setDocument(document);\n     } catch (Exception e) {\n       logger.error(e.getMessage());\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/69/DigestDataFile.java\nindex aaf587a2bfd..c13f3c67679 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/69/DigestDataFile.java\n@@ -45,15 +45,14 @@ public class DigestDataFile extends DataFile {\n   }\n \n   private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n-    try {\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n       document.addDigest(digestAlgorithm.getDssDigestAlgorithm(), Base64.encodeBase64String(digest));\n       if (mimeType != null)\n         document.setMimeType(mimeType);\n-      setDocument(document);\n+setDocument(document);\n     } catch (Exception e) {\n       logger.error(e.getMessage());\n       throw new InvalidDataFileException(e);\n@@ -67,4 +66,4 @@ public class DigestDataFile extends DataFile {\n   public void setContentType(String contentType) {\n     this.contentType = contentType;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/69/DigestDataFile.java\nindex aaf587a2bfd..91a944d0d8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/69/DigestDataFile.java\n@@ -1,19 +1,17 @@\n package org.digidoc4j;\n \n import java.util.Arrays;\n-\n import org.apache.commons.codec.binary.Base64;\n import org.digidoc4j.exceptions.InvalidDataFileException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import eu.europa.esig.dss.DigestDocument;\n import eu.europa.esig.dss.MimeType;\n \n+\n public class DigestDataFile extends DataFile {\n \n   private static final Logger logger = LoggerFactory.getLogger(DigestDataFile.class);\n-\n   private String contentType = null;\n \n   /**\n@@ -25,6 +23,7 @@ public class DigestDataFile extends DataFile {\n    * @param digest          digest of the file contents\n    * @param mimeType        mime-type of the data file, for example 'text/plain' or 'application/msword'\n    */\n+\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, String mimeType) {\n     setDigestDataFile(fileName, digestAlgorithm, digest, getMimeType(mimeType));\n   }\n@@ -39,14 +38,15 @@ public class DigestDataFile extends DataFile {\n    * @deprecated use DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, String mimeType)\n    * https://github.com/open-eid/digidoc4j/wiki/Examples-of-using-it#detached-xades-containerless-signature-handling\n    */\n+\n+\n   @Deprecated\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n     setDigestDataFile(fileName, digestAlgorithm, digest, null);\n   }\n \n   private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n@@ -67,4 +67,4 @@ public class DigestDataFile extends DataFile {\n   public void setContentType(String contentType) {\n     this.contentType = contentType;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/69/DigestDataFile.java\nindex aaf587a2bfd..890b7d337b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/69/DigestDataFile.java\n@@ -45,7 +45,7 @@ public class DigestDataFile extends DataFile {\n   }\n \n   private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n-    logger.debug(\"File name: \" + fileName +\n+    logger.debug(\"File name: \" + fileName+\n         \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/69/DigestDataFile.java\nindex aaf587a2bfd..20a6a23d32d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/69/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/69/DigestDataFile.java\n@@ -45,8 +45,8 @@ public class DigestDataFile extends DataFile {\n   }\n \n   private void setDigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest, MimeType mimeType) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName\n+      + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}