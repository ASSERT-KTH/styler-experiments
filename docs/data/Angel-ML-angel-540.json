{
    "project_name": "Angel-ML-angel",
    "violation_id": "540",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/540/PullPathTailPartitionParam.java\nindex 2df2320d756..64cb2d1d5d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/540/PullPathTailPartitionParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.pullpathtail;\n \n import com.tencent.angel.PartitionKey;\n@@ -22,58 +23,58 @@ import io.netty.buffer.ByteBuf;\n \n public class PullPathTailPartitionParam extends PartitionGetParam {\n \n-  private int partitionId;\n-  private int batchSize;\n+    private int partitionId;\n+    private int batchSize;\n \n-  public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId,\n-      int batchSize) {\n-    super(matrixId, partKey);\n-    this.partitionId = partitionId;\n-    this.batchSize = batchSize;\n-  }\n+    public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId,\n+                                      int batchSize) {\n+        super(matrixId, partKey);\n+        this.partitionId = partitionId;\n+        this.batchSize = batchSize;\n+    }\n \n-  public PullPathTailPartitionParam(int partitionId, int batchSize) {\n-    this.partitionId = partitionId;\n-    this.batchSize = batchSize;\n-  }\n+    public PullPathTailPartitionParam(int partitionId, int batchSize) {\n+        this.partitionId = partitionId;\n+        this.batchSize = batchSize;\n+    }\n \n-  public PullPathTailPartitionParam() {\n-    super();\n-  }\n+    public PullPathTailPartitionParam() {\n+        super();\n+    }\n \n-  public int getPartitionId() {\n-    return partitionId;\n-  }\n+    public int getPartitionId() {\n+        return partitionId;\n+    }\n \n-  public void setPartitionId(int partitionId) {\n-    this.partitionId = partitionId;\n-  }\n+    public void setPartitionId(int partitionId) {\n+        this.partitionId = partitionId;\n+    }\n \n-  public int getBatchSize() {\n-    return batchSize;\n-  }\n+    public int getBatchSize() {\n+        return batchSize;\n+    }\n \n-  public void setBatchSize(int batchSize) {\n-    this.batchSize = batchSize;\n-  }\n+    public void setBatchSize(int batchSize) {\n+        this.batchSize = batchSize;\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(partitionId);\n-    buf.writeInt(batchSize);\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(partitionId);\n+        buf.writeInt(batchSize);\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    partitionId = buf.readInt();\n-    batchSize = buf.readInt();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        partitionId = buf.readInt();\n+        batchSize = buf.readInt();\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return 8 + super.bufferLen();\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return 8 + super.bufferLen();\n+    }\n \n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/540/PullPathTailPartitionParam.java\nindex 2df2320d756..cbd1829a42d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/540/PullPathTailPartitionParam.java\n@@ -25,8 +25,7 @@ public class PullPathTailPartitionParam extends PartitionGetParam {\n   private int partitionId;\n   private int batchSize;\n \n-  public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId,\n-      int batchSize) {\n+  public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId, int batchSize) {\n     super(matrixId, partKey);\n     this.partitionId = partitionId;\n     this.batchSize = batchSize;\n@@ -76,4 +75,4 @@ public class PullPathTailPartitionParam extends PartitionGetParam {\n     return 8 + super.bufferLen();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/540/PullPathTailPartitionParam.java\nindex 2df2320d756..a7ea369316c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/540/PullPathTailPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/540/PullPathTailPartitionParam.java\n@@ -25,8 +25,7 @@ public class PullPathTailPartitionParam extends PartitionGetParam {\n   private int partitionId;\n   private int batchSize;\n \n-  public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId,\n-      int batchSize) {\n+  public PullPathTailPartitionParam(int matrixId, PartitionKey partKey, int partitionId, int batchSize) {\n     super(matrixId, partKey);\n     this.partitionId = partitionId;\n     this.batchSize = batchSize;\n@@ -75,5 +74,4 @@ public class PullPathTailPartitionParam extends PartitionGetParam {\n   public int bufferLen() {\n     return 8 + super.bufferLen();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}