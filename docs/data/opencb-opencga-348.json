{
    "project_name": "opencb-opencga",
    "violation_id": "348",
    "information": {
        "violations": [
            {
                "line": "50",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 144).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public InterpretationUpdateParams(String id, String description, String clinicalAnalysisId, ClinicalAnalyst analyst,\n                                      List<InterpretationMethod> methods, String creationDate, List<ClinicalVariant> primaryFindings,\n                                      List<ClinicalVariant> secondaryFindings, List<ClinicalComment> comments, Map<String, Object> attributes) {\n        this.id = id;\n        this.description = description;\n        this.clinicalAnalysisId = clinicalAnalysisId;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/348/InterpretationUpdateParams.java\nindex a96f7f8a839..33820ffc46f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/348/InterpretationUpdateParams.java\n@@ -31,144 +31,145 @@ import static org.opencb.opencga.core.common.JacksonUtils.getUpdateObjectMapper;\n \n public class InterpretationUpdateParams {\n \n-    private String id;\n-    private String description;\n-    private String clinicalAnalysisId;\n-    private ClinicalAnalyst analyst;\n-    private List<InterpretationMethod> methods;\n-    private String creationDate;\n-    private List<ClinicalVariant> primaryFindings;\n-    private List<ClinicalVariant> secondaryFindings;\n-    private List<ClinicalComment> comments;\n-    private Map<String, Object> attributes;\n-\n-    public InterpretationUpdateParams() {\n-    }\n-\n-    public InterpretationUpdateParams(String id, String description, String clinicalAnalysisId, ClinicalAnalyst analyst,\n-                                      List<InterpretationMethod> methods, String creationDate, List<ClinicalVariant> primaryFindings,\n-                                      List<ClinicalVariant> secondaryFindings, List<ClinicalComment> comments, Map<String, Object> attributes) {\n-        this.id = id;\n-        this.description = description;\n-        this.clinicalAnalysisId = clinicalAnalysisId;\n-        this.analyst = analyst;\n-        this.methods = methods;\n-        this.creationDate = creationDate;\n-        this.primaryFindings = primaryFindings;\n-        this.secondaryFindings = secondaryFindings;\n-        this.comments = comments;\n-        this.attributes = attributes;\n-    }\n-\n-    @JsonIgnore\n-    public ObjectMap getUpdateMap() throws JsonProcessingException {\n-        return new ObjectMap(getUpdateObjectMapper().writeValueAsString(this));\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"InterpretationUpdateParams{\");\n-        sb.append(\"id='\").append(id).append('\\'');\n-        sb.append(\", description='\").append(description).append('\\'');\n-        sb.append(\", clinicalAnalysisId='\").append(clinicalAnalysisId).append('\\'');\n-        sb.append(\", analyst=\").append(analyst);\n-        sb.append(\", methods=\").append(methods);\n-        sb.append(\", creationDate='\").append(creationDate).append('\\'');\n-        sb.append(\", primaryFindings=\").append(primaryFindings);\n-        sb.append(\", secondaryFindings=\").append(secondaryFindings);\n-        sb.append(\", comments=\").append(comments);\n-        sb.append(\", attributes=\").append(attributes);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public InterpretationUpdateParams setId(String id) {\n-        this.id = id;\n-        return this;\n-    }\n-\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public InterpretationUpdateParams setDescription(String description) {\n-        this.description = description;\n-        return this;\n-    }\n-\n-    public String getClinicalAnalysisId() {\n-        return clinicalAnalysisId;\n-    }\n-\n-    public InterpretationUpdateParams setClinicalAnalysisId(String clinicalAnalysisId) {\n-        this.clinicalAnalysisId = clinicalAnalysisId;\n-        return this;\n-    }\n-\n-    public ClinicalAnalyst getAnalyst() {\n-        return analyst;\n-    }\n-\n-    public InterpretationUpdateParams setAnalyst(ClinicalAnalyst analyst) {\n-        this.analyst = analyst;\n-        return this;\n-    }\n-\n-    public List<InterpretationMethod> getMethods() {\n-        return methods;\n-    }\n-\n-    public InterpretationUpdateParams setMethods(List<InterpretationMethod> methods) {\n-        this.methods = methods;\n-        return this;\n-    }\n-\n-    public String getCreationDate() {\n-        return creationDate;\n-    }\n-\n-    public InterpretationUpdateParams setCreationDate(String creationDate) {\n-        this.creationDate = creationDate;\n-        return this;\n-    }\n-\n-    public List<ClinicalVariant> getPrimaryFindings() {\n-        return primaryFindings;\n-    }\n-\n-    public InterpretationUpdateParams setPrimaryFindings(List<ClinicalVariant> primaryFindings) {\n-        this.primaryFindings = primaryFindings;\n-        return this;\n-    }\n-\n-    public List<ClinicalVariant> getSecondaryFindings() {\n-        return secondaryFindings;\n-    }\n-\n-    public InterpretationUpdateParams setSecondaryFindings(List<ClinicalVariant> secondaryFindings) {\n-        this.secondaryFindings = secondaryFindings;\n-        return this;\n-    }\n-\n-    public List<ClinicalComment> getComments() {\n-        return comments;\n-    }\n-\n-    public InterpretationUpdateParams setComments(List<ClinicalComment> comments) {\n-        this.comments = comments;\n-        return this;\n-    }\n-\n-    public Map<String, Object> getAttributes() {\n-        return attributes;\n-    }\n-\n-    public InterpretationUpdateParams setAttributes(Map<String, Object> attributes) {\n-        this.attributes = attributes;\n-        return this;\n-    }\n+  private String id;\n+  private String description;\n+  private String clinicalAnalysisId;\n+  private ClinicalAnalyst analyst;\n+  private List<InterpretationMethod> methods;\n+  private String creationDate;\n+  private List<ClinicalVariant> primaryFindings;\n+  private List<ClinicalVariant> secondaryFindings;\n+  private List<ClinicalComment> comments;\n+  private Map<String, Object> attributes;\n+\n+  public InterpretationUpdateParams() {\n+  }\n+\n+  public InterpretationUpdateParams(String id, String description, String clinicalAnalysisId, ClinicalAnalyst analyst,\n+                                    List<InterpretationMethod> methods, String creationDate, List<ClinicalVariant> primaryFindings,\n+                                    List<ClinicalVariant> secondaryFindings, List<ClinicalComment> comments,\n+                                    Map<String, Object> attributes) {\n+    this.id = id;\n+    this.description = description;\n+    this.clinicalAnalysisId = clinicalAnalysisId;\n+    this.analyst = analyst;\n+    this.methods = methods;\n+    this.creationDate = creationDate;\n+    this.primaryFindings = primaryFindings;\n+    this.secondaryFindings = secondaryFindings;\n+    this.comments = comments;\n+    this.attributes = attributes;\n+  }\n+\n+  @JsonIgnore\n+  public ObjectMap getUpdateMap() throws JsonProcessingException {\n+    return new ObjectMap(getUpdateObjectMapper().writeValueAsString(this));\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"InterpretationUpdateParams{\");\n+    sb.append(\"id='\").append(id).append('\\'');\n+    sb.append(\", description='\").append(description).append('\\'');\n+    sb.append(\", clinicalAnalysisId='\").append(clinicalAnalysisId).append('\\'');\n+    sb.append(\", analyst=\").append(analyst);\n+    sb.append(\", methods=\").append(methods);\n+    sb.append(\", creationDate='\").append(creationDate).append('\\'');\n+    sb.append(\", primaryFindings=\").append(primaryFindings);\n+    sb.append(\", secondaryFindings=\").append(secondaryFindings);\n+    sb.append(\", comments=\").append(comments);\n+    sb.append(\", attributes=\").append(attributes);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  public String getId() {\n+    return id;\n+  }\n+\n+  public InterpretationUpdateParams setId(String id) {\n+    this.id = id;\n+    return this;\n+  }\n+\n+  public String getDescription() {\n+    return description;\n+  }\n+\n+  public InterpretationUpdateParams setDescription(String description) {\n+    this.description = description;\n+    return this;\n+  }\n+\n+  public String getClinicalAnalysisId() {\n+    return clinicalAnalysisId;\n+  }\n+\n+  public InterpretationUpdateParams setClinicalAnalysisId(String clinicalAnalysisId) {\n+    this.clinicalAnalysisId = clinicalAnalysisId;\n+    return this;\n+  }\n+\n+  public ClinicalAnalyst getAnalyst() {\n+    return analyst;\n+  }\n+\n+  public InterpretationUpdateParams setAnalyst(ClinicalAnalyst analyst) {\n+    this.analyst = analyst;\n+    return this;\n+  }\n+\n+  public List<InterpretationMethod> getMethods() {\n+    return methods;\n+  }\n+\n+  public InterpretationUpdateParams setMethods(List<InterpretationMethod> methods) {\n+    this.methods = methods;\n+    return this;\n+  }\n+\n+  public String getCreationDate() {\n+    return creationDate;\n+  }\n+\n+  public InterpretationUpdateParams setCreationDate(String creationDate) {\n+    this.creationDate = creationDate;\n+    return this;\n+  }\n+\n+  public List<ClinicalVariant> getPrimaryFindings() {\n+    return primaryFindings;\n+  }\n+\n+  public InterpretationUpdateParams setPrimaryFindings(List<ClinicalVariant> primaryFindings) {\n+    this.primaryFindings = primaryFindings;\n+    return this;\n+  }\n+\n+  public List<ClinicalVariant> getSecondaryFindings() {\n+    return secondaryFindings;\n+  }\n+\n+  public InterpretationUpdateParams setSecondaryFindings(List<ClinicalVariant> secondaryFindings) {\n+    this.secondaryFindings = secondaryFindings;\n+    return this;\n+  }\n+\n+  public List<ClinicalComment> getComments() {\n+    return comments;\n+  }\n+\n+  public InterpretationUpdateParams setComments(List<ClinicalComment> comments) {\n+    this.comments = comments;\n+    return this;\n+  }\n+\n+  public Map<String, Object> getAttributes() {\n+    return attributes;\n+  }\n+\n+  public InterpretationUpdateParams setAttributes(Map<String, Object> attributes) {\n+    this.attributes = attributes;\n+    return this;\n+  }\n }\n",
            "diff_size": 141
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/348/InterpretationUpdateParams.java\nindex a96f7f8a839..316e6805d7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/348/InterpretationUpdateParams.java\n@@ -171,4 +171,4 @@ public class InterpretationUpdateParams {\n         this.attributes = attributes;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "column": "101",
                    "severity": "error",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "50",
                    "column": "122",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "50",
                    "column": "129",
                    "severity": "error",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "50",
                    "column": "140",
                    "severity": "error",
                    "message": "'{' at column 140 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "50",
                    "column": "140",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "141",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/348/InterpretationUpdateParams.java\nindex a96f7f8a839..7d3f1b11e18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/348/InterpretationUpdateParams.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/348/InterpretationUpdateParams.java\n@@ -47,8 +47,7 @@ public class InterpretationUpdateParams {\n \n     public InterpretationUpdateParams(String id, String description, String clinicalAnalysisId, ClinicalAnalyst analyst,\n                                       List<InterpretationMethod> methods, String creationDate, List<ClinicalVariant> primaryFindings,\n-                                      List<ClinicalVariant> secondaryFindings, List<ClinicalComment> comments, Map<String, Object> attributes) {\n-        this.id = id;\n+                                      List<ClinicalVariant> secondaryFindings, List<ClinicalComment>comments, Map<String,Object>attributes){this.id = id;\n         this.description = description;\n         this.clinicalAnalysisId = clinicalAnalysisId;\n         this.analyst = analyst;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}