{
    "project_name": "Activiti-Activiti",
    "violation_id": "887",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.el.variable;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/887/VariableElResolver.java\nindex 27d70e8b836..14885a6f4e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/887/VariableElResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.el.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/887/VariableElResolver.java\nindex 27d70e8b836..d336fe732a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/887/VariableElResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.el.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n@@ -41,7 +42,7 @@ public class VariableElResolver implements VariableScopeItemELResolver {\n         VariableInstance variableInstance = variableScope.getVariableInstance(property);\n         Object value = variableInstance.getValue();\n         if (hasJsonType(variableInstance) && (value instanceof JsonNode) &&\n-            ((JsonNode) value).isArray()) {\n+                ((JsonNode) value).isArray()) {\n             return objectMapper.convertValue(value, List.class);\n         } else {\n             return value;\n@@ -50,7 +51,7 @@ public class VariableElResolver implements VariableScopeItemELResolver {\n \n     private boolean hasJsonType(VariableInstance variableInstance) {\n         return JsonType.JSON.equals(variableInstance.getTypeName()) ||\n-            LongJsonType.LONG_JSON.equals(variableInstance.getTypeName());\n+                LongJsonType.LONG_JSON.equals(variableInstance.getTypeName());\n     }\n \n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/887/VariableElResolver.java\nindex 27d70e8b836..0588f05e5c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/887/VariableElResolver.java\n@@ -23,34 +23,32 @@ import org.activiti.engine.impl.persistence.entity.VariableInstance;\n import org.activiti.engine.impl.variable.JsonType;\n import org.activiti.engine.impl.variable.LongJsonType;\n \n-public class VariableElResolver implements VariableScopeItemELResolver {\n-\n-    private final ObjectMapper objectMapper;\n-\n-    public VariableElResolver(ObjectMapper objectMapper) {\n-        this.objectMapper = objectMapper;\n-    }\n \n-    @Override\n-    public boolean canResolve(String property, VariableScope variableScope) {\n-        return variableScope.hasVariable(property);\n-    }\n-\n-    @Override\n-    public Object resolve(String property, VariableScope variableScope) {\n-        VariableInstance variableInstance = variableScope.getVariableInstance(property);\n-        Object value = variableInstance.getValue();\n-        if (hasJsonType(variableInstance) && (value instanceof JsonNode) &&\n-            ((JsonNode) value).isArray()) {\n-            return objectMapper.convertValue(value, List.class);\n-        } else {\n-            return value;\n-        }\n-    }\n+public class VariableElResolver implements VariableScopeItemELResolver {\n \n-    private boolean hasJsonType(VariableInstance variableInstance) {\n-        return JsonType.JSON.equals(variableInstance.getTypeName()) ||\n-            LongJsonType.LONG_JSON.equals(variableInstance.getTypeName());\n+  private final ObjectMapper objectMapper;\n+\n+  public VariableElResolver(ObjectMapper objectMapper) {\n+    this.objectMapper = objectMapper;\n+  }\n+\n+  @Override\n+  public boolean canResolve(String property, VariableScope variableScope) {\n+    return variableScope.hasVariable(property);\n+  }\n+\n+  @Override\n+  public Object resolve(String property, VariableScope variableScope) {\n+    VariableInstance variableInstance = variableScope.getVariableInstance(property);\n+    Object value = variableInstance.getValue();\n+    if (hasJsonType(variableInstance) && (value instanceof JsonNode) && ((JsonNode) value).isArray()) {\n+      return objectMapper.convertValue(value, List.class);\n+    } else {\n+      return value;\n     }\n+  }\n \n-}\n+  private boolean hasJsonType(VariableInstance variableInstance) {\n+    return JsonType.JSON.equals(variableInstance.getTypeName()) || LongJsonType.LONG_JSON.equals(variableInstance.getTypeName());\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/887/VariableElResolver.java\nindex 27d70e8b836..14885a6f4e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/887/VariableElResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.el.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/887/VariableElResolver.java\nindex 27d70e8b836..14885a6f4e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/887/VariableElResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/887/VariableElResolver.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.el.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}