{
    "project_name": "dzhw-metadatamanagement",
    "violation_id": "2",
    "information": {
        "violations": [
            {
                "line": "24",
                "column": "85",
                "severity": "error",
                "message": "'}' at column 85 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/2/RestrictedScaleLevelForDateDataTypeValidator.java\nindex 97bc0afad74..95c816f36d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/2/RestrictedScaleLevelForDateDataTypeValidator.java\n@@ -21,7 +21,9 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {}\n+  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/2/RestrictedScaleLevelForDateDataTypeValidator.java\nindex 97bc0afad74..bc528b2a9fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/2/RestrictedScaleLevelForDateDataTypeValidator.java\n@@ -9,7 +9,7 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n \n /**\n  * Validator which ensures that date variables have only a nominal, ordinal or interval scale level.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n public class RestrictedScaleLevelForDateDataTypeValidator\n@@ -17,15 +17,16 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {}\n+  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "24",
                    "column": "85",
                    "severity": "error",
                    "message": "'}' at column 85 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/2/RestrictedScaleLevelForDateDataTypeValidator.java\nindex 97bc0afad74..672d52e2718 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/2/RestrictedScaleLevelForDateDataTypeValidator.java\n@@ -31,8 +31,7 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n    */\n   @Override\n   public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n-\n-    if (variable == null) {\n+  if (variable == null) {\n       return true;\n     }\n \n@@ -47,7 +46,6 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n     }\n \n     return ScaleLevels.ORDINAL.equals(variable.getScaleLevel())\n-        || ScaleLevels.INTERVAL.equals(variable.getScaleLevel())\n-        || ScaleLevels.NOMINAL.equals(variable.getScaleLevel());\n+        || ScaleLevels.INTERVAL.equals(variable.getScaleLevel()) || ScaleLevels.NOMINAL.equals(variable.getScaleLevel());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/2/RestrictedScaleLevelForDateDataTypeValidator.java\nindex 97bc0afad74..0a88a3f8569 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/2/RestrictedScaleLevelForDateDataTypeValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.DataTypes;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.ScaleLevels;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n@@ -12,16 +11,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n-public class RestrictedScaleLevelForDateDataTypeValidator\n-    implements ConstraintValidator<RestrictedScaleLevelForDateDataType, Variable> {\n+\n+\n+public class RestrictedScaleLevelForDateDataTypeValidator implements ConstraintValidator<RestrictedScaleLevelForDateDataType, Variable> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {}\n+  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -29,9 +32,11 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n \n+\n+  @Override\n+  public boolean isValid(Variable variable,\n+    ConstraintValidatorContext context) {\n     if (variable == null) {\n       return true;\n     }\n@@ -46,8 +51,6 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n       return true;\n     }\n \n-    return ScaleLevels.ORDINAL.equals(variable.getScaleLevel())\n-        || ScaleLevels.INTERVAL.equals(variable.getScaleLevel())\n-        || ScaleLevels.NOMINAL.equals(variable.getScaleLevel());\n+    return ScaleLevels.ORDINAL.equals(variable.getScaleLevel()) || ScaleLevels.INTERVAL.equals(variable.getScaleLevel()) || ScaleLevels.NOMINAL.equals(variable.getScaleLevel());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/2/RestrictedScaleLevelForDateDataTypeValidator.java\nindex 97bc0afad74..95c816f36d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/2/RestrictedScaleLevelForDateDataTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/2/RestrictedScaleLevelForDateDataTypeValidator.java\n@@ -21,7 +21,9 @@ public class RestrictedScaleLevelForDateDataTypeValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {}\n+  public void initialize(RestrictedScaleLevelForDateDataType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "24",
                    "column": "85",
                    "severity": "error",
                    "message": "'}' at column 85 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}