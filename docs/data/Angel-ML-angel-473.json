{
    "project_name": "Angel-ML-angel",
    "violation_id": "473",
    "information": {
        "violations": [
            {
                "line": "24",
                "severity": "error",
                "message": "No trailing whitespace allowed.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n    public long[][] getData() {\n        return data; \n    }\n\n    public int getPartNum() {",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/473/LongArrayIntElement.java\nindex d2e1099ef85..0958966fb5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/473/LongArrayIntElement.java\n@@ -21,10 +21,7 @@ public class LongArrayIntElement implements IElement {\n     }\n \n     public long[][] getData() {\n-        return data; \n-    }\n-\n-    public int getPartNum() {\n+      return data;}public int getPartNum() {\n         return partNum;\n     }\n \n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/473/LongArrayIntElement.java\nindex d2e1099ef85..4af56450adc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/473/LongArrayIntElement.java\n@@ -21,7 +21,7 @@ public class LongArrayIntElement implements IElement {\n     }\n \n     public long[][] getData() {\n-        return data; \n+        return data;\n     }\n \n     public int getPartNum() {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/473/LongArrayIntElement.java\nindex d2e1099ef85..c6767fb4917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/473/LongArrayIntElement.java\n@@ -7,35 +7,33 @@ import java.io.DataOutputStream;\n import java.io.IOException;\n \n public class LongArrayIntElement implements IElement {\n-\n-    private long[][] data;\n+  private long[][] data;\n     private int partNum;\n \n     public LongArrayIntElement(long[][] data, int partNum) {\n-        this.data = data;\n+  this.data = data;\n         this.partNum = partNum;\n-    }\n+  }\n \n     public LongArrayIntElement() {\n-        this(null, -1);\n+  this(null, -1);\n     }\n \n     public long[][] getData() {\n-        return data; \n-    }\n-\n-    public int getPartNum() {\n-        return partNum;\n-    }\n+  return data;\n+  }\n+public int getPartNum() {\n+  return partNum;\n+  }\n \n     public void setDataPart(long[][] data, int partNum) {\n-        this.data = data;\n+  this.data = data;\n         this.partNum = partNum;\n     }\n \n     @Override\n     public LongArrayIntElement deepClone() {\n-        long[][] newData = new long[data.length][];\n+  long[][] newData = new long[data.length][];\n         int newPartNum = partNum;\n         System.arraycopy(data, 0, newData, 0, data.length);\n         return new LongArrayIntElement(newData, newPartNum);\n@@ -43,62 +41,62 @@ public class LongArrayIntElement implements IElement {\n \n     @Override\n     public void serialize(ByteBuf output) {\n-        output.writeInt(data.length);\n+  output.writeInt(data.length);\n         for (int i = 0; i < data.length; i++) {\n-            output.writeInt(data[i].length);\n+  output.writeInt(data[i].length);\n             for (int j = 0; j < data[i].length; j++) {\n-                output.writeLong(data[i][j]);\n+  output.writeLong(data[i][j]);\n             }\n-        }\n+  }\n         output.writeInt(partNum);\n     }\n \n     @Override\n     public void deserialize(ByteBuf input) {\n-        data = new long[input.readInt()][];\n+  data = new long[input.readInt()][];\n         for (int i = 0; i < data.length; i++) {\n-            int len = input.readInt();\n+  int len = input.readInt();\n             for (int j = 0; j < len; j++) {\n-                data[i][j] = input.readLong();\n+  data[i][j] = input.readLong();\n             }\n-        }\n+  }\n         partNum = input.readInt();\n     }\n \n     @Override\n     public int bufferLen() {\n-        int len = 4 + 4;\n+  int len = 4 + 4;\n         for (int i = 0; i < data.length; i++) {\n-            len += (8 * data[i].length + 4);\n+  len += (8 * data[i].length + 4);\n         }\n         return len;\n     }\n \n     @Override\n     public void serialize(DataOutputStream output) throws IOException {\n-        output.writeInt(data.length);\n+  output.writeInt(data.length);\n         for (int i = 0; i < data.length; i++) {\n-            output.writeInt(data[i].length);\n+  output.writeInt(data[i].length);\n             for (int j = 0; j < data[i].length; j++) {\n-                output.writeLong(data[i][j]);\n+  output.writeLong(data[i][j]);\n             }\n-        }\n+  }\n         output.writeInt(partNum);\n     }\n \n     @Override\n     public void deserialize(DataInputStream input) throws IOException {\n-        for (int i = 0; i < data.length; i++) {\n-            int len = input.readInt();\n+  for (int i = 0; i < data.length; i++) {\n+  int len = input.readInt();\n             for (int j = 0; j < len; j++) {\n-                data[i][j] = input.readLong();\n+  data[i][j] = input.readLong();\n             }\n-        }\n+  }\n         partNum = input.readInt();\n     }\n \n     @Override\n     public int dataLen() {\n-        return bufferLen();\n+  return bufferLen();\n     }\n-}\n+  }\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/473/LongArrayIntElement.java\nindex d2e1099ef85..6bba9caacbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/473/LongArrayIntElement.java\n@@ -1,104 +1,104 @@\n package com.tencent.angel.ps.storage.vector.element;\n \n import io.netty.buffer.ByteBuf;\n-\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n \n public class LongArrayIntElement implements IElement {\n \n-    private long[][] data;\n-    private int partNum;\n-\n-    public LongArrayIntElement(long[][] data, int partNum) {\n-        this.data = data;\n-        this.partNum = partNum;\n-    }\n-\n-    public LongArrayIntElement() {\n-        this(null, -1);\n-    }\n-\n-    public long[][] getData() {\n-        return data; \n-    }\n-\n-    public int getPartNum() {\n-        return partNum;\n-    }\n-\n-    public void setDataPart(long[][] data, int partNum) {\n-        this.data = data;\n-        this.partNum = partNum;\n+  private long[][] data;\n+  private int partNum;\n+\n+  public LongArrayIntElement(long[][] data, int partNum) {\n+    this.data = data;\n+    this.partNum = partNum;\n+  }\n+\n+  public LongArrayIntElement() {\n+    this(null, -1);\n+  }\n+\n+  public long[][] getData() {\n+    return data;\n+  }\n+\n+  public int getPartNum() {\n+    return partNum;\n+  }\n+\n+  public void setDataPart(long[][] data, int partNum) {\n+    this.data = data;\n+    this.partNum = partNum;\n+  }\n+\n+  @Override\n+  public LongArrayIntElement deepClone() {\n+    long[][] newData = new long[data.length][];\n+    int newPartNum = partNum;\n+    System.arraycopy(data, 0, newData, 0, data.length);\n+    return new LongArrayIntElement(newData, newPartNum);\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf output) {\n+    output.writeInt(data.length);\n+    for (int i = 0; i < data.length; i++) {\n+      output.writeInt(data[i].length);\n+      for (int j = 0; j < data[i].length; j++) {\n+        output.writeLong(data[i][j]);\n+      }\n     }\n-\n-    @Override\n-    public LongArrayIntElement deepClone() {\n-        long[][] newData = new long[data.length][];\n-        int newPartNum = partNum;\n-        System.arraycopy(data, 0, newData, 0, data.length);\n-        return new LongArrayIntElement(newData, newPartNum);\n+    output.writeInt(partNum);\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf input) {\n+    data = new long[input.readInt()][];\n+    for (int i = 0; i < data.length; i++) {\n+      int len = input.readInt();\n+      for (int j = 0; j < len; j++) {\n+        data[i][j] = input.readLong();\n+      }\n     }\n-\n-    @Override\n-    public void serialize(ByteBuf output) {\n-        output.writeInt(data.length);\n-        for (int i = 0; i < data.length; i++) {\n-            output.writeInt(data[i].length);\n-            for (int j = 0; j < data[i].length; j++) {\n-                output.writeLong(data[i][j]);\n-            }\n-        }\n-        output.writeInt(partNum);\n+    partNum = input.readInt();\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    int len = 4 + 4;\n+    for (int i = 0; i < data.length; i++) {\n+      len += (8 * data[i].length + 4);\n     }\n-\n-    @Override\n-    public void deserialize(ByteBuf input) {\n-        data = new long[input.readInt()][];\n-        for (int i = 0; i < data.length; i++) {\n-            int len = input.readInt();\n-            for (int j = 0; j < len; j++) {\n-                data[i][j] = input.readLong();\n-            }\n-        }\n-        partNum = input.readInt();\n+    return len;\n+  }\n+\n+  @Override\n+  public void serialize(DataOutputStream output) throws IOException {\n+    output.writeInt(data.length);\n+    for (int i = 0; i < data.length; i++) {\n+      output.writeInt(data[i].length);\n+      for (int j = 0; j < data[i].length; j++) {\n+        output.writeLong(data[i][j]);\n+      }\n     }\n-\n-    @Override\n-    public int bufferLen() {\n-        int len = 4 + 4;\n-        for (int i = 0; i < data.length; i++) {\n-            len += (8 * data[i].length + 4);\n-        }\n-        return len;\n+    output.writeInt(partNum);\n+  }\n+\n+  @Override\n+  public void deserialize(DataInputStream input) throws IOException {\n+    for (int i = 0; i < data.length; i++) {\n+      int len = input.readInt();\n+      for (int j = 0; j < len; j++) {\n+        data[i][j] = input.readLong();\n+      }\n     }\n+    partNum = input.readInt();\n+  }\n \n-    @Override\n-    public void serialize(DataOutputStream output) throws IOException {\n-        output.writeInt(data.length);\n-        for (int i = 0; i < data.length; i++) {\n-            output.writeInt(data[i].length);\n-            for (int j = 0; j < data[i].length; j++) {\n-                output.writeLong(data[i][j]);\n-            }\n-        }\n-        output.writeInt(partNum);\n-    }\n-\n-    @Override\n-    public void deserialize(DataInputStream input) throws IOException {\n-        for (int i = 0; i < data.length; i++) {\n-            int len = input.readInt();\n-            for (int j = 0; j < len; j++) {\n-                data[i][j] = input.readLong();\n-            }\n-        }\n-        partNum = input.readInt();\n-    }\n+  @Override\n+  public int dataLen() {\n+    return bufferLen();\n+  }\n \n-    @Override\n-    public int dataLen() {\n-        return bufferLen();\n-    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 114
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/473/LongArrayIntElement.java\nindex d2e1099ef85..0958966fb5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/473/LongArrayIntElement.java\n@@ -21,10 +21,7 @@ public class LongArrayIntElement implements IElement {\n     }\n \n     public long[][] getData() {\n-        return data; \n-    }\n-\n-    public int getPartNum() {\n+      return data;}public int getPartNum() {\n         return partNum;\n     }\n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/473/LongArrayIntElement.java\nindex d2e1099ef85..b79bea9fd3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/473/LongArrayIntElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/473/LongArrayIntElement.java\n@@ -20,11 +20,10 @@ public class LongArrayIntElement implements IElement {\n         this(null, -1);\n     }\n \n-    public long[][] getData() {\n-        return data; \n-    }\n+    public long[][] getData() {returndata;\n+}\n \n-    public int getPartNum() {\n+public public int getPartNum() {\n         return partNum;\n     }\n \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}