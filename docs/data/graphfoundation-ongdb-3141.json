{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3141",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3141/DurableStateStorageImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3141/DurableStateStorageImporter.java\nindex 7b32c4d0a38..165ee6b5a1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3141/DurableStateStorageImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3141/DurableStateStorageImporter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.storage;\n \n import java.io.File;\n@@ -29,17 +30,17 @@ import org.neo4j.logging.LogProvider;\n \n public class DurableStateStorageImporter<STATE> extends DurableStateStorage<STATE>\n {\n-    public DurableStateStorageImporter( FileSystemAbstraction fileSystemAbstraction, File stateDir, String name,\n-                                        StateMarshal<STATE> marshal, int numberOfEntriesBeforeRotation,\n-                                        Supplier<DatabaseHealth> databaseHealthSupplier, LogProvider logProvider )\n-    {\n-        super( fileSystemAbstraction, stateDir, name, marshal, numberOfEntriesBeforeRotation, logProvider );\n-    }\n+  public DurableStateStorageImporter(FileSystemAbstraction fileSystemAbstraction, File stateDir, String name,\n+                                     StateMarshal<STATE> marshal, int numberOfEntriesBeforeRotation,\n+                                     Supplier<DatabaseHealth> databaseHealthSupplier, LogProvider logProvider)\n+  {\n+    super(fileSystemAbstraction, stateDir, name, marshal, numberOfEntriesBeforeRotation, logProvider);\n+  }\n \n-    public void persist( STATE state ) throws IOException\n-    {\n-        super.persistStoreData( state );\n-        super.switchStoreFile();\n-        super.persistStoreData( state );\n-    }\n+  public void persist(STATE state) throws IOException\n+  {\n+    super.persistStoreData(state);\n+    super.switchStoreFile();\n+    super.persistStoreData(state);\n+  }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3141/DurableStateStorageImporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3141/DurableStateStorageImporter.java\nindex 7b32c4d0a38..71893177e7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3141/DurableStateStorageImporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3141/DurableStateStorageImporter.java\n@@ -29,10 +29,8 @@ import org.neo4j.logging.LogProvider;\n \n public class DurableStateStorageImporter<STATE> extends DurableStateStorage<STATE>\n {\n-    public DurableStateStorageImporter( FileSystemAbstraction fileSystemAbstraction, File stateDir, String name,\n-                                        StateMarshal<STATE> marshal, int numberOfEntriesBeforeRotation,\n-                                        Supplier<DatabaseHealth> databaseHealthSupplier, LogProvider logProvider )\n-    {\n+    public DurableStateStorageImporter( FileSystemAbstraction fileSystemAbstraction, File stateDir, String name, StateMarshal<STATE> marshal, int numberOfEntriesBeforeRotation, Supplier<DatabaseHealth> databaseHealthSupplier, LogProvider logProvider )\n+{\n         super( fileSystemAbstraction, stateDir, name, marshal, numberOfEntriesBeforeRotation, logProvider );\n     }\n \n@@ -42,4 +40,4 @@ public class DurableStateStorageImporter<STATE> extends DurableStateStorage<STAT\n         super.switchStoreFile();\n         super.persistStoreData( state );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}