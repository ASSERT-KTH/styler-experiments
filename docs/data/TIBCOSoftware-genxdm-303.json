{
    "project_name": "TIBCOSoftware-genxdm",
    "violation_id": "303",
    "information": {
        "violations": [
            {
                "line": "32",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public interface RegExMachine<E, T>\n{\n\t/**\n\t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n\t * sure the state machine is in an end state\n\t * ",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/final/files-repaired/303/RegExMachine.java\nindex f26c25ae00d..a6412367a22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/final/files-repaired/303/RegExMachine.java\n@@ -29,7 +29,7 @@ import java.util.List;\n  */\n public interface RegExMachine<E, T>\n {\n-\t/**\n+/**\n \t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n \t * sure the state machine is in an end state\n \t * \n@@ -39,5 +39,5 @@ public interface RegExMachine<E, T>\n \t *            output {@link List} containing Expressions that matched the input\n \t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n \t */\n-\tboolean step(T token, List<? super E> matchers);\n+ boolean step(T token, List<? super E> matchers);\n }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/checkstyle_idea/303/RegExMachine.java\nindex f26c25ae00d..158d63ac323 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/checkstyle_idea/303/RegExMachine.java\n@@ -1,43 +1,43 @@\n /**\n  * Copyright (c) 2009-2010 TIBCO Software Inc.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.processor.w3c.xs.regex.api;\n \n import java.util.List;\n \n /**\n  * A stepper over a Finite State Representation.\n- * \n+ *\n  * @author David Holmes\n- * \n+ *\n  * @param <E>\n  *            The expression handle.\n  * @param <T>\n  *            The token handle.\n  */\n-public interface RegExMachine<E, T>\n-{\n-\t/**\n-\t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n-\t * sure the state machine is in an end state\n-\t * \n-\t * @param token\n-\t *            an input token or null\n-\t * @param matchers\n-\t *            output {@link List} containing Expressions that matched the input\n-\t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n-\t */\n-\tboolean step(T token, List<? super E> matchers);\n+public interface RegExMachine<E, T> {\n+    /**\n+     * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n+     * sure the state machine is in an end state\n+     *\n+     * @param token\n+     *            an input token or null\n+     * @param matchers\n+     *            output {@link List} containing Expressions that matched the input\n+     * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n+     */\n+    boolean step(T token, List<? super E> matchers);\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/naturalize/303/RegExMachine.java\nindex f26c25ae00d..64250742d27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/naturalize/303/RegExMachine.java\n@@ -29,7 +29,7 @@ import java.util.List;\n  */\n public interface RegExMachine<E, T>\n {\n-\t/**\n+    /**\n \t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n \t * sure the state machine is in an end state\n \t * \n@@ -40,4 +40,4 @@ public interface RegExMachine<E, T>\n \t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n \t */\n \tboolean step(T token, List<? super E> matchers);\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/codebuff/303/RegExMachine.java\nindex f26c25ae00d..d1df6905353 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/codebuff/303/RegExMachine.java\n@@ -27,17 +27,20 @@ import java.util.List;\n  * @param <T>\n  *            The token handle.\n  */\n+\n+\n public interface RegExMachine<E, T>\n {\n-\t/**\n-\t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n-\t * sure the state machine is in an end state\n-\t * \n-\t * @param token\n-\t *            an input token or null\n-\t * @param matchers\n-\t *            output {@link List} containing Expressions that matched the input\n-\t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n-\t */\n-\tboolean step(T token, List<? super E> matchers);\n-}\n+    /**\n+     * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n+     * sure the state machine is in an end state\n+     * \n+     * @param token\n+     *            an input token or null\n+     * @param matchers\n+     *            output {@link List} containing Expressions that matched the input\n+     * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n+     */\n+\n+    boolean step(T token, List<? super E> matchers);\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/random/files-repaired/303/RegExMachine.java\nindex f26c25ae00d..a6412367a22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/random/files-repaired/303/RegExMachine.java\n@@ -29,7 +29,7 @@ import java.util.List;\n  */\n public interface RegExMachine<E, T>\n {\n-\t/**\n+/**\n \t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n \t * sure the state machine is in an end state\n \t * \n@@ -39,5 +39,5 @@ public interface RegExMachine<E, T>\n \t *            output {@link List} containing Expressions that matched the input\n \t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n \t */\n-\tboolean step(T token, List<? super E> matchers);\n+ boolean step(T token, List<? super E> matchers);\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/three_grams/files-repaired/303/RegExMachine.java\nindex f26c25ae00d..8e147262e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/303/RegExMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/three_grams/files-repaired/303/RegExMachine.java\n@@ -29,7 +29,7 @@ import java.util.List;\n  */\n public interface RegExMachine<E, T>\n {\n-\t/**\n+    /**\n \t * Processes the given token with the state machine. if token is null, then we are at the end of input, and so make\n \t * sure the state machine is in an end state\n \t * \n@@ -39,5 +39,5 @@ public interface RegExMachine<E, T>\n \t *            output {@link List} containing Expressions that matched the input\n \t * @return true if the token can be consumed by the pattern or if input is null and state machine is at an end state\n \t */\n-\tboolean step(T token, List<? super E> matchers);\n+ boolean step(T token, List<? super E> matchers);\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}