{
    "project_name": "java110-MicroCommunity",
    "violation_id": "303",
    "information": {
        "violations": [
            {
                "line": "57",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 165).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        //validateDemoConfigData(reqJson);\n\n        List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n\n        dataFlowContext.setResponseEntity(responseEntity);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..9dc61bc8483 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/303/QueryBusinessTypeConfigListener.java\n@@ -53,9 +53,9 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n         //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         //validateDemoConfigData(reqJson);\n-\n-        List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n+        List<CbusinesstypeDto>\n+        cbusinesstypeDto= iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n+         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n \n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..d36ffc58913 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/303/QueryBusinessTypeConfigListener.java\n@@ -54,7 +54,8 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         //validateDemoConfigData(reqJson);\n \n-        List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n+        List<CbusinesstypeDto> cbusinesstypeDto =\n+            iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n \n         dataFlowContext.setResponseEntity(responseEntity);\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..df86878ff08 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/303/QueryBusinessTypeConfigListener.java\n@@ -84,4 +84,4 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n     public void setiCbusinesstypeInnerServiceSMOImpl(ICbusinesstypeInnerServiceSMO iCbusinesstypeInnerServiceSMOImpl) {\n         this.iCbusinesstypeInnerServiceSMOImpl = iCbusinesstypeInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..1696359339e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/303/QueryBusinessTypeConfigListener.java\n@@ -1,6 +1,5 @@\n package com.java110.api.listener.businesstype;\n \n-\n import com.alibaba.fastjson.JSONObject;\n import com.java110.api.listener.AbstractServiceApiDataFlowListener;\n import com.java110.utils.constant.ServiceCodeConstant;\n@@ -15,7 +14,6 @@ import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpMethod;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n-\n import java.util.List;\n \n /**\n@@ -26,6 +24,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @Java110Listener(\"queryBusinessTypeConfig\")\n public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowListener {\n \n@@ -47,16 +47,15 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n      *\n      * @param event \u65f6\u95f4\u5bf9\u8c61\n      */\n+\n     @Override\n     public void soService(ServiceDataFlowEvent event) {\n         DataFlowContext dataFlowContext = event.getDataFlowContext();\n         //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         //validateDemoConfigData(reqJson);\n-\n         List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n-\n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n \n@@ -65,11 +64,11 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n      *\n      * @param reqJson \u5305\u542b\u67e5\u8be2\u6761\u4ef6\n      */\n+\n+\n     private void validateDemoConfigData(JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"demoName\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bdemoName\u4fe1\u606f\");\n         Assert.jsonObjectHaveKey(reqJson, \"demoValue\", \"\u8bf7\u6c42\u4e2d\u672a\u5305\u542bdemoValue\u4fe1\u606f\");\n-\n-\n     }\n \n     @Override\n@@ -84,4 +83,4 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n     public void setiCbusinesstypeInnerServiceSMOImpl(ICbusinesstypeInnerServiceSMO iCbusinesstypeInnerServiceSMOImpl) {\n         this.iCbusinesstypeInnerServiceSMOImpl = iCbusinesstypeInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..f044c7525ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/303/QueryBusinessTypeConfigListener.java\n@@ -53,9 +53,10 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n         //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         //validateDemoConfigData(reqJson);\n-\n-        List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n+        List < CbusinesstypeDto > cbusinesstypeDto=\n+        iCbusinesstypeInnerServiceSMOImpl . queryCbusinesstypes (BeanConvertUtil.covertBean(reqJson,\n+        CbusinesstypeDto .class));\n+          ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n \n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/303/QueryBusinessTypeConfigListener.java\nindex aa97cd56951..9dc61bc8483 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/303/QueryBusinessTypeConfigListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/303/QueryBusinessTypeConfigListener.java\n@@ -53,9 +53,9 @@ public class QueryBusinessTypeConfigListener extends AbstractServiceApiDataFlowL\n         //\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\n         JSONObject reqJson = dataFlowContext.getReqJson();\n         //validateDemoConfigData(reqJson);\n-\n-        List<CbusinesstypeDto> cbusinesstypeDto = iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n-        ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n+        List<CbusinesstypeDto>\n+        cbusinesstypeDto= iCbusinesstypeInnerServiceSMOImpl.queryCbusinesstypes(BeanConvertUtil.covertBean(reqJson, CbusinesstypeDto.class));\n+         ResponseEntity<String> responseEntity = new ResponseEntity<String>(JSONObject.toJSONString(cbusinesstypeDto), HttpStatus.OK);\n \n         dataFlowContext.setResponseEntity(responseEntity);\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}