{
    "project_name": "neo4j-neo4j",
    "violation_id": "2714",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2714/UniquenessVerifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2714/UniquenessVerifier.java\nindex edeb87a013c..30807f6073c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2714/UniquenessVerifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2714/UniquenessVerifier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.verification;\n \n import java.io.Closeable;\n@@ -40,22 +41,22 @@ public interface UniquenessVerifier extends Closeable\n     /**\n      * Verifies uniqueness of existing data.\n      *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n+     * @param accessor   the accessor to retrieve actual property values from the store.\n      * @param propKeyIds the ids of the properties to verify.\n      * @throws IndexEntryConflictException if there are duplicates.\n-     * @throws IOException when Lucene throws {@link IOException}.\n+     * @throws IOException                 when Lucene throws {@link IOException}.\n      */\n-    void verify( NodePropertyAccessor accessor, int[] propKeyIds ) throws IndexEntryConflictException, IOException;\n+    void verify(NodePropertyAccessor accessor, int[] propKeyIds) throws IndexEntryConflictException, IOException;\n \n     /**\n      * Verifies uniqueness of given values and existing data.\n      *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n-     * @param propKeyIds the ids of the properties to verify.\n+     * @param accessor           the accessor to retrieve actual property values from the store.\n+     * @param propKeyIds         the ids of the properties to verify.\n      * @param updatedValueTuples the values to check uniqueness for.\n      * @throws IndexEntryConflictException if there are duplicates.\n-     * @throws IOException when Lucene throws {@link IOException}.\n+     * @throws IOException                 when Lucene throws {@link IOException}.\n      */\n-    void verify( NodePropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples )\n-            throws IndexEntryConflictException, IOException;\n+    void verify(NodePropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples)\n+      throws IndexEntryConflictException, IOException;\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}