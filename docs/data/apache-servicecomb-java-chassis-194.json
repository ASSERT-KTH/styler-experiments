{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "194",
    "information": {
        "violations": [
            {
                "line": "93",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  }\n\n  private static void putConfigsToRetMap(Map<String, Object> retMap, Map.Entry<String, Object> entry, Object configValue) {\n    if (configValue != null) {\n      if (entry.getValue() instanceof List) {\n        @SuppressWarnings(\"unchecked\")",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/194/ConfigMapping.java\nindex b002fb48515..eb01bfaabb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/194/ConfigMapping.java\n@@ -90,7 +90,8 @@ public final class ConfigMapping {\n     return retMap;\n   }\n \n-  private static void putConfigsToRetMap(Map<String, Object> retMap, Map.Entry<String, Object> entry, Object configValue) {\n+  private static void putConfigsToRetMap(Map<String, Object> retMap, Map.Entry<String, Object> entry,\n+                                         Object configValue) {\n     if (configValue != null) {\n       if (entry.getValue() instanceof List) {\n         @SuppressWarnings(\"unchecked\")\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/194/ConfigMapping.java\nindex b002fb48515..814e88dc630 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/194/ConfigMapping.java\n@@ -102,4 +102,4 @@ public final class ConfigMapping {\n       retMap.put(newKey, configValue);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/194/ConfigMapping.java\nindex b002fb48515..6c3f9cb3bd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/194/ConfigMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/194/ConfigMapping.java\n@@ -26,7 +26,6 @@ import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-\n import org.apache.commons.configuration.Configuration;\n import org.apache.servicecomb.foundation.common.utils.JvmUtils;\n import org.slf4j.Logger;\n@@ -35,6 +34,7 @@ import org.slf4j.LoggerFactory;\n /**\n  * Created by   on 2017/1/5.\n  */\n+\n public final class ConfigMapping {\n   private static Map<String, Object> configMap;\n \n@@ -44,12 +44,14 @@ public final class ConfigMapping {\n     ClassLoader loader = JvmUtils.findClassLoader();\n     List<URL> urlList = new ArrayList<>();\n     configMap = new HashMap<>();\n+\n     Enumeration<URL> urls;\n     try {\n       urls = loader.getResources(\"mapping.yaml\");\n       while (urls.hasMoreElements()) {\n         urlList.add(urls.nextElement());\n       }\n+\n       for (URL url : urlList) {\n         try (InputStream in = url.openStream()) {\n           configMap.putAll(YAMLUtil.yaml2Properties(in));\n@@ -75,6 +77,7 @@ public final class ConfigMapping {\n     if (configMap == null) {\n       return new LinkedHashMap<>();\n     }\n+\n     Map<String, Object> retMap = new LinkedHashMap<>();\n     retMap.putAll(oldMap);\n     configMap.entrySet().forEach(entry -> putConfigsToRetMap(retMap, entry, oldMap.get(entry.getKey())));\n@@ -85,6 +88,7 @@ public final class ConfigMapping {\n     if (configMap == null) {\n       return new LinkedHashMap<>();\n     }\n+\n     Map<String, Object> retMap = new LinkedHashMap<>();\n     configMap.entrySet().forEach(entry -> putConfigsToRetMap(retMap, entry, config.getProperty(entry.getKey())));\n     return retMap;\n@@ -98,8 +102,9 @@ public final class ConfigMapping {\n         newKeys.forEach(newKey -> retMap.put(newKey, configValue));\n         return;\n       }\n+\n       String newKey = (String) entry.getValue();\n       retMap.put(newKey, configValue);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}