{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2622",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2622/StoreCopyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2622/StoreCopyServer.java\nindex 92d6ae4f3e6..25bfc5f3115 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2622/StoreCopyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2622/StoreCopyServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import java.io.File;\n@@ -54,176 +55,174 @@ import static org.neo4j.io.fs.FileUtils.relativePath;\n  */\n public class StoreCopyServer\n {\n-    public interface Monitor\n-    {\n-        void startTryCheckPoint( String storeCopyIdentifier );\n-\n-        void finishTryCheckPoint( String storeCopyIdentifier );\n+  public interface Monitor\n+  {\n+    void startTryCheckPoint(String storeCopyIdentifier);\n \n-        void startStreamingStoreFile( File file, String storeCopyIdentifier );\n+    void finishTryCheckPoint(String storeCopyIdentifier);\n \n-        void finishStreamingStoreFile( File file, String storeCopyIdentifier );\n+    void startStreamingStoreFile(File file, String storeCopyIdentifier);\n \n-        void startStreamingStoreFiles( String storeCopyIdentifier );\n+    void finishStreamingStoreFile(File file, String storeCopyIdentifier);\n \n-        void finishStreamingStoreFiles( String storeCopyIdentifier );\n+    void startStreamingStoreFiles(String storeCopyIdentifier);\n \n-        void startStreamingTransactions( long startTxId, String storeCopyIdentifier );\n+    void finishStreamingStoreFiles(String storeCopyIdentifier);\n \n-        void finishStreamingTransactions( long endTxId, String storeCopyIdentifier );\n+    void startStreamingTransactions(long startTxId, String storeCopyIdentifier);\n \n-        class Adapter implements Monitor\n-        {\n-            @Override\n-            public void startTryCheckPoint( String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void finishTryCheckPoint( String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void startStreamingStoreFile( File file, String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void finishStreamingStoreFile( File file, String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void startStreamingStoreFiles( String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void finishStreamingStoreFiles( String storeCopyIdentifier )\n-            {   // empty\n-            }\n-\n-            @Override\n-            public void startStreamingTransactions( long startTxId, String storeCopyIdentifier )\n-            {   // empty\n-            }\n+    void finishStreamingTransactions(long endTxId, String storeCopyIdentifier);\n \n-            @Override\n-            public void finishStreamingTransactions( long endTxId, String storeCopyIdentifier )\n-            {   // empty\n-            }\n-        }\n-    }\n-\n-    private final NeoStoreDataSource dataSource;\n-    private final CheckPointer checkPointer;\n-    private final FileSystemAbstraction fileSystem;\n-    private final File storeDirectory;\n-    private final Monitor monitor;\n-    private final PageCache pageCache;\n-    private final StoreCopyCheckPointMutex mutex;\n-\n-    public StoreCopyServer( NeoStoreDataSource dataSource, CheckPointer checkPointer, FileSystemAbstraction fileSystem,\n-            File storeDirectory, Monitor monitor, PageCache pageCache, StoreCopyCheckPointMutex mutex )\n-    {\n-        this.dataSource = dataSource;\n-        this.checkPointer = checkPointer;\n-        this.fileSystem = fileSystem;\n-        this.mutex = mutex;\n-        this.storeDirectory = getMostCanonicalFile( storeDirectory );\n-        this.monitor = monitor;\n-        this.pageCache = pageCache;\n-    }\n-\n-    public Monitor monitor()\n+    class Adapter implements Monitor\n     {\n-        return monitor;\n+      @Override\n+      public void startTryCheckPoint(String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void finishTryCheckPoint(String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void startStreamingStoreFile(File file, String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void finishStreamingStoreFile(File file, String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void startStreamingStoreFiles(String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void finishStreamingStoreFiles(String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void startStreamingTransactions(long startTxId, String storeCopyIdentifier)\n+      {   // empty\n+      }\n+\n+      @Override\n+      public void finishStreamingTransactions(long endTxId, String storeCopyIdentifier)\n+      {   // empty\n+      }\n     }\n-\n-    /**\n-     * Trigger store flush (checkpoint) and write {@link NeoStoreDataSource#listStoreFiles(boolean) store files} to the\n-     * given {@link StoreWriter}.\n-     *\n-     * @param triggerName name of the component asks for store files.\n-     * @param writer store writer to write files to.\n-     * @param includeLogs <code>true</code> if transaction logs should be copied, <code>false</code> otherwise.\n-     * @return a {@link RequestContext} specifying at which point the store copy started.\n-     */\n-    public RequestContext flushStoresAndStreamStoreFiles( String triggerName, StoreWriter writer, boolean includeLogs )\n+  }\n+\n+  private final NeoStoreDataSource dataSource;\n+  private final CheckPointer checkPointer;\n+  private final FileSystemAbstraction fileSystem;\n+  private final File storeDirectory;\n+  private final Monitor monitor;\n+  private final PageCache pageCache;\n+  private final StoreCopyCheckPointMutex mutex;\n+\n+  public StoreCopyServer(NeoStoreDataSource dataSource, CheckPointer checkPointer, FileSystemAbstraction fileSystem,\n+                         File storeDirectory, Monitor monitor, PageCache pageCache, StoreCopyCheckPointMutex mutex)\n+  {\n+    this.dataSource = dataSource;\n+    this.checkPointer = checkPointer;\n+    this.fileSystem = fileSystem;\n+    this.mutex = mutex;\n+    this.storeDirectory = getMostCanonicalFile(storeDirectory);\n+    this.monitor = monitor;\n+    this.pageCache = pageCache;\n+  }\n+\n+  public Monitor monitor()\n+  {\n+    return monitor;\n+  }\n+\n+  /**\n+   * Trigger store flush (checkpoint) and write {@link NeoStoreDataSource#listStoreFiles(boolean) store files} to the\n+   * given {@link StoreWriter}.\n+   *\n+   * @param triggerName name of the component asks for store files.\n+   * @param writer      store writer to write files to.\n+   * @param includeLogs <code>true</code> if transaction logs should be copied, <code>false</code> otherwise.\n+   * @return a {@link RequestContext} specifying at which point the store copy started.\n+   */\n+  public RequestContext flushStoresAndStreamStoreFiles(String triggerName, StoreWriter writer, boolean includeLogs)\n+  {\n+    try\n     {\n-        try\n+      String storeCopyIdentifier = Thread.currentThread().getName();\n+      ThrowingAction<IOException> checkPointAction = () ->\n+      {\n+        monitor.startTryCheckPoint(storeCopyIdentifier);\n+        checkPointer.tryCheckPoint(new SimpleTriggerInfo(triggerName));\n+        monitor.finishTryCheckPoint(storeCopyIdentifier);\n+      };\n+\n+      // Copy the store files\n+      long lastAppliedTransaction;\n+      try (Resource lock = mutex.storeCopy(checkPointAction); ResourceIterator<StoreFileMetadata> files = dataSource.listStoreFiles(includeLogs))\n+      {\n+        lastAppliedTransaction = checkPointer.lastCheckPointedTransactionId();\n+        monitor.startStreamingStoreFiles(storeCopyIdentifier);\n+        ByteBuffer temporaryBuffer = ByteBuffer.allocateDirect((int) ByteUnit.mebiBytes(1));\n+        while (files.hasNext())\n         {\n-            String storeCopyIdentifier = Thread.currentThread().getName();\n-            ThrowingAction<IOException> checkPointAction = () ->\n-            {\n-                monitor.startTryCheckPoint( storeCopyIdentifier );\n-                checkPointer.tryCheckPoint( new SimpleTriggerInfo( triggerName ) );\n-                monitor.finishTryCheckPoint( storeCopyIdentifier );\n-            };\n-\n-            // Copy the store files\n-            long lastAppliedTransaction;\n-            try ( Resource lock = mutex.storeCopy( checkPointAction ); ResourceIterator<StoreFileMetadata> files = dataSource.listStoreFiles( includeLogs ) )\n+          StoreFileMetadata meta = files.next();\n+          File file = meta.file();\n+          boolean isLogFile = meta.isLogFile();\n+          int recordSize = meta.recordSize();\n+\n+          if (!pageCache.fileSystemSupportsFileOperations())\n+          {\n+            // Read from paged file if mapping exists. Otherwise read through file system.\n+            // A file is mapped if it is a store, and we have a running database, which will be the case for\n+            // both online backup, and when we are the master of an HA cluster.\n+            final Optional<PagedFile> optionalPagedFile = pageCache.getExistingMapping(file);\n+            if (optionalPagedFile.isPresent())\n             {\n-                lastAppliedTransaction = checkPointer.lastCheckPointedTransactionId();\n-                monitor.startStreamingStoreFiles( storeCopyIdentifier );\n-                ByteBuffer temporaryBuffer = ByteBuffer.allocateDirect( (int) ByteUnit.mebiBytes( 1 ) );\n-                while ( files.hasNext() )\n+              try (PagedFile pagedFile = optionalPagedFile.get())\n+              {\n+                long fileSize = pagedFile.fileSize();\n+                try (ReadableByteChannel fileChannel = pagedFile.openReadableByteChannel())\n                 {\n-                    StoreFileMetadata meta = files.next();\n-                    File file = meta.file();\n-                    boolean isLogFile = meta.isLogFile();\n-                    int recordSize = meta.recordSize();\n-\n-                    if ( !pageCache.fileSystemSupportsFileOperations() )\n-                    {\n-                        // Read from paged file if mapping exists. Otherwise read through file system.\n-                        // A file is mapped if it is a store, and we have a running database, which will be the case for\n-                        // both online backup, and when we are the master of an HA cluster.\n-                        final Optional<PagedFile> optionalPagedFile = pageCache.getExistingMapping( file );\n-                        if ( optionalPagedFile.isPresent() )\n-                        {\n-                            try ( PagedFile pagedFile = optionalPagedFile.get() )\n-                            {\n-                                long fileSize = pagedFile.fileSize();\n-                                try ( ReadableByteChannel fileChannel = pagedFile.openReadableByteChannel() )\n-                                {\n-                                    doWrite( writer, temporaryBuffer, file, recordSize, fileChannel, fileSize,\n-                                            storeCopyIdentifier, false );\n-                                }\n-                                continue;\n-                            }\n-                        }\n-                    }\n-\n-                    try ( ReadableByteChannel fileChannel = fileSystem.open( file, OpenMode.READ ) )\n-                    {\n-                        long fileSize = fileSystem.getFileSize( file );\n-                        doWrite( writer, temporaryBuffer, file, recordSize, fileChannel, fileSize,\n-                                storeCopyIdentifier, isLogFile );\n-                    }\n+                  doWrite(writer, temporaryBuffer, file, recordSize, fileChannel, fileSize,\n+                      storeCopyIdentifier, false);\n                 }\n+                continue;\n+              }\n             }\n-            finally\n-            {\n-                monitor.finishStreamingStoreFiles( storeCopyIdentifier );\n-            }\n-\n-            return anonymous( lastAppliedTransaction );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new ServerFailureException( e );\n+          }\n+\n+          try (ReadableByteChannel fileChannel = fileSystem.open(file, OpenMode.READ))\n+          {\n+            long fileSize = fileSystem.getFileSize(file);\n+            doWrite(writer, temporaryBuffer, file, recordSize, fileChannel, fileSize,\n+                storeCopyIdentifier, isLogFile);\n+          }\n         }\n-    }\n+      } finally\n+      {\n+        monitor.finishStreamingStoreFiles(storeCopyIdentifier);\n+      }\n \n-    private void doWrite( StoreWriter writer, ByteBuffer temporaryBuffer, File file, int recordSize,\n-            ReadableByteChannel fileChannel, long fileSize, String storeCopyIdentifier, boolean isLogFile ) throws IOException\n+      return anonymous(lastAppliedTransaction);\n+    } catch (IOException e)\n     {\n-        monitor.startStreamingStoreFile( file, storeCopyIdentifier );\n-        String path = isLogFile ? file.getName() : relativePath( storeDirectory, file );\n-        writer.write( path, fileChannel, temporaryBuffer, fileSize > 0, recordSize );\n-        monitor.finishStreamingStoreFile( file, storeCopyIdentifier );\n+      throw new ServerFailureException(e);\n     }\n+  }\n+\n+  private void doWrite(StoreWriter writer, ByteBuffer temporaryBuffer, File file, int recordSize,\n+                       ReadableByteChannel fileChannel, long fileSize, String storeCopyIdentifier, boolean isLogFile) throws IOException\n+  {\n+    monitor.startStreamingStoreFile(file, storeCopyIdentifier);\n+    String path = isLogFile ? file.getName() : relativePath(storeDirectory, file);\n+    writer.write(path, fileChannel, temporaryBuffer, fileSize > 0, recordSize);\n+    monitor.finishStreamingStoreFile(file, storeCopyIdentifier);\n+  }\n }\n",
            "diff_size": 250
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "179",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2622/StoreCopyServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2622/StoreCopyServer.java\nindex 92d6ae4f3e6..8a410daf323 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2622/StoreCopyServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2622/StoreCopyServer.java\n@@ -76,42 +76,50 @@ public class StoreCopyServer\n         {\n             @Override\n             public void startTryCheckPoint( String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void finishTryCheckPoint( String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void startStreamingStoreFile( File file, String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void finishStreamingStoreFile( File file, String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void startStreamingStoreFiles( String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void finishStreamingStoreFiles( String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void startStreamingTransactions( long startTxId, String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n \n             @Override\n             public void finishStreamingTransactions( long endTxId, String storeCopyIdentifier )\n-            {   // empty\n+            {\n+    // empty\n             }\n         }\n     }\n@@ -168,15 +176,14 @@ public class StoreCopyServer\n             {\n                 lastAppliedTransaction = checkPointer.lastCheckPointedTransactionId();\n                 monitor.startStreamingStoreFiles( storeCopyIdentifier );\n-                ByteBuffer temporaryBuffer = ByteBuffer.allocateDirect( (int) ByteUnit.mebiBytes( 1 ) );\n+                ByteBuffer temporaryBuffer = ByteBuffer.allocateDirect( ( int) ByteUnit.mebiBytes( 1 ) );\n                 while ( files.hasNext() )\n                 {\n                     StoreFileMetadata meta = files.next();\n                     File file = meta.file();\n                     boolean isLogFile = meta.isLogFile();\n                     int recordSize = meta.recordSize();\n-\n-                    if ( !pageCache.fileSystemSupportsFileOperations() )\n+if ( !pageCache.fileSystemSupportsFileOperations() )\n                     {\n                         // Read from paged file if mapping exists. Otherwise read through file system.\n                         // A file is mapped if it is a store, and we have a running database, which will be the case for\n@@ -202,7 +209,7 @@ public class StoreCopyServer\n                         long fileSize = fileSystem.getFileSize( file );\n                         doWrite( writer, temporaryBuffer, file, recordSize, fileChannel, fileSize,\n                                 storeCopyIdentifier, isLogFile );\n-                    }\n+    }\n                 }\n             }\n             finally\n@@ -220,10 +227,10 @@ public class StoreCopyServer\n \n     private void doWrite( StoreWriter writer, ByteBuffer temporaryBuffer, File file, int recordSize,\n             ReadableByteChannel fileChannel, long fileSize, String storeCopyIdentifier, boolean isLogFile ) throws IOException\n-    {\n+{\n         monitor.startStreamingStoreFile( file, storeCopyIdentifier );\n         String path = isLogFile ? file.getName() : relativePath( storeDirectory, file );\n         writer.write( path, fileChannel, temporaryBuffer, fileSize > 0, recordSize );\n         monitor.finishStreamingStoreFile( file, storeCopyIdentifier );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}