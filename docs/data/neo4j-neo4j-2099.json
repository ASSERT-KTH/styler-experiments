{
    "project_name": "neo4j-neo4j",
    "violation_id": "2099",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2099/HouseKeeper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2099/HouseKeeper.java\nindex efebdc4a3aa..2b67c256ac9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2099/HouseKeeper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2099/HouseKeeper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport.pipeline;\n \n import io.netty.channel.ChannelHandlerContext;\n@@ -33,22 +34,22 @@ public class HouseKeeper extends ChannelInboundHandlerAdapter\n     private final Log log;\n     private boolean failed;\n \n-    public HouseKeeper( BoltConnection connection, Log log )\n+    public HouseKeeper(BoltConnection connection, Log log)\n     {\n         this.connection = connection;\n         this.log = log;\n     }\n \n     @Override\n-    public void channelInactive( ChannelHandlerContext ctx )\n+    public void channelInactive(ChannelHandlerContext ctx)\n     {\n         connection.stop();\n     }\n \n     @Override\n-    public void exceptionCaught( ChannelHandlerContext ctx, Throwable cause )\n+    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause)\n     {\n-        if ( failed || isShuttingDown( ctx ) )\n+        if (failed || isShuttingDown(ctx))\n         {\n             return;\n         }\n@@ -59,22 +60,20 @@ public class HouseKeeper extends ChannelInboundHandlerAdapter\n             // Netty throws a NativeIoException on connection reset - directly importing that class\n             // caused a host of linking errors, because it depends on JNI to work. Hence, we just\n             // test on the message we know we'll get.\n-            if ( Exceptions.contains( cause, e -> e.getMessage().contains( \"Connection reset by peer\" ) ) )\n+            if (Exceptions.contains(cause, e -> e.getMessage().contains(\"Connection reset by peer\")))\n             {\n-                log.warn( \"Fatal error occurred when handling a client connection, \" + \"remote peer unexpectedly closed connection: %s\", ctx.channel() );\n-            }\n-            else\n+                log.warn(\"Fatal error occurred when handling a client connection, \" + \"remote peer unexpectedly closed connection: %s\", ctx.channel());\n+            } else\n             {\n-                log.error( \"Fatal error occurred when handling a client connection: \" + ctx.channel(), cause );\n+                log.error(\"Fatal error occurred when handling a client connection: \" + ctx.channel(), cause);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             ctx.close();\n         }\n     }\n \n-    private static boolean isShuttingDown( ChannelHandlerContext ctx )\n+    private static boolean isShuttingDown(ChannelHandlerContext ctx)\n     {\n         EventExecutorGroup eventLoopGroup = ctx.executor().parent();\n         return eventLoopGroup != null && eventLoopGroup.isShuttingDown();\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}