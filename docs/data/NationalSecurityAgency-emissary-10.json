{
    "project_name": "NationalSecurityAgency-emissary",
    "violation_id": "10",
    "information": {
        "violations": [
            {
                "line": "17",
                "column": "35",
                "severity": "warning",
                "message": "'}' at column 35 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "    private int lastPosition = -1;\n\n    public MultiKeywordScanner() {}\n\n    /**\n     * Case insensitive was never implemented",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/final/files-repaired/10/MultiKeywordScanner.java\nindex dee79e71775..279e8f232d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/final/files-repaired/10/MultiKeywordScanner.java\n@@ -14,7 +14,10 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     private String[] keywords;\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n+\n+    }\n+\n \n     /**\n      * Case insensitive was never implemented\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/checkstyle_idea/10/MultiKeywordScanner.java\nindex dee79e71775..52949267f87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/checkstyle_idea/10/MultiKeywordScanner.java\n@@ -14,7 +14,8 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     private String[] keywords;\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n+    }\n \n     /**\n      * Case insensitive was never implemented\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "19",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/naturalize/10/MultiKeywordScanner.java\nindex dee79e71775..8005a33cba4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/naturalize/10/MultiKeywordScanner.java\n@@ -14,7 +14,9 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     private String[] keywords;\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n+\n+}\n \n     /**\n      * Case insensitive was never implemented\n@@ -159,4 +161,4 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n \n         return hits;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "62",
                    "column": "24",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/codebuff/10/MultiKeywordScanner.java\nindex dee79e71775..e9cbba96829 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/codebuff/10/MultiKeywordScanner.java\n@@ -3,23 +3,33 @@ package emissary.util.search;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class MultiKeywordScanner implements IMultiKeywordScanner {\n \n     private static final Logger logger = LoggerFactory.getLogger(MultiKeywordScanner.class);\n \n     private byte[] data = null;\n+\n     private int[] skipTable = new int[256];\n+\n     private int standardSkip = 0;\n+\n     private BackwardsTreeScanner treeScanner;\n+\n     private String[] keywords;\n+\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n+\n+    }\n \n     /**\n      * Case insensitive was never implemented\n      */\n+\n     @Deprecated\n+\n     public MultiKeywordScanner(final boolean caseSensitive) {\n         if (!caseSensitive) {\n             logger.error(\"Case-insensitive MultiKeywordScanner is not implemented\");\n@@ -29,7 +39,6 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     @Override\n     public void loadKeywords(final String[] keywordsArg) {\n         this.keywords = keywordsArg;\n-\n         try {\n             if (null == this.treeScanner) {\n                 this.treeScanner = new BackwardsTreeScanner(keywordsArg);\n@@ -39,27 +48,27 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         } catch (Exception e) {\n             logger.error(\"Could not create BackwardsTreeScanner\", e);\n         }\n-\n         buildSkipTable();\n     }\n \n     private void buildSkipTable() {\n         final int numKeywords = this.keywords.length;\n-\n         for (int i = 0; i < numKeywords; i++) {\n             final byte[] keyword = this.keywords[i].getBytes();\n             final int keywordLength = keyword.length;\n             if (i == 0) {\n                 this.standardSkip = keywordLength;\n             } else if (this.standardSkip > keywordLength) {\n-                this.standardSkip = keywordLength;\n+                       this.standardSkip = keywordLength;\n             }\n         }\n \n+\n         for (int i = 0; i < 256; i++) {\n             this.skipTable[i] = this.standardSkip;\n         }\n \n+\n         for (int i = 0; i < numKeywords; i++) {\n             final byte[] keyword = this.keywords[i].getBytes();\n             final int keywordLength = keyword.length;\n@@ -77,6 +86,7 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return ((int) b) & 0xff;\n     }\n \n+\n     @Override\n     public HitList findAll(final byte[] dataArg) {\n         if (dataArg != null) {\n@@ -85,6 +95,7 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return new HitList();\n     }\n \n+\n     @Override\n     public HitList findAll(final byte[] dataArg, final int start) {\n         if (dataArg != null) {\n@@ -93,12 +104,12 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return new HitList();\n     }\n \n+\n     @Override\n     public HitList findAll(final byte[] dataArg, final int start, final int stop) {\n         this.data = dataArg;\n         int position;\n         final HitList hits = new HitList();\n-\n         for (position = start + this.standardSkip - 1; position < stop; position += this.skipTable[get256Value(dataArg[position])]) {\n             try {\n                 this.treeScanner.scan(dataArg, position, hits);\n@@ -107,12 +118,11 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n                 break;\n             }\n         }\n-\n         this.lastPosition = position;\n-\n         return hits;\n     }\n \n+\n     @Override\n     public HitList findNext() {\n         if (this.data != null) {\n@@ -121,6 +131,7 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return new HitList();\n     }\n \n+\n     @Override\n     public HitList findNext(final byte[] dataArg) {\n         if (dataArg != null) {\n@@ -129,6 +140,7 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return new HitList();\n     }\n \n+\n     @Override\n     public HitList findNext(final byte[] dataArg, final int start) {\n         if (dataArg != null) {\n@@ -137,12 +149,12 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n         return new HitList();\n     }\n \n+\n     @Override\n     public HitList findNext(final byte[] dataArg, final int start, final int stop) {\n         this.data = dataArg;\n         int position;\n         final HitList hits = new HitList();\n-\n         for (position = start + this.standardSkip - 1; position < stop; position += this.skipTable[get256Value(dataArg[position])]) {\n             try {\n                 this.treeScanner.scan(dataArg, position, hits);\n@@ -154,9 +166,7 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n                 break;\n             }\n         }\n-\n         this.lastPosition = position;\n-\n         return hits;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/random/files-repaired/10/MultiKeywordScanner.java\nindex dee79e71775..279e8f232d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/random/files-repaired/10/MultiKeywordScanner.java\n@@ -14,7 +14,10 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     private String[] keywords;\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n+\n+    }\n+\n \n     /**\n      * Case insensitive was never implemented\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "column": "5",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/three_grams/files-repaired/10/MultiKeywordScanner.java\nindex dee79e71775..6e7792fb761 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/violations/10/MultiKeywordScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-emissary/styler/05_predictions/three_grams/files-repaired/10/MultiKeywordScanner.java\n@@ -14,9 +14,9 @@ public class MultiKeywordScanner implements IMultiKeywordScanner {\n     private String[] keywords;\n     private int lastPosition = -1;\n \n-    public MultiKeywordScanner() {}\n+    public MultiKeywordScanner() {\n \n-    /**\n+    }/**\n      * Case insensitive was never implemented\n      */\n     @Deprecated\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}