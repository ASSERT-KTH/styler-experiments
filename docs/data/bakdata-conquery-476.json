{
    "project_name": "bakdata-conquery",
    "violation_id": "476",
    "information": {
        "violations": [
            {
                "line": "49",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\tif(token instanceof UsernamePasswordToken) {\n\t\t\t// Authenticate every token as the superuser\n\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n\t\t}\n\t\treturn null;\n\t}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "106",
                    "severity": "warning",
                    "message": "'}' at column 106 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/476/AllGrantedRealm.java\nindex 669453bd581..91e7a37b62e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/476/AllGrantedRealm.java\n@@ -46,8 +46,7 @@ public class AllGrantedRealm extends ConqueryRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\tif(token instanceof UsernamePasswordToken) {\n \t\t\t// Authenticate every token as the superuser\n-\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n-\t\t}\n+   return new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()),token .getCredentials());}\n \t\treturn null;\n \t}\n \t\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/476/AllGrantedRealm.java\nindex 669453bd581..3b3050a2221 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/476/AllGrantedRealm.java\n@@ -16,44 +16,44 @@ import org.apache.shiro.authc.UsernamePasswordToken;\n @Slf4j\n public class AllGrantedRealm extends ConqueryRealm {\n \n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\"\n-\t\t+ \"           \u00a7\u00a7\\n\"\n-\t\t+ \"          \u00a7  \u00a7\\n\"\n-\t\t+ \"         \u00a7    \u00a7\\n\"\n-\t\t+ \"        \u00a7      \u00a7\\n\"\n-\t\t+ \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n-\t\t+ \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n-\t\t+ \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n-\t\t+ \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n-\t\t+ \"   $                \u00a7\\n\"\n-\t\t+ \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n-\t\t+ \" \u00a7                    \u00a7\\n\"\n-\t\t+ \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\n-\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(AuthenticationToken.class);\n-\t}\n-\n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif(token instanceof UsernamePasswordToken) {\n-\t\t\t// Authenticate every token as the superuser\n-\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n-\t\t}\n-\t\treturn null;\n-\t}\n-\t\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\t// TODO Auto-generated method stub\n-\t\treturn new UsernamePasswordToken(DevAuthConfig.USER.getId().getEmail(), new char[]{});\n-\t}\n+    /**\n+     * The warning that is displayed, when the realm is instantiated.\n+     */\n+    private static final String WARNING = \"\\n\"\n+        + \"           \u00a7\u00a7\\n\"\n+        + \"          \u00a7  \u00a7\\n\"\n+        + \"         \u00a7    \u00a7\\n\"\n+        + \"        \u00a7      \u00a7\\n\"\n+        + \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n+        + \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n+        + \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n+        + \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n+        + \"   $                \u00a7\\n\"\n+        + \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n+        + \" \u00a7                    \u00a7\\n\"\n+        + \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+\n+\n+    /**\n+     * Standard constructor.\n+     */\n+    public AllGrantedRealm() {\n+        log.warn(WARNING);\n+        this.setAuthenticationTokenClass(AuthenticationToken.class);\n+    }\n+\n+    @Override\n+    protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+        if (token instanceof UsernamePasswordToken) {\n+            // Authenticate every token as the superuser\n+            return new SingleAuthenticationInfo(new UserId((String) token.getPrincipal()), token.getCredentials());\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public AuthenticationToken extractToken(ContainerRequestContext request) {\n+        // TODO Auto-generated method stub\n+        return new UsernamePasswordToken(DevAuthConfig.USER.getId().getEmail(), new char[] {});\n+    }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "23",
                    "column": "1",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 39.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/naturalize/476/AllGrantedRealm.java\nindex 669453bd581..aa10111931f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/naturalize/476/AllGrantedRealm.java\n@@ -20,7 +20,7 @@ public class AllGrantedRealm extends ConqueryRealm {\n \t * The warning that is displayed, when the realm is instantiated.\n \t */\n \tprivate static final String WARNING = \"\\n\"\n-\t\t+ \"           \u00a7\u00a7\\n\"\n++ \"           \u00a7\u00a7\\n\"\n \t\t+ \"          \u00a7  \u00a7\\n\"\n \t\t+ \"         \u00a7    \u00a7\\n\"\n \t\t+ \"        \u00a7      \u00a7\\n\"\n@@ -33,8 +33,7 @@ public class AllGrantedRealm extends ConqueryRealm {\n \t\t+ \" \u00a7                    \u00a7\\n\"\n \t\t+ \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n \n-\n-\t/**\n+/**\n \t * Standard constructor.\n \t */\n \tpublic AllGrantedRealm() {\n@@ -46,9 +45,11 @@ public class AllGrantedRealm extends ConqueryRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\tif(token instanceof UsernamePasswordToken) {\n \t\t\t// Authenticate every token as the superuser\n-\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n-\t\t}\n-\t\treturn null;\n+\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\n+\n+\n+\t}\n+return null;\n \t}\n \t\n \t@Override\n@@ -56,4 +57,4 @@ public class AllGrantedRealm extends ConqueryRealm {\n \t\t// TODO Auto-generated method stub\n \t\treturn new UsernamePasswordToken(DevAuthConfig.USER.getId().getEmail(), new char[]{});\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/476/AllGrantedRealm.java\nindex 669453bd581..7ccce66e7aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/476/AllGrantedRealm.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.models.auth;\n \n import javax.ws.rs.container.ContainerRequestContext;\n-\n import com.bakdata.conquery.models.auth.util.SingleAuthenticationInfo;\n import com.bakdata.conquery.models.identifiable.ids.specific.UserId;\n import lombok.extern.slf4j.Slf4j;\n@@ -13,47 +12,38 @@ import org.apache.shiro.authc.UsernamePasswordToken;\n /**\n  * This realm authenticates and authorizes all requests given to it positive.\n  */\n+\n @Slf4j\n public class AllGrantedRealm extends ConqueryRealm {\n \n-\t/**\n-\t * The warning that is displayed, when the realm is instantiated.\n-\t */\n-\tprivate static final String WARNING = \"\\n\"\n-\t\t+ \"           \u00a7\u00a7\\n\"\n-\t\t+ \"          \u00a7  \u00a7\\n\"\n-\t\t+ \"         \u00a7    \u00a7\\n\"\n-\t\t+ \"        \u00a7      \u00a7\\n\"\n-\t\t+ \"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"\n-\t\t+ \"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"\n-\t\t+ \"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"\n-\t\t+ \"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"\n-\t\t+ \"   $                \u00a7\\n\"\n-\t\t+ \"  \u00a7        \u00a7\u00a7        \u00a7\\n\"\n-\t\t+ \" \u00a7                    \u00a7\\n\"\n-\t\t+ \" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n-\n-\n-\t/**\n-\t * Standard constructor.\n-\t */\n-\tpublic AllGrantedRealm() {\n-\t\tlog.warn(WARNING);\n-\t\tthis.setAuthenticationTokenClass(AuthenticationToken.class);\n-\t}\n-\n-\t@Override\n-\tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n-\t\tif(token instanceof UsernamePasswordToken) {\n-\t\t\t// Authenticate every token as the superuser\n-\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n-\t\t}\n-\t\treturn null;\n-\t}\n-\t\n-\t@Override\n-\tpublic AuthenticationToken extractToken(ContainerRequestContext request) {\n-\t\t// TODO Auto-generated method stub\n-\t\treturn new UsernamePasswordToken(DevAuthConfig.USER.getId().getEmail(), new char[]{});\n-\t}\n-}\n+ /**\n+  * The warning that is displayed, when the realm is instantiated.\n+  */\n+\n+ private static final String WARNING = \"\\n\"+\"           \u00a7\u00a7\\n\"+\"          \u00a7  \u00a7\\n\"+\"         \u00a7    \u00a7\\n\"+\"        \u00a7      \u00a7\\n\"+\"       \u00a7  \u00a7\u00a7\u00a7\u00a7  \u00a7       You instantiated and are probably using a Shiro realm\\n\"+\"      \u00a7   \u00a7\u00a7\u00a7\u00a7   \u00a7      that does not do any permission checks or authentication.\\n\"+\"     \u00a7     \u00a7\u00a7     \u00a7     Access to all resources is granted to everyone.\\n\"+\"    \u00a7      \u00a7\u00a7      \u00a7    DO NOT USE THIS REALM IN PRODUCTION\\n\"+\"   $                \u00a7\\n\"+\"  \u00a7        \u00a7\u00a7        \u00a7\\n\"+\" \u00a7                    \u00a7\\n\"+\" \u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\u00a7\";\n+\n+\n+ /**\n+  * Standard constructor.\n+  */\n+\n+ public AllGrantedRealm() {\n+  log.warn(WARNING);\n+  this.setAuthenticationTokenClass(AuthenticationToken.class);\n+ }\n+\n+ @Override\n+ protected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n+  if (token instanceof UsernamePasswordToken) {\n+   // Authenticate every token as the superuser\n+   return new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\n+  }\n+  return null;\n+ }\n+\n+ @Override\n+ public AuthenticationToken extractToken(ContainerRequestContext request) {\n+  // TODO Auto-generated method stub\n+  return new UsernamePasswordToken(DevAuthConfig.USER.getId().getEmail(), new char[] {});\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "106",
                    "severity": "warning",
                    "message": "'}' at column 106 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/476/AllGrantedRealm.java\nindex 669453bd581..91e7a37b62e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/476/AllGrantedRealm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/476/AllGrantedRealm.java\n@@ -46,8 +46,7 @@ public class AllGrantedRealm extends ConqueryRealm {\n \tprotected AuthenticationInfo doGetAuthenticationInfo(AuthenticationToken token) throws AuthenticationException {\n \t\tif(token instanceof UsernamePasswordToken) {\n \t\t\t// Authenticate every token as the superuser\n-\t\t\treturn new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()), token.getCredentials());\t\t\n-\t\t}\n+   return new SingleAuthenticationInfo(new UserId((String)token.getPrincipal()),token .getCredentials());}\n \t\treturn null;\n \t}\n \t\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}