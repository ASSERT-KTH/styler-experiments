{
    "project_name": "wso2-attic-commons",
    "violation_id": "101",
    "information": {
        "violations": [
            {
                "line": "15",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import junit.framework.TestCase;\n\n/* Purpose\t:\tThis is a sample client to verify the handling of \"operationName\" annotation of WSO2 Mashup Server.\n * Author\t: \tYumani Ranaweera\n */\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/101/MashupOpNameTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/101/MashupOpNameTestCase.java\nindex b1c2f68bff7..05f24d7dbea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/101/MashupOpNameTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/101/MashupOpNameTestCase.java\n@@ -1,4 +1,5 @@\n package org.wso2.mashup.client;\r\n+\r\n import java.io.ByteArrayInputStream;\r\n \r\n import javax.xml.stream.XMLStreamException;\r\n@@ -18,32 +19,33 @@ import junit.framework.TestCase;\n \r\n public class MashupOpNameTestCase extends TestCase {\r\n \r\n-\tpublic final static String toEpr = \"http://localhost:7762/services/samples/operationName/\";\r\n-\tServiceClient sender;\r\n-\tpublic void setUp() throws Exception{\r\n-\t\tOptions options = new Options();\r\n-        options.setTo(new EndpointReference(toEpr));\r\n-        sender= new ServiceClient();\r\n-        sender.setOptions(options);\t\t\t\t\t\r\n-\t}\r\n-\r\n-\tpublic void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n-\t\tfinal String param = \"VAL\";\r\n-       \tString str = \"<\" + opName + \">\" +\r\n-                \"<param>\" + param + \"</param>\" +\r\n-                \"</\" + opName + \">\";\r\n-        StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n-        OMElement payload = staxOMBuilder.getDocumentElement();\r\n-        OMElement result = sender.sendReceive(payload);\r\n-        System.out.println(result.toString());\r\n-        \r\n-        assertTrue(result.toString().indexOf(\"VAL\")>0);\r\n-    }\r\n-\t\r\n-\tpublic void testEcho()throws AxisFault,XMLStreamException {\t\t\r\n-\t\ttestEcho(\"noOpName\");\r\n-\t\ttestEcho(\"GETVERSION\");\r\n-\t\ttestEcho(\"GET_VERSION\");\r\n-\t\t\r\n-\t}\r\n+  public final static String toEpr = \"http://localhost:7762/services/samples/operationName/\";\r\n+  ServiceClient sender;\r\n+\r\n+  public void setUp() throws Exception {\r\n+    Options options = new Options();\r\n+    options.setTo(new EndpointReference(toEpr));\r\n+    sender = new ServiceClient();\r\n+    sender.setOptions(options);\r\n+  }\r\n+\r\n+  public void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n+    final String param = \"VAL\";\r\n+    String str = \"<\" + opName + \">\" +\r\n+      \"<param>\" + param + \"</param>\" +\r\n+      \"</\" + opName + \">\";\r\n+    StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n+    OMElement payload = staxOMBuilder.getDocumentElement();\r\n+    OMElement result = sender.sendReceive(payload);\r\n+    System.out.println(result.toString());\r\n+\r\n+    assertTrue(result.toString().indexOf(\"VAL\") > 0);\r\n+  }\r\n+\r\n+  public void testEcho() throws AxisFault, XMLStreamException {\r\n+    testEcho(\"noOpName\");\r\n+    testEcho(\"GETVERSION\");\r\n+    testEcho(\"GET_VERSION\");\r\n+\r\n+  }\r\n }\r\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/101/MashupOpNameTestCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/101/MashupOpNameTestCase.java\nindex b1c2f68bff7..d587209b1b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/101/MashupOpNameTestCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/101/MashupOpNameTestCase.java\n@@ -21,13 +21,13 @@ public class MashupOpNameTestCase extends TestCase {\n \tpublic final static String toEpr = \"http://localhost:7762/services/samples/operationName/\";\r\n \tServiceClient sender;\r\n \tpublic void setUp() throws Exception{\r\n-\t\tOptions options = new Options();\r\n-        options.setTo(new EndpointReference(toEpr));\r\n-        sender= new ServiceClient();\r\n-        sender.setOptions(options);\t\t\t\t\t\r\n-\t}\r\n-\r\n-\tpublic void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n+\t\tOptions options = new Options();\n+options.setTo(new EndpointReference(toEpr));\r\n+        sender = new ServiceClient();\r\n+        sender.setOptions(options);\n+    }\n+\n+public void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n \t\tfinal String param = \"VAL\";\r\n        \tString str = \"<\" + opName + \">\" +\r\n                 \"<param>\" + param + \"</param>\" +\r\n@@ -38,12 +38,12 @@ public class MashupOpNameTestCase extends TestCase {\n         System.out.println(result.toString());\r\n         \r\n         assertTrue(result.toString().indexOf(\"VAL\")>0);\r\n-    }\r\n-\t\r\n-\tpublic void testEcho()throws AxisFault,XMLStreamException {\t\t\r\n-\t\ttestEcho(\"noOpName\");\r\n+    }\n+\n+public void testEcho()throws AxisFault, XMLStreamException {\n+    testEcho(\"noOpName\");\r\n \t\ttestEcho(\"GETVERSION\");\r\n \t\ttestEcho(\"GET_VERSION\");\r\n \t\t\r\n \t}\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}