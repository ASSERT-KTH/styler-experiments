{
    "project_name": "neo4j-neo4j",
    "violation_id": "2699",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2699/QueryEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2699/QueryEngineProvider.java\nindex 6e556c1a107..98c9f61cb00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2699/QueryEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2699/QueryEngineProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import org.neo4j.collection.Dependencies;\n@@ -30,25 +31,25 @@ import org.neo4j.scheduler.JobScheduler;\n \n public abstract class QueryEngineProvider\n {\n-    protected abstract QueryExecutionEngine createEngine( Dependencies deps,\n-                                                          GraphDatabaseAPI graphAPI,\n-                                                          boolean isSystemDatabase,\n-                                                          SPI spi );\n+    protected abstract QueryExecutionEngine createEngine(Dependencies deps,\n+                                                         GraphDatabaseAPI graphAPI,\n+                                                         boolean isSystemDatabase,\n+                                                         SPI spi);\n \n     protected abstract int enginePriority();\n \n-    public static QueryExecutionEngine initialize( Dependencies deps,\n-                                                   GraphDatabaseAPI graphAPI,\n-                                                   QueryEngineProvider provider,\n-                                                   boolean isSystemDatabase,\n-                                                   SPI spi )\n+    public static QueryExecutionEngine initialize(Dependencies deps,\n+                                                  GraphDatabaseAPI graphAPI,\n+                                                  QueryEngineProvider provider,\n+                                                  boolean isSystemDatabase,\n+                                                  SPI spi)\n     {\n-        if ( provider == null )\n+        if (provider == null)\n         {\n             return noEngine();\n         }\n-        QueryExecutionEngine engine = provider.createEngine( deps, graphAPI, isSystemDatabase, spi );\n-        return deps.satisfyDependency( engine );\n+        QueryExecutionEngine engine = provider.createEngine(deps, graphAPI, isSystemDatabase, spi);\n+        return deps.satisfyDependency(engine);\n     }\n \n     public static QueryExecutionEngine noEngine()\n@@ -71,12 +72,12 @@ public abstract class QueryEngineProvider\n         Config config();\n     }\n \n-    public static SPI spi( LogProvider logProvider,\n-                           Monitors monitors,\n-                           JobScheduler jobScheduler,\n-                           LifeSupport lifeSupport,\n-                           Kernel kernel,\n-                           Config config )\n+    public static SPI spi(LogProvider logProvider,\n+                          Monitors monitors,\n+                          JobScheduler jobScheduler,\n+                          LifeSupport lifeSupport,\n+                          Kernel kernel,\n+                          Config config)\n     {\n         return new SPI()\n         {\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}