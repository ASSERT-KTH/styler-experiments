{
    "project_name": "Angel-ML-angel",
    "violation_id": "894",
    "information": {
        "violations": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 112).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Sparse double matrix that is represented by a group of sparse double vector {@link SparseLongKeyDoubleVector}\n */\npublic class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKeyDoubleVector> {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/894/SparseDoubleLongKeyMatrix.java\nindex 7d962209662..efcb92d790e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/894/SparseDoubleLongKeyMatrix.java\n@@ -24,24 +24,26 @@ import com.tencent.angel.ml.math.vector.SparseLongKeyDoubleVector;\n  */\n public class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKeyDoubleVector> {\n \n-  /**\n-   * Create a SparseDoubleLongKeyMatrix\n-   * @param row row number\n-   * @param col row vector dimension\n-   */\n-  public SparseDoubleLongKeyMatrix(int row, long col) {\n-    super(row, col, new SparseLongKeyDoubleVector[row]);\n-  }\n+    /**\n+     * Create a SparseDoubleLongKeyMatrix\n+     *\n+     * @param row row number\n+     * @param col row vector dimension\n+     */\n+    public SparseDoubleLongKeyMatrix(int row, long col) {\n+        super(row, col, new SparseLongKeyDoubleVector[row]);\n+    }\n \n-  public SparseDoubleLongKeyMatrix(int row, long col, SparseLongKeyDoubleVector[] vectors) {\n-    super(row, col, vectors);\n-  }\n+    public SparseDoubleLongKeyMatrix(int row, long col, SparseLongKeyDoubleVector[] vectors) {\n+        super(row, col, vectors);\n+    }\n \n-  @Override public SparseLongKeyDoubleVector initVector(int rowIndex) {\n-    SparseLongKeyDoubleVector ret = new SparseLongKeyDoubleVector(col);\n-    ret.setMatrixId(matrixId);\n-    ret.setRowId(rowIndex);\n-    return ret;\n-  }\n+    @Override\n+    public SparseLongKeyDoubleVector initVector(int rowIndex) {\n+        SparseLongKeyDoubleVector ret = new SparseLongKeyDoubleVector(col);\n+        ret.setMatrixId(matrixId);\n+        ret.setRowId(rowIndex);\n+        return ret;\n+    }\n \n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/894/SparseDoubleLongKeyMatrix.java\nindex 7d962209662..6496dbb50b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/894/SparseDoubleLongKeyMatrix.java\n@@ -37,11 +37,12 @@ public class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKey\n     super(row, col, vectors);\n   }\n \n-  @Override public SparseLongKeyDoubleVector initVector(int rowIndex) {\n+  @Override\n+public SparseLongKeyDoubleVector initVector(int rowIndex) {\n     SparseLongKeyDoubleVector ret = new SparseLongKeyDoubleVector(col);\n     ret.setMatrixId(matrixId);\n     ret.setRowId(rowIndex);\n     return ret;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/894/SparseDoubleLongKeyMatrix.java\nindex 7d962209662..6b47c0838e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/894/SparseDoubleLongKeyMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/894/SparseDoubleLongKeyMatrix.java\n@@ -22,6 +22,7 @@ import com.tencent.angel.ml.math.vector.SparseLongKeyDoubleVector;\n /**\n  * Sparse double matrix that is represented by a group of sparse double vector {@link SparseLongKeyDoubleVector}\n  */\n+\n public class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKeyDoubleVector> {\n \n   /**\n@@ -29,6 +30,7 @@ public class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKey\n    * @param row row number\n    * @param col row vector dimension\n    */\n+\n   public SparseDoubleLongKeyMatrix(int row, long col) {\n     super(row, col, new SparseLongKeyDoubleVector[row]);\n   }\n@@ -37,11 +39,12 @@ public class SparseDoubleLongKeyMatrix extends DoubleLongKeyMatrix<SparseLongKey\n     super(row, col, vectors);\n   }\n \n-  @Override public SparseLongKeyDoubleVector initVector(int rowIndex) {\n+  @Override\n+  public SparseLongKeyDoubleVector initVector(int rowIndex) {\n     SparseLongKeyDoubleVector ret = new SparseLongKeyDoubleVector(col);\n     ret.setMatrixId(matrixId);\n     ret.setRowId(rowIndex);\n     return ret;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}