{
    "project_name": "Angel-ML-angel",
    "violation_id": "117",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/117/SplitType.java\nindex 3bf2b83515e..096c0a736e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/117/SplitType.java\n@@ -21,17 +21,17 @@ import java.io.Serializable;\n \n // different types of tree node splits, enumerated by their complexity\n public enum SplitType implements Serializable {\n-  SPLIT_POINT(\"SPLIT_POINT\"),\n-  SPLIT_SET(\"SPLIT_SET\");\n+    SPLIT_POINT(\"SPLIT_POINT\"),\n+    SPLIT_SET(\"SPLIT_SET\");\n \n-  private final String type;\n+    private final String type;\n \n-  SplitType(String type) {\n-    this.type = type;\n-  }\n+    SplitType(String type) {\n+        this.type = type;\n+    }\n \n-  @Override\n-  public String toString() {\n-    return type;\n-  }\n+    @Override\n+    public String toString() {\n+        return type;\n+    }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/117/SplitType.java\nindex 3bf2b83515e..f80e4bc42b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/117/SplitType.java\n@@ -34,4 +34,4 @@ public enum SplitType implements Serializable {\n   public String toString() {\n     return type;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/117/SplitType.java\nindex 3bf2b83515e..ff192d782b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/117/SplitType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/117/SplitType.java\n@@ -20,18 +20,17 @@ package com.tencent.angel.spark.ml.tree.tree.split;\n import java.io.Serializable;\n \n // different types of tree node splits, enumerated by their complexity\n-public enum SplitType implements Serializable {\n-  SPLIT_POINT(\"SPLIT_POINT\"),\n-  SPLIT_SET(\"SPLIT_SET\");\n \n-  private final String type;\n+public enum SplitType implements Serializable {SPLIT_POINT(\"SPLIT_POINT\"), SPLIT_SET(\"SPLIT_SET\");\n+                                                private final String type;\n \n-  SplitType(String type) {\n-    this.type = type;\n-  }\n+                                                SplitType(String type) {\n+                                                  this.type = type;\n+                                                }\n \n-  @Override\n-  public String toString() {\n-    return type;\n-  }\n-}\n+                                                @Override\n+                                                public String toString() {\n+                                                  return type;\n+                                                }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}