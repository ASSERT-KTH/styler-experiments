{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "960",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.entity;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/960/OutboundDocQueryOrchestratable_a1.java\nindex 8ab126fc7d5..a726b2d8d00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/960/OutboundDocQueryOrchestratable_a1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/960/OutboundDocQueryOrchestratable_a1.java\nindex 8ab126fc7d5..0cccba912ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/960/OutboundDocQueryOrchestratable_a1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -42,54 +43,55 @@ import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryResponse;\n  */\n // CHECKSTYLE:OFF\n public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestratable {\n-    // CHECKSTYLE:ON\n+  // CHECKSTYLE:ON\n \n-    private AdhocQueryResponse cumulativeResponse = null;\n+  private AdhocQueryResponse cumulativeResponse = null;\n \n-    /**\n-     * Constructor overrides OutboundDocQueryOrchestratable.\n-     */\n-    public OutboundDocQueryOrchestratable_a1() {\n-        super();\n-    }\n+  /**\n+   * Constructor overrides OutboundDocQueryOrchestratable.\n+   */\n+  public OutboundDocQueryOrchestratable_a1() {\n+    super();\n+  }\n \n-    /**\n-     * Override SuperClass Constructor.\n-     *\n-     * @param d Delegate.\n-     * @param pt PolicyTransformer.\n-     * @param a assertion.\n-     * @param name serviceName.\n-     * @param t target.\n-     * @param req AdhocQUery Request.\n-     */\n-    // CHECKSTYLE:OFF\n-    public OutboundDocQueryOrchestratable_a1(OutboundDelegate d, PolicyTransformer pt,\n-        AssertionType a, String name, NhinTargetSystemType t, AdhocQueryRequest req) {\n-        // CHECKSTYLE:ON\n-        super(d, pt, a, name, t, req);\n-    }\n+  /**\n+   * Override SuperClass Constructor.\n+   *\n+   * @param d    Delegate.\n+   * @param pt   PolicyTransformer.\n+   * @param a    assertion.\n+   * @param name serviceName.\n+   * @param t    target.\n+   * @param req  AdhocQUery Request.\n+   */\n+  // CHECKSTYLE:OFF\n+  public OutboundDocQueryOrchestratable_a1(OutboundDelegate d, PolicyTransformer pt,\n+                                           AssertionType a, String name, NhinTargetSystemType t,\n+                                           AdhocQueryRequest req) {\n+    // CHECKSTYLE:ON\n+    super(d, pt, a, name, t, req);\n+  }\n \n-    // OutboundDocQueryOrchestratable objects are run by the nhin delegate\n-    // so we should override this and return null so that you can't get a circular reference\n-    // by accident\n-    @Override\n-    public OutboundDelegate getDelegate() {\n-        return null;\n-    }\n+  // OutboundDocQueryOrchestratable objects are run by the nhin delegate\n+  // so we should override this and return null so that you can't get a circular reference\n+  // by accident\n+  @Override\n+  public OutboundDelegate getDelegate() {\n+    return null;\n+  }\n \n-    /**\n-     * @return AdhocQueryResponse which is cumulativeResponse.\n-     */\n-    public AdhocQueryResponse getCumulativeResponse() {\n-        return cumulativeResponse;\n-    }\n+  /**\n+   * @return AdhocQueryResponse which is cumulativeResponse.\n+   */\n+  public AdhocQueryResponse getCumulativeResponse() {\n+    return cumulativeResponse;\n+  }\n \n-    /**\n-     * @param r cumulativeResponse passed.\n-     */\n-    public void setCumulativeResponse(AdhocQueryResponse r) {\n-        cumulativeResponse = r;\n-    }\n+  /**\n+   * @param r cumulativeResponse passed.\n+   */\n+  public void setCumulativeResponse(AdhocQueryResponse r) {\n+    cumulativeResponse = r;\n+  }\n \n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/960/OutboundDocQueryOrchestratable_a1.java\nindex 8ab126fc7d5..3c51dddbd0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/960/OutboundDocQueryOrchestratable_a1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -92,4 +93,4 @@ public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestra\n         cumulativeResponse = r;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/960/OutboundDocQueryOrchestratable_a1.java\nindex 8ab126fc7d5..e9168302d2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/960/OutboundDocQueryOrchestratable_a1.java\n@@ -41,7 +41,10 @@ import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryResponse;\n  * @author paul.eftis\n  */\n // CHECKSTYLE:OFF\n-public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestratable {\n+\n+\n+public class OutboundDocQueryOrchestratable_a1 extends\n+    OutboundDocQueryOrchestratable {\n     // CHECKSTYLE:ON\n \n     private AdhocQueryResponse cumulativeResponse = null;\n@@ -49,8 +52,9 @@ public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestra\n     /**\n      * Constructor overrides OutboundDocQueryOrchestratable.\n      */\n+\n     public OutboundDocQueryOrchestratable_a1() {\n-        super();\n+                                               super();\n     }\n \n     /**\n@@ -64,15 +68,22 @@ public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestra\n      * @param req AdhocQUery Request.\n      */\n     // CHECKSTYLE:OFF\n-    public OutboundDocQueryOrchestratable_a1(OutboundDelegate d, PolicyTransformer pt,\n-        AssertionType a, String name, NhinTargetSystemType t, AdhocQueryRequest req) {\n+\n+\n+    public OutboundDocQueryOrchestratable_a1(OutboundDelegate d,\n+        PolicyTransformer pt,\n+        AssertionType a,\n+        String name,\n+        NhinTargetSystemType t, AdhocQueryRequest req) {\n         // CHECKSTYLE:ON\n-        super(d, pt, a, name, t, req);\n+                                                       super(d, pt, a, name, t, req);\n     }\n \n     // OutboundDocQueryOrchestratable objects are run by the nhin delegate\n     // so we should override this and return null so that you can't get a circular reference\n     // by accident\n+\n+\n     @Override\n     public OutboundDelegate getDelegate() {\n         return null;\n@@ -81,6 +92,8 @@ public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestra\n     /**\n      * @return AdhocQueryResponse which is cumulativeResponse.\n      */\n+\n+\n     public AdhocQueryResponse getCumulativeResponse() {\n         return cumulativeResponse;\n     }\n@@ -88,8 +101,10 @@ public class OutboundDocQueryOrchestratable_a1 extends OutboundDocQueryOrchestra\n     /**\n      * @param r cumulativeResponse passed.\n      */\n+\n+\n     public void setCumulativeResponse(AdhocQueryResponse r) {\n         cumulativeResponse = r;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/960/OutboundDocQueryOrchestratable_a1.java\nindex 8ab126fc7d5..a726b2d8d00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/960/OutboundDocQueryOrchestratable_a1.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/960/OutboundDocQueryOrchestratable_a1.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}