{
    "project_name": "Angel-ML-angel",
    "violation_id": "994",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/994/BaseTaskInterface.java\nindex 37c36215a22..7a535daf95c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/994/BaseTaskInterface.java\n@@ -24,30 +24,29 @@ import com.tencent.angel.exception.AngelException;\n  * @param <KEYIN>    the key type\n  * @param <VALUEIN>  the value type\n  * @param <VALUEOUT> the parsed value type\n- *\n  */\n public interface BaseTaskInterface<KEYIN, VALUEIN, VALUEOUT> {\n-  /**\n-   * Parse valueout.\n-   *\n-   * @param key   the key\n-   * @param value the value\n-   * @return the valueout\n-   */\n-  VALUEOUT parse(KEYIN key, VALUEIN value);\n+    /**\n+     * Parse valueout.\n+     *\n+     * @param key   the key\n+     * @param value the value\n+     * @return the valueout\n+     */\n+    VALUEOUT parse(KEYIN key, VALUEIN value);\n \n-  /**\n-   * Pre process.\n-   *\n-   * @param taskContext the task context\n-   */\n-  void preProcess(TaskContext taskContext);\n+    /**\n+     * Pre process.\n+     *\n+     * @param taskContext the task context\n+     */\n+    void preProcess(TaskContext taskContext);\n \n-  /**\n-   * Run.\n-   *\n-   * @param taskContext the task context\n-   * @throws Exception\n-   */\n-  void run(TaskContext taskContext) throws AngelException;\n+    /**\n+     * Run.\n+     *\n+     * @param taskContext the task context\n+     * @throws Exception\n+     */\n+    void run(TaskContext taskContext) throws AngelException;\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/994/BaseTaskInterface.java\nindex 37c36215a22..f5743e41a05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/994/BaseTaskInterface.java\n@@ -50,4 +50,4 @@ public interface BaseTaskInterface<KEYIN, VALUEIN, VALUEOUT> {\n    * @throws Exception\n    */\n   void run(TaskContext taskContext) throws AngelException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/994/BaseTaskInterface.java\nindex 37c36215a22..a11b6445d5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/994/BaseTaskInterface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/994/BaseTaskInterface.java\n@@ -26,6 +26,8 @@ import com.tencent.angel.exception.AngelException;\n  * @param <VALUEOUT> the parsed value type\n  *\n  */\n+\n+\n public interface BaseTaskInterface<KEYIN, VALUEIN, VALUEOUT> {\n   /**\n    * Parse valueout.\n@@ -41,6 +43,8 @@ public interface BaseTaskInterface<KEYIN, VALUEIN, VALUEOUT> {\n    *\n    * @param taskContext the task context\n    */\n+\n+\n   void preProcess(TaskContext taskContext);\n \n   /**\n@@ -49,5 +53,7 @@ public interface BaseTaskInterface<KEYIN, VALUEIN, VALUEOUT> {\n    * @param taskContext the task context\n    * @throws Exception\n    */\n+\n+\n   void run(TaskContext taskContext) throws AngelException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}