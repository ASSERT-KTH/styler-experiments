{
    "project_name": "Activiti-Activiti",
    "violation_id": "614",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.connector;\n\nimport org.activiti.api.process.model.IntegrationContext;\nimport org.activiti.api.process.runtime.connector.Connector;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/614/DefaultServiceTaskBehavior.java\nindex c4254d64082..09061b0cf62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/614/DefaultServiceTaskBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import org.activiti.api.process.model.IntegrationContext;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/614/DefaultServiceTaskBehavior.java\nindex c4254d64082..7e0c6e6e8b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/614/DefaultServiceTaskBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import org.activiti.api.process.model.IntegrationContext;\n@@ -49,7 +50,7 @@ public class DefaultServiceTaskBehavior extends AbstractBpmnActivityBehavior {\n         IntegrationContext integrationContext = connector.apply(integrationContextBuilder.from(execution));\n \n         execution.setVariables(outboundVariablesProvider.calculateOutPutVariables(buildMappingExecutionContext(execution),\n-                                                                                  integrationContext.getOutBoundVariables()));\n+                integrationContext.getOutBoundVariables()));\n \n         leave(execution);\n     }\n@@ -60,7 +61,7 @@ public class DefaultServiceTaskBehavior extends AbstractBpmnActivityBehavior {\n \n     private Connector getConnector(String implementation) {\n         return applicationContext.getBean(implementation,\n-                                          Connector.class);\n+                Connector.class);\n     }\n \n     private String getServiceTaskImplementation(DelegateExecution execution) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/614/DefaultServiceTaskBehavior.java\nindex c4254d64082..7046810aef4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/614/DefaultServiceTaskBehavior.java\n@@ -27,48 +27,46 @@ import static org.activiti.runtime.api.impl.MappingExecutionContext.buildMapping\n \n public class DefaultServiceTaskBehavior extends AbstractBpmnActivityBehavior {\n \n-    private final ApplicationContext applicationContext;\n-    private final IntegrationContextBuilder integrationContextBuilder;\n-    private VariablesMappingProvider outboundVariablesProvider;\n+  private final ApplicationContext applicationContext;\n \n-    public DefaultServiceTaskBehavior(ApplicationContext applicationContext,\n-                                      IntegrationContextBuilder integrationContextBuilder,\n-                                      VariablesMappingProvider outboundVariablesProvider) {\n-        this.applicationContext = applicationContext;\n-        this.integrationContextBuilder = integrationContextBuilder;\n-        this.outboundVariablesProvider = outboundVariablesProvider;\n-    }\n+  private final IntegrationContextBuilder integrationContextBuilder;\n+\n+  private VariablesMappingProvider outboundVariablesProvider;\n+\n+  public DefaultServiceTaskBehavior(ApplicationContext applicationContext,\n+                                    IntegrationContextBuilder integrationContextBuilder, VariablesMappingProvider outboundVariablesProvider) {\n+    this.applicationContext = applicationContext;\n+    this.integrationContextBuilder = integrationContextBuilder;\n+    this.outboundVariablesProvider = outboundVariablesProvider;\n+  }\n \n     /**\n      * We have two different implementation strategy that can be executed\n      * in according if we have a connector action definition match or not.\n      **/\n-    @Override\n-    public void execute(DelegateExecution execution) {\n-        Connector connector = getConnector(getImplementation(execution));\n-        IntegrationContext integrationContext = connector.apply(integrationContextBuilder.from(execution));\n-\n-        execution.setVariables(outboundVariablesProvider.calculateOutPutVariables(buildMappingExecutionContext(execution),\n-                                                                                  integrationContext.getOutBoundVariables()));\n \n-        leave(execution);\n-    }\n+  @Override\n+  public void execute(DelegateExecution execution) {\n+    Connector connector = getConnector(getImplementation(execution));\n+    IntegrationContext integrationContext = connector.apply(integrationContextBuilder.from(execution));\n+    execution.setVariables(outboundVariablesProvider.calculateOutPutVariables(buildMappingExecutionContext(execution), integrationContext.getOutBoundVariables()));\n+    leave(execution);\n+  }\n \n-    private String getImplementation(DelegateExecution execution) {\n-        return ((ServiceTask) execution.getCurrentFlowElement()).getImplementation();\n-    }\n+  private String getImplementation(DelegateExecution execution) {\n+    return ((ServiceTask) execution.getCurrentFlowElement()).getImplementation();\n+  }\n \n-    private Connector getConnector(String implementation) {\n-        return applicationContext.getBean(implementation,\n-                                          Connector.class);\n-    }\n+  private Connector getConnector(String implementation) {\n+    return applicationContext.getBean(implementation, Connector.class);\n+  }\n \n-    private String getServiceTaskImplementation(DelegateExecution execution) {\n-        return ((ServiceTask) execution.getCurrentFlowElement()).getImplementation();\n-    }\n+  private String getServiceTaskImplementation(DelegateExecution execution) {\n+    return ((ServiceTask) execution.getCurrentFlowElement()).getImplementation();\n+  }\n \n-    public boolean hasConnectorBean(DelegateExecution execution) {\n-        String implementation = getServiceTaskImplementation(execution);\n-        return applicationContext.containsBean(implementation) && applicationContext.getBean(implementation) instanceof Connector;\n-    }\n-}\n+  public boolean hasConnectorBean(DelegateExecution execution) {\n+    String implementation = getServiceTaskImplementation(execution);\n+    return applicationContext.containsBean(implementation) && applicationContext.getBean(implementation) instanceof Connector;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/614/DefaultServiceTaskBehavior.java\nindex c4254d64082..09061b0cf62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/614/DefaultServiceTaskBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import org.activiti.api.process.model.IntegrationContext;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/614/DefaultServiceTaskBehavior.java\nindex c4254d64082..09061b0cf62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/614/DefaultServiceTaskBehavior.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/614/DefaultServiceTaskBehavior.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.connector;\n \n import org.activiti.api.process.model.IntegrationContext;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}