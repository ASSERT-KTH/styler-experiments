{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1261",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1261/MajorityIncludingSelfQuorum.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1261/MajorityIncludingSelfQuorum.java\nindex c26c786b0ac..dab6f9f6c83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1261/MajorityIncludingSelfQuorum.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1261/MajorityIncludingSelfQuorum.java\n@@ -17,31 +17,32 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus;\n \n import java.util.Collection;\n \n public class MajorityIncludingSelfQuorum\n {\n-    private static final int MIN_QUORUM = 2;\n+  private static final int MIN_QUORUM = 2;\n \n-    private MajorityIncludingSelfQuorum()\n-    {\n-    }\n+  private MajorityIncludingSelfQuorum()\n+  {\n+  }\n \n-    public static boolean isQuorum( Collection<?> cluster, Collection<?> countNotIncludingMyself )\n-    {\n-        return isQuorum( cluster.size(), countNotIncludingMyself.size() );\n-    }\n+  public static boolean isQuorum(Collection<?> cluster, Collection<?> countNotIncludingMyself)\n+  {\n+    return isQuorum(cluster.size(), countNotIncludingMyself.size());\n+  }\n \n-    public static boolean isQuorum( int clusterSize, int countNotIncludingSelf )\n-    {\n-        return isQuorum( MIN_QUORUM, clusterSize, countNotIncludingSelf );\n-    }\n+  public static boolean isQuorum(int clusterSize, int countNotIncludingSelf)\n+  {\n+    return isQuorum(MIN_QUORUM, clusterSize, countNotIncludingSelf);\n+  }\n \n-    public static boolean isQuorum( int minQuorum, int clusterSize, int countNotIncludingSelf )\n-    {\n-        return (countNotIncludingSelf + 1) >= minQuorum &&\n-                countNotIncludingSelf >= clusterSize / 2;\n-    }\n+  public static boolean isQuorum(int minQuorum, int clusterSize, int countNotIncludingSelf)\n+  {\n+    return (countNotIncludingSelf + 1) >= minQuorum &&\n+        countNotIncludingSelf >= clusterSize / 2;\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1261/MajorityIncludingSelfQuorum.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1261/MajorityIncludingSelfQuorum.java\nindex c26c786b0ac..e44283b077f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1261/MajorityIncludingSelfQuorum.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1261/MajorityIncludingSelfQuorum.java\n@@ -41,7 +41,7 @@ public class MajorityIncludingSelfQuorum\n \n     public static boolean isQuorum( int minQuorum, int clusterSize, int countNotIncludingSelf )\n     {\n-        return (countNotIncludingSelf + 1) >= minQuorum &&\n+        return (countNotIncludingSelf + 1 ) >= minQuorum &&\n                 countNotIncludingSelf >= clusterSize / 2;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}