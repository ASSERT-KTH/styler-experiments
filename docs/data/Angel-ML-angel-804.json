{
    "project_name": "Angel-ML-angel",
    "violation_id": "804",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/804/AdjustParam.java\nindex 4c86b1cd3ab..71cbac1c8d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/804/AdjustParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.psf.embedding.line;\n \n import com.tencent.angel.PartitionKey;\n@@ -27,43 +28,44 @@ import java.util.List;\n \n public class AdjustParam extends UpdateParam {\n \n-  private byte[] dataBuf;\n-  private int bufLength;\n+    private byte[] dataBuf;\n+    private int bufLength;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n-                     int negative,\n-                     int partitionId,\n-                     float[] gradient,\n-                     int[] src,\n-                     int[] dst) {\n-    super(matrixId);\n-    this.bufLength = 12 + src.length * 8 + gradient.length * 4;\n-    this.dataBuf = new byte[bufLength];\n-    ByteBuffer wrapper = ByteBuffer.wrap(this.dataBuf);\n-    wrapper.putInt(seed);\n-    wrapper.putInt(partitionId);\n-    wrapper.putInt(src.length);\n-    int inc = 0;\n-    for (int a = 0; a < src.length; a++) {\n-      wrapper.putInt(src[a]);\n-      wrapper.putInt(dst[a]);\n-      for (int b = 0; b < negative + 1; b++) {\n-        wrapper.putFloat(gradient[inc++]);\n-      }\n+    public AdjustParam(int matrixId,\n+                       int seed,\n+                       int negative,\n+                       int partitionId,\n+                       float[] gradient,\n+                       int[] src,\n+                       int[] dst) {\n+        super(matrixId);\n+        this.bufLength = 12 + src.length * 8 + gradient.length * 4;\n+        this.dataBuf = new byte[bufLength];\n+        ByteBuffer wrapper = ByteBuffer.wrap(this.dataBuf);\n+        wrapper.putInt(seed);\n+        wrapper.putInt(partitionId);\n+        wrapper.putInt(src.length);\n+        int inc = 0;\n+        for (int a = 0; a < src.length; a++) {\n+            wrapper.putInt(src[a]);\n+            wrapper.putInt(dst[a]);\n+            for (int b = 0; b < negative + 1; b++) {\n+                wrapper.putFloat(gradient[inc++]);\n+            }\n+        }\n     }\n-  }\n \n-  @Override\n-  public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-        .getPartitions(matrixId);\n-    List<PartitionUpdateParam> params = new ArrayList<>();\n-    for (PartitionKey pkey : pkeys) {\n-      AdjustPartitionParam partParam = new AdjustPartitionParam(matrixId, pkey, dataBuf, bufLength);\n-      params.add(partParam);\n+    @Override\n+    public List<PartitionUpdateParam> split() {\n+        List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n+                .getPartitions(matrixId);\n+        List<PartitionUpdateParam> params = new ArrayList<>();\n+        for (PartitionKey pkey : pkeys) {\n+            AdjustPartitionParam partParam =\n+                    new AdjustPartitionParam(matrixId, pkey, dataBuf, bufLength);\n+            params.add(partParam);\n+        }\n+        return params;\n     }\n-    return params;\n-  }\n }\n \n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/804/AdjustParam.java\nindex 4c86b1cd3ab..29ccfdcf462 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/804/AdjustParam.java\n@@ -30,14 +30,12 @@ public class AdjustParam extends UpdateParam {\n   private byte[] dataBuf;\n   private int bufLength;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n+  public AdjustParam(int matrixId, int seed,\n                      int negative,\n-                     int partitionId,\n-                     float[] gradient,\n+                     int partitionId, float[] gradient,\n                      int[] src,\n                      int[] dst) {\n-    super(matrixId);\n+  super(matrixId);\n     this.bufLength = 12 + src.length * 8 + gradient.length * 4;\n     this.dataBuf = new byte[bufLength];\n     ByteBuffer wrapper = ByteBuffer.wrap(this.dataBuf);\n@@ -58,12 +56,11 @@ public class AdjustParam extends UpdateParam {\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n         .getPartitions(matrixId);\n-    List<PartitionUpdateParam> params = new ArrayList<>();\n+List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n       AdjustPartitionParam partParam = new AdjustPartitionParam(matrixId, pkey, dataBuf, bufLength);\n       params.add(partParam);\n     }\n     return params;\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/804/AdjustParam.java\nindex 4c86b1cd3ab..540929e4536 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/804/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/804/AdjustParam.java\n@@ -20,7 +20,6 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.nio.ByteBuffer;\n import java.util.ArrayList;\n import java.util.List;\n@@ -30,13 +29,7 @@ public class AdjustParam extends UpdateParam {\n   private byte[] dataBuf;\n   private int bufLength;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n-                     int negative,\n-                     int partitionId,\n-                     float[] gradient,\n-                     int[] src,\n-                     int[] dst) {\n+  public AdjustParam(int matrixId, int seed, int negative, int partitionId, float[] gradient, int[] src, int[] dst) {\n     super(matrixId);\n     this.bufLength = 12 + src.length * 8 + gradient.length * 4;\n     this.dataBuf = new byte[bufLength];\n@@ -44,6 +37,7 @@ public class AdjustParam extends UpdateParam {\n     wrapper.putInt(seed);\n     wrapper.putInt(partitionId);\n     wrapper.putInt(src.length);\n+\n     int inc = 0;\n     for (int a = 0; a < src.length; a++) {\n       wrapper.putInt(src[a]);\n@@ -56,8 +50,7 @@ public class AdjustParam extends UpdateParam {\n \n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-        .getPartitions(matrixId);\n+    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n       AdjustPartitionParam partParam = new AdjustPartitionParam(matrixId, pkey, dataBuf, bufLength);\n@@ -65,5 +58,5 @@ public class AdjustParam extends UpdateParam {\n     }\n     return params;\n   }\n-}\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}