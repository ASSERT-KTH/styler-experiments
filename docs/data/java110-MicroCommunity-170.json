{
    "project_name": "java110-MicroCommunity",
    "violation_id": "170",
    "information": {
        "violations": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 172).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n\n        return roomAttrs;\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..09daa1fcc57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n         if (page != PageDto.DEFAULT_PAGE) {\n             roomAttrDto.setPage((page - 1) * roomAttrDto.getRow());\n             roomAttrDto.setRow(page * roomAttrDto.getRow());\n-        }\n-\n-        List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n+        } List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n \n         return roomAttrs;\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..7c07d74cf4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/170/RoomAttrInnerServiceSMOImpl.java\n@@ -44,13 +44,13 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n             roomAttrDto.setRow(page * roomAttrDto.getRow());\n         }\n \n-        List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n+        List<RoomAttrDto> roomAttrs =\n+            BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n \n         return roomAttrs;\n     }\n \n \n-\n     @Override\n     public int queryRoomAttrsCount(@RequestBody RoomAttrDto roomAttrDto) {\n         return roomAttrServiceDaoImpl.queryRoomAttrsCount(BeanConvertUtil.beanCovertMap(roomAttrDto));\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..e8de5254c20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/170/RoomAttrInnerServiceSMOImpl.java\n@@ -49,9 +49,7 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n         return roomAttrs;\n     }\n \n-\n-\n-    @Override\n+@Override\n     public int queryRoomAttrsCount(@RequestBody RoomAttrDto roomAttrDto) {\n         return roomAttrServiceDaoImpl.queryRoomAttrsCount(BeanConvertUtil.beanCovertMap(roomAttrDto));\n     }\n@@ -71,4 +69,4 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..aa974fa82fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/170/RoomAttrInnerServiceSMOImpl.java\n@@ -1,7 +1,6 @@\n \n package com.java110.community.smo.impl;\n \n-\n import com.java110.common.util.BeanConvertUtil;\n import com.java110.community.dao.IRoomAttrServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -12,7 +11,6 @@ import com.java110.dto.RoomAttrDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -23,6 +21,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoomAttrInnerServiceSMO {\n \n@@ -37,20 +37,18 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = roomAttrDto.getPage();\n \n+\n+        int page = roomAttrDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             roomAttrDto.setPage((page - 1) * roomAttrDto.getRow());\n             roomAttrDto.setRow(page * roomAttrDto.getRow());\n         }\n \n         List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n-\n         return roomAttrs;\n     }\n \n-\n-\n     @Override\n     public int queryRoomAttrsCount(@RequestBody RoomAttrDto roomAttrDto) {\n         return roomAttrServiceDaoImpl.queryRoomAttrsCount(BeanConvertUtil.beanCovertMap(roomAttrDto));\n@@ -71,4 +69,4 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "35",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "107",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "174",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..fdd78ccb847 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\n@@ -43,10 +43,7 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n             roomAttrDto.setPage((page - 1) * roomAttrDto.getRow());\n             roomAttrDto.setRow(page * roomAttrDto.getRow());\n         }\n-\n-        List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n-\n-        return roomAttrs;\n+        List<RoomAttrDto>roomAttrs= BeanConvertUtil .covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo( BeanConvertUtil .beanCovertMap(roomAttrDto)), RoomAttrDto .class);returnroomAttrsroomAttrs;\n     }\n \n \n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\nindex 0a7801b2d43..09daa1fcc57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/170/RoomAttrInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/170/RoomAttrInnerServiceSMOImpl.java\n@@ -42,9 +42,7 @@ public class RoomAttrInnerServiceSMOImpl extends BaseServiceSMO implements IRoom\n         if (page != PageDto.DEFAULT_PAGE) {\n             roomAttrDto.setPage((page - 1) * roomAttrDto.getRow());\n             roomAttrDto.setRow(page * roomAttrDto.getRow());\n-        }\n-\n-        List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n+        } List<RoomAttrDto> roomAttrs = BeanConvertUtil.covertBeanList(roomAttrServiceDaoImpl.getRoomAttrInfo(BeanConvertUtil.beanCovertMap(roomAttrDto)), RoomAttrDto.class);\n \n         return roomAttrs;\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}