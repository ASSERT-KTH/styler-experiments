{
    "project_name": "griddynamics-jagger",
    "violation_id": "178",
    "information": {
        "violations": [
            {
                "line": "118",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 154).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        public Builder withPreProcessGlobalContextFunction(BiConsumer<JHttpUserScenarioStep, JHttpScenarioGlobalContext> previousStepAndContextConsumer) {\n            this.previousStepAndContextConsumer = previousStepAndContextConsumer;\n            return this;\n        }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/178/JHttpUserScenarioStep.java\nindex 8d3acb4c3e6..33186bcb908 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/178/JHttpUserScenarioStep.java\n@@ -25,15 +25,18 @@ public class JHttpUserScenarioStep {\n \n     /**\n      * Can work with results from the previous step and update global scenario context.\n+     *\n      * @param previousStep previous execution step\n      */\n     public void preProcessGlobalContext(JHttpUserScenarioStep previousStep, JHttpScenarioGlobalContext scenarioContext) {\n-        if (previousStepAndContextConsumer != null)\n+        if (previousStepAndContextConsumer != null) {\n             previousStepAndContextConsumer.accept(previousStep, scenarioContext);\n+        }\n     }\n \n     /**\n      * Can work with results from the previous step and set proper values for endpoint & query.\n+     *\n      * @param previousStep previous execution step\n      */\n     public void preProcess(JHttpUserScenarioStep previousStep) {\n@@ -42,14 +45,17 @@ public class JHttpUserScenarioStep {\n         }\n     }\n \n-    /** Can work with response.\n+    /**\n+     * Can work with response.\n+     *\n      * @param response result of execution of request\n      * @return result of responseFunction or true if responseFunction is null\n      */\n     public Boolean postProcess(JHttpResponse response) {\n         this.response = response;\n-        if (responseFunction != null)\n+        if (responseFunction != null) {\n             return responseFunction.apply(JHttpResponse.copyOf(response));\n+        }\n         return true;\n     }\n \n@@ -78,7 +84,9 @@ public class JHttpUserScenarioStep {\n         return new Builder(id, endpoint);\n     }\n \n-    /** Use this method only if you set global endpoint!!!\n+    /**\n+     * Use this method only if you set global endpoint!!!\n+     *\n      * @param id step stepId\n      */\n     public static Builder builder(String id) {\n@@ -115,7 +123,8 @@ public class JHttpUserScenarioStep {\n             return this;\n         }\n \n-        public Builder withPreProcessGlobalContextFunction(BiConsumer<JHttpUserScenarioStep, JHttpScenarioGlobalContext> previousStepAndContextConsumer) {\n+        public Builder withPreProcessGlobalContextFunction(\n+                BiConsumer<JHttpUserScenarioStep, JHttpScenarioGlobalContext> previousStepAndContextConsumer) {\n             this.previousStepAndContextConsumer = previousStepAndContextConsumer;\n             return this;\n         }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/178/JHttpUserScenarioStep.java\nindex 8d3acb4c3e6..0b24a4be86b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/178/JHttpUserScenarioStep.java\n@@ -50,7 +50,8 @@ public class JHttpUserScenarioStep {\n         this.response = response;\n         if (responseFunction != null)\n             return responseFunction.apply(JHttpResponse.copyOf(response));\n-        return true;\n+\n+return true;\n     }\n \n     public void waitAfterExecution() {\n@@ -180,4 +181,4 @@ public class JHttpUserScenarioStep {\n     public void setStepNumber(int stepNumber) {\n         this.stepNumber = stepNumber;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/178/JHttpUserScenarioStep.java\nindex 8d3acb4c3e6..671a3418f2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/178/JHttpUserScenarioStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/178/JHttpUserScenarioStep.java\n@@ -3,7 +3,6 @@ package com.griddynamics.jagger.invoker.scenario;\n import com.griddynamics.jagger.invoker.v2.JHttpEndpoint;\n import com.griddynamics.jagger.invoker.v2.JHttpQuery;\n import com.griddynamics.jagger.invoker.v2.JHttpResponse;\n-\n import java.util.concurrent.TimeUnit;\n import java.util.function.BiConsumer;\n import java.util.function.Function;\n@@ -11,7 +10,10 @@ import java.util.function.Function;\n /**\n  * Represents a step in user scenario ({@link JHttpUserScenario}).\n  */\n+\n+\n public class JHttpUserScenarioStep {\n+\n     private int stepNumber;\n     private final String stepId; // mandatory parameter. required for metrics saving\n     private JHttpEndpoint endpoint;\n@@ -27,6 +29,7 @@ public class JHttpUserScenarioStep {\n      * Can work with results from the previous step and update global scenario context.\n      * @param previousStep previous execution step\n      */\n+\n     public void preProcessGlobalContext(JHttpUserScenarioStep previousStep, JHttpScenarioGlobalContext scenarioContext) {\n         if (previousStepAndContextConsumer != null)\n             previousStepAndContextConsumer.accept(previousStep, scenarioContext);\n@@ -36,6 +39,7 @@ public class JHttpUserScenarioStep {\n      * Can work with results from the previous step and set proper values for endpoint & query.\n      * @param previousStep previous execution step\n      */\n+\n     public void preProcess(JHttpUserScenarioStep previousStep) {\n         if (previousAndCurrentStepConsumer != null) {\n             previousAndCurrentStepConsumer.accept(previousStep, this);\n@@ -46,10 +50,10 @@ public class JHttpUserScenarioStep {\n      * @param response result of execution of request\n      * @return result of responseFunction or true if responseFunction is null\n      */\n+\n     public Boolean postProcess(JHttpResponse response) {\n         this.response = response;\n-        if (responseFunction != null)\n-            return responseFunction.apply(JHttpResponse.copyOf(response));\n+        if (responseFunction != null) return responseFunction.apply(JHttpResponse.copyOf(response));\n         return true;\n     }\n \n@@ -81,11 +85,13 @@ public class JHttpUserScenarioStep {\n     /** Use this method only if you set global endpoint!!!\n      * @param id step stepId\n      */\n+\n     public static Builder builder(String id) {\n         return new Builder(id, null);\n     }\n \n     public static class Builder {\n+\n         private final String stepId;\n         private final JHttpEndpoint endpoint;\n         private JHttpQuery query;\n@@ -146,6 +152,7 @@ public class JHttpUserScenarioStep {\n     /**\n      * DON'T USE IT FOR PREVIOUS STEP IN preProcess()\n      */\n+\n     public void setEndpoint(JHttpEndpoint endpoint) {\n         this.endpoint = endpoint;\n     }\n@@ -157,6 +164,7 @@ public class JHttpUserScenarioStep {\n     /**\n      * DON'T USE IT FOR PREVIOUS STEP IN preProcess()\n      */\n+\n     public void setQuery(JHttpQuery query) {\n         this.query = query;\n     }\n@@ -180,4 +188,4 @@ public class JHttpUserScenarioStep {\n     public void setStepNumber(int stepNumber) {\n         this.stepNumber = stepNumber;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}