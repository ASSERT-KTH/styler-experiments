{
    "project_name": "Angel-ML-angel",
    "violation_id": "959",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/959/AngelWebApp.java\nindex fc98ac4d465..aa7f582420f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/959/AngelWebApp.java\n@@ -24,38 +24,39 @@ import static org.apache.hadoop.yarn.util.StringHelper.pajoin;\n \n public class AngelWebApp extends WebApp implements AngelParams {\n \n-  @Override\n-  public void setup() {\n-    bind(JAXBContextResolver.class);\n-    bind(GenericExceptionHandler.class);\n-    route(\"/\", AngelController.class);\n-    route(\"/angel\", AngelController.class);\n+    @Override\n+    public void setup() {\n+        bind(JAXBContextResolver.class);\n+        bind(GenericExceptionHandler.class);\n+        route(\"/\", AngelController.class);\n+        route(\"/angel\", AngelController.class);\n \n-    route(pajoin(\"/angel/workerGroupsPage\", WORKERGROUP_STATE), AngelController.class,\n-        \"workerGroupsPage\");\n+        route(pajoin(\"/angel/workerGroupsPage\", WORKERGROUP_STATE), AngelController.class,\n+                \"workerGroupsPage\");\n \n-    route(pajoin(\"/angel/parameterServersPage\", PARAMETERSERVER_STATE), AngelController.class,\n-        \"parameterServersPage\");\n+        route(pajoin(\"/angel/parameterServersPage\", PARAMETERSERVER_STATE), AngelController.class,\n+                \"parameterServersPage\");\n \n-    route(pajoin(\"/angel/workerGroupPage\", WORKERGROUP_ID), AngelController.class,\n-        \"workerGroupPage\");\n+        route(pajoin(\"/angel/workerGroupPage\", WORKERGROUP_ID), AngelController.class,\n+                \"workerGroupPage\");\n \n-    route(pajoin(\"/angel/workerPage\", WORKER_ATTEMPT_ID), AngelController.class, \"workerPage\");\n+        route(pajoin(\"/angel/workerPage\", WORKER_ATTEMPT_ID), AngelController.class, \"workerPage\");\n \n-    route(pajoin(\"/angel/parameterServerThreadStackPage\", PSATTEMPT_ID), AngelController.class,\n-        \"parameterServerThreadStackPage\");\n+        route(pajoin(\"/angel/parameterServerThreadStackPage\", PSATTEMPT_ID), AngelController.class,\n+                \"parameterServerThreadStackPage\");\n \n-    route(pajoin(\"/angel/workerThreadStackPage\", WORKER_ATTEMPT_ID), AngelController.class,\n-        \"workerThreadStackPage\");\n+        route(pajoin(\"/angel/workerThreadStackPage\", WORKER_ATTEMPT_ID), AngelController.class,\n+                \"workerThreadStackPage\");\n \n-    route(pajoin(\"/angel/workerCounterPage\", WORKER_ATTEMPT_ID), AngelController.class,\n-        \"workerCounterPage\");\n+        route(pajoin(\"/angel/workerCounterPage\", WORKER_ATTEMPT_ID), AngelController.class,\n+                \"workerCounterPage\");\n \n-    route(pajoin(\"/angel/taskCountersPage\", TASK_ID), AngelController.class, \"taskCountersPage\");\n+        route(pajoin(\"/angel/taskCountersPage\", TASK_ID), AngelController.class,\n+                \"taskCountersPage\");\n \n-    route(\"/angel/EnvironmentPage\", AngelController.class, \"environmentPage\");\n-    route(\"/angel/ExecutorsPage\", AngelController.class, \"executorsPage\");\n-    route(\"/angel/ProgressPage\", AngelController.class, \"progressPage\");\n+        route(\"/angel/EnvironmentPage\", AngelController.class, \"environmentPage\");\n+        route(\"/angel/ExecutorsPage\", AngelController.class, \"executorsPage\");\n+        route(\"/angel/ProgressPage\", AngelController.class, \"progressPage\");\n \n-  }\n+    }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/959/AngelWebApp.java\nindex fc98ac4d465..28b9b4608d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/959/AngelWebApp.java\n@@ -23,7 +23,6 @@ import org.apache.hadoop.yarn.webapp.WebApp;\n import static org.apache.hadoop.yarn.util.StringHelper.pajoin;\n \n public class AngelWebApp extends WebApp implements AngelParams {\n-\n   @Override\n   public void setup() {\n     bind(JAXBContextResolver.class);\n@@ -56,6 +55,5 @@ public class AngelWebApp extends WebApp implements AngelParams {\n     route(\"/angel/EnvironmentPage\", AngelController.class, \"environmentPage\");\n     route(\"/angel/ExecutorsPage\", AngelController.class, \"executorsPage\");\n     route(\"/angel/ProgressPage\", AngelController.class, \"progressPage\");\n-\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/959/AngelWebApp.java\nindex fc98ac4d465..8d2eb7348d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/959/AngelWebApp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/959/AngelWebApp.java\n@@ -19,43 +19,31 @@ package com.tencent.angel.webapp;\n import org.apache.hadoop.mapreduce.v2.app.webapp.JAXBContextResolver;\n import org.apache.hadoop.yarn.webapp.GenericExceptionHandler;\n import org.apache.hadoop.yarn.webapp.WebApp;\n-\n import static org.apache.hadoop.yarn.util.StringHelper.pajoin;\n \n public class AngelWebApp extends WebApp implements AngelParams {\n \n+\n   @Override\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(GenericExceptionHandler.class);\n     route(\"/\", AngelController.class);\n     route(\"/angel\", AngelController.class);\n-\n-    route(pajoin(\"/angel/workerGroupsPage\", WORKERGROUP_STATE), AngelController.class,\n-        \"workerGroupsPage\");\n-\n-    route(pajoin(\"/angel/parameterServersPage\", PARAMETERSERVER_STATE), AngelController.class,\n-        \"parameterServersPage\");\n-\n-    route(pajoin(\"/angel/workerGroupPage\", WORKERGROUP_ID), AngelController.class,\n-        \"workerGroupPage\");\n-\n+    route(pajoin(\"/angel/workerGroupsPage\", WORKERGROUP_STATE), AngelController.class, \"workerGroupsPage\");\n+    route(\n+         pajoin(\"/angel/parameterServersPage\", PARAMETERSERVER_STATE), AngelController.class, \"parameterServersPage\");\n+    route(pajoin(\"/angel/workerGroupPage\", WORKERGROUP_ID), AngelController.class, \"workerGroupPage\");\n     route(pajoin(\"/angel/workerPage\", WORKER_ATTEMPT_ID), AngelController.class, \"workerPage\");\n-\n-    route(pajoin(\"/angel/parameterServerThreadStackPage\", PSATTEMPT_ID), AngelController.class,\n-        \"parameterServerThreadStackPage\");\n-\n-    route(pajoin(\"/angel/workerThreadStackPage\", WORKER_ATTEMPT_ID), AngelController.class,\n-        \"workerThreadStackPage\");\n-\n-    route(pajoin(\"/angel/workerCounterPage\", WORKER_ATTEMPT_ID), AngelController.class,\n-        \"workerCounterPage\");\n-\n+    route(\n+         pajoin(\"/angel/parameterServerThreadStackPage\", PSATTEMPT_ID), AngelController.class, \"parameterServerThreadStackPage\");\n+    route(\n+         pajoin(\"/angel/workerThreadStackPage\", WORKER_ATTEMPT_ID), AngelController.class, \"workerThreadStackPage\");\n+    route(pajoin(\"/angel/workerCounterPage\", WORKER_ATTEMPT_ID), AngelController.class, \"workerCounterPage\");\n     route(pajoin(\"/angel/taskCountersPage\", TASK_ID), AngelController.class, \"taskCountersPage\");\n-\n     route(\"/angel/EnvironmentPage\", AngelController.class, \"environmentPage\");\n     route(\"/angel/ExecutorsPage\", AngelController.class, \"executorsPage\");\n     route(\"/angel/ProgressPage\", AngelController.class, \"progressPage\");\n-\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}