{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1337",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1337/Credential.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1337/Credential.java\nindex 42d0f5a4799..c41e67c7318 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1337/Credential.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1337/Credential.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.security;\n \n import java.security.MessageDigest;\n@@ -29,134 +30,132 @@ import org.neo4j.string.UTF8;\n \n public class Credential\n {\n-    public static final String DIGEST_ALGO = \"SHA-256\";\n-\n-    public static final Credential INACCESSIBLE = new Credential( new byte[]{}, new byte[]{} );\n-\n-    private final byte[] salt;\n-    private final byte[] passwordHash;\n-\n-    public static Credential forPassword( String password )\n-    {\n-        byte[] salt = randomSalt();\n-        return new Credential( salt, hash( salt, password ) );\n-    }\n-\n-    public Credential( byte[] salt, byte[] passwordHash )\n-    {\n-        this.salt = salt;\n-        this.passwordHash = passwordHash;\n-    }\n-\n-    public byte[] salt()\n-    {\n-        return salt;\n-    }\n-\n-    public byte[] passwordHash()\n+  public static final String DIGEST_ALGO = \"SHA-256\";\n+\n+  public static final Credential INACCESSIBLE = new Credential(new byte[] {}, new byte[] {});\n+\n+  private final byte[] salt;\n+  private final byte[] passwordHash;\n+\n+  public static Credential forPassword(String password)\n+  {\n+    byte[] salt = randomSalt();\n+    return new Credential(salt, hash(salt, password));\n+  }\n+\n+  public Credential(byte[] salt, byte[] passwordHash)\n+  {\n+    this.salt = salt;\n+    this.passwordHash = passwordHash;\n+  }\n+\n+  public byte[] salt()\n+  {\n+    return salt;\n+  }\n+\n+  public byte[] passwordHash()\n+  {\n+    return passwordHash;\n+  }\n+\n+  public boolean matchesPassword(String password)\n+  {\n+    return byteEquals(passwordHash, hash(salt, password));\n+  }\n+\n+  /**\n+   * <p>Utility method that replaces Arrays.equals() to avoid timing attacks.\n+   * The length of the loop executed will always be the length of the given password.\n+   * Remember {@link #INACCESSIBLE} credentials should still execute loop for the length of given password.</p>\n+   *\n+   * @param actual the actual password\n+   * @param given  password given by the user\n+   * @return whether the two byte arrays are equal\n+   */\n+  private boolean byteEquals(byte[] actual, byte[] given)\n+  {\n+    if (actual == given)\n     {\n-        return passwordHash;\n+      return true;\n     }\n-\n-    public boolean matchesPassword( String password )\n+    if (actual == null || given == null)\n     {\n-        return byteEquals( passwordHash, hash( salt, password ) );\n+      return false;\n     }\n-\n-    /**\n-     * <p>Utility method that replaces Arrays.equals() to avoid timing attacks.\n-     * The length of the loop executed will always be the length of the given password.\n-     * Remember {@link #INACCESSIBLE} credentials should still execute loop for the length of given password.</p>\n-     *\n-     * @param actual the actual password\n-     * @param given password given by the user\n-     * @return whether the two byte arrays are equal\n-     */\n-    private boolean byteEquals( byte[] actual, byte[] given )\n+    boolean result = true;\n+    boolean accessible = true;\n+    int actualLength = actual.length;\n+    int givenLength = given.length;\n+    for (int i = 0; i < givenLength; ++i)\n     {\n-        if ( actual == given )\n-        {\n-            return true;\n-        }\n-        if ( actual == null || given == null )\n-        {\n-            return false;\n-        }\n-        boolean result = true;\n-        boolean accessible = true;\n-        int actualLength = actual.length;\n-        int givenLength = given.length;\n-        for ( int i = 0; i < givenLength; ++i )\n-        {\n-            if ( actualLength == 0 )\n-            {\n-                accessible = false;\n-            }\n-            else\n-            {\n-                result &= actual[i % actualLength] == given[i];\n-            }\n-        }\n-        return result && actualLength == givenLength && accessible;\n+      if (actualLength == 0)\n+      {\n+        accessible = false;\n+      } else\n+      {\n+        result &= actual[i % actualLength] == given[i];\n+      }\n     }\n-\n-    /**\n-     * <p>Equality to always check for both salt and password hash as a safeguard against timing attack.</p>\n-     */\n-    @Override\n-    public boolean equals( Object o )\n+    return result && actualLength == givenLength && accessible;\n+  }\n+\n+  /**\n+   * <p>Equality to always check for both salt and password hash as a safeguard against timing attack.</p>\n+   */\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        Credential that = (Credential) o;\n-\n-        boolean saltEquals = byteEquals( this.salt, that.salt );\n-        boolean passwordEquals = byteEquals( this.passwordHash, that.passwordHash );\n-        return saltEquals && passwordEquals;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return 31 * Arrays.hashCode( salt ) + Arrays.hashCode( passwordHash );\n+      return false;\n     }\n \n-    @Override\n-    public String toString()\n+    Credential that = (Credential) o;\n+\n+    boolean saltEquals = byteEquals(this.salt, that.salt);\n+    boolean passwordEquals = byteEquals(this.passwordHash, that.passwordHash);\n+    return saltEquals && passwordEquals;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return 31 * Arrays.hashCode(salt) + Arrays.hashCode(passwordHash);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Credential{\" +\n+        \"salt=0x\" + HexString.encodeHexString(salt) +\n+        \", passwordHash=0x\" + HexString.encodeHexString(passwordHash) +\n+        '}';\n+  }\n+\n+  private static byte[] hash(byte[] salt, String password)\n+  {\n+    try\n     {\n-        return \"Credential{\" +\n-               \"salt=0x\" + HexString.encodeHexString( salt ) +\n-               \", passwordHash=0x\" + HexString.encodeHexString( passwordHash ) +\n-               '}';\n-    }\n-\n-    private static byte[] hash( byte[] salt, String password )\n-    {\n-        try\n-        {\n-            byte[] passwordBytes = UTF8.encode( password );\n-            MessageDigest m = MessageDigest.getInstance( DIGEST_ALGO );\n-            m.update( salt, 0, salt.length );\n-            m.update( passwordBytes, 0, passwordBytes.length );\n-            return m.digest();\n-        }\n-        catch ( NoSuchAlgorithmException e )\n-        {\n-            throw new RuntimeException( \"Hash algorithm is not available on this platform: \" + e.getMessage(), e );\n-        }\n-    }\n-\n-    private static byte[] randomSalt()\n+      byte[] passwordBytes = UTF8.encode(password);\n+      MessageDigest m = MessageDigest.getInstance(DIGEST_ALGO);\n+      m.update(salt, 0, salt.length);\n+      m.update(passwordBytes, 0, passwordBytes.length);\n+      return m.digest();\n+    } catch (NoSuchAlgorithmException e)\n     {\n-        byte[] salt = new byte[16];\n-        ThreadLocalRandom.current().nextBytes( salt );\n-        return salt;\n+      throw new RuntimeException(\"Hash algorithm is not available on this platform: \" + e.getMessage(), e);\n     }\n+  }\n+\n+  private static byte[] randomSalt()\n+  {\n+    byte[] salt = new byte[16];\n+    ThreadLocalRandom.current().nextBytes(salt);\n+    return salt;\n+  }\n }\n",
            "diff_size": 173
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1337/Credential.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1337/Credential.java\nindex 42d0f5a4799..df4a28d0d3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1337/Credential.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1337/Credential.java\n@@ -78,7 +78,8 @@ public class Credential\n         {\n             return true;\n         }\n-        if ( actual == null || given == null )\n+\n+if ( actual == null || given == null )\n         {\n             return false;\n         }\n@@ -110,7 +111,8 @@ public class Credential\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -131,10 +133,7 @@ public class Credential\n     @Override\n     public String toString()\n     {\n-        return \"Credential{\" +\n-               \"salt=0x\" + HexString.encodeHexString( salt ) +\n-               \", passwordHash=0x\" + HexString.encodeHexString( passwordHash ) +\n-               '}';\n+        return \"Credential{\" + \"salt=0x\" + HexString.encodeHexString( salt ) + \", passwordHash=0x\" + HexString.encodeHexString( passwordHash ) + '}';\n     }\n \n     private static byte[] hash( byte[] salt, String password )\n@@ -159,4 +158,4 @@ public class Credential\n         ThreadLocalRandom.current().nextBytes( salt );\n         return salt;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}