{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "223",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.messaging.client;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.faults.ConfigurationException;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/223/CONNECTCXFClientFactory.java\nindex 92f743e1fcd..864e119577e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/223/CONNECTCXFClientFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.messaging.client;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/223/CONNECTCXFClientFactory.java\nindex 92f743e1fcd..4707f475480 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/223/CONNECTCXFClientFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.messaging.client;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -37,61 +38,61 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * @author akong\n- *\n  */\n public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n-    private static final Logger LOG = LoggerFactory.getLogger(PropertyAccessor.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(PropertyAccessor.class);\n \n-    /**\n-     * Returns a CONNECTClient configured for secured invocation.\n-     */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) {\n-\n-        return new CONNECTCXFClientSecured<>(portDescriptor, url, assertion);\n-    }\n+  /**\n+   * Returns a CONNECTClient configured for secured invocation.\n+   */\n+  @Override\n+  public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor, String url,\n+                                                      AssertionType assertion) {\n \n-    /**\n-     * Returns a CONNECTClient configured for secured invocation. This method\n-     * allows the target hcid and service name to be passed to be used for\n-     * purpose of/purpose for logic.\n-     */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor,\n-        AssertionType assertion, String url, String targetHomeCommunityId, String serviceName) {\n-        return new CONNECTCXFClientSecured<>(portDescriptor, assertion, url, targetHomeCommunityId, serviceName);\n-    }\n+    return new CONNECTCXFClientSecured<>(portDescriptor, url, assertion);\n+  }\n \n-    /**\n-     * Returns a CONNECTClient configured for unsecured invocation.\n-     */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientUnsecured(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) {\n-        return new CONNECTCXFClientUnsecured<>(portDescriptor, url, assertion);\n-    }\n+  /**\n+   * Returns a CONNECTClient configured for secured invocation. This method\n+   * allows the target hcid and service name to be passed to be used for\n+   * purpose of/purpose for logic.\n+   */\n+  @Override\n+  public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor,\n+                                                      AssertionType assertion, String url, String targetHomeCommunityId,\n+                                                      String serviceName) {\n+    return new CONNECTCXFClientSecured<>(portDescriptor, assertion, url, targetHomeCommunityId, serviceName);\n+  }\n \n-    /**\n-     * Returns a CONNECTClient configured for https-is-required invocation.\n-     */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientHttps(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) throws ConfigurationException {\n+  /**\n+   * Returns a CONNECTClient configured for unsecured invocation.\n+   */\n+  @Override\n+  public <T> CONNECTClient<T> getCONNECTClientUnsecured(ServicePortDescriptor<T> portDescriptor, String url,\n+                                                        AssertionType assertion) {\n+    return new CONNECTCXFClientUnsecured<>(portDescriptor, url, assertion);\n+  }\n \n-        String serviceProtocol = \"\";\n-        try {\n-            serviceProtocol = new URL(url).getProtocol().toUpperCase();\n-        } catch (MalformedURLException ex) {\n-            LOG.error(\"there an error in the URL: {}\", ex.getLocalizedMessage(), ex);\n-        }\n+  /**\n+   * Returns a CONNECTClient configured for https-is-required invocation.\n+   */\n+  @Override\n+  public <T> CONNECTClient<T> getCONNECTClientHttps(ServicePortDescriptor<T> portDescriptor, String url,\n+                                                    AssertionType assertion) throws ConfigurationException {\n \n-        LOG.info(\"getCONNECTClientHttps--serviceProtocol: '{}'\", serviceProtocol);\n+    String serviceProtocol = \"\";\n+    try {\n+      serviceProtocol = new URL(url).getProtocol().toUpperCase();\n+    } catch (MalformedURLException ex) {\n+      LOG.error(\"there an error in the URL: {}\", ex.getLocalizedMessage(), ex);\n+    }\n \n-        if (!\"HTTPS\".equals(serviceProtocol)) {\n-            throw new ConfigurationException(\"CONNECTCXFClientBaseSecured service's url required HTTPS\");\n-        }\n+    LOG.info(\"getCONNECTClientHttps--serviceProtocol: '{}'\", serviceProtocol);\n \n-        return new CONNECTCXFClientBaseSecured<>(portDescriptor, url, assertion);\n+    if (!\"HTTPS\".equals(serviceProtocol)) {\n+      throw new ConfigurationException(\"CONNECTCXFClientBaseSecured service's url required HTTPS\");\n     }\n+\n+    return new CONNECTCXFClientBaseSecured<>(portDescriptor, url, assertion);\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/223/CONNECTCXFClientFactory.java\nindex 92f743e1fcd..315594b88c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/223/CONNECTCXFClientFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.messaging.client;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -48,8 +49,7 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n     @Override\n     public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor, String url,\n         AssertionType assertion) {\n-\n-        return new CONNECTCXFClientSecured<>(portDescriptor, url, assertion);\n+    return new CONNECTCXFClientSecured<>(portDescriptor, url, assertion);\n     }\n \n     /**\n@@ -60,7 +60,7 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n     @Override\n     public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor,\n         AssertionType assertion, String url, String targetHomeCommunityId, String serviceName) {\n-        return new CONNECTCXFClientSecured<>(portDescriptor, assertion, url, targetHomeCommunityId, serviceName);\n+    return new CONNECTCXFClientSecured<>(portDescriptor, assertion, url, targetHomeCommunityId, serviceName);\n     }\n \n     /**\n@@ -69,7 +69,7 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n     @Override\n     public <T> CONNECTClient<T> getCONNECTClientUnsecured(ServicePortDescriptor<T> portDescriptor, String url,\n         AssertionType assertion) {\n-        return new CONNECTCXFClientUnsecured<>(portDescriptor, url, assertion);\n+    return new CONNECTCXFClientUnsecured<>(portDescriptor, url, assertion);\n     }\n \n     /**\n@@ -78,8 +78,7 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n     @Override\n     public <T> CONNECTClient<T> getCONNECTClientHttps(ServicePortDescriptor<T> portDescriptor, String url,\n         AssertionType assertion) throws ConfigurationException {\n-\n-        String serviceProtocol = \"\";\n+    String serviceProtocol = \"\";\n         try {\n             serviceProtocol = new URL(url).getProtocol().toUpperCase();\n         } catch (MalformedURLException ex) {\n@@ -87,11 +86,10 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n         }\n \n         LOG.info(\"getCONNECTClientHttps--serviceProtocol: '{}'\", serviceProtocol);\n-\n-        if (!\"HTTPS\".equals(serviceProtocol)) {\n+if (!\"HTTPS\".equals(serviceProtocol)) {\n             throw new ConfigurationException(\"CONNECTCXFClientBaseSecured service's url required HTTPS\");\n         }\n \n         return new CONNECTCXFClientBaseSecured<>(portDescriptor, url, assertion);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "101",
                    "column": "14",
                    "severity": "error",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/223/CONNECTCXFClientFactory.java\nindex 92f743e1fcd..579883edc4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/223/CONNECTCXFClientFactory.java\n@@ -39,16 +39,21 @@ import org.slf4j.LoggerFactory;\n  * @author akong\n  *\n  */\n-public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n+\n+\n+public class CONNECTCXFClientFactory extends\n+    CONNECTClientFactory {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(PropertyAccessor.class);\n \n     /**\n      * Returns a CONNECTClient configured for secured invocation.\n      */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) {\n \n+\n+    @Override\n+    public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor,\n+        String url, AssertionType assertion) {\n         return new CONNECTCXFClientSecured<>(portDescriptor, url, assertion);\n     }\n \n@@ -57,41 +62,46 @@ public class CONNECTCXFClientFactory extends CONNECTClientFactory {\n      * allows the target hcid and service name to be passed to be used for\n      * purpose of/purpose for logic.\n      */\n+\n+\n     @Override\n     public <T> CONNECTClient<T> getCONNECTClientSecured(ServicePortDescriptor<T> portDescriptor,\n-        AssertionType assertion, String url, String targetHomeCommunityId, String serviceName) {\n+        AssertionType assertion,\n+        String url,\n+        String targetHomeCommunityId, String serviceName) {\n         return new CONNECTCXFClientSecured<>(portDescriptor, assertion, url, targetHomeCommunityId, serviceName);\n     }\n \n     /**\n      * Returns a CONNECTClient configured for unsecured invocation.\n      */\n+\n+\n     @Override\n-    public <T> CONNECTClient<T> getCONNECTClientUnsecured(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) {\n+    public <T> CONNECTClient<T> getCONNECTClientUnsecured(ServicePortDescriptor<T> portDescriptor,\n+        String url, AssertionType assertion) {\n         return new CONNECTCXFClientUnsecured<>(portDescriptor, url, assertion);\n     }\n \n     /**\n      * Returns a CONNECTClient configured for https-is-required invocation.\n      */\n-    @Override\n-    public <T> CONNECTClient<T> getCONNECTClientHttps(ServicePortDescriptor<T> portDescriptor, String url,\n-        AssertionType assertion) throws ConfigurationException {\n \n+\n+    @Override\n+    public <T> CONNECTClient<T> getCONNECTClientHttps(ServicePortDescriptor<T> portDescriptor,\n+        String url, AssertionType assertion) throws ConfigurationException {\n         String serviceProtocol = \"\";\n         try {\n             serviceProtocol = new URL(url).getProtocol().toUpperCase();\n         } catch (MalformedURLException ex) {\n             LOG.error(\"there an error in the URL: {}\", ex.getLocalizedMessage(), ex);\n         }\n-\n         LOG.info(\"getCONNECTClientHttps--serviceProtocol: '{}'\", serviceProtocol);\n-\n-        if (!\"HTTPS\".equals(serviceProtocol)) {\n+        if (! \"HTTPS\".equals(serviceProtocol)) {\n             throw new ConfigurationException(\"CONNECTCXFClientBaseSecured service's url required HTTPS\");\n         }\n-\n         return new CONNECTCXFClientBaseSecured<>(portDescriptor, url, assertion);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/223/CONNECTCXFClientFactory.java\nindex 92f743e1fcd..864e119577e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/223/CONNECTCXFClientFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/223/CONNECTCXFClientFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.messaging.client;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}