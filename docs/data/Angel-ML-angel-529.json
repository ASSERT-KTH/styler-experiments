{
    "project_name": "Angel-ML-angel",
    "violation_id": "529",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/529/InitWalkPathPartitionParam.java\nindex b91ce8e129b..5ade60d08b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/529/InitWalkPathPartitionParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.initwalkpath;\n \n import com.tencent.angel.PartitionKey;\n@@ -22,110 +23,110 @@ import io.netty.buffer.ByteBuf;\n \n public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n \n-  private int neighborMatrixId;\n-  private int walkLength;\n-  private int numParts;\n-  private int threshold;\n-  private double keepProba;\n-  private boolean isTrunc;\n-\n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock,\n-      int neighborMatrixId, int walkLength, int numParts,\n-      int threshold, double keepProba, boolean isTrunc) {\n-    super(matrixId, partKey, updateClock);\n-    this.neighborMatrixId = neighborMatrixId;\n-    this.walkLength = walkLength;\n-    this.numParts = numParts;\n-    this.threshold = threshold;\n-    this.keepProba = keepProba;\n-    this.isTrunc = isTrunc;\n-  }\n-\n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts,\n-      int threshold, double keepProba, boolean isTrunc) {\n-    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba,\n-        isTrunc);\n-  }\n-\n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts) {\n-    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, -1, 1.0, false);\n-  }\n-\n-  public InitWalkPathPartitionParam() {\n-\n-  }\n-\n-  public int getNeighborMatrixId() {\n-    return neighborMatrixId;\n-  }\n-\n-  public int getWalkLength() {\n-    return walkLength;\n-  }\n-\n-  public int getThreshold() {\n-    return threshold;\n-  }\n-\n-  public void setThreshold(int threshold) {\n-    this.threshold = threshold;\n-  }\n-\n-  public double getKeepProba() {\n-    return keepProba;\n-  }\n-\n-  public void setKeepProba(double keepProba) {\n-    this.keepProba = keepProba;\n-  }\n-\n-  public int getNumParts() {\n-    return numParts;\n-  }\n-\n-  public void setNumParts(int numParts) {\n-    this.numParts = numParts;\n-  }\n-\n-  public boolean isTrunc() {\n-    return isTrunc;\n-  }\n-\n-  public void setTrunc(boolean trunc) {\n-    isTrunc = trunc;\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(neighborMatrixId);\n-    buf.writeInt(walkLength);\n-    buf.writeInt(numParts);\n-    buf.writeInt(threshold);\n-    buf.writeDouble(keepProba);\n-    if (isTrunc) {\n-      buf.writeInt(1);\n-    } else {\n-      buf.writeInt(0);\n-    }\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    neighborMatrixId = buf.readInt();\n-    walkLength = buf.readInt();\n-    numParts = buf.readInt();\n-    threshold = buf.readInt();\n-    keepProba = buf.readDouble();\n-    isTrunc = buf.readInt() == 1;\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    int len = super.bufferLen();\n-    return len + 28;\n-  }\n+    private int neighborMatrixId;\n+    private int walkLength;\n+    private int numParts;\n+    private int threshold;\n+    private double keepProba;\n+    private boolean isTrunc;\n+\n+    public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock,\n+                                      int neighborMatrixId, int walkLength, int numParts,\n+                                      int threshold, double keepProba, boolean isTrunc) {\n+        super(matrixId, partKey, updateClock);\n+        this.neighborMatrixId = neighborMatrixId;\n+        this.walkLength = walkLength;\n+        this.numParts = numParts;\n+        this.threshold = threshold;\n+        this.keepProba = keepProba;\n+        this.isTrunc = isTrunc;\n+    }\n+\n+    public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n+                                      int walkLength, int numParts,\n+                                      int threshold, double keepProba, boolean isTrunc) {\n+        this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba,\n+                isTrunc);\n+    }\n+\n+    public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n+                                      int walkLength, int numParts) {\n+        this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, -1, 1.0, false);\n+    }\n+\n+    public InitWalkPathPartitionParam() {\n+\n+    }\n+\n+    public int getNeighborMatrixId() {\n+        return neighborMatrixId;\n+    }\n+\n+    public int getWalkLength() {\n+        return walkLength;\n+    }\n+\n+    public int getThreshold() {\n+        return threshold;\n+    }\n+\n+    public void setThreshold(int threshold) {\n+        this.threshold = threshold;\n+    }\n+\n+    public double getKeepProba() {\n+        return keepProba;\n+    }\n+\n+    public void setKeepProba(double keepProba) {\n+        this.keepProba = keepProba;\n+    }\n+\n+    public int getNumParts() {\n+        return numParts;\n+    }\n+\n+    public void setNumParts(int numParts) {\n+        this.numParts = numParts;\n+    }\n+\n+    public boolean isTrunc() {\n+        return isTrunc;\n+    }\n+\n+    public void setTrunc(boolean trunc) {\n+        isTrunc = trunc;\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(neighborMatrixId);\n+        buf.writeInt(walkLength);\n+        buf.writeInt(numParts);\n+        buf.writeInt(threshold);\n+        buf.writeDouble(keepProba);\n+        if (isTrunc) {\n+            buf.writeInt(1);\n+        } else {\n+            buf.writeInt(0);\n+        }\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        neighborMatrixId = buf.readInt();\n+        walkLength = buf.readInt();\n+        numParts = buf.readInt();\n+        threshold = buf.readInt();\n+        keepProba = buf.readDouble();\n+        isTrunc = buf.readInt() == 1;\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        int len = super.bufferLen();\n+        return len + 28;\n+    }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/529/InitWalkPathPartitionParam.java\nindex b91ce8e129b..dd38cde5fe6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/529/InitWalkPathPartitionParam.java\n@@ -29,8 +29,7 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n   private double keepProba;\n   private boolean isTrunc;\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock,\n-      int neighborMatrixId, int walkLength, int numParts,\n+  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock, int neighborMatrixId, int walkLength, int numParts,\n       int threshold, double keepProba, boolean isTrunc) {\n     super(matrixId, partKey, updateClock);\n     this.neighborMatrixId = neighborMatrixId;\n@@ -41,16 +40,14 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n     this.isTrunc = isTrunc;\n   }\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts,\n+  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId, int walkLength, int numParts,\n       int threshold, double keepProba, boolean isTrunc) {\n-    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba,\n+  this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba,\n         isTrunc);\n   }\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts) {\n-    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, -1, 1.0, false);\n+  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId, int walkLength, int numParts) {\n+  this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, -1, 1.0, false);\n   }\n \n   public InitWalkPathPartitionParam() {\n@@ -128,4 +125,4 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n     int len = super.bufferLen();\n     return len + 28;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/529/InitWalkPathPartitionParam.java\nindex b91ce8e129b..4e504cf93c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/529/InitWalkPathPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/529/InitWalkPathPartitionParam.java\n@@ -29,9 +29,7 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n   private double keepProba;\n   private boolean isTrunc;\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock,\n-      int neighborMatrixId, int walkLength, int numParts,\n-      int threshold, double keepProba, boolean isTrunc) {\n+  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, boolean updateClock, int neighborMatrixId, int walkLength, int numParts, int threshold, double keepProba, boolean isTrunc) {\n     super(matrixId, partKey, updateClock);\n     this.neighborMatrixId = neighborMatrixId;\n     this.walkLength = walkLength;\n@@ -41,21 +39,16 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n     this.isTrunc = isTrunc;\n   }\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts,\n-      int threshold, double keepProba, boolean isTrunc) {\n-    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba,\n-        isTrunc);\n+  public InitWalkPathPartitionParam(int matrixId,\n+                                    PartitionKey partKey, int neighborMatrixId, int walkLength, int numParts, int threshold, double keepProba, boolean isTrunc) {\n+    this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, threshold, keepProba, isTrunc);\n   }\n \n-  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId,\n-      int walkLength, int numParts) {\n+  public InitWalkPathPartitionParam(int matrixId, PartitionKey partKey, int neighborMatrixId, int walkLength, int numParts) {\n     this(matrixId, partKey, false, neighborMatrixId, walkLength, numParts, -1, 1.0, false);\n   }\n \n-  public InitWalkPathPartitionParam() {\n-\n-  }\n+  public InitWalkPathPartitionParam() {}\n \n   public int getNeighborMatrixId() {\n     return neighborMatrixId;\n@@ -128,4 +121,5 @@ public class InitWalkPathPartitionParam extends PartitionUpdateParam {\n     int len = super.bufferLen();\n     return len + 28;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}