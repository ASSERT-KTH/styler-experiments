{
    "project_name": "Angel-ML-angel",
    "violation_id": "630",
    "information": {
        "violations": [
            {
                "line": "19",
                "column": "7",
                "severity": "error",
                "message": "',' should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "\n  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n      , int startIndex, int endIndex) {\n    super(matrixId, part);\n    this.nodeIds = nodeIds;\n    this.startIndex = startIndex;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..47931fc1a46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/630/PartGetNodeFeatsParam.java\n@@ -15,8 +15,8 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   private int endIndex;\n \n \n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n+  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds,\n+      int startIndex, int endIndex) {\n     super(matrixId, part);\n     this.nodeIds = nodeIds;\n     this.startIndex = startIndex;\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "19",
                    "column": "13",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..3bc0505ee7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/630/PartGetNodeFeatsParam.java\n@@ -6,63 +6,63 @@ import io.netty.buffer.ByteBuf;\n \n public class PartGetNodeFeatsParam extends PartitionGetParam {\n \n-  /**\n-   * Node ids\n-   */\n-  private long[] nodeIds;\n+    /**\n+     * Node ids\n+     */\n+    private long[] nodeIds;\n \n-  private int startIndex;\n-  private int endIndex;\n+    private int startIndex;\n+    private int endIndex;\n \n \n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n-    super(matrixId, part);\n-    this.nodeIds = nodeIds;\n-    this.startIndex = startIndex;\n-    this.endIndex = endIndex;\n-  }\n+    public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n+            , int startIndex, int endIndex) {\n+        super(matrixId, part);\n+        this.nodeIds = nodeIds;\n+        this.startIndex = startIndex;\n+        this.endIndex = endIndex;\n+    }\n \n-  public PartGetNodeFeatsParam() {\n-    this(-1, null, null, -1, -1);\n-  }\n+    public PartGetNodeFeatsParam() {\n+        this(-1, null, null, -1, -1);\n+    }\n \n-  public long[] getNodeIds() {\n-    return nodeIds;\n-  }\n+    public long[] getNodeIds() {\n+        return nodeIds;\n+    }\n \n-  public void setNodeIds(long[] nodeIds) {\n-    this.nodeIds = nodeIds;\n-  }\n+    public void setNodeIds(long[] nodeIds) {\n+        this.nodeIds = nodeIds;\n+    }\n \n-  public int getStartIndex() {\n-    return startIndex;\n-  }\n+    public int getStartIndex() {\n+        return startIndex;\n+    }\n \n-  public int getEndIndex() {\n-    return endIndex;\n-  }\n+    public int getEndIndex() {\n+        return endIndex;\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(endIndex - startIndex);\n-    for (int i = startIndex; i < endIndex; i++) {\n-      buf.writeLong(nodeIds[i]);\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(endIndex - startIndex);\n+        for (int i = startIndex; i < endIndex; i++) {\n+            buf.writeLong(nodeIds[i]);\n+        }\n     }\n-  }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    nodeIds = new long[buf.readInt()];\n-    for (int i = 0; i < nodeIds.length; i++) {\n-      nodeIds[i] = buf.readLong();\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        nodeIds = new long[buf.readInt()];\n+        for (int i = 0; i < nodeIds.length; i++) {\n+            nodeIds[i] = buf.readLong();\n+        }\n     }\n-  }\n \n-  @Override\n-  public int bufferLen() {\n-    return super.bufferLen() + 4 + 8 * nodeIds.length;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return super.bufferLen() + 4 + 8 * nodeIds.length;\n+    }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..9041f363421 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/630/PartGetNodeFeatsParam.java\n@@ -15,8 +15,7 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   private int endIndex;\n \n \n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n+  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds, int startIndex, int endIndex) {\n     super(matrixId, part);\n     this.nodeIds = nodeIds;\n     this.startIndex = startIndex;\n@@ -65,4 +64,4 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   public int bufferLen() {\n     return super.bufferLen() + 4 + 8 * nodeIds.length;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..280b35f6775 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/630/PartGetNodeFeatsParam.java\n@@ -9,14 +9,12 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   /**\n    * Node ids\n    */\n-  private long[] nodeIds;\n \n+  private long[] nodeIds;\n   private int startIndex;\n   private int endIndex;\n \n-\n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n+  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds, int startIndex, int endIndex) {\n     super(matrixId, part);\n     this.nodeIds = nodeIds;\n     this.startIndex = startIndex;\n@@ -65,4 +63,4 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   public int bufferLen() {\n     return super.bufferLen() + 4 + 8 * nodeIds.length;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..47931fc1a46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/630/PartGetNodeFeatsParam.java\n@@ -15,8 +15,8 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   private int endIndex;\n \n \n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n+  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds,\n+      int startIndex, int endIndex) {\n     super(matrixId, part);\n     this.nodeIds = nodeIds;\n     this.startIndex = startIndex;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/630/PartGetNodeFeatsParam.java\nindex 1706c6071b0..29c54147d7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/630/PartGetNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/630/PartGetNodeFeatsParam.java\n@@ -15,8 +15,8 @@ public class PartGetNodeFeatsParam extends PartitionGetParam {\n   private int endIndex;\n \n \n-  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds\n-      , int startIndex, int endIndex) {\n+  public PartGetNodeFeatsParam(int matrixId, PartitionKey part, long[] nodeIds,\n+                 int startIndex, int endIndex) {\n     super(matrixId, part);\n     this.nodeIds = nodeIds;\n     this.startIndex = startIndex;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ]
}