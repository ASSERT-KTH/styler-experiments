{
    "project_name": "chenpengliang0909-WxJava",
    "violation_id": "28",
    "information": {
        "violations": [
            {
                "line": "23",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @author ecoolper\n */\npublic class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n  public MediaImgUploadHttpRequestExecutor(RequestHttp requestHttp) {\n    super(requestHttp);\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/28/MediaImgUploadHttpRequestExecutor.java\nindex c7ff37ba88c..7a953819959 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/28/MediaImgUploadHttpRequestExecutor.java\n@@ -20,7 +20,8 @@ import java.io.IOException;\n  *\n  * @author ecoolper\n  */\n-public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class MediaImgUploadHttpRequestExecutor\n+    extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public MediaImgUploadHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/28/MediaImgUploadHttpRequestExecutor.java\nindex c7ff37ba88c..65af00b661d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/28/MediaImgUploadHttpRequestExecutor.java\n@@ -48,4 +48,4 @@ public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExec\n \n     return WxMediaImgUploadResult.fromJson(responseContent);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/28/MediaImgUploadHttpRequestExecutor.java\nindex c7ff37ba88c..c98d30fbb41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/28/MediaImgUploadHttpRequestExecutor.java\n@@ -5,13 +5,11 @@ import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n import jodd.http.ProxyInfo;\n import jodd.util.StringPool;\n-\n import me.chanjar.weixin.common.WxType;\n import me.chanjar.weixin.common.error.WxError;\n import me.chanjar.weixin.common.error.WxErrorException;\n import me.chanjar.weixin.common.util.http.RequestHttp;\n import me.chanjar.weixin.mp.bean.material.WxMediaImgUploadResult;\n-\n import java.io.File;\n import java.io.IOException;\n \n@@ -20,6 +18,8 @@ import java.io.IOException;\n  *\n  * @author ecoolper\n  */\n+\n+\n public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public MediaImgUploadHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n@@ -36,10 +36,11 @@ public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExec\n       requestHttp.getRequestHttpClient().useProxy(requestHttp.getRequestHttpProxy());\n     }\n     request.withConnectionProvider(requestHttp.getRequestHttpClient());\n-\n     request.form(\"media\", data);\n+\n     HttpResponse response = request.send();\n     response.charset(StringPool.UTF_8);\n+\n     String responseContent = response.bodyText();\n     WxError error = WxError.fromJson(responseContent, WxType.MP);\n     if (error.getErrorCode() != 0) {\n@@ -48,4 +49,4 @@ public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExec\n \n     return WxMediaImgUploadResult.fromJson(responseContent);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/28/MediaImgUploadHttpRequestExecutor.java\nindex c7ff37ba88c..697124c13b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/28/MediaImgUploadHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/28/MediaImgUploadHttpRequestExecutor.java\n@@ -19,8 +19,7 @@ import java.io.IOException;\n  * Created by ecoolper on 2017/5/5.\n  *\n  * @author ecoolper\n- */\n-public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+ */ public class MediaImgUploadHttpRequestExecutor extends MediaImgUploadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public MediaImgUploadHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}