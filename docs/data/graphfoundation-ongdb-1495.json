{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1495",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1495/BoltFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1495/BoltFactoryImpl.java\nindex cfcf2d67922..dbea2d058c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1495/BoltFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1495/BoltFactoryImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.runtime;\n \n import java.time.Clock;\n@@ -39,63 +40,63 @@ import org.neo4j.udc.UsageData;\n \n public class BoltFactoryImpl extends LifecycleAdapter implements BoltFactory\n {\n-    private final GraphDatabaseAPI gds;\n-    private final UsageData usageData;\n-    private final LogService logging;\n-    private final Authentication authentication;\n-    private final BoltConnectionTracker connectionTracker;\n-    private final ThreadToStatementContextBridge txBridge;\n-    private final Config config;\n+  private final GraphDatabaseAPI gds;\n+  private final UsageData usageData;\n+  private final LogService logging;\n+  private final Authentication authentication;\n+  private final BoltConnectionTracker connectionTracker;\n+  private final ThreadToStatementContextBridge txBridge;\n+  private final Config config;\n \n-    private QueryExecutionEngine queryExecutionEngine;\n-    private GraphDatabaseQueryService queryService;\n-    private AvailabilityGuard availabilityGuard;\n+  private QueryExecutionEngine queryExecutionEngine;\n+  private GraphDatabaseQueryService queryService;\n+  private AvailabilityGuard availabilityGuard;\n \n-    public BoltFactoryImpl( GraphDatabaseAPI gds, UsageData usageData, LogService logging,\n-            ThreadToStatementContextBridge txBridge, Authentication authentication,\n-            BoltConnectionTracker connectionTracker, Config config )\n-    {\n-        this.gds = gds;\n-        this.usageData = usageData;\n-        this.logging = logging;\n-        this.txBridge = txBridge;\n-        this.authentication = authentication;\n-        this.connectionTracker = connectionTracker;\n-        this.config = config;\n-    }\n+  public BoltFactoryImpl(GraphDatabaseAPI gds, UsageData usageData, LogService logging,\n+                         ThreadToStatementContextBridge txBridge, Authentication authentication,\n+                         BoltConnectionTracker connectionTracker, Config config)\n+  {\n+    this.gds = gds;\n+    this.usageData = usageData;\n+    this.logging = logging;\n+    this.txBridge = txBridge;\n+    this.authentication = authentication;\n+    this.connectionTracker = connectionTracker;\n+    this.config = config;\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        DependencyResolver dependencyResolver = gds.getDependencyResolver();\n-        queryExecutionEngine = dependencyResolver.resolveDependency( QueryExecutionEngine.class );\n-        queryService = dependencyResolver.resolveDependency( GraphDatabaseQueryService.class );\n-        availabilityGuard = dependencyResolver.resolveDependency( AvailabilityGuard.class );\n-    }\n+  @Override\n+  public void start()\n+  {\n+    DependencyResolver dependencyResolver = gds.getDependencyResolver();\n+    queryExecutionEngine = dependencyResolver.resolveDependency(QueryExecutionEngine.class);\n+    queryService = dependencyResolver.resolveDependency(GraphDatabaseQueryService.class);\n+    availabilityGuard = dependencyResolver.resolveDependency(AvailabilityGuard.class);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        queryExecutionEngine = null;\n-        queryService = null;\n-        availabilityGuard = null;\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    queryExecutionEngine = null;\n+    queryService = null;\n+    availabilityGuard = null;\n+  }\n \n-    @Override\n-    public BoltStateMachine newMachine( BoltChannel boltChannel, Clock clock )\n-    {\n-        TransactionStateMachine.SPI transactionSPI = createTxSpi( clock );\n-        BoltStateMachine.SPI boltSPI = new BoltStateMachineSPI( boltChannel, usageData,\n-                logging, authentication, connectionTracker, transactionSPI );\n-        return new BoltStateMachine( boltSPI, boltChannel, clock, logging );\n-    }\n+  @Override\n+  public BoltStateMachine newMachine(BoltChannel boltChannel, Clock clock)\n+  {\n+    TransactionStateMachine.SPI transactionSPI = createTxSpi(clock);\n+    BoltStateMachine.SPI boltSPI = new BoltStateMachineSPI(boltChannel, usageData,\n+        logging, authentication, connectionTracker, transactionSPI);\n+    return new BoltStateMachine(boltSPI, boltChannel, clock, logging);\n+  }\n \n-    private TransactionStateMachine.SPI createTxSpi( Clock clock )\n-    {\n-        long bookmarkReadyTimeout = config.get( GraphDatabaseSettings.bookmark_ready_timeout ).toMillis();\n-        Duration txAwaitDuration = Duration.ofMillis( bookmarkReadyTimeout );\n+  private TransactionStateMachine.SPI createTxSpi(Clock clock)\n+  {\n+    long bookmarkReadyTimeout = config.get(GraphDatabaseSettings.bookmark_ready_timeout).toMillis();\n+    Duration txAwaitDuration = Duration.ofMillis(bookmarkReadyTimeout);\n \n-        return new TransactionStateMachineSPI( gds, txBridge, queryExecutionEngine,\n-                availabilityGuard, queryService, txAwaitDuration, clock );\n-    }\n+    return new TransactionStateMachineSPI(gds, txBridge, queryExecutionEngine,\n+        availabilityGuard, queryService, txAwaitDuration, clock);\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1495/BoltFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1495/BoltFactoryImpl.java\nindex cfcf2d67922..fd92a346579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1495/BoltFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1495/BoltFactoryImpl.java\n@@ -87,15 +87,14 @@ public class BoltFactoryImpl extends LifecycleAdapter implements BoltFactory\n         TransactionStateMachine.SPI transactionSPI = createTxSpi( clock );\n         BoltStateMachine.SPI boltSPI = new BoltStateMachineSPI( boltChannel, usageData,\n                 logging, authentication, connectionTracker, transactionSPI );\n-        return new BoltStateMachine( boltSPI, boltChannel, clock, logging );\n+return new BoltStateMachine( boltSPI, boltChannel, clock, logging );\n     }\n \n     private TransactionStateMachine.SPI createTxSpi( Clock clock )\n     {\n         long bookmarkReadyTimeout = config.get( GraphDatabaseSettings.bookmark_ready_timeout ).toMillis();\n         Duration txAwaitDuration = Duration.ofMillis( bookmarkReadyTimeout );\n-\n-        return new TransactionStateMachineSPI( gds, txBridge, queryExecutionEngine,\n+return new TransactionStateMachineSPI( gds, txBridge, queryExecutionEngine,\n                 availabilityGuard, queryService, txAwaitDuration, clock );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}