{
    "project_name": "eclipse-milo",
    "violation_id": "7",
    "information": {
        "violations": [
            {
                "line": "64",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public RedundantServerDataType[] getRedundantServerArray() {\n        Optional<RedundantServerDataType[]> propertyValue = getProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY);\n        return propertyValue.orElse(null);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/7/TransparentRedundancyTypeNode.java\nindex 8f83f4b5206..218785f934b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/7/TransparentRedundancyTypeNode.java\n@@ -61,7 +61,8 @@ public class TransparentRedundancyTypeNode extends ServerRedundancyTypeNode impl\n \n     @Override\n     public RedundantServerDataType[] getRedundantServerArray() {\n-        Optional<RedundantServerDataType[]> propertyValue = getProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY);\n+        Optional<RedundantServerDataType[]> propertyValue =\n+            getProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY);\n         return propertyValue.orElse(null);\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/7/TransparentRedundancyTypeNode.java\nindex 8f83f4b5206..9d852891406 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/7/TransparentRedundancyTypeNode.java\n@@ -69,4 +69,4 @@ public class TransparentRedundancyTypeNode extends ServerRedundancyTypeNode impl\n     public void setRedundantServerArray(RedundantServerDataType[] value) {\n         setProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY, value);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/7/TransparentRedundancyTypeNode.java\nindex 8f83f4b5206..a399f254bfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/7/TransparentRedundancyTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.model.nodes.objects;\n \n import java.util.Optional;\n-\n import org.eclipse.milo.opcua.sdk.core.nodes.VariableNode;\n import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyTypeNode;\n import org.eclipse.milo.opcua.sdk.server.model.types.objects.TransparentRedundancyType;\n@@ -24,15 +23,24 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n import org.eclipse.milo.opcua.stack.core.types.structured.RedundantServerDataType;\n \n public class TransparentRedundancyTypeNode extends ServerRedundancyTypeNode implements TransparentRedundancyType {\n-    public TransparentRedundancyTypeNode(UaNodeContext context, NodeId nodeId,\n-                                         QualifiedName browseName, LocalizedText displayName, LocalizedText description,\n-                                         UInteger writeMask, UInteger userWriteMask) {\n+    public TransparentRedundancyTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public TransparentRedundancyTypeNode(UaNodeContext context, NodeId nodeId,\n-                                         QualifiedName browseName, LocalizedText displayName, LocalizedText description,\n-                                         UInteger writeMask, UInteger userWriteMask, UByte eventNotifier) {\n+    public TransparentRedundancyTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask, UByte eventNotifier) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n     }\n \n@@ -69,4 +77,5 @@ public class TransparentRedundancyTypeNode extends ServerRedundancyTypeNode impl\n     public void setRedundantServerArray(RedundantServerDataType[] value) {\n         setProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY, value);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/random/files-repaired/7/TransparentRedundancyTypeNode.java\nindex 8f83f4b5206..24a384555cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/7/TransparentRedundancyTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/random/files-repaired/7/TransparentRedundancyTypeNode.java\n@@ -62,6 +62,7 @@ public class TransparentRedundancyTypeNode extends ServerRedundancyTypeNode impl\n     @Override\n     public RedundantServerDataType[] getRedundantServerArray() {\n         Optional<RedundantServerDataType[]> propertyValue = getProperty(TransparentRedundancyType.REDUNDANT_SERVER_ARRAY);\n+\n         return propertyValue.orElse(null);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}