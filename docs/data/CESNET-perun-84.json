{
    "project_name": "CESNET-perun",
    "violation_id": "84",
    "information": {
        "violations": [
            {
                "line": "15",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\t\t\tif(this.appliesToAttribute(attribute)) {\n\t\t\t\tif(attribute == null || attribute.getValue() == null) return null;\n\t\t\t\tif(valueTransformer != null) \n\t\t\t\t\t// TODO check the cast\n\t\t\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n\t\t\t\telse",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line matches the illegal pattern 'Wrong number of tabs before space on next line. Indent must use tab characters.'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CESNET-perun/styler/05_predictions/final/files-repaired/84/SingleAttributeValueExtractor.java\nindex f991b9e4475..5d4c10c71af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CESNET-perun/styler/05_predictions/final/files-repaired/84/SingleAttributeValueExtractor.java\n@@ -12,8 +12,7 @@ public class SingleAttributeValueExtractor<T extends PerunBean> extends Attribut\n \t\tfor (Attribute attribute : attributes) {\n \t\t\tif(this.appliesToAttribute(attribute)) {\n \t\t\t\tif(attribute == null || attribute.getValue() == null) return null;\n-\t\t\t\tif(valueTransformer != null) \n-\t\t\t\t\t// TODO check the cast\n+    if(valueTransformer != null) // TODO check the cast\n \t\t\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n \t\t\t\telse\n \t\t\t\t\treturn attribute.getValue().toString();\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/checkstyle_idea/84/SingleAttributeValueExtractor.java\nindex f991b9e4475..9af19ed5a48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/checkstyle_idea/84/SingleAttributeValueExtractor.java\n@@ -5,21 +5,26 @@ import cz.metacentrum.perun.core.api.PerunBean;\n import cz.metacentrum.perun.core.api.exceptions.InternalErrorException;\n import cz.metacentrum.perun.ldapc.model.PerunAttribute.SingleValueExtractor;\n \n-public class SingleAttributeValueExtractor<T extends PerunBean> extends AttributeValueExtractor implements SingleValueExtractor<T> {\n+public class SingleAttributeValueExtractor<T extends PerunBean> extends AttributeValueExtractor\n+    implements SingleValueExtractor<T> {\n \n-\t@Override\n-\tpublic String getValue(T bean, Attribute... attributes) throws InternalErrorException {\n-\t\tfor (Attribute attribute : attributes) {\n-\t\t\tif(this.appliesToAttribute(attribute)) {\n-\t\t\t\tif(attribute == null || attribute.getValue() == null) return null;\n-\t\t\t\tif(valueTransformer != null) \n-\t\t\t\t\t// TODO check the cast\n-\t\t\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n-\t\t\t\telse\n-\t\t\t\t\treturn attribute.getValue().toString();\n-\t\t\t}\n-\t\t}\n-\t\treturn null;\n-\t}\n+    @Override\n+    public String getValue(T bean, Attribute... attributes) throws InternalErrorException {\n+        for (Attribute attribute : attributes) {\n+            if (this.appliesToAttribute(attribute)) {\n+                if (attribute == null || attribute.getValue() == null) {\n+                    return null;\n+                }\n+                if (valueTransformer != null)\n+                // TODO check the cast\n+                {\n+                    return valueTransformer.getValue(attribute.getValue().toString(), attribute);\n+                } else {\n+                    return attribute.getValue().toString();\n+                }\n+            }\n+        }\n+        return null;\n+    }\n \n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line matches the illegal pattern 'Wrong number of tabs before space on next line. Indent must use tab characters.'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/styler/05_predictions/random/files-repaired/84/SingleAttributeValueExtractor.java\nindex f991b9e4475..5d4c10c71af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/styler/05_predictions/random/files-repaired/84/SingleAttributeValueExtractor.java\n@@ -12,8 +12,7 @@ public class SingleAttributeValueExtractor<T extends PerunBean> extends Attribut\n \t\tfor (Attribute attribute : attributes) {\n \t\t\tif(this.appliesToAttribute(attribute)) {\n \t\t\t\tif(attribute == null || attribute.getValue() == null) return null;\n-\t\t\t\tif(valueTransformer != null) \n-\t\t\t\t\t// TODO check the cast\n+    if(valueTransformer != null) // TODO check the cast\n \t\t\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n \t\t\t\telse\n \t\t\t\t\treturn attribute.getValue().toString();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line matches the illegal pattern 'Wrong number of tabs before space on next line. Indent must use tab characters.'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/styler/05_predictions/three_grams/files-repaired/84/SingleAttributeValueExtractor.java\nindex f991b9e4475..15c36e01df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/violations/84/SingleAttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CESNET-perun/styler/05_predictions/three_grams/files-repaired/84/SingleAttributeValueExtractor.java\n@@ -12,9 +12,8 @@ public class SingleAttributeValueExtractor<T extends PerunBean> extends Attribut\n \t\tfor (Attribute attribute : attributes) {\n \t\t\tif(this.appliesToAttribute(attribute)) {\n \t\t\t\tif(attribute == null || attribute.getValue() == null) return null;\n-\t\t\t\tif(valueTransformer != null) \n-\t\t\t\t\t// TODO check the cast\n-\t\t\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n+    if(valueTransformer != null)// TODO check the castreturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n+\t\t\treturn valueTransformer.getValue(attribute.getValue().toString(), attribute);\n \t\t\t\telse\n \t\t\t\t\treturn attribute.getValue().toString();\n \t\t\t}\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}