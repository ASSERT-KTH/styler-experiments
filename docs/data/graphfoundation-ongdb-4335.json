{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "4335",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4335/LabelTokenStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4335/LabelTokenStore.java\nindex b5f8f61606a..92fefa2d03b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4335/LabelTokenStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4335/LabelTokenStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.io.File;\n@@ -36,27 +37,27 @@ import org.neo4j.storageengine.api.Token;\n  */\n public class LabelTokenStore extends TokenStore<LabelTokenRecord, Token>\n {\n-    public static final String TYPE_DESCRIPTOR = \"LabelTokenStore\";\n+  public static final String TYPE_DESCRIPTOR = \"LabelTokenStore\";\n \n-    public LabelTokenStore(\n-            File file,\n-            Config config,\n-            IdGeneratorFactory idGeneratorFactory,\n-            PageCache pageCache,\n-            LogProvider logProvider,\n-            DynamicStringStore nameStore,\n-            RecordFormats recordFormats,\n-            OpenOption... openOptions )\n-    {\n-        super( file, config, IdType.LABEL_TOKEN, idGeneratorFactory, pageCache,\n-                logProvider, nameStore, TYPE_DESCRIPTOR, new Token.Factory(), recordFormats.labelToken(),\n-                recordFormats.storeVersion(), openOptions );\n-    }\n+  public LabelTokenStore(\n+      File file,\n+      Config config,\n+      IdGeneratorFactory idGeneratorFactory,\n+      PageCache pageCache,\n+      LogProvider logProvider,\n+      DynamicStringStore nameStore,\n+      RecordFormats recordFormats,\n+      OpenOption... openOptions)\n+  {\n+    super(file, config, IdType.LABEL_TOKEN, idGeneratorFactory, pageCache,\n+        logProvider, nameStore, TYPE_DESCRIPTOR, new Token.Factory(), recordFormats.labelToken(),\n+        recordFormats.storeVersion(), openOptions);\n+  }\n \n-    @Override\n-    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, LabelTokenRecord record )\n-            throws FAILURE\n-    {\n-        processor.processLabelToken( this, record );\n-    }\n+  @Override\n+  public <FAILURE extends Exception> void accept(Processor<FAILURE> processor, LabelTokenRecord record)\n+      throws FAILURE\n+  {\n+    processor.processLabelToken(this, record);\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4335/LabelTokenStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4335/LabelTokenStore.java\nindex b5f8f61606a..e7b6c20aea8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4335/LabelTokenStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4335/LabelTokenStore.java\n@@ -38,8 +38,7 @@ public class LabelTokenStore extends TokenStore<LabelTokenRecord, Token>\n {\n     public static final String TYPE_DESCRIPTOR = \"LabelTokenStore\";\n \n-    public LabelTokenStore(\n-            File file,\n+    public LabelTokenStore( File file,\n             Config config,\n             IdGeneratorFactory idGeneratorFactory,\n             PageCache pageCache,\n@@ -49,14 +48,12 @@ public class LabelTokenStore extends TokenStore<LabelTokenRecord, Token>\n             OpenOption... openOptions )\n     {\n         super( file, config, IdType.LABEL_TOKEN, idGeneratorFactory, pageCache,\n-                logProvider, nameStore, TYPE_DESCRIPTOR, new Token.Factory(), recordFormats.labelToken(),\n-                recordFormats.storeVersion(), openOptions );\n+                logProvider, nameStore, TYPE_DESCRIPTOR, new Token.Factory(), recordFormats.labelToken(), recordFormats.storeVersion(), openOptions );\n     }\n \n     @Override\n-    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, LabelTokenRecord record )\n-            throws FAILURE\n-    {\n+    public <FAILURE extends Exception> void accept( Processor<FAILURE> processor, LabelTokenRecord record ) throws FAILURE\n+{\n         processor.processLabelToken( this, record );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}