{
    "project_name": "neo4j-neo4j",
    "violation_id": "297",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/297/LogicalTransactionStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/297/LogicalTransactionStore.java\nindex f2d3f99b690..feecba9faf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/297/LogicalTransactionStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/297/LogicalTransactionStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n@@ -38,10 +39,10 @@ public interface LogicalTransactionStore\n      * @return an {@link TransactionCursor} capable of returning {@link CommittedTransactionRepresentation} instances\n      * for committed transactions, starting from the specified {@code transactionIdToStartFrom}.\n      * @throws NoSuchTransactionException if the requested transaction hasn't been committed,\n-     * or if the transaction has been committed, but information about it is no longer available for some reason.\n-     * @throws IOException if there was an I/O related error looking for the start transaction.\n+     *                                    or if the transaction has been committed, but information about it is no longer available for some reason.\n+     * @throws IOException                if there was an I/O related error looking for the start transaction.\n      */\n-    TransactionCursor getTransactions( long transactionIdToStartFrom ) throws IOException;\n+    TransactionCursor getTransactions(long transactionIdToStartFrom) throws IOException;\n \n     /**\n      * Acquires a {@link TransactionCursor cursor} which will provide {@link CommittedTransactionRepresentation}\n@@ -53,10 +54,10 @@ public interface LogicalTransactionStore\n      * @return an {@link TransactionCursor} capable of returning {@link CommittedTransactionRepresentation} instances\n      * for committed transactions, starting from the specified {@code position}.\n      * @throws NoSuchTransactionException if the requested transaction hasn't been committed,\n-     * or if the transaction has been committed, but information about it is no longer available for some reason.\n-     * @throws IOException if there was an I/O related error looking for the start transaction.\n+     *                                    or if the transaction has been committed, but information about it is no longer available for some reason.\n+     * @throws IOException                if there was an I/O related error looking for the start transaction.\n      */\n-    TransactionCursor getTransactions( LogPosition position ) throws IOException;\n+    TransactionCursor getTransactions(LogPosition position) throws IOException;\n \n     /**\n      * Acquires a {@link TransactionCursor cursor} which will provide {@link CommittedTransactionRepresentation}\n@@ -70,5 +71,5 @@ public interface LogicalTransactionStore\n      * for committed transactions in the given range in reverse order.\n      * @throws IOException if there was an I/O related error looking for the start transaction.\n      */\n-    TransactionCursor getTransactionsInReverseOrder( LogPosition backToPosition ) throws IOException;\n+    TransactionCursor getTransactionsInReverseOrder(LogPosition backToPosition) throws IOException;\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}