{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "485",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.logging.transaction.model;\n\nimport java.io.Serializable;\nimport java.sql.Timestamp;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "6",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/485/TransactionRepo.java\nindex 6c82a3242e6..a81b955f8c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/485/TransactionRepo.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.logging.transaction.model;\n+\n+package gov.hhs.fha.nhinc.logging.transaction.\n+\n+model ;\n \n import java.io.Serializable;\n import java.sql.Timestamp;\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/485/TransactionRepo.java\nindex 6c82a3242e6..0dfa3afb071 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/485/TransactionRepo.java\n@@ -24,101 +24,100 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.logging.transaction.model;\n \n import java.io.Serializable;\n import java.sql.Timestamp;\n \n /**\n- *\n  * @author jasonasmith\n- *\n  */\n public class TransactionRepo implements Serializable {\n \n-    private static final long serialVersionUID = -4477402717133468043L;\n-    private Long id;\n-    private String messageId;\n-    private String transactionId;\n-    private Timestamp time;\n+  private static final long serialVersionUID = -4477402717133468043L;\n+  private Long id;\n+  private String messageId;\n+  private String transactionId;\n+  private Timestamp time;\n \n-    /**\n-     * Get record ID.\n-     *\n-     * @return id the record id\n-     */\n-    public Long getId() {\n-        return id;\n-    }\n+  /**\n+   * Get record ID.\n+   *\n+   * @return id the record id\n+   */\n+  public Long getId() {\n+    return id;\n+  }\n \n-    /**\n-     * Set record ID.\n-     *\n-     * @param id sets the record id\n-     */\n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n+  /**\n+   * Set record ID.\n+   *\n+   * @param id sets the record id\n+   */\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n-    /**\n-     * Get message ID.\n-     *\n-     * @return messageId the messageId\n-     */\n-    public String getMessageId() {\n-        return messageId;\n-    }\n+  /**\n+   * Get message ID.\n+   *\n+   * @return messageId the messageId\n+   */\n+  public String getMessageId() {\n+    return messageId;\n+  }\n \n-    /**\n-     * Set message ID.\n-     *\n-     * @param messageId the value for the messageId\n-     */\n-    public void setMessageId(String messageId) {\n-        this.messageId = messageId;\n-    }\n+  /**\n+   * Set message ID.\n+   *\n+   * @param messageId the value for the messageId\n+   */\n+  public void setMessageId(String messageId) {\n+    this.messageId = messageId;\n+  }\n \n-    /**\n-     * Get transaction ID.\n-     *\n-     * @return transactionId the transactionID\n-     */\n-    public String getTransactionId() {\n-        return transactionId;\n-    }\n+  /**\n+   * Get transaction ID.\n+   *\n+   * @return transactionId the transactionID\n+   */\n+  public String getTransactionId() {\n+    return transactionId;\n+  }\n \n-    /**\n-     * Set transaction ID.\n-     *\n-     * @param transactionId value for the transaction Id\n-     */\n-    public void setTransactionId(String transactionId) {\n-        this.transactionId = transactionId;\n-    }\n+  /**\n+   * Set transaction ID.\n+   *\n+   * @param transactionId value for the transaction Id\n+   */\n+  public void setTransactionId(String transactionId) {\n+    this.transactionId = transactionId;\n+  }\n \n-    /**\n-     * Get timestamp.\n-     *\n-     * @return timestamp the timestamp value\n-     */\n-    public Timestamp getTime() {\n-        if (time == null) {\n-            return null;\n-        } else {\n-            return (Timestamp) time.clone();\n-        }\n+  /**\n+   * Get timestamp.\n+   *\n+   * @return timestamp the timestamp value\n+   */\n+  public Timestamp getTime() {\n+    if (time == null) {\n+      return null;\n+    } else {\n+      return (Timestamp) time.clone();\n     }\n+  }\n \n-    /**\n-     * Set timestamp.\n-     *\n-     * @param time the value for the timestamp\n-     */\n-    public void setTime(Timestamp time) {\n-        if (time != null) {\n-            this.time = (Timestamp) time.clone();\n-        } else {\n-            this.time = null;\n-        }\n+  /**\n+   * Set timestamp.\n+   *\n+   * @param time the value for the timestamp\n+   */\n+  public void setTime(Timestamp time) {\n+    if (time != null) {\n+      this.time = (Timestamp) time.clone();\n+    } else {\n+      this.time = null;\n     }\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/485/TransactionRepo.java\nindex 6c82a3242e6..0fdaccdeef8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/485/TransactionRepo.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.logging.transaction.model;\n \n import java.io.Serializable;\n@@ -121,4 +122,4 @@ public class TransactionRepo implements Serializable {\n             this.time = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "122",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/485/TransactionRepo.java\nindex 6c82a3242e6..e5fab120f6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/485/TransactionRepo.java\n@@ -34,9 +34,12 @@ import java.sql.Timestamp;\n  * @author jasonasmith\n  *\n  */\n+\n+\n public class TransactionRepo implements Serializable {\n \n-    private static final long serialVersionUID = -4477402717133468043L;\n+    private static final long serialVersionUID = -\n+                                                     4477402717133468043L;\n     private Long id;\n     private String messageId;\n     private String transactionId;\n@@ -47,6 +50,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @return id the record id\n      */\n+\n+\n     public Long getId() {\n         return id;\n     }\n@@ -56,6 +61,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @param id sets the record id\n      */\n+\n+\n     public void setId(Long id) {\n         this.id = id;\n     }\n@@ -65,6 +72,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @return messageId the messageId\n      */\n+\n+\n     public String getMessageId() {\n         return messageId;\n     }\n@@ -74,6 +83,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @param messageId the value for the messageId\n      */\n+\n+\n     public void setMessageId(String messageId) {\n         this.messageId = messageId;\n     }\n@@ -83,6 +94,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @return transactionId the transactionID\n      */\n+\n+\n     public String getTransactionId() {\n         return transactionId;\n     }\n@@ -92,6 +105,8 @@ public class TransactionRepo implements Serializable {\n      *\n      * @param transactionId value for the transaction Id\n      */\n+\n+\n     public void setTransactionId(String transactionId) {\n         this.transactionId = transactionId;\n     }\n@@ -101,11 +116,17 @@ public class TransactionRepo implements Serializable {\n      *\n      * @return timestamp the timestamp value\n      */\n+\n+\n     public Timestamp getTime() {\n-        if (time == null) {\n+        if(time == null) {\n             return null;\n-        } else {\n-            return (Timestamp) time.clone();\n+        }\n+\n+\n+else {\n+            return (Timestamp)\n+                       time.clone();\n         }\n     }\n \n@@ -114,11 +135,18 @@ public class TransactionRepo implements Serializable {\n      *\n      * @param time the value for the timestamp\n      */\n+\n+\n     public void setTime(Timestamp time) {\n-        if (time != null) {\n-            this.time = (Timestamp) time.clone();\n-        } else {\n+        if(time != null) {\n+            this.time = (Timestamp)\n+                            time.clone();\n+        }\n+\n+\n+else {\n             this.time = null;\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "30",
                    "column": "6",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/485/TransactionRepo.java\nindex 6c82a3242e6..a81b955f8c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/485/TransactionRepo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/485/TransactionRepo.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.logging.transaction.model;\n+\n+package gov.hhs.fha.nhinc.logging.transaction.\n+\n+model ;\n \n import java.io.Serializable;\n import java.sql.Timestamp;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}