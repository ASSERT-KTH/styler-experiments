{
    "project_name": "vassalengine-vassal",
    "violation_id": "21",
    "information": {
        "violations": [
            {
                "line": "63",
                "column": "59",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "  public PeerReader(InputStream pIs) {\n    IllegalArgument.ifNull(\"Is\", pIs);\n    zReader = new BufferedReader(new InputStreamReader(pIs,Charset.forName(\"UTF-8\")));\n    setName(\"Peer Reader Thread\");\n    start();\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/vassalengine-vassal/styler/05_predictions/final/files-repaired/21/PeerReader.java\nindex 890da2e7c57..cbe914f1d80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/vassalengine-vassal/styler/05_predictions/final/files-repaired/21/PeerReader.java\n@@ -60,7 +60,7 @@ public class PeerReader extends Thread {\n \n   public PeerReader(InputStream pIs) {\n     IllegalArgument.ifNull(\"Is\", pIs);\n-    zReader = new BufferedReader(new InputStreamReader(pIs,Charset.forName(\"UTF-8\")));\n+    zReader = new BufferedReader(new InputStreamReader(pIs, Charset.forName(\"UTF-8\")));\n     setName(\"Peer Reader Thread\");\n     start();\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/checkstyle_idea/21/PeerReader.java\nindex 890da2e7c57..e9d1e8c47f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/checkstyle_idea/21/PeerReader.java\n@@ -47,9 +47,7 @@ import java.util.Vector;\n //\n \n /**\n- * @author  Devin Smith and George Smith\n- * @version 0.3 05/17/13 Specify UTF-8 charset\n- * @version 0.2 04/20/13 Add thread name, change history.\n+ * @author Devin Smith and George Smith\n  * @version 0.1 12/27/01 Initial Version\n  */\n \n@@ -60,7 +58,7 @@ public class PeerReader extends Thread {\n \n   public PeerReader(InputStream pIs) {\n     IllegalArgument.ifNull(\"Is\", pIs);\n-    zReader = new BufferedReader(new InputStreamReader(pIs,Charset.forName(\"UTF-8\")));\n+    zReader = new BufferedReader(new InputStreamReader(pIs, Charset.forName(\"UTF-8\")));\n     setName(\"Peer Reader Thread\");\n     start();\n   }\n@@ -86,8 +84,7 @@ public class PeerReader extends Thread {\n     while (isOpen && zLines.isEmpty()) {\n       try {\n         wait();\n-      }\n-      catch (InterruptedException e) {\n+      } catch (InterruptedException e) {\n       }\n     }\n     String message = null;\n@@ -107,14 +104,12 @@ public class PeerReader extends Thread {\n           break;\n         }\n       }\n-    }\n-    catch (Exception ignoreBecauseWeAssumeSocketClosed) {\n+    } catch (Exception ignoreBecauseWeAssumeSocketClosed) {\n     }\n     isOpen = false;\n     try {\n       zReader.close();\n-    }\n-    catch (IOException ignore) {\n+    } catch (IOException ignore) {\n     }\n   }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/random/files-repaired/21/PeerReader.java\nindex 890da2e7c57..cbe914f1d80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/random/files-repaired/21/PeerReader.java\n@@ -60,7 +60,7 @@ public class PeerReader extends Thread {\n \n   public PeerReader(InputStream pIs) {\n     IllegalArgument.ifNull(\"Is\", pIs);\n-    zReader = new BufferedReader(new InputStreamReader(pIs,Charset.forName(\"UTF-8\")));\n+    zReader = new BufferedReader(new InputStreamReader(pIs, Charset.forName(\"UTF-8\")));\n     setName(\"Peer Reader Thread\");\n     start();\n   }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/three_grams/files-repaired/21/PeerReader.java\nindex 890da2e7c57..cbe914f1d80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/21/PeerReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/three_grams/files-repaired/21/PeerReader.java\n@@ -60,7 +60,7 @@ public class PeerReader extends Thread {\n \n   public PeerReader(InputStream pIs) {\n     IllegalArgument.ifNull(\"Is\", pIs);\n-    zReader = new BufferedReader(new InputStreamReader(pIs,Charset.forName(\"UTF-8\")));\n+    zReader = new BufferedReader(new InputStreamReader(pIs, Charset.forName(\"UTF-8\")));\n     setName(\"Peer Reader Thread\");\n     start();\n   }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}