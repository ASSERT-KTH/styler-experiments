{
    "project_name": "DSC-SPIDAL-harp",
    "violation_id": "45",
    "information": {
        "violations": [
            {
                "line": "3",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright 2013-2017 Indiana University\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/checkstyle_idea/45/Constants.java\nindex 0d6defb1c4f..03a67c9ec61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/checkstyle_idea/45/Constants.java\n@@ -1,6 +1,6 @@\n /*\r\n  * Copyright 2013-2017 Indiana University\r\n- * \r\n+ *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n@@ -18,26 +18,26 @@ package edu.iu.kmeans.sgxsimu;\n \r\n public class Constants {\r\n \r\n-  public static final String ENCLAVE_TASK =\r\n-    \"sgx data size for each task\";\r\n-  public static final String ENCLAVE_TOTAL =\r\n-    \"total enclave capacity\";\r\n-  public static final String ENCLAVE_PER_THD =\r\n-    \"effective enclave size per thread\";\r\n-  public static final String ENABLE_SIMU=\"true\";\r\n+    public static final String ENCLAVE_TASK =\r\n+        \"sgx data size for each task\";\r\n+    public static final String ENCLAVE_TOTAL =\r\n+        \"total enclave capacity\";\r\n+    public static final String ENCLAVE_PER_THD =\r\n+        \"effective enclave size per thread\";\r\n+    public static final String ENABLE_SIMU = \"true\";\r\n \r\n-  // for enclave overhead simulation\r\n-  // overhead is measured by x1000 cycles at 2.3 GHz SGX-enabled CPU\r\n-  public static final double Ecall=8.5;\r\n-  public static final double Ocall=9.0;\r\n-  public static final double cross_enclave_per_kb=1.4;\r\n-  public static final double creation_enclave_fix=221000.0;\r\n-  public static final double creation_enclave_kb=22.677;\r\n-  public static final double local_attestation=80.0;\r\n-  public static final double remote_attestation=27200.0;\r\n-  public static final double swap_page_penalty=40;\r\n-  //for 3.4GHz SGX-enabled CPU\r\n-  public static final double ms_per_kcycle=0.0002941;\r\n-  // public static final boolean enablesimu=false;\r\n+    // for enclave overhead simulation\r\n+    // overhead is measured by x1000 cycles at 2.3 GHz SGX-enabled CPU\r\n+    public static final double Ecall = 8.5;\r\n+    public static final double Ocall = 9.0;\r\n+    public static final double cross_enclave_per_kb = 1.4;\r\n+    public static final double creation_enclave_fix = 221000.0;\r\n+    public static final double creation_enclave_kb = 22.677;\r\n+    public static final double local_attestation = 80.0;\r\n+    public static final double remote_attestation = 27200.0;\r\n+    public static final double swap_page_penalty = 40;\r\n+    //for 3.4GHz SGX-enabled CPU\r\n+    public static final double ms_per_kcycle = 0.0002941;\r\n+    // public static final boolean enablesimu=false;\r\n \r\n }\r\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/naturalize/45/Constants.java\nindex 0d6defb1c4f..30d84784bd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/naturalize/45/Constants.java\n@@ -40,4 +40,4 @@ public class Constants {\n   public static final double ms_per_kcycle=0.0002941;\r\n   // public static final boolean enablesimu=false;\r\n \r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/codebuff/45/Constants.java\nindex 0d6defb1c4f..6a5ee7f5ebf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/codebuff/45/Constants.java\n@@ -14,30 +14,38 @@\n  * limitations under the License.\r\n  */\r\n \r\n-package edu.iu.kmeans.sgxsimu;\r\n-\r\n-public class Constants {\r\n-\r\n-  public static final String ENCLAVE_TASK =\r\n-    \"sgx data size for each task\";\r\n-  public static final String ENCLAVE_TOTAL =\r\n-    \"total enclave capacity\";\r\n-  public static final String ENCLAVE_PER_THD =\r\n-    \"effective enclave size per thread\";\r\n-  public static final String ENABLE_SIMU=\"true\";\r\n+package edu.iu.kmeans.sgxsimu;\n+\n+\n+public class Constants {\n+  public static final String ENCLAVE_TASK =\n+    \"sgx data size for each task\";\n+  public static final String ENCLAVE_TOTAL =\n+    \"total enclave capacity\";\n+  public static final String ENCLAVE_PER_THD =\n+    \"effective enclave size per thread\";\n+  public static final String ENABLE_SIMU =\n+    \"true\";\r\n \r\n   // for enclave overhead simulation\r\n-  // overhead is measured by x1000 cycles at 2.3 GHz SGX-enabled CPU\r\n-  public static final double Ecall=8.5;\r\n-  public static final double Ocall=9.0;\r\n-  public static final double cross_enclave_per_kb=1.4;\r\n-  public static final double creation_enclave_fix=221000.0;\r\n-  public static final double creation_enclave_kb=22.677;\r\n-  public static final double local_attestation=80.0;\r\n-  public static final double remote_attestation=27200.0;\r\n-  public static final double swap_page_penalty=40;\r\n-  //for 3.4GHz SGX-enabled CPU\r\n-  public static final double ms_per_kcycle=0.0002941;\r\n-  // public static final boolean enablesimu=false;\r\n-\r\n-}\r\n+  // overhead is measured by x1000 cycles at 2.3 GHz SGX-enabled CPU\n+  public static final double Ecall =\n+    8.5;\n+  public static final double Ocall =\n+    9.0;\n+  public static final double cross_enclave_per_kb =\n+    1.4;\n+  public static final double creation_enclave_fix =\n+    221000.0;\n+  public static final double creation_enclave_kb =\n+    22.677;\n+  public static final double local_attestation =\n+    80.0;\n+  public static final double remote_attestation =\n+    27200.0;\n+  public static final double swap_page_penalty = 40;\r\n+  //for 3.4GHz SGX-enabled CPU\n+  public static final double ms_per_kcycle =\n+    0.0002941;\r\n+  // public static final boolean enablesimu=false;\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "3",
                    "severity": "error",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/styler/05_predictions/three_grams/files-repaired/45/Constants.java\nindex 0d6defb1c4f..eadc7f87326 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/violations/45/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DSC-SPIDAL-harp/styler/05_predictions/three_grams/files-repaired/45/Constants.java\n@@ -14,6 +14,7 @@\n  * limitations under the License.\r\n  */\r\n \r\n+\r\n package edu.iu.kmeans.sgxsimu;\r\n \r\n public class Constants {\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}