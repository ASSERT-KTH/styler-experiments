{
    "project_name": "Gurux-gurux.dlms.java",
    "violation_id": "8",
    "information": {
        "violations": [
            {
                "line": "68",
                "severity": "warning",
                "message": "Line is longer than 80 characters (found 86).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * Collection of enumerator values.\n     */\n    private static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n\n    /**\n     * Returns collection of enumerator values.",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/final/files-repaired/8/CreditCollectionConfiguration.java\nindex 0f77a4da451..74d3da9c443 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/final/files-repaired/8/CreditCollectionConfiguration.java\n@@ -65,14 +65,15 @@ public enum CreditCollectionConfiguration {\n     /**\n      * Collection of enumerator values.\n      */\n-    private static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n+    private\n+    static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n \n-    /**\n+     /**\n      * Returns collection of enumerator values.\n      * \n      * @return Enumerator values.\n      */\n-    private static HashMap<Integer, CreditCollectionConfiguration>\n+     private static HashMap<Integer, CreditCollectionConfiguration>\n             getMappings() {\n         synchronized (CreditCollectionConfiguration.class) {\n             if (mappings == null) {\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/checkstyle_idea/8/CreditCollectionConfiguration.java\nindex 0f77a4da451..4fcb2d94709 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/checkstyle_idea/8/CreditCollectionConfiguration.java\n@@ -65,15 +65,16 @@ public enum CreditCollectionConfiguration {\n     /**\n      * Collection of enumerator values.\n      */\n-    private static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n+    private static java.util.HashMap<Integer, CreditCollectionConfiguration>\n+            mappings;\n \n     /**\n      * Returns collection of enumerator values.\n-     * \n+     *\n      * @return Enumerator values.\n      */\n     private static HashMap<Integer, CreditCollectionConfiguration>\n-            getMappings() {\n+    getMappings() {\n         synchronized (CreditCollectionConfiguration.class) {\n             if (mappings == null) {\n                 mappings =\n@@ -85,9 +86,8 @@ public enum CreditCollectionConfiguration {\n \n     /**\n      * Constructor.\n-     * \n-     * @param value\n-     *            Integer value of enumerator.\n+     *\n+     * @param value Integer value of enumerator.\n      */\n     CreditCollectionConfiguration(final int value) {\n         intValue = value;\n@@ -96,7 +96,7 @@ public enum CreditCollectionConfiguration {\n \n     /**\n      * Get integer value for enumerator.\n-     * \n+     *\n      * @return Enumerator integer value.\n      */\n     public int getValue() {\n@@ -105,9 +105,8 @@ public enum CreditCollectionConfiguration {\n \n     /**\n      * Returns enumerator value from an integer value.\n-     * \n-     * @param value\n-     *            Integer value.\n+     *\n+     * @param value Integer value.\n      * @return Enumeration value.\n      */\n     public static CreditCollectionConfiguration forValue(final int value) {\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/codebuff/8/CreditCollectionConfiguration.java\nindex 0f77a4da451..901eb8f2459 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/codebuff/8/CreditCollectionConfiguration.java\n@@ -39,27 +39,36 @@ import java.util.HashMap;\n /**\n  * Defines behavior under specific conditions.\n  */\n+\n public enum CreditCollectionConfiguration {\n     /**\n      * None.\n      */\n+\n     NONE(0),\n     /**\n      * Collect when supply disconnected.\n      */\n+\n+\n     DISCONNECTED(0x80),\n     /**\n      * Collect in load limiting periods.\n      */\n+\n+\n     LOAD_LIMITING(0x40),\n     /**\n      * Collect in friendly credit periods.\n      */\n+\n+\n     FRIENDLY_CREDIT(0x20);\n \n     /**\n      * Integer value of enumerator.\n      */\n+\n     private int intValue;\n \n     /**\n@@ -72,12 +81,10 @@ public enum CreditCollectionConfiguration {\n      * \n      * @return Enumerator values.\n      */\n-    private static HashMap<Integer, CreditCollectionConfiguration>\n-            getMappings() {\n+    private static HashMap<Integer, CreditCollectionConfiguration> getMappings() {\n         synchronized (CreditCollectionConfiguration.class) {\n             if (mappings == null) {\n-                mappings =\n-                        new HashMap<Integer, CreditCollectionConfiguration>();\n+                mappings = new HashMap<Integer, CreditCollectionConfiguration>();\n             }\n         }\n         return mappings;\n@@ -89,6 +96,7 @@ public enum CreditCollectionConfiguration {\n      * @param value\n      *            Integer value of enumerator.\n      */\n+\n     CreditCollectionConfiguration(final int value) {\n         intValue = value;\n         getMappings().put(new Integer(value), this);\n@@ -99,6 +107,7 @@ public enum CreditCollectionConfiguration {\n      * \n      * @return Enumerator integer value.\n      */\n+\n     public int getValue() {\n         return intValue;\n     }\n@@ -110,6 +119,8 @@ public enum CreditCollectionConfiguration {\n      *            Integer value.\n      * @return Enumeration value.\n      */\n+\n+\n     public static CreditCollectionConfiguration forValue(final int value) {\n         return getMappings().get(new Integer(value));\n     }\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/random/files-repaired/8/CreditCollectionConfiguration.java\nindex 0f77a4da451..74d3da9c443 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/random/files-repaired/8/CreditCollectionConfiguration.java\n@@ -65,14 +65,15 @@ public enum CreditCollectionConfiguration {\n     /**\n      * Collection of enumerator values.\n      */\n-    private static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n+    private\n+    static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n \n-    /**\n+     /**\n      * Returns collection of enumerator values.\n      * \n      * @return Enumerator values.\n      */\n-    private static HashMap<Integer, CreditCollectionConfiguration>\n+     private static HashMap<Integer, CreditCollectionConfiguration>\n             getMappings() {\n         synchronized (CreditCollectionConfiguration.class) {\n             if (mappings == null) {\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "71",
                    "column": "4",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/three_grams/files-repaired/8/CreditCollectionConfiguration.java\nindex 0f77a4da451..e32c42685c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/violations/8/CreditCollectionConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Gurux-gurux.dlms.java/styler/05_predictions/three_grams/files-repaired/8/CreditCollectionConfiguration.java\n@@ -65,14 +65,17 @@ public enum CreditCollectionConfiguration {\n     /**\n      * Collection of enumerator values.\n      */\n-    private static java.util.HashMap<Integer, CreditCollectionConfiguration> mappings;\n+    private static java.util.HashMap<Integer, CreditCollectionConfiguration>\n \n-    /**\n+    mappings\n+    ;\n+\n+     /**\n      * Returns collection of enumerator values.\n      * \n      * @return Enumerator values.\n      */\n-    private static HashMap<Integer, CreditCollectionConfiguration>\n+     private static HashMap<Integer, CreditCollectionConfiguration>\n             getMappings() {\n         synchronized (CreditCollectionConfiguration.class) {\n             if (mappings == null) {\n",
            "diff_size": 6
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}