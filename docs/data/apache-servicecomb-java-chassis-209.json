{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "209",
    "information": {
        "violations": [
            {
                "line": "149",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    } catch (URISyntaxException e) {\n      throw new ServiceCombException(\n          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n          e);\n    }\n    return addressWithoutSchema;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/209/AbstractTransport.java\nindex ae9dd664bdd..9105185e09c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/209/AbstractTransport.java\n@@ -54,11 +54,12 @@ public abstract class AbstractTransport implements Transport {\n   private static final long DEFAULT_TIMEOUT_MILLIS = 30000;\n \n   private static DynamicLongProperty prop = null;\n+\n   public static DynamicLongProperty getRequestTimeoutProperty() {\n     if (prop != null) {\n       return prop;\n     }\n-    \n+\n     prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n@@ -90,7 +91,7 @@ public abstract class AbstractTransport implements Transport {\n    * addressWithoutSchema \u914d\u7f6e\u7684URI\uff0c\u6ca1\u6709schema\u90e8\u5206\n    */\n   protected void setListenAddressWithoutSchema(String addressWithoutSchema,\n-      Map<String, String> pairs) {\n+                                               Map<String, String> pairs) {\n     addressWithoutSchema = genAddressWithoutSchema(addressWithoutSchema, pairs);\n \n     this.endpoint = new Endpoint(this, NetUtils.getRealListenAddress(getName(), addressWithoutSchema));\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/209/AbstractTransport.java\nindex ae9dd664bdd..05e0cdb0ff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/209/AbstractTransport.java\n@@ -58,8 +58,8 @@ public abstract class AbstractTransport implements Transport {\n     if (prop != null) {\n       return prop;\n     }\n-    \n-    prop = DynamicPropertyFactory.getInstance()\n+\n+prop = DynamicPropertyFactory.getInstance()\n         .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n   }\n@@ -159,4 +159,4 @@ public abstract class AbstractTransport implements Transport {\n     }\n     return new URIEndpointObject(address);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/209/AbstractTransport.java\nindex ae9dd664bdd..57d30794813 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/209/AbstractTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/209/AbstractTransport.java\n@@ -24,15 +24,12 @@ import java.net.URLDecoder;\n import java.nio.charset.StandardCharsets;\n import java.util.Map;\n import java.util.stream.Collectors;\n-\n import org.apache.http.client.utils.URLEncodedUtils;\n import org.apache.http.message.BasicNameValuePair;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import com.netflix.config.DynamicLongProperty;\n import com.netflix.config.DynamicPropertyFactory;\n-\n import io.servicecomb.core.Const;\n import io.servicecomb.core.Endpoint;\n import io.servicecomb.core.Transport;\n@@ -49,22 +46,24 @@ public abstract class AbstractTransport implements Transport {\n   /**\n    * \u7528\u4e8e\u53c2\u6570\u4f20\u9012\uff1a\u6bd4\u5982\u5411RestServerVerticle\u4f20\u9012endpoint\u5730\u5740\u3002\n    */\n+\n   public static final String ENDPOINT_KEY = \"cse.endpoint\";\n \n   private static final long DEFAULT_TIMEOUT_MILLIS = 30000;\n \n   private static DynamicLongProperty prop = null;\n+\n   public static DynamicLongProperty getRequestTimeoutProperty() {\n     if (prop != null) {\n       return prop;\n     }\n-    \n-    prop = DynamicPropertyFactory.getInstance()\n-        .getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n+\n+    prop = DynamicPropertyFactory.getInstance().getLongProperty(\"cse.request.timeout\", DEFAULT_TIMEOUT_MILLIS);\n     return prop;\n   }\n \n   // \u6240\u6709transport\u4f7f\u7528\u540c\u4e00\u4e2avertx\u5b9e\u4f8b\uff0c\u907f\u514d\u521b\u5efa\u592a\u591a\u7684\u7ebf\u7a0b\n+\n   protected Vertx transportVertx = VertxUtils.getOrCreateVertxByName(\"transport\", null);\n \n   protected Endpoint endpoint;\n@@ -89,14 +88,12 @@ public abstract class AbstractTransport implements Transport {\n    * \u5c06\u914d\u7f6e\u7684URI\u8f6c\u6362\u4e3aendpoint\n    * addressWithoutSchema \u914d\u7f6e\u7684URI\uff0c\u6ca1\u6709schema\u90e8\u5206\n    */\n-  protected void setListenAddressWithoutSchema(String addressWithoutSchema,\n-      Map<String, String> pairs) {\n-    addressWithoutSchema = genAddressWithoutSchema(addressWithoutSchema, pairs);\n \n+  protected void setListenAddressWithoutSchema(String addressWithoutSchema, Map<String, String> pairs) {\n+    addressWithoutSchema = genAddressWithoutSchema(addressWithoutSchema, pairs);\n     this.endpoint = new Endpoint(this, NetUtils.getRealListenAddress(getName(), addressWithoutSchema));\n     if (this.endpoint.getEndpoint() != null) {\n-      this.publishEndpoint = new Endpoint(this, RegistryUtils.getPublishAddress(getName(),\n-          addressWithoutSchema));\n+      this.publishEndpoint = new Endpoint(this, RegistryUtils.getPublishAddress(getName(), addressWithoutSchema));\n     } else {\n       this.publishEndpoint = null;\n     }\n@@ -114,16 +111,17 @@ public abstract class AbstractTransport implements Transport {\n       addressWithoutSchema += \"&\";\n     }\n \n-    String encodedQuery = URLEncodedUtils.format(pairs.entrySet().stream().map(entry -> {\n-      return new BasicNameValuePair(entry.getKey(), entry.getValue());\n-    }).collect(Collectors.toList()), StandardCharsets.UTF_8.name());\n-\n-    if (!RegistryUtils.getServiceRegistry().getFeatures().isCanEncodeEndpoint()) {\n+    String encodedQuery = URLEncodedUtils.format(pairs.entrySet().stream()\n+                                                                 .map(entry -> {\n+                                                                   return new BasicNameValuePair(entry.getKey(), entry.getValue());\n+                                                                 })\n+                                                                 .collect(Collectors.toList()), StandardCharsets.UTF_8.name());\n+    if (!RegistryUtils.getServiceRegistry().getFeatures()\n+                                           .isCanEncodeEndpoint()) {\n       addressWithoutSchema = genAddressWithoutSchemaForOldSC(addressWithoutSchema, encodedQuery);\n     } else {\n       addressWithoutSchema += encodedQuery;\n     }\n-\n     return addressWithoutSchema;\n   }\n \n@@ -132,8 +130,8 @@ public abstract class AbstractTransport implements Transport {\n     // sdk must query service center's version, and determine if encode query\n     // traced by JAV-307\n     try {\n-      LOGGER.warn(\"Service center do not support encoded query, so we use unencoded query, \"\n-          + \"this caused not support chinese/space (and maybe other char) in query value.\");\n+      LOGGER.warn(\"Service center do not support encoded query, so we use unencoded query, \" + \"this caused not support chinese/space (and maybe other char) in query value.\");\n+\n       String decodedQuery = URLDecoder.decode(encodedQuery, StandardCharsets.UTF_8.name());\n       addressWithoutSchema += decodedQuery;\n     } catch (UnsupportedEncodingException e) {\n@@ -145,9 +143,8 @@ public abstract class AbstractTransport implements Transport {\n       // make sure consumer can handle this endpoint\n       new URI(Const.RESTFUL + \"://\" + addressWithoutSchema);\n     } catch (URISyntaxException e) {\n-      throw new ServiceCombException(\n-          \"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n-          e);\n+      throw new ServiceCombException(\"current service center not support encoded endpoint, please do not use chinese or space or anything need to be encoded.\",\n+        e);\n     }\n     return addressWithoutSchema;\n   }\n@@ -159,4 +156,4 @@ public abstract class AbstractTransport implements Transport {\n     }\n     return new URIEndpointObject(address);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}