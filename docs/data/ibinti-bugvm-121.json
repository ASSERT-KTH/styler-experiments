{
    "project_name": "ibinti-bugvm",
    "violation_id": "121",
    "information": {
        "violations": [
            {
                "line": "48",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 82).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     *             if code or locale is not in a legal format or not available\n     */\n    public abstract String getDisplayLanguage(String languageCode, Locale locale);\n\n    /**\n     * Returns the localized name for the given ISO 3166 country code.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ibinti-bugvm/styler/05_predictions/final/files-repaired/121/LocaleNameProvider.java\nindex 0d25074227c..c207f55da3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ibinti-bugvm/styler/05_predictions/final/files-repaired/121/LocaleNameProvider.java\n@@ -45,9 +45,8 @@ public abstract class LocaleNameProvider extends LocaleServiceProvider {\n      * @throws IllegalArgumentException\r\n      *             if code or locale is not in a legal format or not available\r\n      */\r\n-    public abstract String getDisplayLanguage(String languageCode, Locale locale);\r\n-\r\n-    /**\r\n+    public abstract String getDisplayLanguage(String languageCode, Locale locale)\r\n+    ; /**\r\n      * Returns the localized name for the given ISO 3166 country code.\r\n      *\r\n      * @param countryCode an ISO 3166 language code\r\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/checkstyle_idea/121/LocaleNameProvider.java\nindex 0d25074227c..b197ca9b31e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/checkstyle_idea/121/LocaleNameProvider.java\n@@ -23,53 +23,48 @@ import java.util.Locale;\n  * This abstract class should be extended by service providers that provide\r\n  * localized locale names.\r\n  * <p>Note that Android does not support user-supplied locale service providers.\r\n- * @since 1.6\r\n+ *\r\n  * @hide\r\n+ * @since 1.6\r\n  */\r\n public abstract class LocaleNameProvider extends LocaleServiceProvider {\r\n-    /**\r\n-     * Default constructor, for use by subclasses.\r\n-     */\r\n-    protected LocaleNameProvider() {\r\n-        // do nothing\r\n-    }\r\n+  /**\r\n+   * Default constructor, for use by subclasses.\r\n+   */\r\n+  protected LocaleNameProvider() {\r\n+    // do nothing\r\n+  }\r\n \r\n-    /**\r\n-     * Returns the localized name for the given ISO 639 language code.\r\n-     *\r\n-     * @param languageCode an ISO 639 language code\r\n-     * @param locale a locale\r\n-     * @return the name or null if unavailable\r\n-     * @throws NullPointerException\r\n-     *             if {@code code == null || locale == null}\r\n-     * @throws IllegalArgumentException\r\n-     *             if code or locale is not in a legal format or not available\r\n-     */\r\n-    public abstract String getDisplayLanguage(String languageCode, Locale locale);\r\n+  /**\r\n+   * Returns the localized name for the given ISO 639 language code.\r\n+   *\r\n+   * @param languageCode an ISO 639 language code\r\n+   * @param locale       a locale\r\n+   * @return the name or null if unavailable\r\n+   * @throws NullPointerException     if {@code code == null || locale == null}\r\n+   * @throws IllegalArgumentException if code or locale is not in a legal format or not available\r\n+   */\r\n+  public abstract String getDisplayLanguage(String languageCode, Locale locale);\r\n \r\n-    /**\r\n-     * Returns the localized name for the given ISO 3166 country code.\r\n-     *\r\n-     * @param countryCode an ISO 3166 language code\r\n-     * @param locale a locale\r\n-     * @return the name or null if unavailable\r\n-     * @throws NullPointerException\r\n-     *             if {@code code == null || locale == null}\r\n-     * @throws IllegalArgumentException\r\n-     *             if code or locale is not in a legal format or not available\r\n-     */\r\n-    public abstract String getDisplayCountry(String countryCode, Locale locale);\r\n+  /**\r\n+   * Returns the localized name for the given ISO 3166 country code.\r\n+   *\r\n+   * @param countryCode an ISO 3166 language code\r\n+   * @param locale      a locale\r\n+   * @return the name or null if unavailable\r\n+   * @throws NullPointerException     if {@code code == null || locale == null}\r\n+   * @throws IllegalArgumentException if code or locale is not in a legal format or not available\r\n+   */\r\n+  public abstract String getDisplayCountry(String countryCode, Locale locale);\r\n \r\n-    /**\r\n-     * Returns the localized name for the given variant code.\r\n-     *\r\n-     * @param variantCode a variant code\r\n-     * @param locale a locale\r\n-     * @return the name or null if unavailable\r\n-     * @throws NullPointerException\r\n-     *             if {@code code == null || locale == null}\r\n-     * @throws IllegalArgumentException\r\n-     *             if code or locale is not in a legal format or not available\r\n-     */\r\n-    public abstract String getDisplayVariant(String variantCode, Locale locale);\r\n+  /**\r\n+   * Returns the localized name for the given variant code.\r\n+   *\r\n+   * @param variantCode a variant code\r\n+   * @param locale      a locale\r\n+   * @return the name or null if unavailable\r\n+   * @throws NullPointerException     if {@code code == null || locale == null}\r\n+   * @throws IllegalArgumentException if code or locale is not in a legal format or not available\r\n+   */\r\n+  public abstract String getDisplayVariant(String variantCode, Locale locale);\r\n }\r\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/naturalize/121/LocaleNameProvider.java\nindex 0d25074227c..f3a61e43b74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/naturalize/121/LocaleNameProvider.java\n@@ -72,4 +72,4 @@ public abstract class LocaleNameProvider extends LocaleServiceProvider {\n      *             if code or locale is not in a legal format or not available\r\n      */\r\n     public abstract String getDisplayVariant(String variantCode, Locale locale);\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 81).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "column": "5",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/styler/05_predictions/random/files-repaired/121/LocaleNameProvider.java\nindex 0d25074227c..c207f55da3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/styler/05_predictions/random/files-repaired/121/LocaleNameProvider.java\n@@ -45,9 +45,8 @@ public abstract class LocaleNameProvider extends LocaleServiceProvider {\n      * @throws IllegalArgumentException\r\n      *             if code or locale is not in a legal format or not available\r\n      */\r\n-    public abstract String getDisplayLanguage(String languageCode, Locale locale);\r\n-\r\n-    /**\r\n+    public abstract String getDisplayLanguage(String languageCode, Locale locale)\r\n+    ; /**\r\n      * Returns the localized name for the given ISO 3166 country code.\r\n      *\r\n      * @param countryCode an ISO 3166 language code\r\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/styler/05_predictions/three_grams/files-repaired/121/LocaleNameProvider.java\nindex 0d25074227c..a2051136bbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/121/LocaleNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/styler/05_predictions/three_grams/files-repaired/121/LocaleNameProvider.java\n@@ -45,9 +45,9 @@ public abstract class LocaleNameProvider extends LocaleServiceProvider {\n      * @throws IllegalArgumentException\r\n      *             if code or locale is not in a legal format or not available\r\n      */\r\n-    public abstract String getDisplayLanguage(String languageCode, Locale locale);\r\n-\r\n-    /**\r\n+    public abstract String getDisplayLanguage(\r\n+            String languageCode, Locale locale)\r\n+            ; /**\r\n      * Returns the localized name for the given ISO 3166 country code.\r\n      *\r\n      * @param countryCode an ISO 3166 language code\r\n@@ -57,8 +57,8 @@ public abstract class LocaleNameProvider extends LocaleServiceProvider {\n      *             if {@code code == null || locale == null}\r\n      * @throws IllegalArgumentException\r\n      *             if code or locale is not in a legal format or not available\r\n-     */\r\n-    public abstract String getDisplayCountry(String countryCode, Locale locale);\r\n+     */public abstract String getDisplayCountry(String countryCode, Locale locale);\r\n+public abstract String getDisplayCountry(String countryCode, Locale locale);\r\n \r\n     /**\r\n      * Returns the localized name for the given variant code.\r\n",
            "diff_size": 5
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}