{
    "project_name": "wso2-attic-commons",
    "violation_id": "335",
    "information": {
        "violations": [
            {
                "line": "12",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import org.apache.axis2.client.ServiceClient;\n\n/* Purpose\t:\tThis is a sample client to verify the handling of \"TargetNamespace\" annotation of WSO2 Mashup Server.\n * Author\t: \tYumani Ranaweera\n */\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/335/clientTargetNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/335/clientTargetNamespace.java\nindex c9c9edacb34..08dd4bc4b4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/335/clientTargetNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/335/clientTargetNamespace.java\n@@ -14,29 +14,29 @@ import org.apache.axis2.client.ServiceClient;\n  */\r\n \r\n public class clientTargetNamespace {\r\n-\tprivate static String toEpr = \"http://localhost:7762/services/samples/targetNamespace/\";\r\n-\r\n-\t\r\n-\tpublic static void main(String[] args)throws Exception {\r\n-\t\ttestEcho(\"targetNamespace1\");\r\n-\t}\r\n-\r\n-\tprivate static void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n-\t\t\tfinal String param = \"test\";\r\n-\t       \tString str = \"<\" + opName + \"Request>\" +\r\n-\t                \"<param>\" + param + \"</param>\" +\r\n-\t                \"</\" + opName + \"Request>\";\r\n-\t        StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n-\t        OMElement payload = staxOMBuilder.getDocumentElement();\r\n-\r\n-\t        Options options = new Options();\r\n-\t        options.setTo(new EndpointReference(toEpr));\r\n-\t        ServiceClient sender= new ServiceClient();\r\n-\t        sender.setOptions(options);\r\n-\t\t\t\r\n-\t        OMElement result = sender.sendReceive(payload);\r\n-\t        System.out.println(result.toString());\r\n-\t        \r\n-\t    }\r\n-\t\r\n+  private static String toEpr = \"http://localhost:7762/services/samples/targetNamespace/\";\r\n+\r\n+\r\n+  public static void main(String[] args) throws Exception {\r\n+    testEcho(\"targetNamespace1\");\r\n+  }\r\n+\r\n+  private static void testEcho(String opName) throws XMLStreamException, AxisFault {\r\n+    final String param = \"test\";\r\n+    String str = \"<\" + opName + \"Request>\" +\r\n+      \"<param>\" + param + \"</param>\" +\r\n+      \"</\" + opName + \"Request>\";\r\n+    StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n+    OMElement payload = staxOMBuilder.getDocumentElement();\r\n+\r\n+    Options options = new Options();\r\n+    options.setTo(new EndpointReference(toEpr));\r\n+    ServiceClient sender = new ServiceClient();\r\n+    sender.setOptions(options);\r\n+\r\n+    OMElement result = sender.sendReceive(payload);\r\n+    System.out.println(result.toString());\r\n+\r\n+  }\r\n+\r\n }\r\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/335/clientTargetNamespace.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/335/clientTargetNamespace.java\nindex c9c9edacb34..556d26a9bf0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/335/clientTargetNamespace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/335/clientTargetNamespace.java\n@@ -17,7 +17,7 @@ public class clientTargetNamespace {\n \tprivate static String toEpr = \"http://localhost:7762/services/samples/targetNamespace/\";\r\n \r\n \t\r\n-\tpublic static void main(String[] args)throws Exception {\r\n+\tpublic static void main(String[] args) throws Exception {\r\n \t\ttestEcho(\"targetNamespace1\");\r\n \t}\r\n \r\n@@ -31,12 +31,10 @@ public class clientTargetNamespace {\n \r\n \t        Options options = new Options();\r\n \t        options.setTo(new EndpointReference(toEpr));\r\n-\t        ServiceClient sender= new ServiceClient();\r\n-\t        sender.setOptions(options);\r\n-\t\t\t\r\n-\t        OMElement result = sender.sendReceive(payload);\r\n-\t        System.out.println(result.toString());\r\n-\t        \r\n-\t    }\r\n-\t\r\n-}\r\n+\t        ServiceClient sender = new ServiceClient();\r\n+\t        sender.setOptions(options);\n+OMElement result = sender.sendReceive(payload);\n+System.out.println(result.toString());\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}