{
    "project_name": "neo4j-neo4j",
    "violation_id": "2922",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2922/LegacyTransactionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2922/LegacyTransactionModule.java\nindex 307b088c261..bd066c47ae0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2922/LegacyTransactionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2922/LegacyTransactionModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.modules;\n \n import java.util.List;\n@@ -36,7 +37,7 @@ public class LegacyTransactionModule implements ServerModule\n     private final Config config;\n     private final WebServer webServer;\n \n-    public LegacyTransactionModule( WebServer webServer, Config config )\n+    public LegacyTransactionModule(WebServer webServer, Config config)\n     {\n         this.webServer = webServer;\n         this.config = config;\n@@ -45,22 +46,22 @@ public class LegacyTransactionModule implements ServerModule\n     @Override\n     public void start()\n     {\n-        webServer.addJAXRSClasses( jaxRsClasses(), mountPoint(), null );\n+        webServer.addJAXRSClasses(jaxRsClasses(), mountPoint(), null);\n     }\n \n     private List<Class<?>> jaxRsClasses()\n     {\n-        return List.of( LegacyTransactionService.class, JsonMessageBodyReader.class, JsonMessageBodyWriter.class );\n+        return List.of(LegacyTransactionService.class, JsonMessageBodyReader.class, JsonMessageBodyWriter.class);\n     }\n \n     @Override\n     public void stop()\n     {\n-        webServer.removeJAXRSClasses( jaxRsClasses(), mountPoint() );\n+        webServer.removeJAXRSClasses(jaxRsClasses(), mountPoint());\n     }\n \n     private String mountPoint()\n     {\n-        return config.get( ServerSettings.rest_api_path ).getPath();\n+        return config.get(ServerSettings.rest_api_path).getPath();\n     }\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}