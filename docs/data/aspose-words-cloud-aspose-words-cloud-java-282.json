{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "violation_id": "282",
    "information": {
        "violations": [
            {
                "line": "44",
                "column": "5",
                "severity": "error",
                "message": "'{' at column 5 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "\n    public ChildRequestContent(Request request, String rootUrl)\n    {\n        this.request = request;\n        this.baseUri = URI.create(rootUrl);\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/final/files-repaired/282/ChildRequestContent.java\nindex 997460a5889..0a8fac04805 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/final/files-repaired/282/ChildRequestContent.java\n@@ -40,8 +40,7 @@ public class ChildRequestContent extends RequestBody {\n     private Request request;\n     private URI baseUri;\n \n-    public ChildRequestContent(Request request, String rootUrl)\n-    {\n+    public ChildRequestContent(Request request, String rootUrl) {\n         this.request = request;\n         this.baseUri = URI.create(rootUrl);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/checkstyle_idea/282/ChildRequestContent.java\nindex 997460a5889..bd854b444bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/checkstyle_idea/282/ChildRequestContent.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -30,6 +30,7 @@ package com.aspose.words.cloud;\n import com.squareup.okhttp.MediaType;\n import com.squareup.okhttp.Request;\n import com.squareup.okhttp.RequestBody;\n+\n import okio.BufferedSink;\n \n import java.io.IOException;\n@@ -37,11 +38,12 @@ import java.net.URI;\n \n public class ChildRequestContent extends RequestBody {\n     private static final String CRLF = \"\\r\\n\";\n+\n     private Request request;\n+\n     private URI baseUri;\n \n-    public ChildRequestContent(Request request, String rootUrl)\n-    {\n+    public ChildRequestContent(Request request, String rootUrl) {\n         this.request = request;\n         this.baseUri = URI.create(rootUrl);\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/codebuff/282/ChildRequestContent.java\nindex 997460a5889..2497cfe8849 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/codebuff/282/ChildRequestContent.java\n@@ -31,44 +31,50 @@ import com.squareup.okhttp.MediaType;\n import com.squareup.okhttp.Request;\n import com.squareup.okhttp.RequestBody;\n import okio.BufferedSink;\n-\n import java.io.IOException;\n import java.net.URI;\n \n+\n public class ChildRequestContent extends RequestBody {\n-    private static final String CRLF = \"\\r\\n\";\n-    private Request request;\n-    private URI baseUri;\n-\n-    public ChildRequestContent(Request request, String rootUrl)\n-    {\n-        this.request = request;\n-        this.baseUri = URI.create(rootUrl);\n-    }\n \n-    @Override\n-    public MediaType contentType() {\n-        return MediaType.parse(\"application/http; msgtype=request\");\n-    }\n+  private static final String CRLF = \"\\r\\n\";\n+\n+\n+  private Request request;\n \n-    @Override\n-    public void writeTo(BufferedSink bufferedSink) throws IOException {\n-        bufferedSink.writeUtf8(request.method());\n-        bufferedSink.writeUtf8(\" \");\n-        bufferedSink.writeUtf8(baseUri.relativize(request.uri()).toString());\n-        bufferedSink.writeUtf8(\" \");\n-        bufferedSink.writeUtf8(CRLF);\n \n-        for (String key : request.headers().names()) {\n-            bufferedSink.writeUtf8(key);\n-            bufferedSink.writeUtf8(\": \");\n-            bufferedSink.writeUtf8(request.headers().get(key));\n-            bufferedSink.writeUtf8(CRLF);\n-        }\n+  private URI baseUri;\n \n+\n+  public ChildRequestContent(Request request,  String rootUrl) {\n+    this.request = request;\n+    this.baseUri = URI.create(rootUrl);\n+  }\n+\n+\n+  @Override\n+  public MediaType contentType() {\n+    return MediaType.parse(\"application/http; msgtype=request\");\n+  }\n+\n+\n+  @Override\n+  public void writeTo(BufferedSink bufferedSink) throws IOException {\n+    bufferedSink.writeUtf8(request.method());\n+    bufferedSink.writeUtf8(\" \");\n+    bufferedSink.writeUtf8(baseUri.relativize(request.uri()).toString());\n+    bufferedSink.writeUtf8(\" \");\n+    bufferedSink.writeUtf8(CRLF);\n+    for (String key : request.headers().names()) {\n+        bufferedSink.writeUtf8(key);\n+        bufferedSink.writeUtf8(\": \");\n+        bufferedSink.writeUtf8(request.headers().get(key));\n         bufferedSink.writeUtf8(CRLF);\n-        if (request.body() != null) {\n-            request.body().writeTo(bufferedSink);\n-        }\n     }\n-}\n+    bufferedSink.writeUtf8(CRLF);\n+\n+    if (request.body() != null) {\n+        request.body().writeTo(bufferedSink);\n+    }\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/random/files-repaired/282/ChildRequestContent.java\nindex 997460a5889..0a8fac04805 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/random/files-repaired/282/ChildRequestContent.java\n@@ -40,8 +40,7 @@ public class ChildRequestContent extends RequestBody {\n     private Request request;\n     private URI baseUri;\n \n-    public ChildRequestContent(Request request, String rootUrl)\n-    {\n+    public ChildRequestContent(Request request, String rootUrl) {\n         this.request = request;\n         this.baseUri = URI.create(rootUrl);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/three_grams/files-repaired/282/ChildRequestContent.java\nindex 997460a5889..0a8fac04805 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/violations/282/ChildRequestContent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/aspose-words-cloud-aspose-words-cloud-java/styler/05_predictions/three_grams/files-repaired/282/ChildRequestContent.java\n@@ -40,8 +40,7 @@ public class ChildRequestContent extends RequestBody {\n     private Request request;\n     private URI baseUri;\n \n-    public ChildRequestContent(Request request, String rootUrl)\n-    {\n+    public ChildRequestContent(Request request, String rootUrl) {\n         this.request = request;\n         this.baseUri = URI.create(rootUrl);\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}