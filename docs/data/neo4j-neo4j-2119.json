{
    "project_name": "neo4j-neo4j",
    "violation_id": "2119",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2119/PointToWKT.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2119/PointToWKT.java\nindex 012f9156c87..03a67baff46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2119/PointToWKT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2119/PointToWKT.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher.format.jolt;\n \n import java.util.function.Function;\n@@ -25,20 +26,20 @@ import org.neo4j.graphdb.spatial.Point;\n \n import static java.util.stream.Collectors.joining;\n \n-final class PointToWKT implements Function<Point,String>\n+final class PointToWKT implements Function<Point, String>\n {\n     @Override\n-    public String apply( Point point )\n+    public String apply(Point point)\n     {\n         var coordinates = point.getCoordinate().getCoordinate();\n         var wkt = new StringBuilder()\n-                .append( \"SRID=\" )\n-                .append( point.getCRS().getCode() )\n-                .append( \";POINT\" )\n-                .append( coordinates.size() == 3 ? \" Z \" : \"\" )\n-                .append( \"(\" )\n-                .append( coordinates.stream().map( String::valueOf ).collect( joining( \" \" ) ) )\n-                .append( \")\" );\n+          .append(\"SRID=\")\n+          .append(point.getCRS().getCode())\n+          .append(\";POINT\")\n+          .append(coordinates.size() == 3 ? \" Z \" : \"\")\n+          .append(\"(\")\n+          .append(coordinates.stream().map(String::valueOf).collect(joining(\" \")))\n+          .append(\")\");\n         return wkt.toString();\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}