{
    "project_name": "Angel-ML-angel",
    "violation_id": "448",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/448/PSAttemptContainerAssignedEvent.java\nindex e2bc86060d7..ac4dac7f24e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/448/PSAttemptContainerAssignedEvent.java\n@@ -23,24 +23,28 @@ import org.apache.hadoop.yarn.api.records.Container;\n  * Assign a container for a ps.\n  */\n public class PSAttemptContainerAssignedEvent extends PSAttemptEvent {\n-  /**the container allocated for the ps attempt*/\n-  private final Container container;\n+    /**\n+     * the container allocated for the ps attempt\n+     */\n+    private final Container container;\n \n-  /**\n-   * Create a PSAttemptContainerAssignedEvent\n-   * @param id ps attempt id\n-   * @param container container\n-   */\n-  public PSAttemptContainerAssignedEvent(PSAttemptId id, Container container) {\n-    super(PSAttemptEventType.PA_CONTAINER_ASSIGNED, id);\n-    this.container = container;\n-  }\n+    /**\n+     * Create a PSAttemptContainerAssignedEvent\n+     *\n+     * @param id        ps attempt id\n+     * @param container container\n+     */\n+    public PSAttemptContainerAssignedEvent(PSAttemptId id, Container container) {\n+        super(PSAttemptEventType.PA_CONTAINER_ASSIGNED, id);\n+        this.container = container;\n+    }\n \n-  /**\n-   * Get container\n-   * @return container\n-   */\n-  public Container getContainer() {\n-    return container;\n-  }\n+    /**\n+     * Get container\n+     *\n+     * @return container\n+     */\n+    public Container getContainer() {\n+        return container;\n+    }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/448/PSAttemptContainerAssignedEvent.java\nindex e2bc86060d7..6c44d13eaf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/448/PSAttemptContainerAssignedEvent.java\n@@ -43,4 +43,4 @@ public class PSAttemptContainerAssignedEvent extends PSAttemptEvent {\n   public Container getContainer() {\n     return container;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/448/PSAttemptContainerAssignedEvent.java\nindex e2bc86060d7..8cae533e9e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/448/PSAttemptContainerAssignedEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/448/PSAttemptContainerAssignedEvent.java\n@@ -22,8 +22,10 @@ import org.apache.hadoop.yarn.api.records.Container;\n /**\n  * Assign a container for a ps.\n  */\n+\n public class PSAttemptContainerAssignedEvent extends PSAttemptEvent {\n   /**the container allocated for the ps attempt*/\n+\n   private final Container container;\n \n   /**\n@@ -31,6 +33,7 @@ public class PSAttemptContainerAssignedEvent extends PSAttemptEvent {\n    * @param id ps attempt id\n    * @param container container\n    */\n+\n   public PSAttemptContainerAssignedEvent(PSAttemptId id, Container container) {\n     super(PSAttemptEventType.PA_CONTAINER_ASSIGNED, id);\n     this.container = container;\n@@ -40,7 +43,9 @@ public class PSAttemptContainerAssignedEvent extends PSAttemptEvent {\n    * Get container\n    * @return container\n    */\n+\n   public Container getContainer() {\n     return container;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}