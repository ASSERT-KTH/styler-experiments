{
    "project_name": "SentinelDataHub-dhus-core",
    "violation_id": "20",
    "information": {
        "violations": [
            {
                "line": "42",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 90).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n   {\n      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n      criteria.add(Restrictions.eq(\"name\", name));\n      return super.uniqueResult(criteria);\n   }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/final/files-repaired/20/DataStoreConfigurationDao.java\nindex 17a1036f742..c61b45195b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/final/files-repaired/20/DataStoreConfigurationDao.java\n@@ -39,7 +39,8 @@ public class DataStoreConfigurationDao extends\n     */\n    public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n    {\n-      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n+      DetachedCriteria criteria = DetachedCriteria.forClass(\n+            DataStoreConfiguration.class);\n       criteria.add(Restrictions.eq(\"name\", name));\n       return super.uniqueResult(criteria);\n    }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/checkstyle_idea/20/DataStoreConfigurationDao.java\nindex 17a1036f742..78148a8433b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/checkstyle_idea/20/DataStoreConfigurationDao.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package fr.gael.dhus.database.dao;\n \n import fr.gael.dhus.database.dao.interfaces.HibernateDao;\n@@ -29,18 +30,19 @@ import org.springframework.stereotype.Repository;\n \n @Repository\n public class DataStoreConfigurationDao extends\n-      HibernateDao<DataStoreConfiguration, Long>\n+    HibernateDao<DataStoreConfiguration, Long>\n {\n-   /**\n-    * Retrieves a datastore configuration by its name.\n-    *\n-    * @param name data store configuration name\n-    * @return a DataStoreConfiguration or null if not found\n-    */\n-   public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n-   {\n-      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n-      criteria.add(Restrictions.eq(\"name\", name));\n-      return super.uniqueResult(criteria);\n-   }\n+    /**\n+     * Retrieves a datastore configuration by its name.\n+     *\n+     * @param name data store configuration name\n+     * @return a DataStoreConfiguration or null if not found\n+     */\n+    public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n+    {\n+        DetachedCriteria criteria =\n+            DetachedCriteria.forClass(DataStoreConfiguration.class);\n+        criteria.add(Restrictions.eq(\"name\", name));\n+        return super.uniqueResult(criteria);\n+    }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/naturalize/20/DataStoreConfigurationDao.java\nindex 17a1036f742..0ff6b756f3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/naturalize/20/DataStoreConfigurationDao.java\n@@ -28,8 +28,7 @@ import org.hibernate.criterion.Restrictions;\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class DataStoreConfigurationDao extends\n-      HibernateDao<DataStoreConfiguration, Long>\n+public class DataStoreConfigurationDao extends HibernateDao<DataStoreConfiguration, Long>\n {\n    /**\n     * Retrieves a datastore configuration by its name.\n@@ -43,4 +42,4 @@ public class DataStoreConfigurationDao extends\n       criteria.add(Restrictions.eq(\"name\", name));\n       return super.uniqueResult(criteria);\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/codebuff/20/DataStoreConfigurationDao.java\nindex 17a1036f742..4ca442ce02e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/codebuff/20/DataStoreConfigurationDao.java\n@@ -21,15 +21,12 @@ package fr.gael.dhus.database.dao;\n \n import fr.gael.dhus.database.dao.interfaces.HibernateDao;\n import fr.gael.dhus.database.object.DataStoreConfiguration;\n-\n import org.hibernate.criterion.DetachedCriteria;\n import org.hibernate.criterion.Restrictions;\n-\n import org.springframework.stereotype.Repository;\n \n @Repository\n-public class DataStoreConfigurationDao extends\n-      HibernateDao<DataStoreConfiguration, Long>\n+public class DataStoreConfigurationDao extends HibernateDao<DataStoreConfiguration, Long>\n {\n    /**\n     * Retrieves a datastore configuration by its name.\n@@ -37,10 +34,10 @@ public class DataStoreConfigurationDao extends\n     * @param name data store configuration name\n     * @return a DataStoreConfiguration or null if not found\n     */\n-   public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n+   public DataStoreConfiguration getDataStoreConfigurationByName (String name)\n    {\n-      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n-      criteria.add(Restrictions.eq(\"name\", name));\n-      return super.uniqueResult(criteria);\n+      DetachedCriteria criteria = DetachedCriteria.forClass (DataStoreConfiguration.class);\n+      criteria.add(Restrictions.eq (\"name\", name));\n+      return super.uniqueResult (criteria);\n    }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/random/files-repaired/20/DataStoreConfigurationDao.java\nindex 17a1036f742..45592430283 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/random/files-repaired/20/DataStoreConfigurationDao.java\n@@ -39,7 +39,7 @@ public class DataStoreConfigurationDao extends\n     */\n    public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n    {\n-      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n+      DetachedCriteria criteria = DetachedCriteria .forClass( DataStoreConfiguration.class);\n       criteria.add(Restrictions.eq(\"name\", name));\n       return super.uniqueResult(criteria);\n    }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/three_grams/files-repaired/20/DataStoreConfigurationDao.java\nindex 17a1036f742..c61b45195b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/violations/20/DataStoreConfigurationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/SentinelDataHub-dhus-core/styler/05_predictions/three_grams/files-repaired/20/DataStoreConfigurationDao.java\n@@ -39,7 +39,8 @@ public class DataStoreConfigurationDao extends\n     */\n    public DataStoreConfiguration getDataStoreConfigurationByName(String name)\n    {\n-      DetachedCriteria criteria = DetachedCriteria.forClass(DataStoreConfiguration.class);\n+      DetachedCriteria criteria = DetachedCriteria.forClass(\n+            DataStoreConfiguration.class);\n       criteria.add(Restrictions.eq(\"name\", name));\n       return super.uniqueResult(criteria);\n    }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}