{
    "project_name": "IQSS-dataverse",
    "violation_id": "8",
    "information": {
        "violations": [
            {
                "line": "14",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@MappedSuperclass\npublic abstract class DvObjectContainer extends DvObject {\n\t\n    public void setOwner(Dataverse owner) {\n        super.setOwner(owner);\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/8/DvObjectContainer.java\nindex ad72f3819fb..5b0a3c0bcee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/8/DvObjectContainer.java\n@@ -6,54 +6,54 @@ import org.apache.commons.lang3.StringUtils;\n \n /**\n  * A {@link DvObject} that can contain other {@link DvObject}s.\n- * \n+ *\n  * @author michael\n  */\n @MappedSuperclass\n public abstract class DvObjectContainer extends DvObject {\n-\t\n-    public void setOwner(Dataverse owner) {\n-        super.setOwner(owner);\n-    }\n-\t\n-\t@Override\n-\tpublic Dataverse getOwner() {\n-\t\treturn super.getOwner()!=null ? (Dataverse)super.getOwner() : null;\n-\t}\n-    \n-    protected abstract boolean isPermissionRoot();\n-    \n-    @Override\n-    public boolean isEffectivelyPermissionRoot() {\n-        return isPermissionRoot() || (getOwner() == null);\n-    }\n \n-    private String storageDriver=null;\n-    \n-    public String getEffectiveStorageDriverId() {\n-        String id = storageDriver;\n-        if (StringUtils.isBlank(id)) {\n-            if (this.getOwner() != null) {\n-                id = this.getOwner().getEffectiveStorageDriverId();\n-            } else {\n-                id = DataAccess.DEFAULT_STORAGE_DRIVER_IDENTIFIER;\n-            }\n-        }\n-        return id;\n+  public void setOwner(Dataverse owner) {\n+    super.setOwner(owner);\n+  }\n+\n+  @Override\n+  public Dataverse getOwner() {\n+    return super.getOwner() != null ? (Dataverse) super.getOwner() : null;\n+  }\n+\n+  protected abstract boolean isPermissionRoot();\n+\n+  @Override\n+  public boolean isEffectivelyPermissionRoot() {\n+    return isPermissionRoot() || (getOwner() == null);\n+  }\n+\n+  private String storageDriver = null;\n+\n+  public String getEffectiveStorageDriverId() {\n+    String id = storageDriver;\n+    if (StringUtils.isBlank(id)) {\n+      if (this.getOwner() != null) {\n+        id = this.getOwner().getEffectiveStorageDriverId();\n+      } else {\n+        id = DataAccess.DEFAULT_STORAGE_DRIVER_IDENTIFIER;\n+      }\n     }\n-    \n-    public String getStorageDriverId() {\n-        if (storageDriver == null) {\n-            return DataAccess.UNDEFINED_STORAGE_DRIVER_IDENTIFIER;\n-        }\n-        return storageDriver;\n+    return id;\n+  }\n+\n+  public String getStorageDriverId() {\n+    if (storageDriver == null) {\n+      return DataAccess.UNDEFINED_STORAGE_DRIVER_IDENTIFIER;\n     }\n+    return storageDriver;\n+  }\n \n-    public void setStorageDriverId(String storageDriver) {\n-        if (storageDriver != null && storageDriver.equals(DataAccess.UNDEFINED_STORAGE_DRIVER_IDENTIFIER)) {\n-            this.storageDriver = null;\n-        } else {\n-            this.storageDriver = storageDriver;\n-        }\n+  public void setStorageDriverId(String storageDriver) {\n+    if (storageDriver != null && storageDriver.equals(DataAccess.UNDEFINED_STORAGE_DRIVER_IDENTIFIER)) {\n+      this.storageDriver = null;\n+    } else {\n+      this.storageDriver = storageDriver;\n     }\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/8/DvObjectContainer.java\nindex ad72f3819fb..89abb35592e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/8/DvObjectContainer.java\n@@ -11,16 +11,15 @@ import org.apache.commons.lang3.StringUtils;\n  */\n @MappedSuperclass\n public abstract class DvObjectContainer extends DvObject {\n-\t\n     public void setOwner(Dataverse owner) {\n-        super.setOwner(owner);\n+    super.setOwner(owner);\n     }\n-\t\n-\t@Override\n-\tpublic Dataverse getOwner() {\n-\t\treturn super.getOwner()!=null ? (Dataverse)super.getOwner() : null;\n-\t}\n-    \n+\n+@Override\n+public Dataverse getOwner() {\n+    return super.getOwner()!=null ? (Dataverse)super.getOwner() : null;\n+    }\n+\n     protected abstract boolean isPermissionRoot();\n     \n     @Override\n@@ -56,4 +55,4 @@ public abstract class DvObjectContainer extends DvObject {\n             this.storageDriver = storageDriver;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/8/DvObjectContainer.java\nindex ad72f3819fb..5249e3cd8fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/8/DvObjectContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/8/DvObjectContainer.java\n@@ -9,27 +9,30 @@ import org.apache.commons.lang3.StringUtils;\n  * \n  * @author michael\n  */\n+\n+\n @MappedSuperclass\n public abstract class DvObjectContainer extends DvObject {\n-\t\n+\n     public void setOwner(Dataverse owner) {\n         super.setOwner(owner);\n     }\n-\t\n-\t@Override\n-\tpublic Dataverse getOwner() {\n-\t\treturn super.getOwner()!=null ? (Dataverse)super.getOwner() : null;\n-\t}\n-    \n+\n+    @Override\n+    public Dataverse getOwner() {\n+        return super.getOwner() != null ? (Dataverse) super.getOwner() : null;\n+    }\n+\n+\n     protected abstract boolean isPermissionRoot();\n-    \n+\n     @Override\n     public boolean isEffectivelyPermissionRoot() {\n         return isPermissionRoot() || (getOwner() == null);\n     }\n \n-    private String storageDriver=null;\n-    \n+    private String storageDriver = null;\n+\n     public String getEffectiveStorageDriverId() {\n         String id = storageDriver;\n         if (StringUtils.isBlank(id)) {\n@@ -41,7 +44,7 @@ public abstract class DvObjectContainer extends DvObject {\n         }\n         return id;\n     }\n-    \n+\n     public String getStorageDriverId() {\n         if (storageDriver == null) {\n             return DataAccess.UNDEFINED_STORAGE_DRIVER_IDENTIFIER;\n@@ -56,4 +59,5 @@ public abstract class DvObjectContainer extends DvObject {\n             this.storageDriver = storageDriver;\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}