{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "556",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/556/AuthenticationExceptionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/556/AuthenticationExceptionMapper.java\nindex 05474dd8f9d..7df73e7bf52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/556/AuthenticationExceptionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/556/AuthenticationExceptionMapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.security;\n \n import javax.ws.rs.core.Response;\n@@ -34,24 +35,23 @@ import javax.ws.rs.ext.Provider;\n public class AuthenticationExceptionMapper implements ExceptionMapper<AuthenticationException>\n {\n \n-    @Override\n-    public Response toResponse( AuthenticationException e )\n+  @Override\n+  public Response toResponse(AuthenticationException e)\n+  {\n+    if (e.getRealm() != null)\n+    {\n+      return Response.status(Status.UNAUTHORIZED)\n+          .header(\"WWW-Authenticate\", \"Basic realm=\\\"\" + e.getRealm() + \"\\\"\")\n+          .type(\"text/plain\")\n+          .entity(e.getMessage())\n+          .build();\n+    } else\n     {\n-        if ( e.getRealm() != null )\n-        {\n-            return Response.status( Status.UNAUTHORIZED )\n-                    .header( \"WWW-Authenticate\", \"Basic realm=\\\"\" + e.getRealm() + \"\\\"\" )\n-                    .type( \"text/plain\" )\n-                    .entity( e.getMessage() )\n-                    .build();\n-        }\n-        else\n-        {\n-            return Response.status( Status.UNAUTHORIZED )\n-                    .type( \"text/plain\" )\n-                    .entity( e.getMessage() )\n-                    .build();\n-        }\n+      return Response.status(Status.UNAUTHORIZED)\n+          .type(\"text/plain\")\n+          .entity(e.getMessage())\n+          .build();\n     }\n+  }\n \n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/556/AuthenticationExceptionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/556/AuthenticationExceptionMapper.java\nindex 05474dd8f9d..d9d7c9d1682 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/556/AuthenticationExceptionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/556/AuthenticationExceptionMapper.java\n@@ -34,24 +34,16 @@ import javax.ws.rs.ext.Provider;\n public class AuthenticationExceptionMapper implements ExceptionMapper<AuthenticationException>\n {\n \n-    @Override\n+@Override\n     public Response toResponse( AuthenticationException e )\n     {\n         if ( e.getRealm() != null )\n         {\n-            return Response.status( Status.UNAUTHORIZED )\n-                    .header( \"WWW-Authenticate\", \"Basic realm=\\\"\" + e.getRealm() + \"\\\"\" )\n-                    .type( \"text/plain\" )\n-                    .entity( e.getMessage() )\n-                    .build();\n+            return Response.status( Status.UNAUTHORIZED ).header( \"WWW-Authenticate\", \"Basic realm=\\\"\" + e.getRealm() + \"\\\"\" ).type( \"text/plain\" ).entity( e.getMessage() ).build();\n         }\n         else\n         {\n-            return Response.status( Status.UNAUTHORIZED )\n-                    .type( \"text/plain\" )\n-                    .entity( e.getMessage() )\n-                    .build();\n-        }\n+            return Response.status( Status.UNAUTHORIZED ).type( \"text/plain\" ).entity( e.getMessage() ).build();\n     }\n-\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}