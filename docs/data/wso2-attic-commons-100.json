{
    "project_name": "wso2-attic-commons",
    "violation_id": "100",
    "information": {
        "violations": [
            {
                "line": "58",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 159).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        customer.setZip(\"9226\");\n        \n        OMElement customerIdHeader = factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(), \"xxx\");\n//        customerIdHeader.setText(\"732199\");\n        customerIdHeader.setText(\"1\");\n        ",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/100/WSTransferSampleClient.java\nindex aac0763374e..fa4cf32e575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/100/WSTransferSampleClient.java\n@@ -54,9 +54,9 @@ public class WSTransferSampleClient {\n         customer.setCity(\"Manhattan Beach\");\n         customer.setState(\"CA\");\n         customer.setZip(\"9226\");\n-        \n+\n         OMElement customerIdHeader = factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(), \"xxx\");\n-//        customerIdHeader.setText(\"732199\");\n+        //        customerIdHeader.setText(\"732199\");\n         customerIdHeader.setText(\"1\");\n         \n //        env.getHeader().addChild(customerIdHeader);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/100/WSTransferSampleClient.java\nindex aac0763374e..5116873a594 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/100/WSTransferSampleClient.java\n@@ -1,18 +1,19 @@\n /*\n  * Copyright 2001-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.wso2.sample;\n \n import org.apache.axiom.om.OMAbstractFactory;\n@@ -28,65 +29,67 @@ import org.apache.axis2.wsdl.WSDLConstants;\n import org.wso2.xfer.WSTransferConstants;\n \n public class WSTransferSampleClient {\n-    \n-    public static void main(String[] args) throws Exception {\n-        \n-        ServiceClient serviceClient = new ServiceClient();\n-        OperationClient opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n-        \n-        Options options = opClient.getOptions();\n-        options.setAction(WSTransferConstants.ACTION_URI_CREATE);\n-                \n-        EndpointReference epr = new EndpointReference(\"http://127.0.0.1:6060/axis2/services/WSTransferSampleService\");\n-        options.setTo(epr);\n-        \n-        MessageContext msgCtx = new MessageContext();\n-        opClient.addMessageContext(msgCtx);\n-        \n-        SOAPFactory factory = OMAbstractFactory.getSOAP12Factory();\n-        SOAPEnvelope env = factory.getDefaultEnvelope();\n-        \n-        Customer customer = new Customer();\n-        \n-        customer.setFirst(\"Roy\");\n-        customer.setLast(\"Hill\");\n-        customer.setAddress(\"321, Main Street\");\n-        customer.setCity(\"Manhattan Beach\");\n-        customer.setState(\"CA\");\n-        customer.setZip(\"9226\");\n-        \n-        OMElement customerIdHeader = factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(), \"xxx\");\n+\n+  public static void main(String[] args) throws Exception {\n+\n+    ServiceClient serviceClient = new ServiceClient();\n+    OperationClient opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+\n+    Options options = opClient.getOptions();\n+    options.setAction(WSTransferConstants.ACTION_URI_CREATE);\n+\n+    EndpointReference epr = new EndpointReference(\"http://127.0.0.1:6060/axis2/services/WSTransferSampleService\");\n+    options.setTo(epr);\n+\n+    MessageContext msgCtx = new MessageContext();\n+    opClient.addMessageContext(msgCtx);\n+\n+    SOAPFactory factory = OMAbstractFactory.getSOAP12Factory();\n+    SOAPEnvelope env = factory.getDefaultEnvelope();\n+\n+    Customer customer = new Customer();\n+\n+    customer.setFirst(\"Roy\");\n+    customer.setLast(\"Hill\");\n+    customer.setAddress(\"321, Main Street\");\n+    customer.setCity(\"Manhattan Beach\");\n+    customer.setState(\"CA\");\n+    customer.setZip(\"9226\");\n+\n+    OMElement customerIdHeader =\n+      factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(),\n+        \"xxx\");\n //        customerIdHeader.setText(\"732199\");\n-        customerIdHeader.setText(\"1\");\n-        \n+    customerIdHeader.setText(\"1\");\n+\n //        env.getHeader().addChild(customerIdHeader);\n-        env.getBody().addChild(CustomerUtil.toOM(customer));\n-        msgCtx.setEnvelope(env);\n-        \n-        opClient.execute(true);\n-        \n-        \n-        opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n-        options = opClient.getOptions();\n-        \n-        options.setTo(epr);\n-        options.setAction(WSTransferConstants.ACTION_URI_GET);\n-        \n-        env = factory.getDefaultEnvelope();\n-        \n-        msgCtx = new MessageContext();\n-        opClient.addMessageContext(msgCtx);\n-        \n-        env.getHeader().addChild(customerIdHeader);\n-        msgCtx.setEnvelope(env);\n-        \n-        opClient.execute(true);\n-        \n-        MessageContext inMsgCtx = opClient.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n-        OMElement element = inMsgCtx.getEnvelope().getBody().getFirstElement();\n-        Customer customer2 = CustomerUtil.fromOM(element);\n-        \n-        System.out.println(\"First\" + customer2.getFirst());\n-    }\n+    env.getBody().addChild(CustomerUtil.toOM(customer));\n+    msgCtx.setEnvelope(env);\n+\n+    opClient.execute(true);\n+\n+\n+    opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+    options = opClient.getOptions();\n+\n+    options.setTo(epr);\n+    options.setAction(WSTransferConstants.ACTION_URI_GET);\n+\n+    env = factory.getDefaultEnvelope();\n+\n+    msgCtx = new MessageContext();\n+    opClient.addMessageContext(msgCtx);\n+\n+    env.getHeader().addChild(customerIdHeader);\n+    msgCtx.setEnvelope(env);\n+\n+    opClient.execute(true);\n+\n+    MessageContext inMsgCtx = opClient.getMessageContext(WSDLConstants.MESSAGE_LABEL_IN_VALUE);\n+    OMElement element = inMsgCtx.getEnvelope().getBody().getFirstElement();\n+    Customer customer2 = CustomerUtil.fromOM(element);\n+\n+    System.out.println(\"First\" + customer2.getFirst());\n+  }\n \n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/100/WSTransferSampleClient.java\nindex aac0763374e..125ff3877d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/100/WSTransferSampleClient.java\n@@ -64,9 +64,7 @@ public class WSTransferSampleClient {\n         msgCtx.setEnvelope(env);\n         \n         opClient.execute(true);\n-        \n-        \n-        opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n+opClient = serviceClient.createClient(ServiceClient.ANON_OUT_IN_OP);\n         options = opClient.getOptions();\n         \n         options.setTo(epr);\n@@ -89,4 +87,4 @@ public class WSTransferSampleClient {\n         System.out.println(\"First\" + customer2.getFirst());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/100/WSTransferSampleClient.java\nindex aac0763374e..fa4cf32e575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/100/WSTransferSampleClient.java\n@@ -54,9 +54,9 @@ public class WSTransferSampleClient {\n         customer.setCity(\"Manhattan Beach\");\n         customer.setState(\"CA\");\n         customer.setZip(\"9226\");\n-        \n+\n         OMElement customerIdHeader = factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(), \"xxx\");\n-//        customerIdHeader.setText(\"732199\");\n+        //        customerIdHeader.setText(\"732199\");\n         customerIdHeader.setText(\"1\");\n         \n //        env.getHeader().addChild(customerIdHeader);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/100/WSTransferSampleClient.java\nindex aac0763374e..16db4cd76de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/100/WSTransferSampleClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/100/WSTransferSampleClient.java\n@@ -54,10 +54,11 @@ public class WSTransferSampleClient {\n         customer.setCity(\"Manhattan Beach\");\n         customer.setState(\"CA\");\n         customer.setZip(\"9226\");\n-        \n+\n         OMElement customerIdHeader = factory.createOMElement(Customer.Q_ELEM_CUSTOMER_ID.getLocalPart(), Customer.Q_ELEM_CUSTOMER_ID.getNamespaceURI(), \"xxx\");\n //        customerIdHeader.setText(\"732199\");\n-        customerIdHeader.setText(\"1\");\n+\n+   customerIdHeader.setText(\"1\");\n         \n //        env.getHeader().addChild(customerIdHeader);\n         env.getBody().addChild(CustomerUtil.toOM(customer));\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}