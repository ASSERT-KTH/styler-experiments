{
    "project_name": "Angel-ML-angel",
    "violation_id": "403",
    "information": {
        "violations": [
            {
                "line": "50",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    if (part != null) {\n      MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n\n      int[] rowIds = mf.getRowIds();\n      ServerRow[] rows = new ServerRow[rowIds.length];",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/403/MFUpdaterFunc.java\nindex 77114382b58..c9a92cf1cfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/403/MFUpdaterFunc.java\n@@ -47,7 +47,7 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n         .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n \n     if (part != null) {\n-      MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n+    MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n \n       int[] rowIds = mf.getRowIds();\n       ServerRow[] rows = new ServerRow[rowIds.length];\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/403/MFUpdaterFunc.java\nindex 77114382b58..c249c10c427 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/403/MFUpdaterFunc.java\n@@ -27,51 +27,52 @@ import com.tencent.angel.ps.impl.matrix.ServerRow;\n  * `MFUpdaterFunc` is a POF updater for multi rows in matrix with a user-defined function.\n  * Constructor's Parameters include int[] `rowIds` and Serialize `func`, which correspond to\n  * ServerDenseDoubleRow[] `rows` and Serialize `func` in `doUpdate` interface respectively.\n- *\n+ * <p>\n  * That is the length of `rowIds` and `rows` is exactly the same, rows[i] is the content of\n  * rowIds[i] row in matrix.\n  */\n public abstract class MFUpdaterFunc extends UpdaterFunc {\n-  public MFUpdaterFunc(int matrixId, int[] rowIds, Serialize func) {\n-    super(new MFUpdaterParam(matrixId, rowIds, func));\n-  }\n+    public MFUpdaterFunc(int matrixId, int[] rowIds, Serialize func) {\n+        super(new MFUpdaterParam(matrixId, rowIds, func));\n+    }\n \n-  public MFUpdaterFunc() {\n-    super(null);\n-  }\n+    public MFUpdaterFunc() {\n+        super(null);\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdaterParam partParam) {\n-    ServerPartition part = PSContext.get()\n-        .getMatrixPartitionManager()\n-        .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n+    @Override\n+    public void partitionUpdate(PartitionUpdaterParam partParam) {\n+        ServerPartition part = PSContext.get()\n+                .getMatrixPartitionManager()\n+                .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n \n-    if (part != null) {\n-      MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n+        if (part != null) {\n+            MFUpdaterParam.MFPartitionUpdaterParam mf =\n+                    (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n \n-      int[] rowIds = mf.getRowIds();\n-      ServerRow[] rows = new ServerRow[rowIds.length];\n-      for (int i = 0; i < rowIds.length; i++) {\n-        rows[i] = part.getRow(rowIds[i]);\n-      }\n-      update(rows, mf.getFunc());\n+            int[] rowIds = mf.getRowIds();\n+            ServerRow[] rows = new ServerRow[rowIds.length];\n+            for (int i = 0; i < rowIds.length; i++) {\n+                rows[i] = part.getRow(rowIds[i]);\n+            }\n+            update(rows, mf.getFunc());\n+        }\n     }\n-  }\n \n-  private void update(ServerRow[] rows, Serialize func) {\n-    switch (rows[0].getRowType()) {\n-      case T_DOUBLE_DENSE:\n-        ServerDenseDoubleRow[] denseRows = new ServerDenseDoubleRow[rows.length];\n-        for (int i = 0; i < rows.length; i++) {\n-          denseRows[i] = (ServerDenseDoubleRow) rows[i];\n+    private void update(ServerRow[] rows, Serialize func) {\n+        switch (rows[0].getRowType()) {\n+            case T_DOUBLE_DENSE:\n+                ServerDenseDoubleRow[] denseRows = new ServerDenseDoubleRow[rows.length];\n+                for (int i = 0; i < rows.length; i++) {\n+                    denseRows[i] = (ServerDenseDoubleRow) rows[i];\n+                }\n+                doUpdate(denseRows, func);\n+                return;\n+            default:\n+                throw new RuntimeException(\"currently only supports Double Dense Row\");\n         }\n-        doUpdate(denseRows, func);\n-        return;\n-      default:\n-        throw new RuntimeException(\"currently only supports Double Dense Row\");\n     }\n-  }\n \n-  protected abstract void doUpdate(ServerDenseDoubleRow[] rows, Serialize func);\n+    protected abstract void doUpdate(ServerDenseDoubleRow[] rows, Serialize func);\n \n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/403/MFUpdaterFunc.java\nindex 77114382b58..c6bbe1fd6c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/403/MFUpdaterFunc.java\n@@ -74,4 +74,4 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n \n   protected abstract void doUpdate(ServerDenseDoubleRow[] rows, Serialize func);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/403/MFUpdaterFunc.java\nindex 77114382b58..8f766c97363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/403/MFUpdaterFunc.java\n@@ -31,7 +31,9 @@ import com.tencent.angel.ps.impl.matrix.ServerRow;\n  * That is the length of `rowIds` and `rows` is exactly the same, rows[i] is the content of\n  * rowIds[i] row in matrix.\n  */\n+\n public abstract class MFUpdaterFunc extends UpdaterFunc {\n+\n   public MFUpdaterFunc(int matrixId, int[] rowIds, Serialize func) {\n     super(new MFUpdaterParam(matrixId, rowIds, func));\n   }\n@@ -42,13 +44,9 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n \n   @Override\n   public void partitionUpdate(PartitionUpdaterParam partParam) {\n-    ServerPartition part = PSContext.get()\n-        .getMatrixPartitionManager()\n-        .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n-\n+    ServerPartition part = PSContext.get().getMatrixPartitionManager().getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n     if (part != null) {\n       MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n-\n       int[] rowIds = mf.getRowIds();\n       ServerRow[] rows = new ServerRow[rowIds.length];\n       for (int i = 0; i < rowIds.length; i++) {\n@@ -74,4 +72,4 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n \n   protected abstract void doUpdate(ServerDenseDoubleRow[] rows, Serialize func);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/403/MFUpdaterFunc.java\nindex 77114382b58..975fdd4e5b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/403/MFUpdaterFunc.java\n@@ -47,9 +47,9 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n         .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n \n     if (part != null) {\n-      MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n-\n-      int[] rowIds = mf.getRowIds();\n+      MFUpdaterParam.MFPartitionUpdaterParam mf =\n+          (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n+  int [] rowIds = mf.getRowIds();\n       ServerRow[] rows = new ServerRow[rowIds.length];\n       for (int i = 0; i < rowIds.length; i++) {\n         rows[i] = part.getRow(rowIds[i]);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/403/MFUpdaterFunc.java\nindex 77114382b58..c9a92cf1cfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/403/MFUpdaterFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/403/MFUpdaterFunc.java\n@@ -47,7 +47,7 @@ public abstract class MFUpdaterFunc extends UpdaterFunc {\n         .getPartition(partParam.getMatrixId(), partParam.getPartKey().getPartitionId());\n \n     if (part != null) {\n-      MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n+    MFUpdaterParam.MFPartitionUpdaterParam mf = (MFUpdaterParam.MFPartitionUpdaterParam) partParam;\n \n       int[] rowIds = mf.getRowIds();\n       ServerRow[] rows = new ServerRow[rowIds.length];\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}