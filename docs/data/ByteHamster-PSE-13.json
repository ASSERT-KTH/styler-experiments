{
    "project_name": "ByteHamster-PSE",
    "violation_id": "13",
    "information": {
        "violations": [
            {
                "line": "11",
                "column": "33",
                "severity": "warning",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "     * @return The value of outFlow.\n     */\n    public final int getOutFlow () {\n        throw new RuntimeException(\"Not implemented!\");\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ByteHamster-PSE/styler/05_predictions/final/files-repaired/13/AbstractTankTab.java\nindex e141942da19..cb74bcd554e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/ByteHamster-PSE/styler/05_predictions/final/files-repaired/13/AbstractTankTab.java\n@@ -8,7 +8,7 @@ public abstract class AbstractTankTab extends javafx.scene.control.TabPane {\n      * Gets the value of outFlow.\n      * @return The value of outFlow.\n      */\n-    public final int getOutFlow () {\n+    public final int getOutFlow() {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/checkstyle_idea/13/AbstractTankTab.java\nindex e141942da19..b27f4c4123f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/checkstyle_idea/13/AbstractTankTab.java\n@@ -6,9 +6,10 @@ package edu.kit.pse.osip.simulation.view.control;\n public abstract class AbstractTankTab extends javafx.scene.control.TabPane {\n     /**\n      * Gets the value of outFlow.\n+     *\n      * @return The value of outFlow.\n      */\n-    public final int getOutFlow () {\n+    public final int getOutFlow() {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "15",
                    "column": "31",
                    "severity": "warning",
                    "message": "'{' at column 31 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "15",
                    "column": "59",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "15",
                    "column": "80",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "15",
                    "column": "81",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/codebuff/13/AbstractTankTab.java\nindex e141942da19..e7ed2a55afd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/codebuff/13/AbstractTankTab.java\n@@ -3,12 +3,14 @@ package edu.kit.pse.osip.simulation.view.control;\n /**\n  * This class contains the controls for a single tank in the simulation.\n  */\n+\n+\n public abstract class AbstractTankTab extends javafx.scene.control.TabPane {\n     /**\n      * Gets the value of outFlow.\n      * @return The value of outFlow.\n      */\n-    public final int getOutFlow () {\n-        throw new RuntimeException(\"Not implemented!\");\n-    }\n-}\n+\n+\n+public final int getOutFlow() { throw new RuntimeException( \"Not implemented!\");}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'PARAMETERS' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/random/files-repaired/13/AbstractTankTab.java\nindex e141942da19..6aa4fe371d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/random/files-repaired/13/AbstractTankTab.java\n@@ -8,7 +8,8 @@ public abstract class AbstractTankTab extends javafx.scene.control.TabPane {\n      * Gets the value of outFlow.\n      * @return The value of outFlow.\n      */\n-    public final int getOutFlow () {\n+    public final int getOutFlow(\n+    ) {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/three_grams/files-repaired/13/AbstractTankTab.java\nindex e141942da19..cb74bcd554e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/violations/13/AbstractTankTab.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ByteHamster-PSE/styler/05_predictions/three_grams/files-repaired/13/AbstractTankTab.java\n@@ -8,7 +8,7 @@ public abstract class AbstractTankTab extends javafx.scene.control.TabPane {\n      * Gets the value of outFlow.\n      * @return The value of outFlow.\n      */\n-    public final int getOutFlow () {\n+    public final int getOutFlow() {\n         throw new RuntimeException(\"Not implemented!\");\n     }\n }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}