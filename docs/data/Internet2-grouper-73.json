{
    "project_name": "Internet2-grouper",
    "violation_id": "73",
    "information": {
        "violations": [
            {
                "line": "49",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "        super(p, id);\n    }\n    \n    /**\n     * Gets the literal value.\n     * @return the integer literal",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Internet2-grouper/styler/05_predictions/final/files-repaired/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..0f4691885aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Internet2-grouper/styler/05_predictions/final/files-repaired/73/ASTIntegerLiteral.java\n@@ -46,7 +46,7 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n     ASTIntegerLiteral(Parser p, int id) {\r\n         super(p, id);\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/checkstyle_idea/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..c7c9f38b945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/checkstyle_idea/73/ASTIntegerLiteral.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -29,6 +29,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parser;\r\n \r\n /**\r\n@@ -36,28 +37,28 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parse\n  */\r\n @Deprecated\r\n public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n+  /** The type literal value. */\r\n+  Integer literal = null;\r\n+\r\n+  ASTIntegerLiteral(int id) {\r\n+    super(id);\r\n+  }\r\n \r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n+  ASTIntegerLiteral(Parser p, int id) {\r\n+    super(p, id);\r\n+  }\r\n \r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n-     * Gets the literal value.\r\n-     * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n-    }\r\n+  /**\r\n+   * Gets the literal value.\r\n+   * @return the integer literal\r\n+   */\r\n+  public Integer getLiteral() {\r\n+    return literal;\r\n+  }\r\n \r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n+  /** {@inheritDoc} */\r\n+  @Override\r\n+  public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n+    return visitor.visit(this, data);\r\n+  }\r\n }\r\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/naturalize/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..56066a0f941 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/naturalize/73/ASTIntegerLiteral.java\n@@ -45,13 +45,13 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n \r\n     ASTIntegerLiteral(Parser p, int id) {\r\n         super(p, id);\r\n-    }\r\n-    \r\n-    /**\r\n+    }\n+\n+/**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n+     */\n+public Integer getLiteral() {\r\n         return literal;\r\n     }\r\n \r\n@@ -60,4 +60,4 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n     public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n         return visitor.visit(this, data);\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/codebuff/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..ce3aa51f141 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/codebuff/73/ASTIntegerLiteral.java\n@@ -33,31 +33,37 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2.parse\n \r\n /**\r\n  * @deprecated Only for use in maintaining binary compatibility - should not actually be used - will be removed in 3.0\r\n- */\r\n-@Deprecated\r\n+ */\n+\n+@Deprecated\n public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Literal<Integer> {\r\n-    /** The type literal value. */\r\n-    Integer literal = null;\r\n-\r\n-    ASTIntegerLiteral(int id) {\r\n-        super(id);\r\n-    }\r\n-\r\n-    ASTIntegerLiteral(Parser p, int id) {\r\n-        super(p, id);\r\n+    /** The type literal value. */\n+    Integer literal = null;\n+\n+    ASTIntegerLiteral(int id) {\n+        super(id);\n+    }\n+\n+    ASTIntegerLiteral(Parser p, int id) {\n+        super(p, id);\n     }\r\n     \r\n     /**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n-     */\r\n-    public Integer getLiteral() {\r\n-        return literal;\r\n+     */\n+\n+\n+\n+    public Integer getLiteral() {\n+        return literal;\n     }\r\n \r\n-    /** {@inheritDoc} */\r\n-    @Override\r\n-    public Object jjtAccept(ParserVisitor visitor, Object data) {\r\n-        return visitor.visit(this, data);\r\n-    }\r\n-}\r\n+    /** {@inheritDoc} */\n+\n+\n+    @Override\n+    public Object jjtAccept(ParserVisitor visitor, Object data) {\n+        return visitor.visit(this, data);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/random/files-repaired/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..0f4691885aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/random/files-repaired/73/ASTIntegerLiteral.java\n@@ -46,7 +46,7 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n     ASTIntegerLiteral(Parser p, int id) {\r\n         super(p, id);\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/three_grams/files-repaired/73/ASTIntegerLiteral.java\nindex cc99b6bd0ee..0f4691885aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/violations/73/ASTIntegerLiteral.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Internet2-grouper/styler/05_predictions/three_grams/files-repaired/73/ASTIntegerLiteral.java\n@@ -46,7 +46,7 @@ public final class ASTIntegerLiteral extends JexlNode implements JexlNode.Litera\n     ASTIntegerLiteral(Parser p, int id) {\r\n         super(p, id);\r\n     }\r\n-    \r\n+\r\n     /**\r\n      * Gets the literal value.\r\n      * @return the integer literal\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}