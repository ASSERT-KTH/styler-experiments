{
    "project_name": "Angel-ML-angel",
    "violation_id": "303",
    "information": {
        "violations": [
            {
                "line": "32",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 112).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void partitionUpdate(PartitionUpdateParam partParam) {\n    ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n    int r = param.getR();\n\n    ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/303/ComputeCloseness.java\nindex 90dc91f5f1c..27ce097b134 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/303/ComputeCloseness.java\n@@ -29,8 +29,9 @@ public class ComputeCloseness extends UpdateFunc {\n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n-    int r = param.getR();\n+  ServerLongAnyRow\n+    row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n+     int r = param.getR();\n \n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n     while (iter.hasNext()) {\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/303/ComputeCloseness.java\nindex 90dc91f5f1c..10e7cc62662 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/303/ComputeCloseness.java\n@@ -14,30 +14,31 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n  */\n public class ComputeCloseness extends UpdateFunc {\n \n-  public ComputeCloseness(ComputeClosenessParam param) {\n-    super(param);\n-  }\n-\n-  public ComputeCloseness(int matrixId, int r) {\n-    super(new ComputeClosenessParam(matrixId, r));\n-  }\n-\n-  public ComputeCloseness() {\n-    super(null);\n-  }\n-\n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n-    int r = param.getR();\n-\n-    ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n-    while (iter.hasNext()) {\n-      HyperLogLogPlusElement hllElem = (HyperLogLogPlusElement) iter.next().getValue();\n-      if (hllElem.isActive()) {\n-        hllElem.updateCloseness(r);\n-      }\n+    public ComputeCloseness(ComputeClosenessParam param) {\n+        super(param);\n+    }\n+\n+    public ComputeCloseness(int matrixId, int r) {\n+        super(new ComputeClosenessParam(matrixId, r));\n+    }\n+\n+    public ComputeCloseness() {\n+        super(null);\n+    }\n+\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n+        ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n+                .getRow(param.getPartKey(), 0);\n+        int r = param.getR();\n+\n+        ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n+        while (iter.hasNext()) {\n+            HyperLogLogPlusElement hllElem = (HyperLogLogPlusElement) iter.next().getValue();\n+            if (hllElem.isActive()) {\n+                hllElem.updateCloseness(r);\n+            }\n+        }\n     }\n-  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/303/ComputeCloseness.java\nindex 90dc91f5f1c..cc4ebf1ea99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/303/ComputeCloseness.java\n@@ -40,4 +40,4 @@ public class ComputeCloseness extends UpdateFunc {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/303/ComputeCloseness.java\nindex 90dc91f5f1c..ad881c1f64d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/303/ComputeCloseness.java\n@@ -12,6 +12,7 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n  * UpdateFunc for computing the cardinality and closeness without normalization,\n  * updating the activeness status, and switching the read/write counter\n  */\n+\n public class ComputeCloseness extends UpdateFunc {\n \n   public ComputeCloseness(ComputeClosenessParam param) {\n@@ -31,7 +32,6 @@ public class ComputeCloseness extends UpdateFunc {\n     ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n     ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n     int r = param.getR();\n-\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n     while (iter.hasNext()) {\n       HyperLogLogPlusElement hllElem = (HyperLogLogPlusElement) iter.next().getValue();\n@@ -40,4 +40,5 @@ public class ComputeCloseness extends UpdateFunc {\n       }\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "33",
                    "column": "35",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/303/ComputeCloseness.java\nindex 90dc91f5f1c..bbdd4d9726d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/303/ComputeCloseness.java\n@@ -29,8 +29,8 @@ public class ComputeCloseness extends UpdateFunc {\n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n-    int r = param.getR();\n+    ServerLongAnyRow row =(ServerLongAnyRow)psContext. getMatrixStorageManager ( ) . getRow(param.getPartKey(\n+    ) ,0 ) ; intr r = param.getR();\n \n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n     while (iter.hasNext()) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/303/ComputeCloseness.java\nindex 90dc91f5f1c..27ce097b134 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/303/ComputeCloseness.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/303/ComputeCloseness.java\n@@ -29,8 +29,9 @@ public class ComputeCloseness extends UpdateFunc {\n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     ComputeClosenessPartParam param = (ComputeClosenessPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n-    int r = param.getR();\n+  ServerLongAnyRow\n+    row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n+     int r = param.getR();\n \n     ObjectIterator<Long2ObjectMap.Entry<IElement>> iter = row.iterator();\n     while (iter.hasNext()) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}