{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1514",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1514/ReadableRelationshipIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1514/ReadableRelationshipIndex.java\nindex 438d0cc0ee8..3c9e5e5ec46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1514/ReadableRelationshipIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1514/ReadableRelationshipIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.index;\n \n import org.neo4j.graphdb.Node;\n@@ -34,55 +35,55 @@ import org.neo4j.graphdb.Relationship;\n  */\n public interface ReadableRelationshipIndex extends ReadableIndex<Relationship>\n {\n-    /**\n-     * Returns exact matches from this index, given the key/value pair. Matches\n-     * will be for key/value pairs just as they were added by the\n-     * {@link Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)} method.\n-     *\n-     * @param key the key in the key/value pair to match.\n-     * @param valueOrNull the value in the key/value pair to match.\n-     * @param startNodeOrNull filter so that only {@link Relationship}s with\n-     *            that given start node will be returned.\n-     * @param endNodeOrNull filter so that only {@link Relationship}s with that\n-     *            given end node will be returned.\n-     * @return the result wrapped in an {@link IndexHits} object. If the entire\n-     *         result set isn't looped through, {@link IndexHits#close()} must\n-     *         be called before disposing of the result.\n-     */\n-    IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull,\n-            Node endNodeOrNull );\n+  /**\n+   * Returns exact matches from this index, given the key/value pair. Matches\n+   * will be for key/value pairs just as they were added by the\n+   * {@link Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)} method.\n+   *\n+   * @param key             the key in the key/value pair to match.\n+   * @param valueOrNull     the value in the key/value pair to match.\n+   * @param startNodeOrNull filter so that only {@link Relationship}s with\n+   *                        that given start node will be returned.\n+   * @param endNodeOrNull   filter so that only {@link Relationship}s with that\n+   *                        given end node will be returned.\n+   * @return the result wrapped in an {@link IndexHits} object. If the entire\n+   * result set isn't looped through, {@link IndexHits#close()} must\n+   * be called before disposing of the result.\n+   */\n+  IndexHits<Relationship> get(String key, Object valueOrNull, Node startNodeOrNull,\n+                              Node endNodeOrNull);\n \n-    /**\n-     * Returns matches from this index based on the supplied {@code key} and\n-     * query object, which can be a query string or an implementation-specific\n-     * query object.\n-     *\n-     * @param key the key in this query.\n-     * @param queryOrQueryObjectOrNull the query for the {@code key} to match.\n-     * @param startNodeOrNull filter so that only {@link Relationship}s with\n-     *            that given start node will be returned.\n-     * @param endNodeOrNull filter so that only {@link Relationship}s with that\n-     *            given end node will be returned.\n-     * @return the result wrapped in an {@link IndexHits} object. If the entire\n-     *         result set isn't looped through, {@link IndexHits#close()} must\n-     *         be called before disposing of the result.\n-     */\n-    IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull,\n-            Node startNodeOrNull, Node endNodeOrNull );\n+  /**\n+   * Returns matches from this index based on the supplied {@code key} and\n+   * query object, which can be a query string or an implementation-specific\n+   * query object.\n+   *\n+   * @param key                      the key in this query.\n+   * @param queryOrQueryObjectOrNull the query for the {@code key} to match.\n+   * @param startNodeOrNull          filter so that only {@link Relationship}s with\n+   *                                 that given start node will be returned.\n+   * @param endNodeOrNull            filter so that only {@link Relationship}s with that\n+   *                                 given end node will be returned.\n+   * @return the result wrapped in an {@link IndexHits} object. If the entire\n+   * result set isn't looped through, {@link IndexHits#close()} must\n+   * be called before disposing of the result.\n+   */\n+  IndexHits<Relationship> query(String key, Object queryOrQueryObjectOrNull,\n+                                Node startNodeOrNull, Node endNodeOrNull);\n \n-    /**\n-     * Returns matches from this index based on the supplied query object, which\n-     * can be a query string or an implementation-specific query object.\n-     *\n-     * @param queryOrQueryObjectOrNull the query to match.\n-     * @param startNodeOrNull filter so that only {@link Relationship}s with\n-     *            that given start node will be returned.\n-     * @param endNodeOrNull filter so that only {@link Relationship}s with that\n-     *            given end node will be returned.\n-     * @return the result wrapped in an {@link IndexHits} object. If the entire\n-     *         result set isn't looped through, {@link IndexHits#close()} must\n-     *         be called before disposing of the result.\n-     */\n-    IndexHits<Relationship> query( Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n-            Node endNodeOrNull );\n+  /**\n+   * Returns matches from this index based on the supplied query object, which\n+   * can be a query string or an implementation-specific query object.\n+   *\n+   * @param queryOrQueryObjectOrNull the query to match.\n+   * @param startNodeOrNull          filter so that only {@link Relationship}s with\n+   *                                 that given start node will be returned.\n+   * @param endNodeOrNull            filter so that only {@link Relationship}s with that\n+   *                                 given end node will be returned.\n+   * @return the result wrapped in an {@link IndexHits} object. If the entire\n+   * result set isn't looped through, {@link IndexHits#close()} must\n+   * be called before disposing of the result.\n+   */\n+  IndexHits<Relationship> query(Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n+                                Node endNodeOrNull);\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1514/ReadableRelationshipIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1514/ReadableRelationshipIndex.java\nindex 438d0cc0ee8..5119dd6af87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1514/ReadableRelationshipIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1514/ReadableRelationshipIndex.java\n@@ -52,7 +52,7 @@ public interface ReadableRelationshipIndex extends ReadableIndex<Relationship>\n     IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull,\n             Node endNodeOrNull );\n \n-    /**\n+/**\n      * Returns matches from this index based on the supplied {@code key} and\n      * query object, which can be a query string or an implementation-specific\n      * query object.\n@@ -70,7 +70,7 @@ public interface ReadableRelationshipIndex extends ReadableIndex<Relationship>\n     IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull,\n             Node startNodeOrNull, Node endNodeOrNull );\n \n-    /**\n+/**\n      * Returns matches from this index based on the supplied query object, which\n      * can be a query string or an implementation-specific query object.\n      *\n@@ -85,4 +85,4 @@ public interface ReadableRelationshipIndex extends ReadableIndex<Relationship>\n      */\n     IndexHits<Relationship> query( Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n             Node endNodeOrNull );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}