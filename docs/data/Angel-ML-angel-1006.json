{
    "project_name": "Angel-ML-angel",
    "violation_id": "1006",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1006/WorkerGroupsBlock.java\nindex 296be0901c6..64ab7b86609 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1006/WorkerGroupsBlock.java\n@@ -37,82 +37,87 @@ import static org.apache.hadoop.yarn.util.StringHelper.join;\n import static org.apache.hadoop.yarn.webapp.view.JQueryUI._TH;\n \n public class WorkerGroupsBlock extends HtmlBlock {\n-  final AMContext amContext;\n+    final AMContext amContext;\n \n-  @Inject\n-  WorkerGroupsBlock(AMContext amctx) {\n-    amContext = amctx;\n-  }\n-\n-  private Set<AMWorkerGroupState> transformToInternalState(String state) {\n-    LOG.info(\"get workergroup state is \" + $(WORKERGROUP_STATE));\n-    Set<AMWorkerGroupState> stateSet = new HashSet<AMWorkerGroupState>();\n-    switch (state) {\n-      case \"NEW\":\n-        stateSet.add(AMWorkerGroupState.NEW);\n-        stateSet.add(AMWorkerGroupState.INITED);\n-        break;\n-      case \"RUNNING\":\n-        stateSet.add(AMWorkerGroupState.RUNNING);\n-        break;\n-      case \"FAILED\":\n-        stateSet.add(AMWorkerGroupState.FAILED);\n-        break;\n-      case \"KILLED\":\n-        stateSet.add(AMWorkerGroupState.KILLED);\n-        break;\n-      case \"SUCCESS\":\n-        stateSet.add(AMWorkerGroupState.SUCCESS);\n-        break;\n+    @Inject\n+    WorkerGroupsBlock(AMContext amctx) {\n+        amContext = amctx;\n     }\n-    return stateSet;\n-  }\n \n-  @Override\n-  protected void render(Block html) {\n-    set(TITLE, join(\"Angel WorkerGroups \", $(WORKERGROUP_STATE)));\n-    TABLE<Hamlet> table = html.table(\"#job\");\n-    TR<THEAD<TABLE<Hamlet>>> tr = table.thead().tr();\n+    private Set<AMWorkerGroupState> transformToInternalState(String state) {\n+        LOG.info(\"get workergroup state is \" + $(WORKERGROUP_STATE));\n+        Set<AMWorkerGroupState> stateSet = new HashSet<AMWorkerGroupState>();\n+        switch (state) {\n+            case \"NEW\":\n+                stateSet.add(AMWorkerGroupState.NEW);\n+                stateSet.add(AMWorkerGroupState.INITED);\n+                break;\n+            case \"RUNNING\":\n+                stateSet.add(AMWorkerGroupState.RUNNING);\n+                break;\n+            case \"FAILED\":\n+                stateSet.add(AMWorkerGroupState.FAILED);\n+                break;\n+            case \"KILLED\":\n+                stateSet.add(AMWorkerGroupState.KILLED);\n+                break;\n+            case \"SUCCESS\":\n+                stateSet.add(AMWorkerGroupState.SUCCESS);\n+                break;\n+        }\n+        return stateSet;\n+    }\n \n-    tr.th(_TH, \"id\").th(_TH, \"state\").th(_TH, \"leader\").th(_TH, \"start time\").th(_TH, \"end time\")\n-        .th(_TH, \"elapsed time\");\n+    @Override\n+    protected void render(Block html) {\n+        set(TITLE, join(\"Angel WorkerGroups \", $(WORKERGROUP_STATE)));\n+        TABLE<Hamlet> table = html.table(\"#job\");\n+        TR<THEAD<TABLE<Hamlet>>> tr = table.thead().tr();\n \n-    tr._()._();\n+        tr.th(_TH, \"id\").th(_TH, \"state\").th(_TH, \"leader\").th(_TH, \"start time\")\n+                .th(_TH, \"end time\")\n+                .th(_TH, \"elapsed time\");\n \n-    Set<AMWorkerGroupState> stateSet = transformToInternalState($(WORKERGROUP_STATE));\n+        tr._()._();\n \n-    TBODY<TABLE<Hamlet>> tbody = table.tbody();\n+        Set<AMWorkerGroupState> stateSet = transformToInternalState($(WORKERGROUP_STATE));\n \n-    LOG.info(\"before get groups, group size is \"\n-        + amContext.getWorkerManager().getWorkerGroupMap().size());\n-    for (AMWorkerGroupState s : stateSet) {\n-      LOG.info(\"s = \" + s);\n-    }\n+        TBODY<TABLE<Hamlet>> tbody = table.tbody();\n \n-    for (AMWorkerGroup workerGroup : amContext.getWorkerManager().getWorkerGroupMap().values()) {\n-      LOG.info(\"group state is \" + workerGroup.getState());\n-      if (stateSet.contains(workerGroup.getState())) {\n-        TR<TBODY<TABLE<Hamlet>>> tr1 = tbody.tr();\n-        long elaspedTs = 0;\n-        if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() != 0) {\n-          elaspedTs = workerGroup.getFinishTime() - workerGroup.getLaunchTime();\n-        } else if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() == 0) {\n-          elaspedTs = System.currentTimeMillis() - workerGroup.getLaunchTime();\n+        LOG.info(\"before get groups, group size is \"\n+                + amContext.getWorkerManager().getWorkerGroupMap().size());\n+        for (AMWorkerGroupState s : stateSet) {\n+            LOG.info(\"s = \" + s);\n         }\n \n-        tr1.td()\n-            .a(url(\"angel/workerGroupPage/\", workerGroup.getId().toString()),\n-                workerGroup.getId().toString())\n-            ._()\n-            .td($(WORKERGROUP_STATE))\n-            .td(workerGroup.getLeader().toString())\n-            .td(workerGroup.getLaunchTime() == 0 ? \"N/A\" : new Date(workerGroup.getLaunchTime())\n-                .toString())\n-            .td(workerGroup.getFinishTime() == 0 ? \"N/A\" : new Date(workerGroup.getFinishTime())\n-                .toString()).td(elaspedTs == 0 ? \"N/A\" : StringUtils.formatTime(elaspedTs));\n-        tr1._();\n-      }\n+        for (AMWorkerGroup workerGroup : amContext.getWorkerManager().getWorkerGroupMap()\n+                .values()) {\n+            LOG.info(\"group state is \" + workerGroup.getState());\n+            if (stateSet.contains(workerGroup.getState())) {\n+                TR<TBODY<TABLE<Hamlet>>> tr1 = tbody.tr();\n+                long elaspedTs = 0;\n+                if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() != 0) {\n+                    elaspedTs = workerGroup.getFinishTime() - workerGroup.getLaunchTime();\n+                } else if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() == 0) {\n+                    elaspedTs = System.currentTimeMillis() - workerGroup.getLaunchTime();\n+                }\n+\n+                tr1.td()\n+                        .a(url(\"angel/workerGroupPage/\", workerGroup.getId().toString()),\n+                                workerGroup.getId().toString())\n+                        ._()\n+                        .td($(WORKERGROUP_STATE))\n+                        .td(workerGroup.getLeader().toString())\n+                        .td(workerGroup.getLaunchTime() == 0 ? \"N/A\" :\n+                                new Date(workerGroup.getLaunchTime())\n+                                        .toString())\n+                        .td(workerGroup.getFinishTime() == 0 ? \"N/A\" :\n+                                new Date(workerGroup.getFinishTime())\n+                                        .toString())\n+                        .td(elaspedTs == 0 ? \"N/A\" : StringUtils.formatTime(elaspedTs));\n+                tr1._();\n+            }\n+        }\n+        tbody._()._();\n     }\n-    tbody._()._();\n-  }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1006/WorkerGroupsBlock.java\nindex 296be0901c6..54f09c38026 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1006/WorkerGroupsBlock.java\n@@ -102,17 +102,15 @@ public class WorkerGroupsBlock extends HtmlBlock {\n \n         tr1.td()\n             .a(url(\"angel/workerGroupPage/\", workerGroup.getId().toString()),\n-                workerGroup.getId().toString())\n-            ._()\n+                workerGroup.getId().toString())._()\n             .td($(WORKERGROUP_STATE))\n             .td(workerGroup.getLeader().toString())\n             .td(workerGroup.getLaunchTime() == 0 ? \"N/A\" : new Date(workerGroup.getLaunchTime())\n-                .toString())\n-            .td(workerGroup.getFinishTime() == 0 ? \"N/A\" : new Date(workerGroup.getFinishTime())\n+                .toString()).td(workerGroup.getFinishTime() == 0 ? \"N/A\" : new Date(workerGroup.getFinishTime())\n                 .toString()).td(elaspedTs == 0 ? \"N/A\" : StringUtils.formatTime(elaspedTs));\n         tr1._();\n       }\n     }\n     tbody._()._();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 437).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1006/WorkerGroupsBlock.java\nindex 296be0901c6..367462caef7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1006/WorkerGroupsBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1006/WorkerGroupsBlock.java\n@@ -27,16 +27,15 @@ import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TBODY;\n import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.THEAD;\n import org.apache.hadoop.yarn.webapp.hamlet.Hamlet.TR;\n import org.apache.hadoop.yarn.webapp.view.HtmlBlock;\n-\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Set;\n-\n import static com.tencent.angel.webapp.AngelParams.WORKERGROUP_STATE;\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n import static org.apache.hadoop.yarn.webapp.view.JQueryUI._TH;\n \n public class WorkerGroupsBlock extends HtmlBlock {\n+\n   final AMContext amContext;\n \n   @Inject\n@@ -73,18 +72,11 @@ public class WorkerGroupsBlock extends HtmlBlock {\n     set(TITLE, join(\"Angel WorkerGroups \", $(WORKERGROUP_STATE)));\n     TABLE<Hamlet> table = html.table(\"#job\");\n     TR<THEAD<TABLE<Hamlet>>> tr = table.thead().tr();\n-\n-    tr.th(_TH, \"id\").th(_TH, \"state\").th(_TH, \"leader\").th(_TH, \"start time\").th(_TH, \"end time\")\n-        .th(_TH, \"elapsed time\");\n-\n+    tr.th(_TH, \"id\").th(_TH, \"state\").th(_TH, \"leader\").th(_TH, \"start time\").th(_TH, \"end time\").th(_TH, \"elapsed time\");\n     tr._()._();\n-\n     Set<AMWorkerGroupState> stateSet = transformToInternalState($(WORKERGROUP_STATE));\n-\n     TBODY<TABLE<Hamlet>> tbody = table.tbody();\n-\n-    LOG.info(\"before get groups, group size is \"\n-        + amContext.getWorkerManager().getWorkerGroupMap().size());\n+    LOG.info(\"before get groups, group size is \" + amContext.getWorkerManager().getWorkerGroupMap().size());\n     for (AMWorkerGroupState s : stateSet) {\n       LOG.info(\"s = \" + s);\n     }\n@@ -97,22 +89,13 @@ public class WorkerGroupsBlock extends HtmlBlock {\n         if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() != 0) {\n           elaspedTs = workerGroup.getFinishTime() - workerGroup.getLaunchTime();\n         } else if (workerGroup.getLaunchTime() != 0 && workerGroup.getFinishTime() == 0) {\n-          elaspedTs = System.currentTimeMillis() - workerGroup.getLaunchTime();\n-        }\n-\n-        tr1.td()\n-            .a(url(\"angel/workerGroupPage/\", workerGroup.getId().toString()),\n-                workerGroup.getId().toString())\n-            ._()\n-            .td($(WORKERGROUP_STATE))\n-            .td(workerGroup.getLeader().toString())\n-            .td(workerGroup.getLaunchTime() == 0 ? \"N/A\" : new Date(workerGroup.getLaunchTime())\n-                .toString())\n-            .td(workerGroup.getFinishTime() == 0 ? \"N/A\" : new Date(workerGroup.getFinishTime())\n-                .toString()).td(elaspedTs == 0 ? \"N/A\" : StringUtils.formatTime(elaspedTs));\n+                 elaspedTs = System.currentTimeMillis() - workerGroup.getLaunchTime();\n+               }\n+        tr1.td().a(url(\"angel/workerGroupPage/\", workerGroup.getId().toString()), workerGroup.getId().toString())._().td($(WORKERGROUP_STATE)).td(workerGroup.getLeader().toString()).td(workerGroup.getLaunchTime() == 0 ? \"N/A\" : new Date(workerGroup.getLaunchTime()).toString()).td(workerGroup.getFinishTime() == 0 ? \"N/A\" : new Date(workerGroup.getFinishTime()).toString()).td(elaspedTs == 0 ? \"N/A\" : StringUtils.formatTime(elaspedTs));\n         tr1._();\n       }\n     }\n     tbody._()._();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}