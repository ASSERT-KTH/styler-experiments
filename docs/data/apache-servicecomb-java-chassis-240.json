{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "240",
    "information": {
        "violations": [
            {
                "line": "72",
                "column": "10",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "          operationGenerator.getProviderMethod().getName(),\n          paramIdx)\n          , e);\n    }\n  }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..bcc0768bae3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/240/BeanParamAnnotationProcessor.java\n@@ -68,8 +68,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx),\n+          e);\n     }\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "72",
                    "column": "10",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..50d90a6b011 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/240/BeanParamAnnotationProcessor.java\n@@ -102,11 +102,11 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * After processing, a swagger parameter is generated and set into {@code operationGenerator}.\n    *\n    * @param operationGenerator operationGenerator\n-   * @param annotations annotations on fields or setter methods\n-   * @param genericType type of the fields, or the param type of the setter methods\n+   * @param annotations        annotations on fields or setter methods\n+   * @param genericType        type of the fields, or the param type of the setter methods\n    */\n   private void processBeanParamMember(OperationGenerator operationGenerator, Annotation[] annotations,\n-      Type genericType) {\n+                                      Type genericType) {\n     String defaultValue = null;\n     for (Annotation fieldAnnotation : annotations) {\n       if (!SUPPORTED_PARAM_ANNOTATIONS.contains(fieldAnnotation.annotationType())) {\n@@ -124,9 +124,9 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * Generate swagger parameter, set default value, and add it into {@code operationGenerator}.\n    *\n    * @param operationGenerator operationGenerator\n-   * @param fieldAnnotation JAX-RS param annotation\n-   * @param genericParamType type of the parameter\n-   * @param defaultValue default value, can be null\n+   * @param fieldAnnotation    JAX-RS param annotation\n+   * @param genericParamType   type of the parameter\n+   * @param defaultValue       default value, can be null\n    */\n   private void setUpParameter(\n       OperationGenerator operationGenerator,\n@@ -148,8 +148,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * Generate a swagger parameter, set up name and type info.\n    *\n    * @param swaggerGeneratorContext context data carried by {@linkplain OperationGenerator}\n-   * @param fieldAnnotation JAX-RS param annotation\n-   * @param genericParamType default value, can be null\n+   * @param fieldAnnotation         JAX-RS param annotation\n+   * @param genericParamType        default value, can be null\n    * @return the generated swagger parameter\n    */\n   private AbstractSerializableParameter<?> generateParameter(\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..76dec8ba80f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/240/BeanParamAnnotationProcessor.java\n@@ -68,8 +68,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n   }\n \n@@ -129,10 +128,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @param defaultValue default value, can be null\n    */\n   private void setUpParameter(\n-      OperationGenerator operationGenerator,\n-      Annotation fieldAnnotation,\n-      Type genericParamType,\n-      String defaultValue) {\n+      OperationGenerator operationGenerator, Annotation fieldAnnotation, Type genericParamType, String defaultValue) {\n     AbstractSerializableParameter<?> parameter = generateParameter(\n         operationGenerator.getContext(),\n         fieldAnnotation,\n@@ -153,9 +149,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @return the generated swagger parameter\n    */\n   private AbstractSerializableParameter<?> generateParameter(\n-      SwaggerGeneratorContext swaggerGeneratorContext,\n-      Annotation fieldAnnotation,\n-      Type genericParamType) {\n+      SwaggerGeneratorContext swaggerGeneratorContext, Annotation fieldAnnotation, Type genericParamType) {\n     // find the corresponding ParameterProcessor and process the parameter\n     final AbstractParameterProcessor<?> parameterAnnotationProcessor =\n         (AbstractParameterProcessor<?>) swaggerGeneratorContext\n@@ -166,4 +160,4 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n     ParamUtils.setParameterType(genericParamType, parameter);\n     return parameter;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..4a143096967 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/240/BeanParamAnnotationProcessor.java\n@@ -23,25 +23,23 @@ import java.lang.reflect.Method;\n import java.lang.reflect.Type;\n import java.util.HashSet;\n import java.util.Set;\n-\n import javax.ws.rs.CookieParam;\n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.FormParam;\n import javax.ws.rs.HeaderParam;\n import javax.ws.rs.PathParam;\n import javax.ws.rs.QueryParam;\n-\n import org.apache.servicecomb.swagger.generator.core.OperationGenerator;\n import org.apache.servicecomb.swagger.generator.core.ParameterAnnotationProcessor;\n import org.apache.servicecomb.swagger.generator.core.SwaggerGeneratorContext;\n import org.apache.servicecomb.swagger.generator.core.processor.parameter.AbstractParameterProcessor;\n import org.apache.servicecomb.swagger.generator.core.utils.ParamUtils;\n-\n import io.swagger.models.parameters.AbstractSerializableParameter;\n \n /**\n  * For {@link javax.ws.rs.BeanParam}\n  */\n+\n public class BeanParamAnnotationProcessor implements ParameterAnnotationProcessor {\n   public static final Set<Class<?>> SUPPORTED_PARAM_ANNOTATIONS = new HashSet<>();\n \n@@ -64,18 +62,15 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n       // traversal setter methods, some setter method may also be tagged with param annotations\n       processParamSetter(operationGenerator, beanParamClazz);\n     } catch (IllegalArgumentException e) {\n-      throw new Error(String.format(\n-          \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n-          operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n-          operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+      throw new Error(String.format(\"Processing param failed, method=%s:%s, beanParamIdx=%d\", operationGenerator.getProviderMethod().getDeclaringClass()\n+                                                                                                                                    .getName(), operationGenerator.getProviderMethod().getName(), paramIdx), e);\n     }\n   }\n \n   /**\n    * Process those setter methods tagged by JAX-RS param annotations.\n    */\n+\n   private void processParamSetter(OperationGenerator operationGenerator, Class<?> beanParamClazz) {\n     for (Method method : beanParamClazz.getDeclaredMethods()) {\n       if (!method.getName().startsWith(SETTER_METHOD_PREFIX)) {\n@@ -83,6 +78,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n         continue;\n       }\n       // There should be one and only one param in a setter method\n+\n       final Type genericParamType = method.getGenericParameterTypes()[0];\n       processBeanParamMember(operationGenerator, method.getAnnotations(), genericParamType);\n     }\n@@ -91,9 +87,12 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n   /**\n    * Process those fields tagged by JAX-RS param annotations.\n    */\n+\n   private void processParamField(OperationGenerator operationGenerator, Class<?> beanParamClazz) {\n     for (Field beanParamField : beanParamClazz.getDeclaredFields()) {\n-      processBeanParamMember(operationGenerator, beanParamField.getAnnotations(), beanParamField.getGenericType());\n+      processBeanParamMember(operationGenerator,\n+        beanParamField.getAnnotations(),\n+          beanParamField.getGenericType());\n     }\n   }\n \n@@ -105,8 +104,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @param annotations annotations on fields or setter methods\n    * @param genericType type of the fields, or the param type of the setter methods\n    */\n-  private void processBeanParamMember(OperationGenerator operationGenerator, Annotation[] annotations,\n-      Type genericType) {\n+\n+  private void processBeanParamMember(OperationGenerator operationGenerator, Annotation[] annotations, Type genericType) {\n     String defaultValue = null;\n     for (Annotation fieldAnnotation : annotations) {\n       if (!SUPPORTED_PARAM_ANNOTATIONS.contains(fieldAnnotation.annotationType())) {\n@@ -128,19 +127,13 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @param genericParamType type of the parameter\n    * @param defaultValue default value, can be null\n    */\n-  private void setUpParameter(\n-      OperationGenerator operationGenerator,\n-      Annotation fieldAnnotation,\n-      Type genericParamType,\n-      String defaultValue) {\n-    AbstractSerializableParameter<?> parameter = generateParameter(\n-        operationGenerator.getContext(),\n-        fieldAnnotation,\n-        genericParamType);\n \n+  private void setUpParameter(OperationGenerator operationGenerator, Annotation fieldAnnotation, Type genericParamType, String defaultValue) {\n+    AbstractSerializableParameter<?> parameter = generateParameter(operationGenerator.getContext(), fieldAnnotation, genericParamType);\n     if (null != defaultValue) {\n       parameter.setDefaultValue(defaultValue);\n     }\n+\n     operationGenerator.addProviderParameter(parameter);\n   }\n \n@@ -152,18 +145,14 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n    * @param genericParamType default value, can be null\n    * @return the generated swagger parameter\n    */\n-  private AbstractSerializableParameter<?> generateParameter(\n-      SwaggerGeneratorContext swaggerGeneratorContext,\n-      Annotation fieldAnnotation,\n-      Type genericParamType) {\n+\n+  private AbstractSerializableParameter<?> generateParameter(SwaggerGeneratorContext swaggerGeneratorContext, Annotation fieldAnnotation, Type genericParamType) {\n     // find the corresponding ParameterProcessor and process the parameter\n-    final AbstractParameterProcessor<?> parameterAnnotationProcessor =\n-        (AbstractParameterProcessor<?>) swaggerGeneratorContext\n-            .findParameterAnnotationProcessor(fieldAnnotation.annotationType());\n+    final AbstractParameterProcessor<?> parameterAnnotationProcessor = (AbstractParameterProcessor<?>) swaggerGeneratorContext.findParameterAnnotationProcessor(fieldAnnotation.annotationType());\n     AbstractSerializableParameter<?> parameter = parameterAnnotationProcessor.createParameter();\n     String paramName = parameterAnnotationProcessor.getAnnotationParameterName(fieldAnnotation);\n     parameter.setName(paramName);\n     ParamUtils.setParameterType(genericParamType, parameter);\n     return parameter;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..bcc0768bae3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/240/BeanParamAnnotationProcessor.java\n@@ -68,8 +68,8 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx),\n+          e);\n     }\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/240/BeanParamAnnotationProcessor.java\nindex a3a8eaea163..d5a30f2d772 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/240/BeanParamAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/240/BeanParamAnnotationProcessor.java\n@@ -68,8 +68,7 @@ public class BeanParamAnnotationProcessor implements ParameterAnnotationProcesso\n           \"Processing param failed, method=%s:%s, beanParamIdx=%d\",\n           operationGenerator.getProviderMethod().getDeclaringClass().getName(),\n           operationGenerator.getProviderMethod().getName(),\n-          paramIdx)\n-          , e);\n+          paramIdx), e);\n     }\n   }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ]
}