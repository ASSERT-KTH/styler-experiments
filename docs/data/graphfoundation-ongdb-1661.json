{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1661",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1661/BranchCollisionPolicies.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1661/BranchCollisionPolicies.java\nindex 2cfde9173da..2acb8aba9fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1661/BranchCollisionPolicies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1661/BranchCollisionPolicies.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n import java.util.function.Predicate;\n@@ -27,25 +28,25 @@ import org.neo4j.graphdb.impl.traversal.StandardBranchCollisionDetector;\n \n /**\n  * A catalogue of convenient branch collision policies\n- *\n+ * <p>\n  * Copied from kernel package so that we can hide kernel from the public API.\n  */\n public enum BranchCollisionPolicies implements BranchCollisionPolicy\n {\n-    STANDARD\n-    {\n+  STANDARD\n+      {\n         @Override\n-        public BranchCollisionDetector create( Evaluator evaluator, Predicate<Path> pathPredicate )\n+        public BranchCollisionDetector create(Evaluator evaluator, Predicate<Path> pathPredicate)\n         {\n-            return new StandardBranchCollisionDetector( evaluator, pathPredicate );\n+          return new StandardBranchCollisionDetector(evaluator, pathPredicate);\n         }\n-    },\n-    SHORTEST_PATH\n-    {\n+      },\n+  SHORTEST_PATH\n+      {\n         @Override\n-        public BranchCollisionDetector create( Evaluator evaluator, Predicate<Path> pathPredicate )\n+        public BranchCollisionDetector create(Evaluator evaluator, Predicate<Path> pathPredicate)\n         {\n-            return new ShortestPathsBranchCollisionDetector( evaluator, pathPredicate );\n+          return new ShortestPathsBranchCollisionDetector(evaluator, pathPredicate);\n         }\n-    }\n+      }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1661/BranchCollisionPolicies.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1661/BranchCollisionPolicies.java\nindex 2cfde9173da..104ea47c897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1661/BranchCollisionPolicies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1661/BranchCollisionPolicies.java\n@@ -39,8 +39,7 @@ public enum BranchCollisionPolicies implements BranchCollisionPolicy\n         {\n             return new StandardBranchCollisionDetector( evaluator, pathPredicate );\n         }\n-    },\n-    SHORTEST_PATH\n+    }, SHORTEST_PATH\n     {\n         @Override\n         public BranchCollisionDetector create( Evaluator evaluator, Predicate<Path> pathPredicate )\n@@ -48,4 +47,4 @@ public enum BranchCollisionPolicies implements BranchCollisionPolicy\n             return new ShortestPathsBranchCollisionDetector( evaluator, pathPredicate );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}