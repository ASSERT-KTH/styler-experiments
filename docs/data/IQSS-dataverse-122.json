{
    "project_name": "IQSS-dataverse",
    "violation_id": "122",
    "information": {
        "violations": [
            {
                "line": "20",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@RequiredPermissions( Permission.ManageDataversePermissions )\npublic class ListRoleAssignments extends AbstractCommand<List<RoleAssignment>> {\n\t\n\tprivate final DvObject definitionPoint;\n\tpublic ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n\t\tsuper(aRequest, aDefinitionPoint);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "20",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/122/ListRoleAssignments.java\nindex 1858ba377ab..d6751697c12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/122/ListRoleAssignments.java\n@@ -12,27 +12,27 @@ import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * \n  * @author michael\n  */\n-@RequiredPermissions( Permission.ManageDataversePermissions )\n+@RequiredPermissions(Permission.ManageDataversePermissions)\n public class ListRoleAssignments extends AbstractCommand<List<RoleAssignment>> {\n-\t\n-\tprivate final DvObject definitionPoint;\n-\tpublic ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n-\t\tsuper(aRequest, aDefinitionPoint);\n-\t\tdefinitionPoint = aDefinitionPoint;\n-\t}\n \n-\t@Override\n-\tpublic List<RoleAssignment> execute(CommandContext ctxt) throws CommandException {\n-            if(definitionPoint.isInstanceofDataset()){\n-                List <RoleAssignment> retVal = new ArrayList();\n-                retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint));\n-                retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint.getOwner()));\n-                return retVal;\n-            }\n-\t\treturn ctxt.permissions().assignmentsOn(definitionPoint);\n-\t}\n-\t\n+  private final DvObject definitionPoint;\n+\n+  public ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n+    super(aRequest, aDefinitionPoint);\n+    definitionPoint = aDefinitionPoint;\n+  }\n+\n+  @Override\n+  public List<RoleAssignment> execute(CommandContext ctxt) throws CommandException {\n+    if (definitionPoint.isInstanceofDataset()) {\n+      List<RoleAssignment> retVal = new ArrayList();\n+      retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint));\n+      retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint.getOwner()));\n+      return retVal;\n+    }\n+    return ctxt.permissions().assignmentsOn(definitionPoint);\n+  }\n+\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/122/ListRoleAssignments.java\nindex 1858ba377ab..9de6fd00775 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/122/ListRoleAssignments.java\n@@ -17,22 +17,23 @@ import java.util.List;\n  */\n @RequiredPermissions( Permission.ManageDataversePermissions )\n public class ListRoleAssignments extends AbstractCommand<List<RoleAssignment>> {\n-\t\n-\tprivate final DvObject definitionPoint;\n-\tpublic ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n-\t\tsuper(aRequest, aDefinitionPoint);\n+\n+        private final DvObject definitionPoint;\n+\n+public ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n+    super(aRequest, aDefinitionPoint);\n \t\tdefinitionPoint = aDefinitionPoint;\n-\t}\n+    }\n \n \t@Override\n \tpublic List<RoleAssignment> execute(CommandContext ctxt) throws CommandException {\n-            if(definitionPoint.isInstanceofDataset()){\n+    if(definitionPoint.isInstanceofDataset()){\n                 List <RoleAssignment> retVal = new ArrayList();\n                 retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint));\n                 retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint.getOwner()));\n                 return retVal;\n             }\n-\t\treturn ctxt.permissions().assignmentsOn(definitionPoint);\n-\t}\n+return ctxt.permissions().assignmentsOn(definitionPoint);\n+    }\n \t\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/122/ListRoleAssignments.java\nindex 1858ba377ab..b29528f5fdd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/122/ListRoleAssignments.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/122/ListRoleAssignments.java\n@@ -15,24 +15,27 @@ import java.util.List;\n  * \n  * @author michael\n  */\n-@RequiredPermissions( Permission.ManageDataversePermissions )\n+\n+\n+@RequiredPermissions(Permission.ManageDataversePermissions)\n public class ListRoleAssignments extends AbstractCommand<List<RoleAssignment>> {\n-\t\n-\tprivate final DvObject definitionPoint;\n-\tpublic ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n-\t\tsuper(aRequest, aDefinitionPoint);\n-\t\tdefinitionPoint = aDefinitionPoint;\n-\t}\n-\n-\t@Override\n-\tpublic List<RoleAssignment> execute(CommandContext ctxt) throws CommandException {\n-            if(definitionPoint.isInstanceofDataset()){\n-                List <RoleAssignment> retVal = new ArrayList();\n-                retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint));\n-                retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint.getOwner()));\n-                return retVal;\n-            }\n-\t\treturn ctxt.permissions().assignmentsOn(definitionPoint);\n-\t}\n-\t\n-}\n+\n+    private final DvObject definitionPoint;\n+\n+    public ListRoleAssignments(DataverseRequest aRequest, DvObject aDefinitionPoint) {\n+        super(aRequest, aDefinitionPoint);\n+        definitionPoint = aDefinitionPoint;\n+    }\n+\n+    @Override\n+    public List<RoleAssignment> execute(CommandContext ctxt) throws CommandException {\n+        if (definitionPoint.isInstanceofDataset()) {\n+            List<RoleAssignment> retVal = new ArrayList();\n+            retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint));\n+            retVal.addAll(ctxt.permissions().assignmentsOn(definitionPoint.getOwner()));\n+            return retVal;\n+        }\n+        return ctxt.permissions().assignmentsOn(definitionPoint);\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "20",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "20",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}