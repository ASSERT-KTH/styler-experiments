{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2915",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2915/IdAllocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2915/IdAllocation.java\nindex 70d95f422be..40f3d2b04d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2915/IdAllocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2915/IdAllocation.java\n@@ -17,41 +17,42 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import org.neo4j.kernel.impl.store.id.IdRange;\n \n public final class IdAllocation\n {\n-    private final IdRange idRange;\n-    private final long highestIdInUse;\n-    private final long defragCount;\n-\n-    IdAllocation( IdRange idRange, long highestIdInUse, long defragCount )\n-    {\n-        this.idRange = idRange;\n-        this.highestIdInUse = highestIdInUse;\n-        this.defragCount = defragCount;\n-    }\n-\n-    long getHighestIdInUse()\n-    {\n-        return highestIdInUse;\n-    }\n-\n-    long getDefragCount()\n-    {\n-        return defragCount;\n-    }\n-\n-    IdRange getIdRange()\n-    {\n-        return this.idRange;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"IdAllocation[\" + idRange + \", \" + highestIdInUse + \", \" + defragCount + \"]\";\n-    }\n+  private final IdRange idRange;\n+  private final long highestIdInUse;\n+  private final long defragCount;\n+\n+  IdAllocation(IdRange idRange, long highestIdInUse, long defragCount)\n+  {\n+    this.idRange = idRange;\n+    this.highestIdInUse = highestIdInUse;\n+    this.defragCount = defragCount;\n+  }\n+\n+  long getHighestIdInUse()\n+  {\n+    return highestIdInUse;\n+  }\n+\n+  long getDefragCount()\n+  {\n+    return defragCount;\n+  }\n+\n+  IdRange getIdRange()\n+  {\n+    return this.idRange;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"IdAllocation[\" + idRange + \", \" + highestIdInUse + \", \" + defragCount + \"]\";\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2915/IdAllocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2915/IdAllocation.java\nindex 70d95f422be..fd0fd2551c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2915/IdAllocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2915/IdAllocation.java\n@@ -54,4 +54,4 @@ public final class IdAllocation\n     {\n         return \"IdAllocation[\" + idRange + \", \" + highestIdInUse + \", \" + defragCount + \"]\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}