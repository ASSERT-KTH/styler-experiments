{
    "project_name": "wso2-attic-commons",
    "violation_id": "53",
    "information": {
        "violations": [
            {
                "line": "70",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 144).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        } else {\n            if (!owner.getRemoteClients().isEmpty()) {\n                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(owner.getId(), timeoutCounter);\n\n                for (Session arc : owner.getRemoteClients()) {\n                    try {",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/53/AuctionTimeBroadcasterTask.java\nindex 25736139c58..92ec0752039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/53/AuctionTimeBroadcasterTask.java\n@@ -67,7 +67,8 @@ public class AuctionTimeBroadcasterTask extends TimerTask {\n             owner.switchStateToAuctionFinished();\r\n         } else {\r\n             if (!owner.getRemoteClients().isEmpty()) {\r\n-                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(owner.getId(), timeoutCounter);\r\n+                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(\r\n+                        owner.getId(), timeoutCounter);\r\n \r\n                 for (Session arc : owner.getRemoteClients()) {\r\n                     try {\r\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/53/AuctionTimeBroadcasterTask.java\nindex 25736139c58..78e3e0d16e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/53/AuctionTimeBroadcasterTask.java\n@@ -37,6 +37,7 @@\n  * only if the new code is made subject to such option by the copyright\r\n  * holder.\r\n  */\r\n+\r\n package org.glassfish.samples.websocket.auction;\r\n \r\n import java.io.IOException;\r\n@@ -53,31 +54,32 @@ import org.glassfish.samples.websocket.auction.message.AuctionMessage;\n  */\r\n public class AuctionTimeBroadcasterTask extends TimerTask {\r\n \r\n-    private Auction owner;\r\n-    private int timeoutCounter;\r\n+  private Auction owner;\r\n+  private int timeoutCounter;\r\n \r\n-    public AuctionTimeBroadcasterTask(Auction owner, int timeoutCounter) {\r\n-        this.owner = owner;\r\n-        this.timeoutCounter = timeoutCounter;\r\n-    }\r\n+  public AuctionTimeBroadcasterTask(Auction owner, int timeoutCounter) {\r\n+    this.owner = owner;\r\n+    this.timeoutCounter = timeoutCounter;\r\n+  }\r\n \r\n-    @Override\r\n-    public void run() {\r\n-        if (timeoutCounter < 0) {\r\n-            owner.switchStateToAuctionFinished();\r\n-        } else {\r\n-            if (!owner.getRemoteClients().isEmpty()) {\r\n-                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(owner.getId(), timeoutCounter);\r\n+  @Override\r\n+  public void run() {\r\n+    if (timeoutCounter < 0) {\r\n+      owner.switchStateToAuctionFinished();\r\n+    } else {\r\n+      if (!owner.getRemoteClients().isEmpty()) {\r\n+        AuctionMessage.AuctionTimeBroadcastMessage atbm =\r\n+          new AuctionMessage.AuctionTimeBroadcastMessage(owner.getId(), timeoutCounter);\r\n \r\n-                for (Session arc : owner.getRemoteClients()) {\r\n-                    try {\r\n-                        arc.getBasicRemote().sendText(atbm.toString());\r\n-                    } catch (IOException ex) {\r\n-                        Logger.getLogger(AuctionTimeBroadcasterTask.class.getName()).log(Level.SEVERE, null, ex);\r\n-                    }\r\n-                }\r\n-            }\r\n+        for (Session arc : owner.getRemoteClients()) {\r\n+          try {\r\n+            arc.getBasicRemote().sendText(atbm.toString());\r\n+          } catch (IOException ex) {\r\n+            Logger.getLogger(AuctionTimeBroadcasterTask.class.getName()).log(Level.SEVERE, null, ex);\r\n+          }\r\n         }\r\n-        timeoutCounter--;\r\n+      }\r\n     }\r\n+    timeoutCounter--;\r\n+  }\r\n }\r\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/53/AuctionTimeBroadcasterTask.java\nindex 25736139c58..0b5a2b66e0a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/53/AuctionTimeBroadcasterTask.java\n@@ -80,4 +80,4 @@ public class AuctionTimeBroadcasterTask extends TimerTask {\n         }\r\n         timeoutCounter--;\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/53/AuctionTimeBroadcasterTask.java\nindex 25736139c58..92ec0752039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/53/AuctionTimeBroadcasterTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/53/AuctionTimeBroadcasterTask.java\n@@ -67,7 +67,8 @@ public class AuctionTimeBroadcasterTask extends TimerTask {\n             owner.switchStateToAuctionFinished();\r\n         } else {\r\n             if (!owner.getRemoteClients().isEmpty()) {\r\n-                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(owner.getId(), timeoutCounter);\r\n+                AuctionMessage.AuctionTimeBroadcastMessage atbm = new AuctionMessage.AuctionTimeBroadcastMessage(\r\n+                        owner.getId(), timeoutCounter);\r\n \r\n                 for (Session arc : owner.getRemoteClients()) {\r\n                     try {\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}