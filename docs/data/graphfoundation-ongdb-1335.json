{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1335",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "222",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1335/Dbinfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1335/Dbinfo.java\nindex f8e53cc4431..c8a675890ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1335/Dbinfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1335/Dbinfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import java.rmi.RemoteException;\n@@ -48,213 +49,204 @@ import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n \n public class Dbinfo extends NonTransactionProvidingApp\n {\n+  {\n+    addOptionDefinition(\"l\", new OptionDefinition(OptionValueType.MAY,\n+        \"List available attributes for the specified bean. \"\n+            + \"Including a description about each attribute.\"));\n+    addOptionDefinition(\"g\", new OptionDefinition(OptionValueType.MUST,\n+        \"Get the value of the specified attribute(s), \"\n+            + \"or all attributes of the specified bean \"\n+            + \"if no attributes are specified.\"));\n+  }\n+\n+  @Override\n+  public String getDescription()\n+  {\n+    final Kernel kernel;\n+    try\n     {\n-        addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MAY,\n-                \"List available attributes for the specified bean. \"\n-                        + \"Including a description about each attribute.\" ) );\n-        addOptionDefinition( \"g\", new OptionDefinition( OptionValueType.MUST,\n-                \"Get the value of the specified attribute(s), \"\n-                        + \"or all attributes of the specified bean \"\n-                        + \"if no attributes are specified.\" ) );\n+      kernel = getKernel();\n+    } catch (ShellException e)\n+    {\n+      return e.getMessage();\n     }\n+    MBeanServer mbeans = getPlatformMBeanServer();\n+    StringBuilder result = new StringBuilder(\n+        \"Get runtime information about the Graph Database.\\n\"\n+            + \"This uses the Neo4j management beans to get\"\n+            + \" information about the Graph Database.\\n\\n\");\n+    availableBeans(mbeans, kernel, result);\n+    result.append(\"\\n\");\n+    getUsage(result);\n+    return result.toString();\n+  }\n+\n+  private void getUsage(StringBuilder result)\n+  {\n+    result.append(\"USAGE: \");\n+    result.append(getName());\n+    result.append(\" -(g|l) <bean name> [list of attribute names]\");\n+  }\n \n-    @Override\n-    public String getDescription()\n+  private Kernel getKernel() throws ShellException\n+  {\n+    GraphDatabaseAPI graphDb = getServer().getDb();\n+    Kernel kernel = null;\n+    if (graphDb instanceof GraphDatabaseAPI)\n     {\n-        final Kernel kernel;\n-        try\n-        {\n-            kernel = getKernel();\n-        }\n-        catch ( ShellException e )\n-        {\n-            return e.getMessage();\n-        }\n-        MBeanServer mbeans = getPlatformMBeanServer();\n-        StringBuilder result = new StringBuilder(\n-                \"Get runtime information about the Graph Database.\\n\"\n-                        + \"This uses the Neo4j management beans to get\"\n-                        + \" information about the Graph Database.\\n\\n\" );\n-        availableBeans( mbeans, kernel, result );\n-        result.append( \"\\n\" );\n-        getUsage( result );\n-        return result.toString();\n+      try\n+      {\n+        kernel = graphDb.getDependencyResolver().resolveDependency(JmxKernelExtension.class)\n+            .getSingleManagementBean(Kernel.class);\n+      } catch (Exception e)\n+      {\n+        // Ignore - the null check does the work\n+      }\n     }\n-\n-    private void getUsage( StringBuilder result )\n+    if (kernel == null)\n     {\n-        result.append( \"USAGE: \" );\n-        result.append( getName() );\n-        result.append( \" -(g|l) <bean name> [list of attribute names]\" );\n+      throw new ShellException(getName() + \" is not available for this graph database.\");\n     }\n+    return kernel;\n+  }\n \n-    private Kernel getKernel() throws ShellException\n+  @Override\n+  protected Continuation exec(AppCommandParser parser, Session session, Output out) throws Exception\n+  {\n+    Kernel kernel = getKernel();\n+    boolean list = parser.options().containsKey(\"l\");\n+    boolean get = parser.options().containsKey(\"g\");\n+    if ((list && get) || (!list && !get))\n     {\n-        GraphDatabaseAPI graphDb = getServer().getDb();\n-        Kernel kernel = null;\n-        if ( graphDb instanceof GraphDatabaseAPI )\n-        {\n-            try\n-            {\n-                kernel = graphDb.getDependencyResolver().resolveDependency( JmxKernelExtension.class )\n-                        .getSingleManagementBean( Kernel.class );\n-            }\n-            catch ( Exception e )\n-            {\n-                // Ignore - the null check does the work\n-            }\n-        }\n-        if ( kernel == null )\n-        {\n-            throw new ShellException( getName() + \" is not available for this graph database.\" );\n-        }\n-        return kernel;\n+      StringBuilder usage = new StringBuilder();\n+      getUsage(usage);\n+      usage.append(\".\\n\");\n+      out.print(usage.toString());\n+      return Continuation.INPUT_COMPLETE;\n     }\n-\n-    @Override\n-    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws Exception\n+    MBeanServer mbeans = getPlatformMBeanServer();\n+    String bean = null;\n+    String[] attributes = null;\n+    if (list)\n     {\n-        Kernel kernel = getKernel();\n-        boolean list = parser.options().containsKey( \"l\" );\n-        boolean get = parser.options().containsKey( \"g\" );\n-        if ( (list && get) || (!list && !get) )\n-        {\n-            StringBuilder usage = new StringBuilder();\n-            getUsage( usage );\n-            usage.append( \".\\n\" );\n-            out.print( usage.toString() );\n-            return Continuation.INPUT_COMPLETE;\n-        }\n-        MBeanServer mbeans = getPlatformMBeanServer();\n-        String bean = null;\n-        String[] attributes = null;\n-        if ( list )\n-        {\n-            bean = parser.options().get( \"l\" );\n-        }\n-        else if ( get )\n-        {\n-            bean = parser.options().get( \"g\" );\n-            attributes = parser.arguments().toArray( new String[parser.arguments().size()] );\n-        }\n-        if ( bean == null ) // list beans\n-        {\n-            StringBuilder result = new StringBuilder();\n-            availableBeans( mbeans, kernel, result );\n-            out.print( result.toString() );\n-            return Continuation.INPUT_COMPLETE;\n-        }\n-        ObjectName mbean;\n-        {\n-            mbean = kernel.getMBeanQuery();\n-            Hashtable<String, String> properties = new Hashtable<>( mbean.getKeyPropertyList() );\n-            properties.put( \"name\", bean );\n-            try\n-            {\n-                Iterator<ObjectName> names = mbeans.queryNames(\n-                        new ObjectName( mbean.getDomain(), properties ), null ).iterator();\n-                if ( names.hasNext() )\n-                {\n-                    mbean = names.next();\n-                    if ( names.hasNext() )\n-                    {\n-                        mbean = null;\n-                    }\n-                }\n-                else\n-                {\n-                    mbean = null;\n-                }\n-            }\n-            catch ( Exception e )\n-            {\n-                mbean = null;\n-            }\n-        }\n-        if ( mbean == null )\n-        {\n-            throw new ShellException( \"No such management bean \\\"\" + bean + \"\\\".\" );\n-        }\n-        if ( attributes == null ) // list attributes\n-        {\n-            for ( MBeanAttributeInfo attr : mbeans.getMBeanInfo( mbean ).getAttributes() )\n-            {\n-                out.println( attr.getName() + \" - \" + attr.getDescription() );\n-            }\n-        }\n-        else\n-        {\n-            if ( attributes.length == 0 ) // specify all attributes\n-            {\n-                MBeanAttributeInfo[] allAttributes = mbeans.getMBeanInfo( mbean ).getAttributes();\n-                attributes = new String[allAttributes.length];\n-                for ( int i = 0; i < allAttributes.length; i++ )\n-                {\n-                    attributes[i] = allAttributes[i].getName();\n-                }\n-            }\n-            JSONObject json = new JSONObject();\n-            for ( Object value : mbeans.getAttributes( mbean, attributes ) )\n-            {\n-                printAttribute( json, value );\n-            }\n-            out.println( json.toString( 2 ) );\n-        }\n-        return Continuation.INPUT_COMPLETE;\n+      bean = parser.options().get(\"l\");\n+    } else if (get)\n+    {\n+      bean = parser.options().get(\"g\");\n+      attributes = parser.arguments().toArray(new String[parser.arguments().size()]);\n+    }\n+    if (bean == null) // list beans\n+    {\n+      StringBuilder result = new StringBuilder();\n+      availableBeans(mbeans, kernel, result);\n+      out.print(result.toString());\n+      return Continuation.INPUT_COMPLETE;\n+    }\n+    ObjectName mbean;\n+    {\n+      mbean = kernel.getMBeanQuery();\n+      Hashtable<String, String> properties = new Hashtable<>(mbean.getKeyPropertyList());\n+      properties.put(\"name\", bean);\n+      try\n+      {\n+        Iterator<ObjectName> names = mbeans.queryNames(\n+            new ObjectName(mbean.getDomain(), properties), null).iterator();\n+        if (names.hasNext())\n+        {\n+          mbean = names.next();\n+          if (names.hasNext())\n+          {\n+            mbean = null;\n+          }\n+        } else\n+        {\n+          mbean = null;\n+        }\n+      } catch (Exception e)\n+      {\n+        mbean = null;\n+      }\n+    }\n+    if (mbean == null)\n+    {\n+      throw new ShellException(\"No such management bean \\\"\" + bean + \"\\\".\");\n     }\n+    if (attributes == null) // list attributes\n+    {\n+      for (MBeanAttributeInfo attr : mbeans.getMBeanInfo(mbean).getAttributes())\n+      {\n+        out.println(attr.getName() + \" - \" + attr.getDescription());\n+      }\n+    } else\n+    {\n+      if (attributes.length == 0) // specify all attributes\n+      {\n+        MBeanAttributeInfo[] allAttributes = mbeans.getMBeanInfo(mbean).getAttributes();\n+        attributes = new String[allAttributes.length];\n+        for (int i = 0; i < allAttributes.length; i++)\n+        {\n+          attributes[i] = allAttributes[i].getName();\n+        }\n+      }\n+      JSONObject json = new JSONObject();\n+      for (Object value : mbeans.getAttributes(mbean, attributes))\n+      {\n+        printAttribute(json, value);\n+      }\n+      out.println(json.toString(2));\n+    }\n+    return Continuation.INPUT_COMPLETE;\n+  }\n \n-    private void printAttribute( JSONObject json, Object value ) throws ShellException\n+  private void printAttribute(JSONObject json, Object value) throws ShellException\n+  {\n+    try\n     {\n-        try\n-        {\n-            Attribute attribute = (Attribute) value;\n-            Object attributeValue = attribute.getValue();\n-            if ( attributeValue != null && attributeValue.getClass().isArray() )\n-            {\n-                Object[] arrayValue = (Object[]) attributeValue;\n-                JSONArray array = new JSONArray();\n-                for ( Object item : arrayValue )\n-                {\n-                    if ( item instanceof CompositeData )\n-                    {\n-                        array.put( compositeDataAsMap( (CompositeData) item ) );\n-                    }\n-                    else\n-                    {\n-                        array.put( item.toString() );\n-                    }\n-                }\n-                json.put( attribute.getName(), array );\n-            }\n-            else\n-            {\n-                json.put( attribute.getName(), attributeValue );\n-            }\n-        }\n-        catch ( JSONException e )\n-        {\n-            throw ShellException.wrapCause( e );\n-        }\n+      Attribute attribute = (Attribute) value;\n+      Object attributeValue = attribute.getValue();\n+      if (attributeValue != null && attributeValue.getClass().isArray())\n+      {\n+        Object[] arrayValue = (Object[]) attributeValue;\n+        JSONArray array = new JSONArray();\n+        for (Object item : arrayValue)\n+        {\n+          if (item instanceof CompositeData)\n+          {\n+            array.put(compositeDataAsMap((CompositeData) item));\n+          } else\n+          {\n+            array.put(item.toString());\n+          }\n+        }\n+        json.put(attribute.getName(), array);\n+      } else\n+      {\n+        json.put(attribute.getName(), attributeValue);\n+      }\n+    } catch (JSONException e)\n+    {\n+      throw ShellException.wrapCause(e);\n     }\n+  }\n \n-    private Map<?, ?> compositeDataAsMap( CompositeData item )\n+  private Map<?, ?> compositeDataAsMap(CompositeData item)\n+  {\n+    Map<String, Object> result = new HashMap<>();\n+    for (String key : item.getCompositeType().keySet())\n     {\n-        Map<String, Object> result = new HashMap<>();\n-        for ( String key : item.getCompositeType().keySet() )\n-        {\n-            result.put( key, item.get( key ) );\n-        }\n-        return result;\n+      result.put(key, item.get(key));\n     }\n+    return result;\n+  }\n \n-    private void availableBeans( MBeanServer mbeans, Kernel kernel, StringBuilder result )\n+  private void availableBeans(MBeanServer mbeans, Kernel kernel, StringBuilder result)\n+  {\n+    result.append(\"Available Management Beans\\n\");\n+    for (Object name : mbeans.queryNames(kernel.getMBeanQuery(), null))\n     {\n-        result.append( \"Available Management Beans\\n\" );\n-        for ( Object name : mbeans.queryNames( kernel.getMBeanQuery(), null ) )\n-        {\n-            result.append( \"* \" );\n-            result.append( ((ObjectName) name).getKeyProperty( \"name\" ) );\n-            result.append( \"\\n\" );\n-        }\n+      result.append(\"* \");\n+      result.append(((ObjectName) name).getKeyProperty(\"name\"));\n+      result.append(\"\\n\");\n     }\n+  }\n }\n",
            "diff_size": 271
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1335/Dbinfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1335/Dbinfo.java\nindex f8e53cc4431..d4f7644dc54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1335/Dbinfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1335/Dbinfo.java\n@@ -49,13 +49,8 @@ import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n public class Dbinfo extends NonTransactionProvidingApp\n {\n     {\n-        addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MAY,\n-                \"List available attributes for the specified bean. \"\n-                        + \"Including a description about each attribute.\" ) );\n-        addOptionDefinition( \"g\", new OptionDefinition( OptionValueType.MUST,\n-                \"Get the value of the specified attribute(s), \"\n-                        + \"or all attributes of the specified bean \"\n-                        + \"if no attributes are specified.\" ) );\n+        addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MAY, \"List available attributes for the specified bean. \" + \"Including a description about each attribute.\" ) );\n+addOptionDefinition( \"g\", new OptionDefinition( OptionValueType.MUST, \"Get the value of the specified attribute(s), \" + \"or all attributes of the specified bean \" + \"if no attributes are specified.\" ) );\n     }\n \n     @Override\n@@ -70,12 +65,10 @@ public class Dbinfo extends NonTransactionProvidingApp\n         {\n             return e.getMessage();\n         }\n-        MBeanServer mbeans = getPlatformMBeanServer();\n-        StringBuilder result = new StringBuilder(\n-                \"Get runtime information about the Graph Database.\\n\"\n-                        + \"This uses the Neo4j management beans to get\"\n-                        + \" information about the Graph Database.\\n\\n\" );\n-        availableBeans( mbeans, kernel, result );\n+\n+MBeanServer mbeans = getPlatformMBeanServer();\n+        StringBuilder result = new StringBuilder( \"Get runtime information about the Graph Database.\\n\" + \"This uses the Neo4j management beans to get\" + \" information about the Graph Database.\\n\\n\" );\n+availableBeans( mbeans, kernel, result );\n         result.append( \"\\n\" );\n         getUsage( result );\n         return result.toString();\n@@ -96,9 +89,8 @@ public class Dbinfo extends NonTransactionProvidingApp\n         {\n             try\n             {\n-                kernel = graphDb.getDependencyResolver().resolveDependency( JmxKernelExtension.class )\n-                        .getSingleManagementBean( Kernel.class );\n-            }\n+                kernel = graphDb.getDependencyResolver().resolveDependency( JmxKernelExtension.class ).getSingleManagementBean( Kernel.class );\n+    }\n             catch ( Exception e )\n             {\n                 // Ignore - the null check does the work\n@@ -108,7 +100,8 @@ public class Dbinfo extends NonTransactionProvidingApp\n         {\n             throw new ShellException( getName() + \" is not available for this graph database.\" );\n         }\n-        return kernel;\n+\n+return kernel;\n     }\n \n     @Override\n@@ -117,7 +110,7 @@ public class Dbinfo extends NonTransactionProvidingApp\n         Kernel kernel = getKernel();\n         boolean list = parser.options().containsKey( \"l\" );\n         boolean get = parser.options().containsKey( \"g\" );\n-        if ( (list && get) || (!list && !get) )\n+        if ( ( list && get) || (!list && !get) )\n         {\n             StringBuilder usage = new StringBuilder();\n             getUsage( usage );\n@@ -125,7 +118,8 @@ public class Dbinfo extends NonTransactionProvidingApp\n             out.print( usage.toString() );\n             return Continuation.INPUT_COMPLETE;\n         }\n-        MBeanServer mbeans = getPlatformMBeanServer();\n+\n+MBeanServer mbeans = getPlatformMBeanServer();\n         String bean = null;\n         String[] attributes = null;\n         if ( list )\n@@ -137,23 +131,24 @@ public class Dbinfo extends NonTransactionProvidingApp\n             bean = parser.options().get( \"g\" );\n             attributes = parser.arguments().toArray( new String[parser.arguments().size()] );\n         }\n-        if ( bean == null ) // list beans\n+\n+if ( bean == null ) // list beans\n         {\n             StringBuilder result = new StringBuilder();\n             availableBeans( mbeans, kernel, result );\n             out.print( result.toString() );\n             return Continuation.INPUT_COMPLETE;\n         }\n-        ObjectName mbean;\n+\n+ObjectName mbean;\n         {\n             mbean = kernel.getMBeanQuery();\n-            Hashtable<String, String> properties = new Hashtable<>( mbean.getKeyPropertyList() );\n+            Hashtable<String,String> properties = new Hashtable<>( mbean.getKeyPropertyList() );\n             properties.put( \"name\", bean );\n             try\n             {\n-                Iterator<ObjectName> names = mbeans.queryNames(\n-                        new ObjectName( mbean.getDomain(), properties ), null ).iterator();\n-                if ( names.hasNext() )\n+                Iterator<ObjectName> names = mbeans.queryNames( new ObjectName( mbean.getDomain(), properties ), null ).iterator();\n+if ( names.hasNext() )\n                 {\n                     mbean = names.next();\n                     if ( names.hasNext() )\n@@ -175,7 +170,8 @@ public class Dbinfo extends NonTransactionProvidingApp\n         {\n             throw new ShellException( \"No such management bean \\\"\" + bean + \"\\\".\" );\n         }\n-        if ( attributes == null ) // list attributes\n+\n+if ( attributes == null ) // list attributes\n         {\n             for ( MBeanAttributeInfo attr : mbeans.getMBeanInfo( mbean ).getAttributes() )\n             {\n@@ -200,7 +196,8 @@ public class Dbinfo extends NonTransactionProvidingApp\n             }\n             out.println( json.toString( 2 ) );\n         }\n-        return Continuation.INPUT_COMPLETE;\n+\n+return Continuation.INPUT_COMPLETE;\n     }\n \n     private void printAttribute( JSONObject json, Object value ) throws ShellException\n@@ -239,12 +236,13 @@ public class Dbinfo extends NonTransactionProvidingApp\n \n     private Map<?, ?> compositeDataAsMap( CompositeData item )\n     {\n-        Map<String, Object> result = new HashMap<>();\n+        Map<String,Object> result = new HashMap<>();\n         for ( String key : item.getCompositeType().keySet() )\n         {\n             result.put( key, item.get( key ) );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     private void availableBeans( MBeanServer mbeans, Kernel kernel, StringBuilder result )\n@@ -257,4 +255,4 @@ public class Dbinfo extends NonTransactionProvidingApp\n             result.append( \"\\n\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}