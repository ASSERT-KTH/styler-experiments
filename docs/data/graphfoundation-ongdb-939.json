{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "939",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/939/RaftMessageProcessingMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/939/RaftMessageProcessingMetric.java\nindex fab6c7dda8b..8f4a67e3c1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/939/RaftMessageProcessingMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/939/RaftMessageProcessingMetric.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.causalclustering;\n \n import com.codahale.metrics.Reservoir;\n@@ -34,55 +35,55 @@ import org.neo4j.causalclustering.core.consensus.RaftMessages;\n \n public class RaftMessageProcessingMetric implements RaftMessageProcessingMonitor\n {\n-    private final AtomicLong delay = new AtomicLong( 0 );\n-    private final Timer timer;\n-    private final Map<RaftMessages.Type,Timer> typeTimers = new EnumMap<>( RaftMessages.Type.class );\n+  private final AtomicLong delay = new AtomicLong(0);\n+  private final Timer timer;\n+  private final Map<RaftMessages.Type, Timer> typeTimers = new EnumMap<>(RaftMessages.Type.class);\n \n-    public static RaftMessageProcessingMetric create()\n-    {\n-        return new RaftMessageProcessingMetric( Timer::new );\n-    }\n+  public static RaftMessageProcessingMetric create()\n+  {\n+    return new RaftMessageProcessingMetric(Timer::new);\n+  }\n \n-    public static RaftMessageProcessingMetric createUsing( Supplier<Reservoir> reservoir )\n-    {\n-        return new RaftMessageProcessingMetric( () -> new Timer( reservoir.get() ) );\n-    }\n+  public static RaftMessageProcessingMetric createUsing(Supplier<Reservoir> reservoir)\n+  {\n+    return new RaftMessageProcessingMetric(() -> new Timer(reservoir.get()));\n+  }\n \n-    private RaftMessageProcessingMetric( Supplier<Timer> timerFactory )\n+  private RaftMessageProcessingMetric(Supplier<Timer> timerFactory)\n+  {\n+    for (RaftMessages.Type type : RaftMessages.Type.values())\n     {\n-        for ( RaftMessages.Type type : RaftMessages.Type.values() )\n-        {\n-            typeTimers.put( type, timerFactory.get() );\n-        }\n-        this.timer = timerFactory.get();\n+      typeTimers.put(type, timerFactory.get());\n     }\n+    this.timer = timerFactory.get();\n+  }\n \n-    public long delay()\n-    {\n-        return delay.get();\n-    }\n+  public long delay()\n+  {\n+    return delay.get();\n+  }\n \n-    @Override\n-    public void setDelay( Duration delay )\n-    {\n-        this.delay.set( delay.toMillis() );\n-    }\n+  @Override\n+  public void setDelay(Duration delay)\n+  {\n+    this.delay.set(delay.toMillis());\n+  }\n \n-    public Timer timer()\n-    {\n-        return timer;\n-    }\n+  public Timer timer()\n+  {\n+    return timer;\n+  }\n \n-    public Timer timer( RaftMessages.Type type )\n-    {\n-        return typeTimers.get( type );\n-    }\n+  public Timer timer(RaftMessages.Type type)\n+  {\n+    return typeTimers.get(type);\n+  }\n \n-    @Override\n-    public void updateTimer( RaftMessages.Type type, Duration duration )\n-    {\n-        long nanos = duration.toNanos();\n-        timer.update( nanos, TimeUnit.NANOSECONDS );\n-        typeTimers.get( type ).update( nanos, TimeUnit.NANOSECONDS );\n-    }\n+  @Override\n+  public void updateTimer(RaftMessages.Type type, Duration duration)\n+  {\n+    long nanos = duration.toNanos();\n+    timer.update(nanos, TimeUnit.NANOSECONDS);\n+    typeTimers.get(type).update(nanos, TimeUnit.NANOSECONDS);\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/939/RaftMessageProcessingMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/939/RaftMessageProcessingMetric.java\nindex fab6c7dda8b..3de9bc76dab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/939/RaftMessageProcessingMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/939/RaftMessageProcessingMetric.java\n@@ -85,4 +85,4 @@ public class RaftMessageProcessingMetric implements RaftMessageProcessingMonitor\n         timer.update( nanos, TimeUnit.NANOSECONDS );\n         typeTimers.get( type ).update( nanos, TimeUnit.NANOSECONDS );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}