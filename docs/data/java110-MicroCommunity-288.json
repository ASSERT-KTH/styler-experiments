{
    "project_name": "java110-MicroCommunity",
    "violation_id": "288",
    "information": {
        "violations": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 172).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n\n        if (workflows == null || workflows.size() == 0) {\n            return workflows;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..6539703de96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/288/WorkflowInnerServiceSMOImpl.java\n@@ -44,7 +44,7 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n             workflowDto.setPage((page - 1) * workflowDto.getRow());\n         }\n \n-        List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n+        List <WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n \n         if (workflows == null || workflows.size() == 0) {\n             return workflows;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..8aad31cbfb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/288/WorkflowInnerServiceSMOImpl.java\n@@ -34,7 +34,7 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<WorkflowDto> queryWorkflows(@RequestBody  WorkflowDto workflowDto) {\n+    public List<WorkflowDto> queryWorkflows(@RequestBody WorkflowDto workflowDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -44,7 +44,8 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n             workflowDto.setPage((page - 1) * workflowDto.getRow());\n         }\n \n-        List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n+        List<WorkflowDto> workflows =\n+            BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n \n         if (workflows == null || workflows.size() == 0) {\n             return workflows;\n@@ -64,7 +65,7 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param workflow \u5c0f\u533a\u5de5\u4f5c\u6d41\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n+     * @param users    \u7528\u6237\u5217\u8868\n      */\n     private void refreshWorkflow(WorkflowDto workflow, List<UserDto> users) {\n         for (UserDto user : users) {\n@@ -80,7 +81,7 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n      * @param workflows \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-     private String[] getUserIds(List<WorkflowDto> workflows) {\n+    private String[] getUserIds(List<WorkflowDto> workflows) {\n         List<String> userIds = new ArrayList<String>();\n         for (WorkflowDto workflow : workflows) {\n             userIds.add(workflow.getFlowId());\n@@ -91,7 +92,8 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n \n     @Override\n     public int queryWorkflowsCount(@RequestBody WorkflowDto workflowDto) {\n-        return workflowServiceDaoImpl.queryWorkflowsCount(BeanConvertUtil.beanCovertMap(workflowDto));    }\n+        return workflowServiceDaoImpl.queryWorkflowsCount(BeanConvertUtil.beanCovertMap(workflowDto));\n+    }\n \n     public IWorkflowServiceDao getWorkflowServiceDaoImpl() {\n         return workflowServiceDaoImpl;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..d181b683c0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/288/WorkflowInnerServiceSMOImpl.java\n@@ -80,8 +80,8 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n      * @param workflows \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-     private String[] getUserIds(List<WorkflowDto> workflows) {\n-        List<String> userIds = new ArrayList<String>();\n+private String[] getUserIds(List<WorkflowDto> workflows) {\n+    List<String> userIds = new ArrayList<String>();\n         for (WorkflowDto workflow : workflows) {\n             userIds.add(workflow.getFlowId());\n         }\n@@ -108,4 +108,4 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..0030304d0b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/288/WorkflowInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.common.smo.impl;\n \n-\n import com.java110.common.dao.IWorkflowServiceDao;\n import com.java110.core.smo.common.IWorkflowInnerServiceSMO;\n import com.java110.dto.workflow.WorkflowDto;\n@@ -12,7 +11,6 @@ import com.java110.dto.PageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +22,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWorkflowInnerServiceSMO {\n \n@@ -34,18 +34,18 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<WorkflowDto> queryWorkflows(@RequestBody  WorkflowDto workflowDto) {\n+    public List<WorkflowDto> queryWorkflows(@RequestBody WorkflowDto workflowDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = workflowDto.getPage();\n \n+\n+        int page = workflowDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             workflowDto.setPage((page - 1) * workflowDto.getRow());\n         }\n \n         List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n-\n         if (workflows == null || workflows.size() == 0) {\n             return workflows;\n         }\n@@ -53,7 +53,6 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n         String[] userIds = getUserIds(workflows);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (WorkflowDto workflow : workflows) {\n             refreshWorkflow(workflow, users);\n         }\n@@ -66,6 +65,8 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n      * @param workflow \u5c0f\u533a\u5de5\u4f5c\u6d41\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshWorkflow(WorkflowDto workflow, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (workflow.getFlowId().equals(user.getUserId())) {\n@@ -80,18 +81,20 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n      * @param workflows \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n-     private String[] getUserIds(List<WorkflowDto> workflows) {\n+\n+\n+    private String[] getUserIds(List<WorkflowDto> workflows) {\n         List<String> userIds = new ArrayList<String>();\n         for (WorkflowDto workflow : workflows) {\n             userIds.add(workflow.getFlowId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n     @Override\n     public int queryWorkflowsCount(@RequestBody WorkflowDto workflowDto) {\n-        return workflowServiceDaoImpl.queryWorkflowsCount(BeanConvertUtil.beanCovertMap(workflowDto));    }\n+        return workflowServiceDaoImpl.queryWorkflowsCount(BeanConvertUtil.beanCovertMap(workflowDto));\n+    }\n \n     public IWorkflowServiceDao getWorkflowServiceDaoImpl() {\n         return workflowServiceDaoImpl;\n@@ -108,4 +111,4 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..6539703de96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/288/WorkflowInnerServiceSMOImpl.java\n@@ -44,7 +44,7 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n             workflowDto.setPage((page - 1) * workflowDto.getRow());\n         }\n \n-        List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n+        List <WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n \n         if (workflows == null || workflows.size() == 0) {\n             return workflows;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/288/WorkflowInnerServiceSMOImpl.java\nindex 1b68a09038d..a301ed689c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/288/WorkflowInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/288/WorkflowInnerServiceSMOImpl.java\n@@ -43,7 +43,6 @@ public class WorkflowInnerServiceSMOImpl extends BaseServiceSMO implements IWork\n         if (page != PageDto.DEFAULT_PAGE) {\n             workflowDto.setPage((page - 1) * workflowDto.getRow());\n         }\n-\n         List<WorkflowDto> workflows = BeanConvertUtil.covertBeanList(workflowServiceDaoImpl.getWorkflowInfo(BeanConvertUtil.beanCovertMap(workflowDto)), WorkflowDto.class);\n \n         if (workflows == null || workflows.size() == 0) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}