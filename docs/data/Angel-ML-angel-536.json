{
    "project_name": "Angel-ML-angel",
    "violation_id": "536",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/536/InitNodeFeats.java\nindex 9ccf440efaf..22b9d4f2590 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/536/InitNodeFeats.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.initnodefeats4;\n \n import com.tencent.angel.graph.data.Node;\n@@ -26,38 +27,38 @@ import org.apache.commons.logging.LogFactory;\n \n public class InitNodeFeats extends UpdateFunc {\n \n-  private static final Log LOG = LogFactory.getLog(InitNodeFeats.class);\n+    private static final Log LOG = LogFactory.getLog(InitNodeFeats.class);\n \n-  public InitNodeFeats(InitNodeFeatsParam param) {\n-    super(param);\n-  }\n+    public InitNodeFeats(InitNodeFeatsParam param) {\n+        super(param);\n+    }\n \n-  public InitNodeFeats() {\n-    this(null);\n-  }\n+    public InitNodeFeats() {\n+        this(null);\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    InitNodeFeatsPartParam param = (InitNodeFeatsPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(param.getPartKey(), 0);\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        InitNodeFeatsPartParam param = (InitNodeFeatsPartParam) partParam;\n+        ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n+                .getRow(param.getPartKey(), 0);\n \n-    long[] nodeIds = param.getNodeIds();\n-    IntFloatVector[] feats = param.getFeats();\n+        long[] nodeIds = param.getNodeIds();\n+        IntFloatVector[] feats = param.getFeats();\n \n-    row.startWrite();\n-    try {\n-      for (int i = 0; i < nodeIds.length; i++) {\n-        Node node = (Node) row.get(nodeIds[i]);\n-        if (node == null) {\n-          node = new Node();\n-          row.set(nodeIds[i], node);\n-        }\n+        row.startWrite();\n+        try {\n+            for (int i = 0; i < nodeIds.length; i++) {\n+                Node node = (Node) row.get(nodeIds[i]);\n+                if (node == null) {\n+                    node = new Node();\n+                    row.set(nodeIds[i], node);\n+                }\n \n-        node.setFeats(feats[i]);\n-      }\n-    } finally {\n-      row.endWrite();\n+                node.setFeats(feats[i]);\n+            }\n+        } finally {\n+            row.endWrite();\n+        }\n     }\n-  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/536/InitNodeFeats.java\nindex 9ccf440efaf..1f89fd8d72c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/536/InitNodeFeats.java\n@@ -41,8 +41,7 @@ public class InitNodeFeats extends UpdateFunc {\n     InitNodeFeatsPartParam param = (InitNodeFeatsPartParam) partParam;\n     ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n         .getRow(param.getPartKey(), 0);\n-\n-    long[] nodeIds = param.getNodeIds();\n+long[] nodeIds = param.getNodeIds();\n     IntFloatVector[] feats = param.getFeats();\n \n     row.startWrite();\n@@ -60,4 +59,4 @@ public class InitNodeFeats extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/536/InitNodeFeats.java\nindex 9ccf440efaf..869c5421433 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/536/InitNodeFeats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/536/InitNodeFeats.java\n@@ -39,12 +39,9 @@ public class InitNodeFeats extends UpdateFunc {\n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     InitNodeFeatsPartParam param = (InitNodeFeatsPartParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(param.getPartKey(), 0);\n-\n+    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n     long[] nodeIds = param.getNodeIds();\n     IntFloatVector[] feats = param.getFeats();\n-\n     row.startWrite();\n     try {\n       for (int i = 0; i < nodeIds.length; i++) {\n@@ -53,11 +50,11 @@ public class InitNodeFeats extends UpdateFunc {\n           node = new Node();\n           row.set(nodeIds[i], node);\n         }\n-\n         node.setFeats(feats[i]);\n       }\n     } finally {\n       row.endWrite();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}