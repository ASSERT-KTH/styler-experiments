{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1467",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1467/QueryStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1467/QueryStatistics.java\nindex 4d961fb192b..1845452f86e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1467/QueryStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1467/QueryStatistics.java\n@@ -17,100 +17,101 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb;\n \n /**\n  * Represents statistics about the effects of a query.\n- *\n+ * <p>\n  * If the query did not perform any {@link #containsUpdates() updates}, all the methods of this interface will return\n  * {@code 0}.\n  */\n public interface QueryStatistics\n {\n-    // NOTE: If you change this interface, be sure to update bolt\n+  // NOTE: If you change this interface, be sure to update bolt\n \n-    /**\n-     * Returns the number of nodes created by this query.\n-     *\n-     * @return the number of nodes created by this query.\n-     */\n-    int getNodesCreated();\n+  /**\n+   * Returns the number of nodes created by this query.\n+   *\n+   * @return the number of nodes created by this query.\n+   */\n+  int getNodesCreated();\n \n-    /**\n-     * Returns the number of nodes deleted by this query.\n-     *\n-     * @return the number of nodes deleted by this query.\n-     */\n-    int getNodesDeleted();\n+  /**\n+   * Returns the number of nodes deleted by this query.\n+   *\n+   * @return the number of nodes deleted by this query.\n+   */\n+  int getNodesDeleted();\n \n-    /**\n-     * Returns the number of relationships created by this query.\n-     *\n-     * @return the number of relationships created by this query.\n-     */\n-    int getRelationshipsCreated();\n+  /**\n+   * Returns the number of relationships created by this query.\n+   *\n+   * @return the number of relationships created by this query.\n+   */\n+  int getRelationshipsCreated();\n \n-    /**\n-     * Returns the number of relationships deleted by this query.\n-     *\n-     * @return the number of relationships deleted by this query.\n-     */\n-    int getRelationshipsDeleted();\n+  /**\n+   * Returns the number of relationships deleted by this query.\n+   *\n+   * @return the number of relationships deleted by this query.\n+   */\n+  int getRelationshipsDeleted();\n \n-    /**\n-     * Returns the number of properties set by this query. Setting a property to the same value again still counts\n-     * towards this.\n-     *\n-     * @return the number of properties set by this query.\n-     */\n-    int getPropertiesSet();\n+  /**\n+   * Returns the number of properties set by this query. Setting a property to the same value again still counts\n+   * towards this.\n+   *\n+   * @return the number of properties set by this query.\n+   */\n+  int getPropertiesSet();\n \n-    /**\n-     * Returns the number of labels added to any node by this query.\n-     *\n-     * @return the number of labels added to any node by this query.\n-     */\n-    int getLabelsAdded();\n+  /**\n+   * Returns the number of labels added to any node by this query.\n+   *\n+   * @return the number of labels added to any node by this query.\n+   */\n+  int getLabelsAdded();\n \n-    /**\n-     * Returns the number of labels removed from any node by this query.\n-     *\n-     * @return the number of labels removed from any node by this query.\n-     */\n-    int getLabelsRemoved();\n+  /**\n+   * Returns the number of labels removed from any node by this query.\n+   *\n+   * @return the number of labels removed from any node by this query.\n+   */\n+  int getLabelsRemoved();\n \n-    /**\n-     * Returns the number of indexes added by this query.\n-     *\n-     * @return the number of indexes added by this query.\n-     */\n-    int getIndexesAdded();\n+  /**\n+   * Returns the number of indexes added by this query.\n+   *\n+   * @return the number of indexes added by this query.\n+   */\n+  int getIndexesAdded();\n \n-    /**\n-     * Returns the number of indexes removed by this query.\n-     *\n-     * @return the number of indexes removed by this query.\n-     */\n-    int getIndexesRemoved();\n+  /**\n+   * Returns the number of indexes removed by this query.\n+   *\n+   * @return the number of indexes removed by this query.\n+   */\n+  int getIndexesRemoved();\n \n-    /**\n-     * Returns the number of constraints added by this query.\n-     *\n-     * @return the number of constraints added by this query.\n-     */\n-    int getConstraintsAdded();\n+  /**\n+   * Returns the number of constraints added by this query.\n+   *\n+   * @return the number of constraints added by this query.\n+   */\n+  int getConstraintsAdded();\n \n-    /**\n-     * Returns the number of constraints removed by this query.\n-     *\n-     * @return the number of constraints removed by this query.\n-     */\n-    int getConstraintsRemoved();\n+  /**\n+   * Returns the number of constraints removed by this query.\n+   *\n+   * @return the number of constraints removed by this query.\n+   */\n+  int getConstraintsRemoved();\n \n-    /**\n-     * If the query updated the graph in any way, this method will return true.\n-     *\n-     * @return if the graph has been updated.\n-     */\n-    boolean containsUpdates();\n+  /**\n+   * If the query updated the graph in any way, this method will return true.\n+   *\n+   * @return if the graph has been updated.\n+   */\n+  boolean containsUpdates();\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1467/QueryStatistics.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1467/QueryStatistics.java\nindex 4d961fb192b..39a62f13d19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1467/QueryStatistics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1467/QueryStatistics.java\n@@ -113,4 +113,4 @@ public interface QueryStatistics\n      * @return if the graph has been updated.\n      */\n     boolean containsUpdates();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}