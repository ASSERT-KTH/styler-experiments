{
    "project_name": "Chaklader-Object-Oriented-Design",
    "violation_id": "31",
    "information": {
        "violations": [
            {
                "line": "46",
                "column": "25",
                "severity": "error",
                "message": "'}' at column 25 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  private List<Store> stores = new LinkedList<>();\n\n  private Dispatcher() {}\n\n  public static Dispatcher getInstance() {\n    return instance;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Object-Oriented-Design/styler/05_predictions/final/files-repaired/31/Dispatcher.java\nindex 3be55dc4614..c52d2fab808 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Object-Oriented-Design/styler/05_predictions/final/files-repaired/31/Dispatcher.java\n@@ -43,7 +43,8 @@ public final class Dispatcher {\n \n   private List<Store> stores = new LinkedList<>();\n \n-  private Dispatcher() {}\n+  private Dispatcher() {\n+  }\n \n   public static Dispatcher getInstance() {\n     return instance;\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/checkstyle_idea/31/Dispatcher.java\nindex 3be55dc4614..e1c8a8f319c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/checkstyle_idea/31/Dispatcher.java\n@@ -1,17 +1,17 @@\n /**\n  * The MIT License\n  * Copyright (c) 2014-2016 Ilkka Sepp\u00e4l\u00e4\n- *\n+ * <p>\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n  * in the Software without restriction, including without limitation the rights\n  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  * copies of the Software, and to permit persons to whom the Software is\n  * furnished to do so, subject to the following conditions:\n- *\n+ * <p>\n  * The above copyright notice and this permission notice shall be included in\n  * all copies or substantial portions of the Software.\n- *\n+ * <p>\n  * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -20,6 +20,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n+\n package com.iluwatar.flux.dispatcher;\n \n import java.util.LinkedList;\n@@ -33,7 +34,7 @@ import com.iluwatar.flux.action.MenuItem;\n import com.iluwatar.flux.store.Store;\n \n /**\n- * \n+ *\n  * Dispatcher sends Actions to registered Stores.\n  *\n  */\n@@ -43,7 +44,8 @@ public final class Dispatcher {\n \n   private List<Store> stores = new LinkedList<>();\n \n-  private Dispatcher() {}\n+  private Dispatcher() {\n+  }\n \n   public static Dispatcher getInstance() {\n     return instance;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/naturalize/31/Dispatcher.java\nindex 3be55dc4614..30524deb0d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/naturalize/31/Dispatcher.java\n@@ -43,7 +43,8 @@ public final class Dispatcher {\n \n   private List<Store> stores = new LinkedList<>();\n \n-  private Dispatcher() {}\n+  private Dispatcher() {\n+}\n \n   public static Dispatcher getInstance() {\n     return instance;\n@@ -60,8 +61,8 @@ public final class Dispatcher {\n     dispatchAction(new MenuAction(menuItem));\n     switch (menuItem) {\n       case HOME:\n-      case PRODUCTS:\n-      default:\n+  case PRODUCTS:\n+  default:\n         dispatchAction(new ContentAction(Content.PRODUCTS));\n         break;\n       case COMPANY:\n@@ -73,4 +74,4 @@ public final class Dispatcher {\n   private void dispatchAction(Action action) {\n     stores.stream().forEach(store -> store.onAction(action));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/codebuff/31/Dispatcher.java\nindex 3be55dc4614..e37ad8078b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/codebuff/31/Dispatcher.java\n@@ -24,7 +24,6 @@ package com.iluwatar.flux.dispatcher;\n \n import java.util.LinkedList;\n import java.util.List;\n-\n import com.iluwatar.flux.action.Action;\n import com.iluwatar.flux.action.Content;\n import com.iluwatar.flux.action.ContentAction;\n@@ -37,18 +36,22 @@ import com.iluwatar.flux.store.Store;\n  * Dispatcher sends Actions to registered Stores.\n  *\n  */\n+\n+\n public final class Dispatcher {\n \n   private static Dispatcher instance = new Dispatcher();\n-\n   private List<Store> stores = new LinkedList<>();\n \n-  private Dispatcher() {}\n+  private Dispatcher() {\n+  }\n+\n \n   public static Dispatcher getInstance() {\n     return instance;\n   }\n \n+\n   public void registerStore(Store store) {\n     stores.add(store);\n   }\n@@ -56,12 +59,12 @@ public final class Dispatcher {\n   /**\n    * Menu item selected handler\n    */\n+\n+\n   public void menuItemSelected(MenuItem menuItem) {\n     dispatchAction(new MenuAction(menuItem));\n     switch (menuItem) {\n-      case HOME:\n-      case PRODUCTS:\n-      default:\n+      case HOME: case PRODUCTS: default:\n         dispatchAction(new ContentAction(Content.PRODUCTS));\n         break;\n       case COMPANY:\n@@ -73,4 +76,4 @@ public final class Dispatcher {\n   private void dispatchAction(Action action) {\n     stores.stream().forEach(store -> store.onAction(action));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "46",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/styler/05_predictions/three_grams/files-repaired/31/Dispatcher.java\nindex 3be55dc4614..c52d2fab808 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/violations/31/Dispatcher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Object-Oriented-Design/styler/05_predictions/three_grams/files-repaired/31/Dispatcher.java\n@@ -43,7 +43,8 @@ public final class Dispatcher {\n \n   private List<Store> stores = new LinkedList<>();\n \n-  private Dispatcher() {}\n+  private Dispatcher() {\n+  }\n \n   public static Dispatcher getInstance() {\n     return instance;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_random"
    ]
}