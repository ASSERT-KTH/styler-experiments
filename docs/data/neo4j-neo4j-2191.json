{
    "project_name": "neo4j-neo4j",
    "violation_id": "2191",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2191/BoltQueryExecutorImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2191/BoltQueryExecutorImpl.java\nindex be26efa17ec..7eb468fb094 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2191/BoltQueryExecutorImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2191/BoltQueryExecutorImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.dbapi.impl;\n \n import org.neo4j.bolt.dbapi.BoltQueryExecution;\n@@ -36,8 +37,8 @@ public class BoltQueryExecutorImpl implements BoltQueryExecutor\n     private final TransactionalContextFactory transactionalContextFactory;\n     private final InternalTransaction internalTransaction;\n \n-    BoltQueryExecutorImpl( QueryExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory,\n-            InternalTransaction internalTransaction )\n+    BoltQueryExecutorImpl(QueryExecutionEngine queryExecutionEngine, TransactionalContextFactory transactionalContextFactory,\n+                          InternalTransaction internalTransaction)\n     {\n         this.queryExecutionEngine = queryExecutionEngine;\n         this.transactionalContextFactory = transactionalContextFactory;\n@@ -45,12 +46,12 @@ public class BoltQueryExecutorImpl implements BoltQueryExecutor\n     }\n \n     @Override\n-    public BoltQueryExecution executeQuery( String query, MapValue parameters, boolean prePopulate, QuerySubscriber subscriber )\n-            throws QueryExecutionKernelException\n+    public BoltQueryExecution executeQuery(String query, MapValue parameters, boolean prePopulate, QuerySubscriber subscriber)\n+      throws QueryExecutionKernelException\n     {\n-        TransactionalContext transactionalContext = transactionalContextFactory.newContext( internalTransaction, query, parameters );\n-        QueryExecution queryExecution = queryExecutionEngine.executeQuery( query, parameters, transactionalContext, prePopulate, subscriber );\n-        return new BoltQueryExecutionImpl( queryExecution, transactionalContext );\n+        TransactionalContext transactionalContext = transactionalContextFactory.newContext(internalTransaction, query, parameters);\n+        QueryExecution queryExecution = queryExecutionEngine.executeQuery(query, parameters, transactionalContext, prePopulate, subscriber);\n+        return new BoltQueryExecutionImpl(queryExecution, transactionalContext);\n     }\n \n     private static class BoltQueryExecutionImpl implements BoltQueryExecution\n@@ -58,7 +59,7 @@ public class BoltQueryExecutorImpl implements BoltQueryExecutor\n         private final QueryExecution queryExecution;\n         private final TransactionalContext transactionalContext;\n \n-        BoltQueryExecutionImpl( QueryExecution queryExecution, TransactionalContext transactionalContext )\n+        BoltQueryExecutionImpl(QueryExecution queryExecution, TransactionalContext transactionalContext)\n         {\n             this.queryExecution = queryExecution;\n             this.transactionalContext = transactionalContext;\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}