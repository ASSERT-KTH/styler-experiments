{
    "project_name": "apache-usergrid",
    "violation_id": "34",
    "information": {
        "violations": [
            {
                "line": "26",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Helper class that contains the logic to build a lock path\n *\n * @author eanuff\n */\npublic class LockPathBuilder {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/34/LockPathBuilder.java\nindex adc86f75947..7bef0b670f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/34/LockPathBuilder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.locking;\n \n \n@@ -30,15 +31,17 @@ public class LockPathBuilder {\n     private static final String SLASH = \"/\";\n \n \n-    /** Build a string path for this lock */\n-    public static String buildPath( UUID applicationId, String... path ) {\n+    /**\n+     * Build a string path for this lock\n+     */\n+    public static String buildPath(UUID applicationId, String... path) {\n         StringBuilder builder = new StringBuilder();\n-        builder.append( SLASH );\n-        builder.append( applicationId.toString() );\n+        builder.append(SLASH);\n+        builder.append(applicationId.toString());\n \n-        for ( String element : path ) {\n-            builder.append( SLASH );\n-            builder.append( element );\n+        for (String element : path) {\n+            builder.append(SLASH);\n+            builder.append(element);\n         }\n         return builder.toString();\n     }\n@@ -47,22 +50,22 @@ public class LockPathBuilder {\n     /**\n      * Build a string path for this lock\n      *\n-     * @param The binary value to append to the end of the lock path\n+     * @param The  binary value to append to the end of the lock path\n      * @param path The values to prepend to build path\n      */\n-    public static String buildPath( String binaryValue, String... path ) {\n+    public static String buildPath(String binaryValue, String... path) {\n \n         StringBuilder builder = new StringBuilder();\n \n-        for ( String element : path ) {\n-            builder.append( SLASH );\n-            builder.append( element );\n+        for (String element : path) {\n+            builder.append(SLASH);\n+            builder.append(element);\n         }\n \n-        builder.append( SLASH );\n-        builder.append( binaryValue );\n+        builder.append(SLASH);\n+        builder.append(binaryValue);\n \n-        builder.deleteCharAt( 0 );\n+        builder.deleteCharAt(0);\n \n         return builder.toString();\n     }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/34/LockPathBuilder.java\nindex adc86f75947..ea928a07d0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/34/LockPathBuilder.java\n@@ -66,4 +66,4 @@ public class LockPathBuilder {\n \n         return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/34/LockPathBuilder.java\nindex adc86f75947..674c8bf152d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/34/LockPathBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/34/LockPathBuilder.java\n@@ -25,6 +25,8 @@ import java.util.UUID;\n  *\n  * @author eanuff\n  */\n+\n+\n public class LockPathBuilder {\n \n     private static final String SLASH = \"/\";\n@@ -35,7 +37,6 @@ public class LockPathBuilder {\n         StringBuilder builder = new StringBuilder();\n         builder.append( SLASH );\n         builder.append( applicationId.toString() );\n-\n         for ( String element : path ) {\n             builder.append( SLASH );\n             builder.append( element );\n@@ -50,20 +51,17 @@ public class LockPathBuilder {\n      * @param The binary value to append to the end of the lock path\n      * @param path The values to prepend to build path\n      */\n-    public static String buildPath( String binaryValue, String... path ) {\n \n-        StringBuilder builder = new StringBuilder();\n \n+    public static String buildPath( String binaryValue, String... path ) {\n+        StringBuilder builder = new StringBuilder();\n         for ( String element : path ) {\n             builder.append( SLASH );\n             builder.append( element );\n         }\n-\n         builder.append( SLASH );\n         builder.append( binaryValue );\n-\n         builder.deleteCharAt( 0 );\n-\n         return builder.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}