{
    "project_name": "Activiti-Activiti",
    "violation_id": "800",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport org.activiti.api.process.model.payloads.SignalPayload;\nimport org.activiti.engine.RuntimeService;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/800/RuntimeSignalPayloadEventListener.java\nindex 5346f9a3f32..9ba7dfd0bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/800/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/800/RuntimeSignalPayloadEventListener.java\nindex 5346f9a3f32..3fba6620c43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/800/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n@@ -21,14 +22,13 @@ import org.activiti.runtime.api.signal.SignalPayloadEventListener;\n import org.springframework.context.event.EventListener;\n \n /**\n- * Default implementation of SignalPayloadEventListener that delegates \n- * Spring SignalPayload event into embedded RuntimeService.  \n- * \n+ * Default implementation of SignalPayloadEventListener that delegates\n+ * Spring SignalPayload event into embedded RuntimeService.\n  */\n public class RuntimeSignalPayloadEventListener implements SignalPayloadEventListener {\n-    \n+\n     private final RuntimeService runtimeService;\n-    \n+\n     public RuntimeSignalPayloadEventListener(RuntimeService runtimeService) {\n         this.runtimeService = runtimeService;\n     }\n@@ -37,7 +37,7 @@ public class RuntimeSignalPayloadEventListener implements SignalPayloadEventList\n     @EventListener\n     public void sendSignal(SignalPayload signalPayload) {\n         runtimeService.signalEventReceived(signalPayload.getName(),\n-                                           signalPayload.getVariables());\n+                signalPayload.getVariables());\n     }\n \n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/800/RuntimeSignalPayloadEventListener.java\nindex 5346f9a3f32..506044cc181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/800/RuntimeSignalPayloadEventListener.java\n@@ -25,19 +25,20 @@ import org.springframework.context.event.EventListener;\n  * Spring SignalPayload event into embedded RuntimeService.  \n  * \n  */\n+\n+\n public class RuntimeSignalPayloadEventListener implements SignalPayloadEventListener {\n-    \n-    private final RuntimeService runtimeService;\n-    \n-    public RuntimeSignalPayloadEventListener(RuntimeService runtimeService) {\n-        this.runtimeService = runtimeService;\n-    }\n \n-    @Override\n-    @EventListener\n-    public void sendSignal(SignalPayload signalPayload) {\n-        runtimeService.signalEventReceived(signalPayload.getName(),\n-                                           signalPayload.getVariables());\n-    }\n+  private final RuntimeService runtimeService;\n+\n+  public RuntimeSignalPayloadEventListener(RuntimeService runtimeService) {\n+    this.runtimeService = runtimeService;\n+  }\n \n-}\n+  @Override\n+  @EventListener\n+  public void sendSignal(SignalPayload signalPayload) {\n+    runtimeService.signalEventReceived(signalPayload.getName(),\n+                                       signalPayload.getVariables());\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/800/RuntimeSignalPayloadEventListener.java\nindex 5346f9a3f32..9ba7dfd0bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/800/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/800/RuntimeSignalPayloadEventListener.java\nindex 5346f9a3f32..9ba7dfd0bdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/800/RuntimeSignalPayloadEventListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/800/RuntimeSignalPayloadEventListener.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import org.activiti.api.process.model.payloads.SignalPayload;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}