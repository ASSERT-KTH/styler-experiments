{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3247",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3247/OffHeapRegularNumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3247/OffHeapRegularNumberArray.java\nindex f6fe7276e6f..66802934ed8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3247/OffHeapRegularNumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3247/OffHeapRegularNumberArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n import org.neo4j.memory.MemoryAllocationTracker;\n@@ -26,35 +27,35 @@ import org.neo4j.memory.MemoryAllocationTracker;\n  */\n abstract class OffHeapRegularNumberArray<N extends NumberArray<N>> extends OffHeapNumberArray<N>\n {\n-    protected final int shift;\n+  protected final int shift;\n \n-    protected OffHeapRegularNumberArray( long length, int shift, long base, MemoryAllocationTracker allocationTracker )\n-    {\n-        super( length, 1 << shift, base, allocationTracker );\n-        this.shift = shift;\n-    }\n+  protected OffHeapRegularNumberArray(long length, int shift, long base, MemoryAllocationTracker allocationTracker)\n+  {\n+    super(length, 1 << shift, base, allocationTracker);\n+    this.shift = shift;\n+  }\n \n-    protected long addressOf( long index )\n+  protected long addressOf(long index)\n+  {\n+    index = rebase(index);\n+    if (index < 0 || index >= length)\n     {\n-        index = rebase( index );\n-        if ( index < 0 || index >= length )\n-        {\n-            throw new ArrayIndexOutOfBoundsException( \"Requested index \" + index + \", but length is \" + length );\n-        }\n-        return address + (index << shift);\n+      throw new ArrayIndexOutOfBoundsException(\"Requested index \" + index + \", but length is \" + length);\n     }\n+    return address + (index << shift);\n+  }\n \n-    protected boolean isByteUniform( long value )\n+  protected boolean isByteUniform(long value)\n+  {\n+    byte any = (byte) value;\n+    for (int i = 1; i < itemSize; i++)\n     {\n-        byte any = (byte)value;\n-        for ( int i = 1; i < itemSize; i++ )\n-        {\n-            byte test = (byte)(value >>> (i << 3));\n-            if ( test != any )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      byte test = (byte) (value >>> (i << 3));\n+      if (test != any)\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3247/OffHeapRegularNumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3247/OffHeapRegularNumberArray.java\nindex f6fe7276e6f..303bc7c82ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3247/OffHeapRegularNumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3247/OffHeapRegularNumberArray.java\n@@ -41,7 +41,8 @@ abstract class OffHeapRegularNumberArray<N extends NumberArray<N>> extends OffHe\n         {\n             throw new ArrayIndexOutOfBoundsException( \"Requested index \" + index + \", but length is \" + length );\n         }\n-        return address + (index << shift);\n+\n+return address + ( index << shift);\n     }\n \n     protected boolean isByteUniform( long value )\n@@ -49,7 +50,7 @@ abstract class OffHeapRegularNumberArray<N extends NumberArray<N>> extends OffHe\n         byte any = (byte)value;\n         for ( int i = 1; i < itemSize; i++ )\n         {\n-            byte test = (byte)(value >>> (i << 3));\n+            byte test = (byte)( value >>> ( i << 3 ));\n             if ( test != any )\n             {\n                 return false;\n@@ -57,4 +58,4 @@ abstract class OffHeapRegularNumberArray<N extends NumberArray<N>> extends OffHe\n         }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}