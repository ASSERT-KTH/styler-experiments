{
    "project_name": "eclipse-milo",
    "violation_id": "49",
    "information": {
        "violations": [
            {
                "line": "32",
                "column": "36",
                "severity": "error",
                "message": "'}' at column 36 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "     * Create an empty {@link AttributeFilterChain}.\n     */\n    public AttributeFilterChain() {}\n\n    /**\n     * Create an {@link AttributeFilterChain} with {@code filter} added to it.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/49/AttributeFilterChain.java\nindex 1d35a450d50..c3914d1ef87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/49/AttributeFilterChain.java\n@@ -29,7 +29,8 @@ public class AttributeFilterChain {\n     /**\n      * Create an empty {@link AttributeFilterChain}.\n      */\n-    public AttributeFilterChain() {}\n+    public AttributeFilterChain() {\n+    }\n \n     /**\n      * Create an {@link AttributeFilterChain} with {@code filter} added to it.\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/49/AttributeFilterChain.java\nindex 1d35a450d50..dc2953f3a8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/49/AttributeFilterChain.java\n@@ -165,4 +165,4 @@ public class AttributeFilterChain {\n         return this;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/49/AttributeFilterChain.java\nindex 1d35a450d50..49353a841cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/49/AttributeFilterChain.java\n@@ -14,7 +14,6 @@ import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n import java.util.concurrent.ConcurrentLinkedDeque;\n-\n import org.eclipse.milo.opcua.sdk.server.Session;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaNode;\n import org.eclipse.milo.opcua.sdk.server.nodes.filters.AttributeFilterContext.GetAttributeContext;\n@@ -29,13 +28,16 @@ public class AttributeFilterChain {\n     /**\n      * Create an empty {@link AttributeFilterChain}.\n      */\n-    public AttributeFilterChain() {}\n+\n+    public AttributeFilterChain() {\n+    }\n \n     /**\n      * Create an {@link AttributeFilterChain} with {@code filter} added to it.\n      *\n      * @param filter the filter to add.\n      */\n+\n     public AttributeFilterChain(AttributeFilter filter) {\n         filters.add(filter);\n     }\n@@ -45,6 +47,7 @@ public class AttributeFilterChain {\n      *\n      * @param filters the filters to add.\n      */\n+\n     public AttributeFilterChain(List<AttributeFilter> filters) {\n         this.filters.addAll(filters);\n     }\n@@ -56,6 +59,7 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to get the value of.\n      * @return the value for the attribute identified by {@code attributeId} from {@code node}.\n      */\n+\n     public Object getAttribute(UaNode node, AttributeId attributeId) {\n         return getAttribute(null, node, attributeId);\n     }\n@@ -68,12 +72,11 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to get the value of.\n      * @return the value for the attribute identified by {@code attributeId} from {@code node}.\n      */\n+\n     public Object getAttribute(@Nullable Session session, UaNode node, AttributeId attributeId) {\n         Iterator<AttributeFilter> filterIterator = filters.iterator();\n \n-        AttributeFilter filter = filterIterator.hasNext() ?\n-            filterIterator.next() :\n-            AttributeFilter.DEFAULT_INSTANCE;\n+        AttributeFilter filter = filterIterator.hasNext() ? filterIterator.next() : AttributeFilter.DEFAULT_INSTANCE;\n \n         GetAttributeContext ctx = new GetAttributeContext(session, node, filterIterator);\n \n@@ -93,6 +96,7 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to set the value of.\n      * @param value       the value to set.\n      */\n+\n     public void setAttribute(UaNode node, AttributeId attributeId, Object value) {\n         setAttribute(null, node, attributeId, value);\n     }\n@@ -105,12 +109,15 @@ public class AttributeFilterChain {\n      * @param attributeId the {@link AttributeId} of the attribute to set the value of.\n      * @param value       the value to set.\n      */\n-    public void setAttribute(@Nullable Session session, UaNode node, AttributeId attributeId, Object value) {\n+\n+    public void setAttribute(\n+        @Nullable Session session,\n+        UaNode node,\n+        AttributeId attributeId, Object value\n+    ) {\n         Iterator<AttributeFilter> filterIterator = filters.iterator();\n \n-        AttributeFilter filter = filterIterator.hasNext() ?\n-            filterIterator.next() :\n-            AttributeFilter.DEFAULT_INSTANCE;\n+        AttributeFilter filter = filterIterator.hasNext() ? filterIterator.next() : AttributeFilter.DEFAULT_INSTANCE;\n \n         SetAttributeContext ctx = new SetAttributeContext(session, node, filterIterator);\n \n@@ -123,9 +130,9 @@ public class AttributeFilterChain {\n      * @param attributeFilter the {@link AttributeFilter} to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addFirst(AttributeFilter attributeFilter) {\n         filters.addFirst(attributeFilter);\n-\n         return this;\n     }\n \n@@ -135,9 +142,9 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addFirst(AttributeFilter... attributeFilters) {\n         Arrays.stream(attributeFilters).forEach(this::addFirst);\n-\n         return this;\n     }\n \n@@ -147,9 +154,9 @@ public class AttributeFilterChain {\n      * @param attributeFilter the {@link AttributeFilter} to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addLast(AttributeFilter attributeFilter) {\n         filters.addLast(attributeFilter);\n-\n         return this;\n     }\n \n@@ -159,10 +166,10 @@ public class AttributeFilterChain {\n      * @param attributeFilters the {@link AttributeFilter}s to add.\n      * @return this {@link AttributeFilterChain}.\n      */\n+\n     public AttributeFilterChain addLast(AttributeFilter... attributeFilters) {\n         Arrays.stream(attributeFilters).forEach(this::addLast);\n-\n         return this;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/49/AttributeFilterChain.java\nindex 1d35a450d50..4b7a57d06e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/49/AttributeFilterChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/49/AttributeFilterChain.java\n@@ -30,7 +30,6 @@ public class AttributeFilterChain {\n      * Create an empty {@link AttributeFilterChain}.\n      */\n     public AttributeFilterChain() {}\n-\n     /**\n      * Create an {@link AttributeFilterChain} with {@code filter} added to it.\n      *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}