{
    "project_name": "twilio-twilio-java",
    "violation_id": "97",
    "information": {
        "violations": [
            {
                "line": "149",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/twilio-twilio-java/styler/05_predictions/final/files-repaired/97/MemberReader.java\nindex ac8fdc7f1f8..2377f6a7265 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/twilio-twilio-java/styler/05_predictions/final/files-repaired/97/MemberReader.java\n@@ -146,7 +146,7 @@ public class MemberReader extends Reader<Member> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/checkstyle_idea/97/MemberReader.java\nindex ac8fdc7f1f8..01405cb4672 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/checkstyle_idea/97/MemberReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account.queue;\n@@ -146,7 +146,7 @@ public class MemberReader extends Reader<Member> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/codebuff/97/MemberReader.java\nindex ac8fdc7f1f8..861690239e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/codebuff/97/MemberReader.java\n@@ -28,6 +28,8 @@ public class MemberReader extends Reader<Member> {\n      *\n      * @param pathQueueSid The SID of the Queue in which to find the members\n      */\n+\n+\n     public MemberReader(final String pathQueueSid) {\n         this.pathQueueSid = pathQueueSid;\n     }\n@@ -39,6 +41,8 @@ public class MemberReader extends Reader<Member> {\n      *                       read\n      * @param pathQueueSid The SID of the Queue in which to find the members\n      */\n+\n+\n     public MemberReader(final String pathAccountSid,\n                         final String pathQueueSid) {\n         this.pathAccountSid = pathAccountSid;\n@@ -51,6 +55,8 @@ public class MemberReader extends Reader<Member> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Member ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<Member> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -62,14 +68,15 @@ public class MemberReader extends Reader<Member> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Member ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Member> firstPage(final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Queues/\" + this.pathQueueSid + \"/Members.json\"\n+                              HttpMethod.GET,\n+                              Domains.API.toString(),\n+                              \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Queues/\" + this.pathQueueSid + \"/Members.json\"\n         );\n \n         addQueryParams(request);\n@@ -83,15 +90,13 @@ public class MemberReader extends Reader<Member> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Member ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Member> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Member> getPage(final String targetUrl,\n+                                final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -102,13 +107,11 @@ public class MemberReader extends Reader<Member> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Member> nextPage(final Page<Member> page,\n                                  final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -119,13 +122,11 @@ public class MemberReader extends Reader<Member> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Member> previousPage(final Page<Member> page,\n                                      final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -136,9 +137,11 @@ public class MemberReader extends Reader<Member> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Member> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Member> pageForRequest(final TwilioRestClient client,\n+                                        final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Member read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -146,15 +149,11 @@ public class MemberReader extends Reader<Member> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"queue_members\",\n-            response.getContent(),\n-            Member.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"queue_members\", response.getContent(), Member.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -162,6 +161,8 @@ public class MemberReader extends Reader<Member> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/random/files-repaired/97/MemberReader.java\nindex ac8fdc7f1f8..2377f6a7265 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/random/files-repaired/97/MemberReader.java\n@@ -146,7 +146,7 @@ public class MemberReader extends Reader<Member> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/three_grams/files-repaired/97/MemberReader.java\nindex ac8fdc7f1f8..22b745971be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/violations/97/MemberReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/twilio-twilio-java/styler/05_predictions/three_grams/files-repaired/97/MemberReader.java\n@@ -146,7 +146,8 @@ public class MemberReader extends Reader<Member> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}