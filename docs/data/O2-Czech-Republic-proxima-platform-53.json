{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "violation_id": "53",
    "information": {
        "violations": [
            {
                "line": "22",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Provider of timestamp. Timestamp can be provided according to different timestamp policies (e.g.\n * processing time, watermark, test timestamps, etc.).\n */\n@Internal",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/53/TimeProvider.java\nindex 9e69025373c..12974b6607e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/53/TimeProvider.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.functional;\n \n import cz.o2.proxima.annotations.Internal;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/53/TimeProvider.java\nindex 9e69025373c..a49ef4eb362 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/53/TimeProvider.java\n@@ -33,4 +33,4 @@ public interface TimeProvider extends Serializable {\n \n   /** @return current epoch milli time according to this timestamp provider */\n   long getCurrentTime();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/53/TimeProvider.java\nindex 9e69025373c..bb6d053598a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/53/TimeProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/53/TimeProvider.java\n@@ -22,15 +22,21 @@ import java.io.Serializable;\n  * Provider of timestamp. Timestamp can be provided according to different timestamp policies (e.g.\n  * processing time, watermark, test timestamps, etc.).\n  */\n+\n+\n @Internal\n @FunctionalInterface\n public interface TimeProvider extends Serializable {\n \n   /** @return {@link TimeProvider} using {@link System#currentTimeMillis()}. */\n+\n+\n   static TimeProvider processingTime() {\n     return System::currentTimeMillis;\n   }\n \n   /** @return current epoch milli time according to this timestamp provider */\n+\n+\n   long getCurrentTime();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}