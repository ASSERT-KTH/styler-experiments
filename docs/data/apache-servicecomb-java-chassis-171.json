{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "171",
    "information": {
        "violations": [
            {
                "line": "29",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n\n  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n\n  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "49",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "65",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "66",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/171/LoginRequest.java\nindex 191153ea8d7..c13efa1c707 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/171/LoginRequest.java\n@@ -26,8 +26,7 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer <LoginRequest>rootDeserializer=protoMapperFactory.createFromName(\"LoginRequest.proto\").createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/171/LoginRequest.java\nindex 191153ea8d7..fd8594307e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/171/LoginRequest.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.transport.highway.message;\n \n import org.apache.servicecomb.foundation.protobuf.ProtoMapperFactory;\n@@ -26,8 +27,9 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer<LoginRequest> rootDeserializer =\n+      protoMapperFactory.createFromName(\"LoginRequest.proto\")\n+          .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/171/LoginRequest.java\nindex 191153ea8d7..38ac8905bbc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/171/LoginRequest.java\n@@ -61,4 +61,4 @@ public class LoginRequest {\n     this.zipName = zipName;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/171/LoginRequest.java\nindex 191153ea8d7..c453447fbd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/171/LoginRequest.java\n@@ -19,18 +19,15 @@ package org.apache.servicecomb.transport.highway.message;\n import org.apache.servicecomb.foundation.protobuf.ProtoMapperFactory;\n import org.apache.servicecomb.foundation.protobuf.RootDeserializer;\n import org.apache.servicecomb.foundation.protobuf.RootSerializer;\n-\n import io.vertx.core.buffer.Buffer;\n \n public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\").createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n-  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\").createRootSerializer(\"LoginRequest\", LoginRequest.class);\n \n   public static RootSerializer getRootSerializer() {\n     return rootSerializer;\n@@ -43,6 +40,7 @@ public class LoginRequest {\n   private String protocol;\n \n   // \u538b\u7f29\u7b97\u6cd5\u540d\u5b57\n+\n   private String zipName;\n \n   public String getProtocol() {\n@@ -60,5 +58,4 @@ public class LoginRequest {\n   public void setZipName(String zipName) {\n     this.zipName = zipName;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "49",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "65",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "66",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/171/LoginRequest.java\nindex 191153ea8d7..c13efa1c707 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/171/LoginRequest.java\n@@ -26,8 +26,7 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer <LoginRequest>rootDeserializer=protoMapperFactory.createFromName(\"LoginRequest.proto\").createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "49",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "65",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "29",
                    "column": "66",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/171/LoginRequest.java\nindex 191153ea8d7..c13efa1c707 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/171/LoginRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/171/LoginRequest.java\n@@ -26,8 +26,7 @@ public class LoginRequest {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<LoginRequest> rootDeserializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n-      .createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n+  private static RootDeserializer <LoginRequest>rootDeserializer=protoMapperFactory.createFromName(\"LoginRequest.proto\").createRootDeserializer(\"LoginRequest\", LoginRequest.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"LoginRequest.proto\")\n       .createRootSerializer(\"LoginRequest\", LoginRequest.class);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}