{
    "project_name": "toast-tk-toast-tk-engine",
    "violation_id": "13",
    "information": {
        "violations": [
            {
                "line": "4",
                "severity": "info",
                "message": "La ligne correspond au motif ill\u00e9gal 'more than one blank line'.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "\nimport com.synaptix.toast.dao.domain.api.test.ITestResult;\nimport com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n\n\npublic class TestResult implements ITestResult{",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/final/files-repaired/13/TestResult.java\nindex 17d48a66794..a6c95a7d606 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/final/files-repaired/13/TestResult.java\n@@ -3,7 +3,6 @@ package com.synaptix.toast.core.report;\n import com.synaptix.toast.dao.domain.api.test.ITestResult;\n import com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n \n-\n public class TestResult implements ITestResult{\n \n \tprotected String message;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "4",
                    "severity": "info",
                    "message": "La ligne correspond au motif ill\u00e9gal 'more than one blank line'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/checkstyle_idea/13/TestResult.java\nindex 17d48a66794..5e47d0dedea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/checkstyle_idea/13/TestResult.java\n@@ -4,113 +4,113 @@ import com.synaptix.toast.dao.domain.api.test.ITestResult;\n import com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n \n \n-public class TestResult implements ITestResult{\n+public class TestResult implements ITestResult {\n \n-\tprotected String message;\n-\n-\tprotected String contextualTestSentence;\n+    protected String message;\n+\n+    protected String contextualTestSentence;\n \n-\tprotected String screenShot;\n-\n-\tprotected ResultKind resultKind;\n-\n-\tprotected boolean isSuccess;\n-\n-\tprotected boolean isFailure;\n-\n-\tprotected boolean isError;\n-\n-\tprotected boolean isFatal;\n-\n-\tpublic TestResult() {\n-\t\tthis(\"OK\");\n-\t}\n-\n-\t/**\n-\t * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\n-\t * \n-\t * @param failureMessage\n-\t */\n-\tpublic TestResult(String message) {\n-\t\tthis.message = message;\n-\t}\n-\n-\tpublic TestResult(\n-\t\tString message,\n-\t\tString img) {\n-\t\tthis.message = message;\n-\t\tthis.setScreenShot(img);\n-\t}\n-\n-\tpublic String getMessage() {\n-\t\treturn message;\n-\t}\n-\n-\tpublic void setMessage(\n-\t\tString message) {\n-\t\tthis.message = message;\n-\t}\n-\n-\tpublic void setResultKind(\n-\t\tResultKind resultKind) {\n-\t\tthis.resultKind = resultKind;\n-\t}\n-\n-\tpublic void setContextualTestSentence(\n-\t\tString contextualTestSentence) {\n-\t\tthis.contextualTestSentence = contextualTestSentence;\n-\t}\n-\n-\tpublic String getContextualTestSentence() {\n-\t\treturn contextualTestSentence;\n-\t}\n-\n-\tpublic String getScreenShot() {\n-\t\treturn screenShot;\n-\t}\n-\n-\tpublic void setScreenShot(\n-\t\tString screenShot) {\n-\t\tthis.screenShot = screenShot;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isSuccess() {\n-\t\treturn isSuccess;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isFailure() {\n-\t\treturn isFailure;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isError() {\n-\t\treturn isError;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isFatal() {\n-\t\treturn isFatal;\n-\t}\n-\n-\t@Override\n-\tpublic ResultKind getResultKind() {\n-\t\treturn resultKind;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsSuccess(boolean isSuccess) {\n-\t\tthis.isSuccess = isSuccess;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsFailure(boolean isFailure) {\n-\t\tthis.isFailure = isFailure;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsError(boolean isError) {\n-\t\tthis.isError = isError;\n-\t}\n+    protected String screenShot;\n+\n+    protected ResultKind resultKind;\n+\n+    protected boolean isSuccess;\n+\n+    protected boolean isFailure;\n+\n+    protected boolean isError;\n+\n+    protected boolean isFatal;\n+\n+    public TestResult() {\n+        this(\"OK\");\n+    }\n+\n+    /**\n+     * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\n+     *\n+     * @param failureMessage\n+     */\n+    public TestResult(String message) {\n+        this.message = message;\n+    }\n+\n+    public TestResult(\n+        String message,\n+        String img) {\n+        this.message = message;\n+        this.setScreenShot(img);\n+    }\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+\n+    public void setMessage(\n+        String message) {\n+        this.message = message;\n+    }\n+\n+    public void setResultKind(\n+        ResultKind resultKind) {\n+        this.resultKind = resultKind;\n+    }\n+\n+    public void setContextualTestSentence(\n+        String contextualTestSentence) {\n+        this.contextualTestSentence = contextualTestSentence;\n+    }\n+\n+    public String getContextualTestSentence() {\n+        return contextualTestSentence;\n+    }\n+\n+    public String getScreenShot() {\n+        return screenShot;\n+    }\n+\n+    public void setScreenShot(\n+        String screenShot) {\n+        this.screenShot = screenShot;\n+    }\n+\n+    @Override\n+    public boolean isSuccess() {\n+        return isSuccess;\n+    }\n+\n+    @Override\n+    public boolean isFailure() {\n+        return isFailure;\n+    }\n+\n+    @Override\n+    public boolean isError() {\n+        return isError;\n+    }\n+\n+    @Override\n+    public boolean isFatal() {\n+        return isFatal;\n+    }\n+\n+    @Override\n+    public ResultKind getResultKind() {\n+        return resultKind;\n+    }\n+\n+    @Override\n+    public void setIsSuccess(boolean isSuccess) {\n+        this.isSuccess = isSuccess;\n+    }\n+\n+    @Override\n+    public void setIsFailure(boolean isFailure) {\n+        this.isFailure = isFailure;\n+    }\n+\n+    @Override\n+    public void setIsError(boolean isError) {\n+        this.isError = isError;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/codebuff/13/TestResult.java\nindex 17d48a66794..97485029a15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/codebuff/13/TestResult.java\n@@ -3,114 +3,118 @@ package com.synaptix.toast.core.report;\n import com.synaptix.toast.dao.domain.api.test.ITestResult;\n import com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n \n+public class TestResult implements ITestResult {\n \n-public class TestResult implements ITestResult{\n+ protected String message;\n \n-\tprotected String message;\n+ protected String contextualTestSentence;\n \n-\tprotected String contextualTestSentence;\n+ protected String screenShot;\n+\n+ protected ResultKind resultKind;\n \n-\tprotected String screenShot;\n-\n-\tprotected ResultKind resultKind;\n-\n-\tprotected boolean isSuccess;\n-\n-\tprotected boolean isFailure;\n-\n-\tprotected boolean isError;\n-\n-\tprotected boolean isFatal;\n-\n-\tpublic TestResult() {\n-\t\tthis(\"OK\");\n-\t}\n-\n-\t/**\n-\t * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\n-\t * \n-\t * @param failureMessage\n-\t */\n-\tpublic TestResult(String message) {\n-\t\tthis.message = message;\n-\t}\n-\n-\tpublic TestResult(\n-\t\tString message,\n-\t\tString img) {\n-\t\tthis.message = message;\n-\t\tthis.setScreenShot(img);\n-\t}\n-\n-\tpublic String getMessage() {\n-\t\treturn message;\n-\t}\n-\n-\tpublic void setMessage(\n-\t\tString message) {\n-\t\tthis.message = message;\n-\t}\n-\n-\tpublic void setResultKind(\n-\t\tResultKind resultKind) {\n-\t\tthis.resultKind = resultKind;\n-\t}\n-\n-\tpublic void setContextualTestSentence(\n-\t\tString contextualTestSentence) {\n-\t\tthis.contextualTestSentence = contextualTestSentence;\n-\t}\n-\n-\tpublic String getContextualTestSentence() {\n-\t\treturn contextualTestSentence;\n-\t}\n-\n-\tpublic String getScreenShot() {\n-\t\treturn screenShot;\n-\t}\n-\n-\tpublic void setScreenShot(\n-\t\tString screenShot) {\n-\t\tthis.screenShot = screenShot;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isSuccess() {\n-\t\treturn isSuccess;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isFailure() {\n-\t\treturn isFailure;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isError() {\n-\t\treturn isError;\n-\t}\n-\n-\t@Override\n-\tpublic boolean isFatal() {\n-\t\treturn isFatal;\n-\t}\n-\n-\t@Override\n-\tpublic ResultKind getResultKind() {\n-\t\treturn resultKind;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsSuccess(boolean isSuccess) {\n-\t\tthis.isSuccess = isSuccess;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsFailure(boolean isFailure) {\n-\t\tthis.isFailure = isFailure;\n-\t}\n-\n-\t@Override\n-\tpublic void setIsError(boolean isError) {\n-\t\tthis.isError = isError;\n-\t}\n+ protected boolean isSuccess;\n+\n+ protected boolean isFailure;\n+\n+ protected boolean isError;\n+\n+ protected boolean isFatal;\n+\n+ public TestResult() {\n+  this(\"OK\");\n+ }\n+\n+ /**\n+  * This constructor will create a TestResult of kind FAILURE (i.e. a test has failed, but it is not a technical error).\n+  * \n+  * @param failureMessage\n+  */\n+\n+ public TestResult(\n+  String message) {\n+  this.message = message;\n+ }\n+\n+ public TestResult(\n+  String message,\n+  String img) {\n+  this.message = message;\n+  this.setScreenShot(img);\n+ }\n+\n+ public String getMessage() {\n+  return message;\n+ }\n+\n+ public void setMessage(\n+  String message) {\n+  this.message = message;\n+ }\n+\n+ public void setResultKind(\n+  ResultKind resultKind) {\n+  this.resultKind = resultKind;\n+ }\n+\n+ public void setContextualTestSentence(\n+  String contextualTestSentence) {\n+  this.contextualTestSentence = contextualTestSentence;\n+ }\n+\n+ public String getContextualTestSentence() {\n+  return contextualTestSentence;\n+ }\n+\n+ public String getScreenShot() {\n+  return screenShot;\n+ }\n+\n+ public void setScreenShot(\n+  String screenShot) {\n+  this.screenShot = screenShot;\n+ }\n+\n+ @Override\n+ public boolean isSuccess() {\n+  return isSuccess;\n+ }\n+\n+ @Override\n+ public boolean isFailure() {\n+  return isFailure;\n+ }\n+\n+ @Override\n+ public boolean isError() {\n+  return isError;\n+ }\n+\n+ @Override\n+ public boolean isFatal() {\n+  return isFatal;\n+ }\n+\n+ @Override\n+ public ResultKind getResultKind() {\n+  return resultKind;\n+ }\n+\n+ @Override\n+ public void setIsSuccess(\n+  boolean isSuccess) {\n+  this.isSuccess = isSuccess;\n+ }\n+\n+ @Override\n+ public void setIsFailure(\n+  boolean isFailure) {\n+  this.isFailure = isFailure;\n+ }\n+\n+ @Override\n+ public void setIsError(\n+  boolean isError) {\n+  this.isError = isError;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 110
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/random/files-repaired/13/TestResult.java\nindex 17d48a66794..a6c95a7d606 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/random/files-repaired/13/TestResult.java\n@@ -3,7 +3,6 @@ package com.synaptix.toast.core.report;\n import com.synaptix.toast.dao.domain.api.test.ITestResult;\n import com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n \n-\n public class TestResult implements ITestResult{\n \n \tprotected String message;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "5",
                    "severity": "info",
                    "message": "La ligne correspond au motif ill\u00e9gal 'more than one blank line'.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/three_grams/files-repaired/13/TestResult.java\nindex 17d48a66794..62c5f22f3a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/violations/13/TestResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/toast-tk-toast-tk-engine/styler/05_predictions/three_grams/files-repaired/13/TestResult.java\n@@ -1,7 +1,8 @@\n package com.synaptix.toast.core.report;\n \n import com.synaptix.toast.dao.domain.api.test.ITestResult;\n-import com.synaptix.toast.dao.domain.api.test.ITestResult.ResultKind;\n+import com.synaptix.toast.dao.domain.api.\n+test .ITestResult.ResultKind;\n \n \n public class TestResult implements ITestResult{\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "styler_three_grams"
    ]
}