{
    "project_name": "bakdata-conquery",
    "violation_id": "570",
    "information": {
        "violations": [
            {
                "line": "29",
                "column": "35",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\t\n\t@Min(1)\n\tprivate int jwtDuration = 12; // Hours\n\t\n\t/**\n\t * The name of the folder the store lives in.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "29",
                    "column": "35",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "31",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 1, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..80cb827cc80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/bakdata-conquery/styler/05_predictions/final/files-repaired/570/LocalAuthenticationConfig.java\n@@ -27,8 +27,8 @@ public class LocalAuthenticationConfig implements AuthenticationConfig {\n \t\n \t@Min(1)\n \tprivate int jwtDuration = 12; // Hours\n-\t\n-\t/**\n+\n+\t\t/**\n \t * The name of the folder the store lives in.\n \t */\n \t@NotEmpty\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "35",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..ac1afb40bf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/570/LocalAuthenticationConfig.java\n@@ -18,30 +18,30 @@ import java.io.File;\n @Getter\n @Setter\n public class LocalAuthenticationConfig implements AuthenticationConfig {\n-\t\n-\t/**\n-\t * Configuration for the password store. An encryption for the store it self might be set here.\n-\t */\n-\t@NotNull\n-\tprivate XodusConfig passwordStoreConfig = new XodusConfig();\n-\t\n-\t@Min(1)\n-\tprivate int jwtDuration = 12; // Hours\n-\t\n-\t/**\n-\t * The name of the folder the store lives in.\n-\t */\n-\t@NotEmpty\n-\tprivate String storeName = \"authenticationStore\";\n-\n-\t\n-\t@NotNull\n-\tprivate File directory = new File(\"storage\");\n-\t\n-\t@Override\n-\tpublic ConqueryAuthenticationRealm createRealm(ManagerNode managerNode) {\n-\t\tmanagerNode.getAuthController().getAuthenticationFilter().registerTokenExtractor(JWTokenHandler::extractToken);\n-\n-\t\treturn new LocalAuthenticationRealm(managerNode.getStorage(), managerNode.getAuthController().getCentralTokenRealm(), storeName, directory, passwordStoreConfig);\n-\t}\n+\n+    /**\n+     * Configuration for the password store. An encryption for the store it self might be set here.\n+     */\n+    @NotNull\n+    private XodusConfig passwordStoreConfig = new XodusConfig();\n+\n+    @Min(1)\n+    private int jwtDuration = 12; // Hours\n+\n+    /**\n+     * The name of the folder the store lives in.\n+     */\n+    @NotEmpty\n+    private String storeName = \"authenticationStore\";\n+\n+\n+    @NotNull\n+    private File directory = new File(\"storage\");\n+\n+    @Override\n+    public ConqueryAuthenticationRealm createRealm(ManagerNode managerNode) {\n+        managerNode.getAuthController().getAuthenticationFilter().registerTokenExtractor(JWTokenHandler::extractToken);\n+\n+        return new LocalAuthenticationRealm(managerNode.getStorage(), managerNode.getAuthController().getCentralTokenRealm(), storeName, directory, passwordStoreConfig);\n+    }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "29",
                    "column": "35",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/naturalize/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..373e1f7e8de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/naturalize/570/LocalAuthenticationConfig.java\n@@ -44,4 +44,4 @@ public class LocalAuthenticationConfig implements AuthenticationConfig {\n \n \t\treturn new LocalAuthenticationRealm(managerNode.getStorage(), managerNode.getAuthController().getCentralTokenRealm(), storeName, directory, passwordStoreConfig);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "32",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..cb76bce2aac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/codebuff/570/LocalAuthenticationConfig.java\n@@ -3,7 +3,6 @@ package com.bakdata.conquery.models.auth.basic;\n import javax.validation.constraints.Min;\n import javax.validation.constraints.NotEmpty;\n import javax.validation.constraints.NotNull;\n-\n import com.bakdata.conquery.commands.ManagerNode;\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.auth.AuthenticationConfig;\n@@ -11,37 +10,35 @@ import com.bakdata.conquery.models.auth.ConqueryAuthenticationRealm;\n import com.bakdata.conquery.models.config.XodusConfig;\n import lombok.Getter;\n import lombok.Setter;\n-\n import java.io.File;\n \n-@CPSType(base = AuthenticationConfig.class, id = \"LOCAL_AUTHENTICATION\")\n-@Getter\n-@Setter\n+@CPSType(base= AuthenticationConfig.class, id=\"LOCAL_AUTHENTICATION\")\n+@Getter @Setter\n public class LocalAuthenticationConfig implements AuthenticationConfig {\n-\t\n-\t/**\n-\t * Configuration for the password store. An encryption for the store it self might be set here.\n-\t */\n-\t@NotNull\n-\tprivate XodusConfig passwordStoreConfig = new XodusConfig();\n-\t\n-\t@Min(1)\n-\tprivate int jwtDuration = 12; // Hours\n-\t\n-\t/**\n-\t * The name of the folder the store lives in.\n-\t */\n-\t@NotEmpty\n-\tprivate String storeName = \"authenticationStore\";\n+ \n+ /**\n+  * Configuration for the password store. An encryption for the store it self might be set here.\n+  */\n+\n+ @NotNull\n+ private XodusConfig passwordStoreConfig = new XodusConfig();\n+\n+ @Min(1)\n+ private int jwtDuration = 12; // Hours\n+ \n+ /**\n+  * The name of the folder the store lives in.\n+  */\n+\n+ @NotEmpty\n+ private String storeName = \"authenticationStore\";\n \n-\t\n-\t@NotNull\n-\tprivate File directory = new File(\"storage\");\n-\t\n-\t@Override\n-\tpublic ConqueryAuthenticationRealm createRealm(ManagerNode managerNode) {\n-\t\tmanagerNode.getAuthController().getAuthenticationFilter().registerTokenExtractor(JWTokenHandler::extractToken);\n+ @NotNull\n+ private File directory = new File(\"storage\");\n \n-\t\treturn new LocalAuthenticationRealm(managerNode.getStorage(), managerNode.getAuthController().getCentralTokenRealm(), storeName, directory, passwordStoreConfig);\n-\t}\n-}\n+ @Override\n+ public ConqueryAuthenticationRealm createRealm(ManagerNode managerNode) {\n+  managerNode.getAuthController().getAuthenticationFilter().registerTokenExtractor(JWTokenHandler::extractToken);\n+  return new LocalAuthenticationRealm(managerNode.getStorage(), managerNode.getAuthController().getCentralTokenRealm(), storeName, directory, passwordStoreConfig);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/random/files-repaired/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..3ab2298f5bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/random/files-repaired/570/LocalAuthenticationConfig.java\n@@ -26,9 +26,9 @@ public class LocalAuthenticationConfig implements AuthenticationConfig {\n \tprivate XodusConfig passwordStoreConfig = new XodusConfig();\n \t\n \t@Min(1)\n-\tprivate int jwtDuration = 12; // Hours\n-\t\n-\t/**\n+\tprivate int jwtDuration = 12;\n+ // Hours\n+ /**\n \t * The name of the folder the store lives in.\n \t */\n \t@NotEmpty\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "29",
                    "column": "35",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                },
                {
                    "line": "31",
                    "column": "9",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 1, indentation should be the same level as line 34.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/570/LocalAuthenticationConfig.java\nindex b3ef955ad1f..80cb827cc80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/570/LocalAuthenticationConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/styler/05_predictions/three_grams/files-repaired/570/LocalAuthenticationConfig.java\n@@ -27,8 +27,8 @@ public class LocalAuthenticationConfig implements AuthenticationConfig {\n \t\n \t@Min(1)\n \tprivate int jwtDuration = 12; // Hours\n-\t\n-\t/**\n+\n+\t\t/**\n \t * The name of the folder the store lives in.\n \t */\n \t@NotEmpty\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}