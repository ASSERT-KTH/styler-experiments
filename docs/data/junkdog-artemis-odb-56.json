{
    "project_name": "junkdog-artemis-odb",
    "violation_id": "56",
    "information": {
        "violations": [
            {
                "line": "30",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 117).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tmv.visitLabel(l0);\n\t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n\t\tmv.visitInsn(RETURN);\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/56/StaticInitializerVisitor.java\nindex 39e850938e1..a6de2f5a2ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/56/StaticInitializerVisitor.java\n@@ -27,7 +27,7 @@ public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n \t\tLabel l0 = new Label();\n \t\tmv.visitLabel(l0);\n \t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n-\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n-\t\tmv.visitInsn(RETURN);\n+  mv.visitMethodInsn(INVOKESTATIC,\"java/nio/ByteBuffer\", \"allocateDirect\",\"(I)Ljava/nio/ByteBuffer;\"\n+  ,false);mv .visitInsn(RETURN);\n \t}\n }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/56/StaticInitializerVisitor.java\nindex 39e850938e1..3a716fd758a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/56/StaticInitializerVisitor.java\n@@ -11,23 +11,25 @@ import com.artemis.meta.ClassMetadataUtil;\n \n public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n \n-\tprivate final ClassMetadata meta;\n-\n-\tpublic StaticInitializerVisitor(MethodVisitor mv, ClassMetadata meta) {\n-\t\tsuper(ASM4, mv);\n-\t\tthis.meta = meta;\n-\t}\n-\t\n-\t@Override\n-\tpublic void visitCode() {\n-\t\tif (instanceFields(meta).size() == 0)\n-\t\t\treturn;\n-\t\t\n-\t\tmv.visitCode();\n-\t\tLabel l0 = new Label();\n-\t\tmv.visitLabel(l0);\n-\t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n-\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n-\t\tmv.visitInsn(RETURN);\n-\t}\n+  private final ClassMetadata meta;\n+\n+  public StaticInitializerVisitor(MethodVisitor mv, ClassMetadata meta) {\n+    super(ASM4, mv);\n+    this.meta = meta;\n+  }\n+\n+  @Override\n+  public void visitCode() {\n+    if (instanceFields(meta).size() == 0) {\n+      return;\n+    }\n+\n+    mv.visitCode();\n+    Label l0 = new Label();\n+    mv.visitLabel(l0);\n+    mv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n+    mv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\",\n+        false);\n+    mv.visitInsn(RETURN);\n+  }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/56/StaticInitializerVisitor.java\nindex 39e850938e1..10b749f266d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/56/StaticInitializerVisitor.java\n@@ -30,4 +30,4 @@ public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n \t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n \t\tmv.visitInsn(RETURN);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/56/StaticInitializerVisitor.java\nindex 39e850938e1..104a797d264 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/56/StaticInitializerVisitor.java\n@@ -5,29 +5,31 @@ import static com.artemis.meta.ClassMetadataUtil.instanceFields;\n import org.objectweb.asm.Label;\n import org.objectweb.asm.MethodVisitor;\n import org.objectweb.asm.Opcodes;\n-\n import com.artemis.meta.ClassMetadata;\n import com.artemis.meta.ClassMetadataUtil;\n \n public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n+ private final ClassMetadata meta;\n+\n+ public StaticInitializerVisitor(MethodVisitor mv, ClassMetadata meta) {\n+  super(ASM4, mv);\n+  this.meta = meta;\n+ }\n \n-\tprivate final ClassMetadata meta;\n+ @Override\n+ public void visitCode() {\n+  if (instanceFields(meta).size() == 0)\n+   return;\n+  mv.visitCode();\n \n-\tpublic StaticInitializerVisitor(MethodVisitor mv, ClassMetadata meta) {\n-\t\tsuper(ASM4, mv);\n-\t\tthis.meta = meta;\n-\t}\n-\t\n-\t@Override\n-\tpublic void visitCode() {\n-\t\tif (instanceFields(meta).size() == 0)\n-\t\t\treturn;\n-\t\t\n-\t\tmv.visitCode();\n-\t\tLabel l0 = new Label();\n-\t\tmv.visitLabel(l0);\n-\t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n-\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n-\t\tmv.visitInsn(RETURN);\n-\t}\n-}\n+  Label l0 = new Label();\n+  mv.visitLabel(l0);\n+  mv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n+  mv.visitMethodInsn(INVOKESTATIC,\n+\"java/nio/ByteBuffer\",\n+\"allocateDirect\",\n+\"(I)Ljava/nio/ByteBuffer;\",\n+   false);\n+  mv.visitInsn(RETURN);\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/56/StaticInitializerVisitor.java\nindex 39e850938e1..a6de2f5a2ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/56/StaticInitializerVisitor.java\n@@ -27,7 +27,7 @@ public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n \t\tLabel l0 = new Label();\n \t\tmv.visitLabel(l0);\n \t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n-\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n-\t\tmv.visitInsn(RETURN);\n+  mv.visitMethodInsn(INVOKESTATIC,\"java/nio/ByteBuffer\", \"allocateDirect\",\"(I)Ljava/nio/ByteBuffer;\"\n+  ,false);mv .visitInsn(RETURN);\n \t}\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/56/StaticInitializerVisitor.java\nindex 39e850938e1..514a5eabc64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/56/StaticInitializerVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/56/StaticInitializerVisitor.java\n@@ -27,7 +27,6 @@ public class StaticInitializerVisitor extends MethodVisitor implements Opcodes {\n \t\tLabel l0 = new Label();\n \t\tmv.visitLabel(l0);\n \t\tmv.visitIntInsn(SIPUSH, ClassMetadataUtil.sizeOf(meta) * 128);\n-\t\tmv.visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\", \"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\", false);\n-\t\tmv.visitInsn(RETURN);\n+\t\t\tmv .visitMethodInsn(INVOKESTATIC, \"java/nio/ByteBuffer\" ,\"allocateDirect\", \"(I)Ljava/nio/ByteBuffer;\" ,false);mv.visitInsn(RETURN);\n \t}\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_three_grams"
    ]
}