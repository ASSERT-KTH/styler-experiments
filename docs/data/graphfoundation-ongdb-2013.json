{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2013",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2013/ResponsePacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2013/ResponsePacker.java\nindex d005299bd38..73a445d8523 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2013/ResponsePacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2013/ResponsePacker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import java.util.function.Supplier;\n@@ -38,68 +39,68 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n \n public class ResponsePacker\n {\n-    protected final LogicalTransactionStore transactionStore;\n-    protected final Supplier<StoreId> storeId; // for lazy storeId getter\n-    private final TransactionIdStore transactionIdStore;\n+  protected final LogicalTransactionStore transactionStore;\n+  protected final Supplier<StoreId> storeId; // for lazy storeId getter\n+  private final TransactionIdStore transactionIdStore;\n \n-    public ResponsePacker( LogicalTransactionStore transactionStore, TransactionIdStore transactionIdStore,\n-                           Supplier<StoreId> storeId )\n-    {\n-        this.transactionStore = transactionStore;\n-        this.transactionIdStore = transactionIdStore;\n-        this.storeId = storeId;\n-    }\n+  public ResponsePacker(LogicalTransactionStore transactionStore, TransactionIdStore transactionIdStore,\n+                        Supplier<StoreId> storeId)\n+  {\n+    this.transactionStore = transactionStore;\n+    this.transactionIdStore = transactionIdStore;\n+    this.storeId = storeId;\n+  }\n \n-    public <T> Response<T> packTransactionStreamResponse( RequestContext context, T response )\n+  public <T> Response<T> packTransactionStreamResponse(RequestContext context, T response)\n+  {\n+    final long toStartFrom = context.lastAppliedTransaction() + 1;\n+    final long toEndAt = transactionIdStore.getLastCommittedTransactionId();\n+    TransactionStream transactions = visitor ->\n     {\n-        final long toStartFrom = context.lastAppliedTransaction() + 1;\n-        final long toEndAt = transactionIdStore.getLastCommittedTransactionId();\n-        TransactionStream transactions = visitor ->\n-        {\n-            // Check so that it's even worth thinking about extracting any transactions at all\n-            if ( toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt )\n-            {\n-                extractTransactions( toStartFrom, filterVisitor( visitor, toEndAt ) );\n-            }\n-        };\n-        return new TransactionStreamResponse<>( response, storeId.get(), transactions, ResourceReleaser.NO_OP );\n-    }\n+      // Check so that it's even worth thinking about extracting any transactions at all\n+      if (toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt)\n+      {\n+        extractTransactions(toStartFrom, filterVisitor(visitor, toEndAt));\n+      }\n+    };\n+    return new TransactionStreamResponse<>(response, storeId.get(), transactions, ResourceReleaser.NO_OP);\n+  }\n \n-    public <T> Response<T> packTransactionObligationResponse( RequestContext context, T response )\n-    {\n-        return packTransactionObligationResponse( context, response,\n-                transactionIdStore.getLastCommittedTransactionId() );\n-    }\n+  public <T> Response<T> packTransactionObligationResponse(RequestContext context, T response)\n+  {\n+    return packTransactionObligationResponse(context, response,\n+        transactionIdStore.getLastCommittedTransactionId());\n+  }\n \n-    public <T> Response<T> packTransactionObligationResponse( RequestContext context, T response,\n-                                                              long obligationTxId )\n-    {\n-        return new TransactionObligationResponse<>( response, storeId.get(), obligationTxId,\n-                ResourceReleaser.NO_OP );\n-    }\n+  public <T> Response<T> packTransactionObligationResponse(RequestContext context, T response,\n+                                                           long obligationTxId)\n+  {\n+    return new TransactionObligationResponse<>(response, storeId.get(), obligationTxId,\n+        ResourceReleaser.NO_OP);\n+  }\n \n-    public <T> Response<T> packEmptyResponse( T response )\n-    {\n-        return new TransactionObligationResponse<>( response, storeId.get(), TransactionIdStore.BASE_TX_ID,\n-                ResourceReleaser.NO_OP );\n-    }\n+  public <T> Response<T> packEmptyResponse(T response)\n+  {\n+    return new TransactionObligationResponse<>(response, storeId.get(), TransactionIdStore.BASE_TX_ID,\n+        ResourceReleaser.NO_OP);\n+  }\n \n-    protected Visitor<CommittedTransactionRepresentation,Exception> filterVisitor(\n-            final Visitor<CommittedTransactionRepresentation,Exception> delegate, final long txToEndAt )\n-    {\n-        return element -> element.getCommitEntry().getTxId() <= txToEndAt && delegate.visit( element );\n-    }\n+  protected Visitor<CommittedTransactionRepresentation, Exception> filterVisitor(\n+      final Visitor<CommittedTransactionRepresentation, Exception> delegate, final long txToEndAt)\n+  {\n+    return element -> element.getCommitEntry().getTxId() <= txToEndAt && delegate.visit(element);\n+  }\n \n-    protected void extractTransactions( long startingAtTransactionId,\n-                                        Visitor<CommittedTransactionRepresentation,Exception> visitor )\n-            throws Exception\n+  protected void extractTransactions(long startingAtTransactionId,\n+                                     Visitor<CommittedTransactionRepresentation, Exception> visitor)\n+      throws Exception\n+  {\n+    try (IOCursor<CommittedTransactionRepresentation> cursor = transactionStore\n+        .getTransactions(startingAtTransactionId))\n     {\n-        try ( IOCursor<CommittedTransactionRepresentation> cursor = transactionStore\n-                .getTransactions( startingAtTransactionId ) )\n-        {\n-            while ( cursor.next() && !visitor.visit( cursor.get() ) )\n-            {\n-            }\n-        }\n+      while (cursor.next() && !visitor.visit(cursor.get()))\n+      {\n+      }\n     }\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2013/ResponsePacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2013/ResponsePacker.java\nindex d005299bd38..0e59cd76b06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2013/ResponsePacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2013/ResponsePacker.java\n@@ -42,9 +42,8 @@ public class ResponsePacker\n     protected final Supplier<StoreId> storeId; // for lazy storeId getter\n     private final TransactionIdStore transactionIdStore;\n \n-    public ResponsePacker( LogicalTransactionStore transactionStore, TransactionIdStore transactionIdStore,\n-                           Supplier<StoreId> storeId )\n-    {\n+    public ResponsePacker( LogicalTransactionStore transactionStore, TransactionIdStore transactionIdStore, Supplier<StoreId> storeId )\n+{\n         this.transactionStore = transactionStore;\n         this.transactionIdStore = transactionIdStore;\n         this.storeId = storeId;\n@@ -57,7 +56,7 @@ public class ResponsePacker\n         TransactionStream transactions = visitor ->\n         {\n             // Check so that it's even worth thinking about extracting any transactions at all\n-            if ( toStartFrom > BASE_TX_ID && toStartFrom <= toEndAt )\n+            if ( toStartFrom> BASE_TX_ID && toStartFrom <= toEndAt )\n             {\n                 extractTransactions( toStartFrom, filterVisitor( visitor, toEndAt ) );\n             }\n@@ -71,9 +70,8 @@ public class ResponsePacker\n                 transactionIdStore.getLastCommittedTransactionId() );\n     }\n \n-    public <T> Response<T> packTransactionObligationResponse( RequestContext context, T response,\n-                                                              long obligationTxId )\n-    {\n+    public <T> Response<T> packTransactionObligationResponse( RequestContext context, T response, long obligationTxId )\n+{\n         return new TransactionObligationResponse<>( response, storeId.get(), obligationTxId,\n                 ResourceReleaser.NO_OP );\n     }\n@@ -84,22 +82,18 @@ public class ResponsePacker\n                 ResourceReleaser.NO_OP );\n     }\n \n-    protected Visitor<CommittedTransactionRepresentation,Exception> filterVisitor(\n-            final Visitor<CommittedTransactionRepresentation,Exception> delegate, final long txToEndAt )\n+    protected Visitor<CommittedTransactionRepresentation,Exception> filterVisitor( final Visitor<CommittedTransactionRepresentation,Exception> delegate, final long txToEndAt )\n     {\n         return element -> element.getCommitEntry().getTxId() <= txToEndAt && delegate.visit( element );\n     }\n \n-    protected void extractTransactions( long startingAtTransactionId,\n-                                        Visitor<CommittedTransactionRepresentation,Exception> visitor )\n-            throws Exception\n-    {\n-        try ( IOCursor<CommittedTransactionRepresentation> cursor = transactionStore\n-                .getTransactions( startingAtTransactionId ) )\n+    protected void extractTransactions( long startingAtTransactionId, Visitor<CommittedTransactionRepresentation,Exception> visitor ) throws Exception\n+{\n+        try ( IOCursor<CommittedTransactionRepresentation> cursor = transactionStore.getTransactions( startingAtTransactionId ) )\n         {\n             while ( cursor.next() && !visitor.visit( cursor.get() ) )\n             {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}