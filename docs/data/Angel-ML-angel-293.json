{
    "project_name": "Angel-ML-angel",
    "violation_id": "293",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/293/MapMatrix.java\nindex 1d48da4d30b..eded2fa8807 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/293/MapMatrix.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.ml.math2.matrix;\n \n import com.tencent.angel.ml.math2.vector.Vector;\n@@ -21,355 +22,355 @@ import java.util.HashMap;\n \n public class MapMatrix<Vec extends Vector> extends Matrix {\n \n-  protected HashMap<Long, Vec> mapMatrix;\n+    protected HashMap<Long, Vec> mapMatrix;\n+\n+    public MapMatrix() {\n+    }\n+\n+    public MapMatrix(int matrixId, int clock, HashMap<Long, Vec> mapMatrix) {\n+        this.matrixId = matrixId;\n+        this.clock = clock;\n+        this.mapMatrix = mapMatrix;\n+    }\n+\n+    public MapMatrix(HashMap<Long, Vec> mapMatrix) {\n+        this(0, 0, mapMatrix);\n+    }\n+\n+    public Vector getRow(int idx) {\n+        return mapMatrix.get(idx);\n+    }\n+\n+    public Vector getRow(long idx) {\n+        return mapMatrix.get(idx);\n+    }\n+\n+    public HashMap<Long, Vec> getRows(int[] idx) {\n+        HashMap<Long, Vec> matrix = new HashMap();\n+        for (int id : idx) {\n+            matrix.put((long) id, mapMatrix.get(id));\n+        }\n+        return matrix;\n+    }\n+\n+    public HashMap<Long, Vec> getRows(long[] idx) {\n+        HashMap<Long, Vec> matrix = new HashMap();\n+        for (long id : idx) {\n+            matrix.put(id, mapMatrix.get(id));\n+        }\n+        return matrix;\n+    }\n+\n+    public HashMap<Long, Vec> getRows() {\n+        return mapMatrix;\n+    }\n+\n+    public void setRows(HashMap<Long, Vec> matrix) {\n+        mapMatrix.putAll(matrix);\n+    }\n+\n+    public void setRow(int idx, Vec v) {\n+        mapMatrix.put((long) idx, v);\n+    }\n+\n+    public void setRow(long idx, Vec v) {\n+        mapMatrix.put(idx, v);\n+    }\n+\n+    public void setRows(int[] idx, Vec[] vectors) {\n+        for (int i = 0; i < idx.length; i++) {\n+            mapMatrix.put((long) idx[i], vectors[i]);\n+        }\n+    }\n+\n+    public void setRows(long[] idx, Vec[] vectors) {\n+        for (int i = 0; i < idx.length; i++) {\n+            mapMatrix.put(idx[i], vectors[i]);\n+        }\n+    }\n+\n+    @Override\n+    public Vector diag() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector getCol(int idx) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector dot(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector transDot(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(int rowId, Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iaxpy(int rowId, Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n \n-  public MapMatrix() {\n-  }\n+    @Override\n+    public Matrix axpy(int rowId, Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(Vector other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n \n-  public MapMatrix(int matrixId, int clock, HashMap<Long, Vec> mapMatrix) {\n-    this.matrixId = matrixId;\n-    this.clock = clock;\n-    this.mapMatrix = mapMatrix;\n-  }\n-\n-  public MapMatrix(HashMap<Long, Vec> mapMatrix) {\n-    this(0, 0, mapMatrix);\n-  }\n-\n-  public Vector getRow(int idx) {\n-    return mapMatrix.get(idx);\n-  }\n-\n-  public Vector getRow(long idx) {\n-    return mapMatrix.get(idx);\n-  }\n-\n-  public HashMap<Long, Vec> getRows(int[] idx) {\n-    HashMap<Long, Vec> matrix = new HashMap();\n-    for (int id : idx) {\n-      matrix.put((long) id, mapMatrix.get(id));\n-    }\n-    return matrix;\n-  }\n-\n-  public HashMap<Long, Vec> getRows(long[] idx) {\n-    HashMap<Long, Vec> matrix = new HashMap();\n-    for (long id : idx) {\n-      matrix.put(id, mapMatrix.get(id));\n-    }\n-    return matrix;\n-  }\n-\n-  public HashMap<Long, Vec> getRows() {\n-    return mapMatrix;\n-  }\n-\n-  public void setRows(HashMap<Long, Vec> matrix) {\n-    mapMatrix.putAll(matrix);\n-  }\n-\n-  public void setRow(int idx, Vec v) {\n-    mapMatrix.put((long) idx, v);\n-  }\n-\n-  public void setRow(long idx, Vec v) {\n-    mapMatrix.put(idx, v);\n-  }\n-\n-  public void setRows(int[] idx, Vec[] vectors) {\n-    for (int i = 0; i < idx.length; i++) {\n-      mapMatrix.put((long) idx[i], vectors[i]);\n-    }\n-  }\n-\n-  public void setRows(long[] idx, Vec[] vectors) {\n-    for (int i = 0; i < idx.length; i++) {\n-      mapMatrix.put(idx[i], vectors[i]);\n-    }\n-  }\n-\n-  @Override\n-  public Vector diag() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector getCol(int idx) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector dot(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector transDot(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(int rowId, Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(int rowId, Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(int rowId, Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(Vector other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(Vector other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(Matrix other) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iaxpy(Matrix other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix axpy(Matrix other, double aplha) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix iadd(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix add(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix isub(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix sub(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix imul(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix mul(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix idiv(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix div(double x) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public double min() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public double max() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector min(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector max(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector sum(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector average(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector std(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Vector norm(int axis) {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public Matrix copy() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public int getNumRows() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public void clear() {\n-    mapMatrix.clear();\n-  }\n-\n-  @Override\n-  public double sum() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public double std() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public double average() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n-\n-  @Override\n-  public double norm() {\n-    throw new UnsupportedOperationException(\"this operation is not support!\");\n-  }\n+    @Override\n+    public Matrix iaxpy(Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix axpy(Vector other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(Matrix other) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iaxpy(Matrix other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix axpy(Matrix other, double aplha) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix iadd(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix add(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix isub(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix sub(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix imul(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix mul(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix idiv(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix div(double x) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public double min() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public double max() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector min(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector max(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector sum(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector average(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector std(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Vector norm(int axis) {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public Matrix copy() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public int getNumRows() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public void clear() {\n+        mapMatrix.clear();\n+    }\n+\n+    @Override\n+    public double sum() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public double std() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public double average() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n+\n+    @Override\n+    public double norm() {\n+        throw new UnsupportedOperationException(\"this operation is not support!\");\n+    }\n }\n",
            "diff_size": 522
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/293/MapMatrix.java\nindex 1d48da4d30b..37acb3820a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/293/MapMatrix.java\n@@ -372,4 +372,4 @@ public class MapMatrix<Vec extends Vector> extends Matrix {\n   public double norm() {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/293/MapMatrix.java\nindex 1d48da4d30b..acdddf09284 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/293/MapMatrix.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/293/MapMatrix.java\n@@ -23,8 +23,7 @@ public class MapMatrix<Vec extends Vector> extends Matrix {\n \n   protected HashMap<Long, Vec> mapMatrix;\n \n-  public MapMatrix() {\n-  }\n+  public MapMatrix() {}\n \n   public MapMatrix(int matrixId, int clock, HashMap<Long, Vec> mapMatrix) {\n     this.matrixId = matrixId;\n@@ -372,4 +371,5 @@ public class MapMatrix<Vec extends Vector> extends Matrix {\n   public double norm() {\n     throw new UnsupportedOperationException(\"this operation is not support!\");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}