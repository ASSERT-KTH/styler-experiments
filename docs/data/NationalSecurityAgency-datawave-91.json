{
    "project_name": "NationalSecurityAgency-datawave",
    "violation_id": "91",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\nimport org.apache.accumulo.core.data.Mutation;\nimport org.apache.accumulo.hadoop.mapreduce.AccumuloOutputFormat;\nimport org.apache.hadoop.io.Text;\nimport org.apache.hadoop.mapreduce.RecordWriter;\nimport org.apache.hadoop.mapreduce.TaskAttemptContext;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/91/CBMutationOutputFormatter.java\nindex 7e66272dd46..1bba9f8e846 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/91/CBMutationOutputFormatter.java\n@@ -12,32 +12,35 @@ import org.apache.log4j.Logger;\n import java.io.IOException;\n \n public class CBMutationOutputFormatter extends AccumuloOutputFormat {\n-    \n-    private static final Logger log = Logger.getLogger(CBMutationOutputFormatter.class);\n-    \n+\n+  private static final Logger log = Logger.getLogger(CBMutationOutputFormatter.class);\n+\n+  @Override\n+  public RecordWriter<Text, Mutation> getRecordWriter(TaskAttemptContext attempt)\n+      throws IOException {\n+    return new CBRecordWriter(super.getRecordWriter(attempt), attempt);\n+  }\n+\n+  public static class CBRecordWriter extends RecordWriter<Text, Mutation> {\n+    private RecordWriter<Text, Mutation> delegate;\n+    private String eventTable = null;\n+\n+    public CBRecordWriter(RecordWriter<Text, Mutation> writer, TaskAttemptContext context)\n+        throws IOException {\n+      this.delegate = writer;\n+      eventTable = context.getConfiguration().get(ShardedDataTypeHandler.SHARD_TNAME, \"\");\n+      log.info(\"Event Table Name property for \" + ShardedDataTypeHandler.SHARD_TNAME + \" is \" +\n+          eventTable);\n+    }\n+\n     @Override\n-    public RecordWriter<Text,Mutation> getRecordWriter(TaskAttemptContext attempt) throws IOException {\n-        return new CBRecordWriter(super.getRecordWriter(attempt), attempt);\n+    public void close(TaskAttemptContext context) throws IOException, InterruptedException {\n+      delegate.close(context);\n     }\n-    \n-    public static class CBRecordWriter extends RecordWriter<Text,Mutation> {\n-        private RecordWriter<Text,Mutation> delegate;\n-        private String eventTable = null;\n-        \n-        public CBRecordWriter(RecordWriter<Text,Mutation> writer, TaskAttemptContext context) throws IOException {\n-            this.delegate = writer;\n-            eventTable = context.getConfiguration().get(ShardedDataTypeHandler.SHARD_TNAME, \"\");\n-            log.info(\"Event Table Name property for \" + ShardedDataTypeHandler.SHARD_TNAME + \" is \" + eventTable);\n-        }\n-        \n-        @Override\n-        public void close(TaskAttemptContext context) throws IOException, InterruptedException {\n-            delegate.close(context);\n-        }\n-        \n-        @Override\n-        public void write(Text key, Mutation value) throws IOException, InterruptedException {\n-            delegate.write(key, value);\n-        }\n+\n+    @Override\n+    public void write(Text key, Mutation value) throws IOException, InterruptedException {\n+      delegate.write(key, value);\n     }\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/91/CBMutationOutputFormatter.java\nindex 7e66272dd46..0191ae76494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/91/CBMutationOutputFormatter.java\n@@ -40,4 +40,4 @@ public class CBMutationOutputFormatter extends AccumuloOutputFormat {\n             delegate.write(key, value);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "5",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/91/CBMutationOutputFormatter.java\nindex 7e66272dd46..95c2f7073e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/91/CBMutationOutputFormatter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/91/CBMutationOutputFormatter.java\n@@ -1,43 +1,41 @@\n package datawave.ingest.mapreduce.job;\n \n import datawave.ingest.mapreduce.handler.shard.ShardedDataTypeHandler;\n-\n import org.apache.accumulo.core.data.Mutation;\n import org.apache.accumulo.hadoop.mapreduce.AccumuloOutputFormat;\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.mapreduce.RecordWriter;\n import org.apache.hadoop.mapreduce.TaskAttemptContext;\n import org.apache.log4j.Logger;\n-\n import java.io.IOException;\n \n+\n public class CBMutationOutputFormatter extends AccumuloOutputFormat {\n-    \n     private static final Logger log = Logger.getLogger(CBMutationOutputFormatter.class);\n-    \n+\n     @Override\n     public RecordWriter<Text,Mutation> getRecordWriter(TaskAttemptContext attempt) throws IOException {\n         return new CBRecordWriter(super.getRecordWriter(attempt), attempt);\n     }\n-    \n+\n     public static class CBRecordWriter extends RecordWriter<Text,Mutation> {\n         private RecordWriter<Text,Mutation> delegate;\n         private String eventTable = null;\n-        \n+\n         public CBRecordWriter(RecordWriter<Text,Mutation> writer, TaskAttemptContext context) throws IOException {\n             this.delegate = writer;\n             eventTable = context.getConfiguration().get(ShardedDataTypeHandler.SHARD_TNAME, \"\");\n             log.info(\"Event Table Name property for \" + ShardedDataTypeHandler.SHARD_TNAME + \" is \" + eventTable);\n         }\n-        \n+\n         @Override\n         public void close(TaskAttemptContext context) throws IOException, InterruptedException {\n             delegate.close(context);\n         }\n-        \n+\n         @Override\n         public void write(Text key, Mutation value) throws IOException, InterruptedException {\n             delegate.write(key, value);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}