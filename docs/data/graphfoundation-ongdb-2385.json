{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2385",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2385/RecoveringIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2385/RecoveringIndexProxy.java\nindex cbe2daddb00..b8f47d10781 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2385/RecoveringIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2385/RecoveringIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.File;\n@@ -28,66 +29,66 @@ import org.neo4j.values.storable.Value;\n \n public class RecoveringIndexProxy extends AbstractSwallowingIndexProxy\n {\n-    RecoveringIndexProxy( IndexMeta indexMeta )\n-    {\n-        super( indexMeta, null );\n-    }\n+  RecoveringIndexProxy(IndexMeta indexMeta)\n+  {\n+    super(indexMeta, null);\n+  }\n \n-    @Override\n-    public InternalIndexState getState()\n-    {\n-        return InternalIndexState.POPULATING;\n-    }\n+  @Override\n+  public InternalIndexState getState()\n+  {\n+    return InternalIndexState.POPULATING;\n+  }\n \n-    @Override\n-    public boolean awaitStoreScanCompleted()\n-    {\n-        throw unsupportedOperation( \"Cannot await population on a recovering index.\" );\n-    }\n+  @Override\n+  public boolean awaitStoreScanCompleted()\n+  {\n+    throw unsupportedOperation(\"Cannot await population on a recovering index.\");\n+  }\n \n-    @Override\n-    public void activate()\n-    {\n-        throw unsupportedOperation( \"Cannot activate recovering index.\" );\n-    }\n+  @Override\n+  public void activate()\n+  {\n+    throw unsupportedOperation(\"Cannot activate recovering index.\");\n+  }\n \n-    @Override\n-    public void validate()\n-    {\n-        throw unsupportedOperation( \"Cannot validate recovering index.\" );\n-    }\n+  @Override\n+  public void validate()\n+  {\n+    throw unsupportedOperation(\"Cannot validate recovering index.\");\n+  }\n \n-    @Override\n-    public void validateBeforeCommit( Value[] tuple )\n-    {\n-        throw unsupportedOperation( \"Unexpected call for validating value while recovering.\" );\n-    }\n+  @Override\n+  public void validateBeforeCommit(Value[] tuple)\n+  {\n+    throw unsupportedOperation(\"Unexpected call for validating value while recovering.\");\n+  }\n \n-    @Override\n-    public ResourceIterator<File> snapshotFiles()\n-    {\n-        throw unsupportedOperation( \"Cannot snapshot a recovering index.\" );\n-    }\n+  @Override\n+  public ResourceIterator<File> snapshotFiles()\n+  {\n+    throw unsupportedOperation(\"Cannot snapshot a recovering index.\");\n+  }\n \n-    @Override\n-    public void drop()\n-    {\n-    }\n+  @Override\n+  public void drop()\n+  {\n+  }\n \n-    @Override\n-    public IndexPopulationFailure getPopulationFailure() throws IllegalStateException\n-    {\n-        throw new IllegalStateException( this + \" is recovering\" );\n-    }\n+  @Override\n+  public IndexPopulationFailure getPopulationFailure() throws IllegalStateException\n+  {\n+    throw new IllegalStateException(this + \" is recovering\");\n+  }\n \n-    @Override\n-    public PopulationProgress getIndexPopulationProgress()\n-    {\n-        throw new IllegalStateException( this + \" is recovering\" );\n-    }\n+  @Override\n+  public PopulationProgress getIndexPopulationProgress()\n+  {\n+    throw new IllegalStateException(this + \" is recovering\");\n+  }\n \n-    private UnsupportedOperationException unsupportedOperation( String message )\n-    {\n-        return new UnsupportedOperationException( message + \" Recovering Index\" + getDescriptor() );\n-    }\n+  private UnsupportedOperationException unsupportedOperation(String message)\n+  {\n+    return new UnsupportedOperationException(message + \" Recovering Index\" + getDescriptor());\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2385/RecoveringIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2385/RecoveringIndexProxy.java\nindex cbe2daddb00..4e24c9f5982 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2385/RecoveringIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2385/RecoveringIndexProxy.java\n@@ -90,4 +90,4 @@ public class RecoveringIndexProxy extends AbstractSwallowingIndexProxy\n     {\n         return new UnsupportedOperationException( message + \" Recovering Index\" + getDescriptor() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}