{
    "project_name": "griddynamics-jagger",
    "violation_id": "181",
    "information": {
        "violations": [
            {
                "line": "22",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @n\n * @par Usage example in XML:\n * To use this listener add @xlink_complex{listeners-test} of type @xlink_complex{listener-test-threads} to @xlink{test} block in your configuration XML file\n * @n\n * @dontinclude suite.conf.xml\n * @skip begin: following section is used for docu generation - test listener usage",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/181/CollectThreadsTestListener.java\nindex 63d0d5aa0e6..a6b9714183a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/181/CollectThreadsTestListener.java\n@@ -24,7 +24,6 @@ import static com.griddynamics.jagger.util.StandardMetricsNamesUtil.VIRTUAL_USER\n  * @dontinclude suite.conf.xml\n  * @skip begin: following section is used for docu generation - test listener usage\n  * @until end: following section is used for docu generation - test listener usage\n- *\n  */\n public class CollectThreadsTestListener extends ServicesAware implements Provider<TestListener> {\n \n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/181/CollectThreadsTestListener.java\nindex 63d0d5aa0e6..fd166de9447 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/181/CollectThreadsTestListener.java\n@@ -61,4 +61,4 @@ public class CollectThreadsTestListener extends ServicesAware implements Provide\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/181/CollectThreadsTestListener.java\nindex 63d0d5aa0e6..66ad9c9f15f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/181/CollectThreadsTestListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/181/CollectThreadsTestListener.java\n@@ -26,6 +26,7 @@ import static com.griddynamics.jagger.util.StandardMetricsNamesUtil.VIRTUAL_USER\n  * @until end: following section is used for docu generation - test listener usage\n  *\n  */\n+\n public class CollectThreadsTestListener extends ServicesAware implements Provider<TestListener> {\n \n     /**\n@@ -33,26 +34,28 @@ public class CollectThreadsTestListener extends ServicesAware implements Provide\n      */\n     @Override\n     protected void init() {\n-        MetricDescription metricDescription = new MetricDescription(VIRTUAL_USERS_ID)\n-                .displayName(VIRTUAL_USERS)\n-                .plotData(true)\n-                .showSummary(true)\n-                .addAggregator(new AvgMetricAggregatorProvider());\n+        MetricDescription metricDescription = new MetricDescription(VIRTUAL_USERS_ID).displayName(VIRTUAL_USERS)\n+                                                                                     .plotData(true)\n+                                                                                     .showSummary(true)\n+                                                                                     .addAggregator(new AvgMetricAggregatorProvider());\n         getMetricService().createMetric(metricDescription);\n     }\n \n     /**\n      * Method is providing listener to Jagger that will trigger listener methods during test run\n      */\n+\n     @Override\n     public TestListener provide() {\n         return new TestListener() {\n             @Override\n             public void onStart(TestInfo testInfo) {\n+\n             }\n \n             @Override\n             public void onStop(TestInfo testInfo) {\n+\n             }\n \n             @Override\n@@ -61,4 +64,4 @@ public class CollectThreadsTestListener extends ServicesAware implements Provide\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}