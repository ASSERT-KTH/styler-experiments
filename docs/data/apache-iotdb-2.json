{
    "project_name": "apache-iotdb",
    "violation_id": "2",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.query.reader.chunk;\n\nimport org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\nimport org.apache.iotdb.tsfile.file.metadata.VectorChunkMetadata;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/2/MemPageReader.java\nindex f123ad71ab6..f26ba39e3a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/2/MemPageReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk;\n \n import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/2/MemPageReader.java\nindex f123ad71ab6..a985ca36def 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/2/MemPageReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk;\n \n import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n@@ -60,7 +61,7 @@ public class MemPageReader implements IPageReader {\n       TimeValuePair timeValuePair = timeValuePairIterator.nextTimeValuePair();\n       if (valueFilter == null\n           || valueFilter.satisfy(\n-              timeValuePair.getTimestamp(), timeValuePair.getValue().getValue())) {\n+          timeValuePair.getTimestamp(), timeValuePair.getValue().getValue())) {\n         batchData.putAnObject(timeValuePair.getTimestamp(), timeValuePair.getValue().getValue());\n       }\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/2/MemPageReader.java\nindex f123ad71ab6..2f84ab6e431 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/2/MemPageReader.java\n@@ -29,7 +29,6 @@ import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n import org.apache.iotdb.tsfile.read.filter.operator.AndFilter;\n import org.apache.iotdb.tsfile.read.reader.IPageReader;\n import org.apache.iotdb.tsfile.read.reader.IPointReader;\n-\n import java.io.IOException;\n \n public class MemPageReader implements IPageReader {\n@@ -38,8 +37,7 @@ public class MemPageReader implements IPageReader {\n   private final IChunkMetadata chunkMetadata;\n   private Filter valueFilter;\n \n-  public MemPageReader(\n-      IPointReader timeValuePairIterator, IChunkMetadata chunkMetadata, Filter filter) {\n+  public MemPageReader(IPointReader timeValuePairIterator, IChunkMetadata chunkMetadata, Filter filter) {\n     this.timeValuePairIterator = timeValuePairIterator;\n     this.chunkMetadata = chunkMetadata;\n     this.valueFilter = filter;\n@@ -48,19 +46,15 @@ public class MemPageReader implements IPageReader {\n   @Override\n   public BatchData getAllSatisfiedPageData(boolean ascending) throws IOException {\n     TSDataType dataType;\n-    if (chunkMetadata instanceof VectorChunkMetadata\n-        && ((VectorChunkMetadata) chunkMetadata).getValueChunkMetadataList().size() == 1) {\n-      dataType =\n-          ((VectorChunkMetadata) chunkMetadata).getValueChunkMetadataList().get(0).getDataType();\n+    if (chunkMetadata instanceof VectorChunkMetadata && ((VectorChunkMetadata) chunkMetadata).getValueChunkMetadataList().size() == 1) {\n+      dataType = ((VectorChunkMetadata) chunkMetadata).getValueChunkMetadataList().get(0).getDataType();\n     } else {\n       dataType = chunkMetadata.getDataType();\n     }\n     BatchData batchData = BatchDataFactory.createBatchData(dataType, ascending, false);\n     while (timeValuePairIterator.hasNextTimeValuePair()) {\n       TimeValuePair timeValuePair = timeValuePairIterator.nextTimeValuePair();\n-      if (valueFilter == null\n-          || valueFilter.satisfy(\n-              timeValuePair.getTimestamp(), timeValuePair.getValue().getValue())) {\n+      if (valueFilter == null || valueFilter.satisfy(timeValuePair.getTimestamp(), timeValuePair.getValue().getValue())) {\n         batchData.putAnObject(timeValuePair.getTimestamp(), timeValuePair.getValue().getValue());\n       }\n     }\n@@ -85,4 +79,4 @@ public class MemPageReader implements IPageReader {\n   public boolean isModified() {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "column": "62",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/2/MemPageReader.java\nindex f123ad71ab6..c9c8322c8e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/2/MemPageReader.java\n@@ -16,9 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.query.reader.chunk;\n+package org.apache.iotdb.db.query.reader.chunk\n \n-import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n+; import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.VectorChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/2/MemPageReader.java\nindex f123ad71ab6..f26ba39e3a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/2/MemPageReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/2/MemPageReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk;\n \n import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}