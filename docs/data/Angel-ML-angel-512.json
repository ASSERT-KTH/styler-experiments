{
    "project_name": "Angel-ML-angel",
    "violation_id": "512",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/512/PushNeighbor.java\nindex c46b58ce1e8..98fb41b88b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/512/PushNeighbor.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.updatefuncs.pushneighbor;\n \n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n@@ -27,34 +28,35 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n \n public class PushNeighbor extends UpdateFunc {\n \n-  /**\n-   * Create a new UpdateParam\n-   */\n-  public PushNeighbor(UpdateParam param) {\n-    super(param);\n-  }\n+    /**\n+     * Create a new UpdateParam\n+     */\n+    public PushNeighbor(UpdateParam param) {\n+        super(param);\n+    }\n \n-  public PushNeighbor() {\n-    super(null);\n-  }\n+    public PushNeighbor() {\n+        super(null);\n+    }\n \n-  @Override\n-  public void partitionUpdate(PartitionUpdateParam partParam) {\n-    PushNeighborPartitionParam pparam = (PushNeighborPartitionParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(pparam.getPartKey(), 0);\n-    Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices = pparam.getNodeIdToNeighborIndices();\n+    @Override\n+    public void partitionUpdate(PartitionUpdateParam partParam) {\n+        PushNeighborPartitionParam pparam = (PushNeighborPartitionParam) partParam;\n+        ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n+                .getRow(pparam.getPartKey(), 0);\n+        Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices =\n+                pparam.getNodeIdToNeighborIndices();\n \n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices\n-        .long2ObjectEntrySet().iterator();\n-    row.startWrite();\n-    try {\n-      while (iter.hasNext()) {\n-        Long2ObjectMap.Entry<long[]> entry = iter.next();\n-        row.set(entry.getLongKey(), new LongArrayElement(entry.getValue()));\n-      }\n-    } finally {\n-      row.endWrite();\n+        ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices\n+                .long2ObjectEntrySet().iterator();\n+        row.startWrite();\n+        try {\n+            while (iter.hasNext()) {\n+                Long2ObjectMap.Entry<long[]> entry = iter.next();\n+                row.set(entry.getLongKey(), new LongArrayElement(entry.getValue()));\n+            }\n+        } finally {\n+            row.endWrite();\n+        }\n     }\n-  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/512/PushNeighbor.java\nindex c46b58ce1e8..621549595a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/512/PushNeighbor.java\n@@ -43,10 +43,9 @@ public class PushNeighbor extends UpdateFunc {\n     PushNeighborPartitionParam pparam = (PushNeighborPartitionParam) partParam;\n     ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n         .getRow(pparam.getPartKey(), 0);\n-    Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices = pparam.getNodeIdToNeighborIndices();\n+Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices = pparam.getNodeIdToNeighborIndices();\n \n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices\n-        .long2ObjectEntrySet().iterator();\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices.long2ObjectEntrySet().iterator();\n     row.startWrite();\n     try {\n       while (iter.hasNext()) {\n@@ -57,4 +56,4 @@ public class PushNeighbor extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/512/PushNeighbor.java\nindex c46b58ce1e8..582891330eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/512/PushNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/512/PushNeighbor.java\n@@ -30,6 +30,7 @@ public class PushNeighbor extends UpdateFunc {\n   /**\n    * Create a new UpdateParam\n    */\n+\n   public PushNeighbor(UpdateParam param) {\n     super(param);\n   }\n@@ -41,12 +42,9 @@ public class PushNeighbor extends UpdateFunc {\n   @Override\n   public void partitionUpdate(PartitionUpdateParam partParam) {\n     PushNeighborPartitionParam pparam = (PushNeighborPartitionParam) partParam;\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(pparam.getPartKey(), 0);\n+    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(pparam.getPartKey(), 0);\n     Long2ObjectOpenHashMap<long[]> nodeIdToNeighborIndices = pparam.getNodeIdToNeighborIndices();\n-\n-    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices\n-        .long2ObjectEntrySet().iterator();\n+    ObjectIterator<Long2ObjectMap.Entry<long[]>> iter = nodeIdToNeighborIndices.long2ObjectEntrySet().iterator();\n     row.startWrite();\n     try {\n       while (iter.hasNext()) {\n@@ -57,4 +55,5 @@ public class PushNeighbor extends UpdateFunc {\n       row.endWrite();\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}