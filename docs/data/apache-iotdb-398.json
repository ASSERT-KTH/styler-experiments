{
    "project_name": "apache-iotdb",
    "violation_id": "398",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.write.chunk;\n\nimport org.apache.iotdb.tsfile.exception.write.NoMeasurementException;\nimport org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/398/ChunkGroupWriterImpl.java\nindex 10e30448040..2de9bd0259b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/398/ChunkGroupWriterImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.write.chunk;\n \n import org.apache.iotdb.tsfile.exception.write.NoMeasurementException;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/398/ChunkGroupWriterImpl.java\nindex 10e30448040..e04f40469b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/398/ChunkGroupWriterImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.write.chunk;\n \n import org.apache.iotdb.tsfile.exception.write.NoMeasurementException;\n@@ -36,14 +37,18 @@ import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-/** a implementation of IChunkGroupWriter. */\n+/**\n+ * a implementation of IChunkGroupWriter.\n+ */\n public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n \n   private static final Logger LOG = LoggerFactory.getLogger(ChunkGroupWriterImpl.class);\n \n   private final String deviceId;\n \n-  /** Map(measurementID, ChunkWriterImpl). */\n+  /**\n+   * Map(measurementID, ChunkWriterImpl).\n+   */\n   private Map<String, IChunkWriter> chunkWriters = new HashMap<>();\n \n   public ChunkGroupWriterImpl(String deviceId) {\n@@ -154,7 +159,9 @@ public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n     return size;\n   }\n \n-  /** seal all the chunks which may has un-sealed pages in force. */\n+  /**\n+   * seal all the chunks which may has un-sealed pages in force.\n+   */\n   private void sealAllChunks() {\n     for (IChunkWriter writer : chunkWriters.values()) {\n       writer.sealCurrentPage();\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'Tablet' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/398/ChunkGroupWriterImpl.java\nindex 10e30448040..f6df7a6b6cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/398/ChunkGroupWriterImpl.java\n@@ -27,20 +27,18 @@ import org.apache.iotdb.tsfile.write.record.Tablet;\n import org.apache.iotdb.tsfile.write.record.datapoint.DataPoint;\n import org.apache.iotdb.tsfile.write.schema.IMeasurementSchema;\n import org.apache.iotdb.tsfile.write.writer.TsFileIOWriter;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n /** a implementation of IChunkGroupWriter. */\n+\n public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n \n   private static final Logger LOG = LoggerFactory.getLogger(ChunkGroupWriterImpl.class);\n-\n   private final String deviceId;\n \n   /** Map(measurementID, ChunkWriterImpl). */\n@@ -63,8 +61,9 @@ public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n     for (DataPoint point : data) {\n       String measurementId = point.getMeasurementId();\n       if (!chunkWriters.containsKey(measurementId)) {\n-        throw new NoMeasurementException(\n-            \"time \" + time + \", measurement id \" + measurementId + \" not found!\");\n+        throw new NoMeasurementException(\"time \" + time\n+        + \", measurement id \"\n+        + measurementId + \" not found!\");\n       }\n       point.writeTo(time, chunkWriters.get(measurementId));\n     }\n@@ -84,42 +83,29 @@ public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n   }\n \n   private void writeByDataType(\n-      Tablet tablet, String measurementId, TSDataType dataType, int index) {\n+    Tablet tablet, String measurementId, TSDataType dataType, int index) {\n     int batchSize = tablet.rowSize;\n     switch (dataType) {\n       case INT32:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (int[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (int[]) tablet.values[index], batchSize);\n         break;\n       case INT64:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (long[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (long[]) tablet.values[index], batchSize);\n         break;\n       case FLOAT:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (float[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (float[]) tablet.values[index], batchSize);\n         break;\n       case DOUBLE:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (double[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (double[]) tablet.values[index], batchSize);\n         break;\n       case BOOLEAN:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (boolean[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (boolean[]) tablet.values[index], batchSize);\n         break;\n       case TEXT:\n-        chunkWriters\n-            .get(measurementId)\n-            .write(tablet.timestamps, (Binary[]) tablet.values[index], batchSize);\n+        chunkWriters.get(measurementId).write(tablet.timestamps, (Binary[]) tablet.values[index], batchSize);\n         break;\n       default:\n-        throw new UnSupportedDataTypeException(\n-            String.format(\"Data type %s is not supported.\", dataType));\n+        throw new UnSupportedDataTypeException(String.format(\"Data type %s is not supported.\", dataType));\n     }\n   }\n \n@@ -155,6 +141,7 @@ public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n   }\n \n   /** seal all the chunks which may has un-sealed pages in force. */\n+\n   private void sealAllChunks() {\n     for (IChunkWriter writer : chunkWriters.values()) {\n       writer.sealCurrentPage();\n@@ -165,4 +152,4 @@ public class ChunkGroupWriterImpl implements IChunkGroupWriter {\n   public int getSeriesNumber() {\n     return chunkWriters.size();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/398/ChunkGroupWriterImpl.java\nindex 10e30448040..2de9bd0259b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/398/ChunkGroupWriterImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/398/ChunkGroupWriterImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.write.chunk;\n \n import org.apache.iotdb.tsfile.exception.write.NoMeasurementException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}