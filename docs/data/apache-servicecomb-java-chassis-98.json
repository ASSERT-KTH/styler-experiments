{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "98",
    "information": {
        "violations": [
            {
                "line": "36",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n\n  private static RootDeserializer<RequestHeader> rootDeserializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n      .createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n\n  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/98/RequestHeader.java\nindex 1835e25b96c..29187a9bb4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/98/RequestHeader.java\n@@ -33,8 +33,9 @@ public class RequestHeader {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<RequestHeader> rootDeserializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n-      .createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n+  private static RootDeserializer<RequestHeader> rootDeserializer =\n+      protoMapperFactory.createFromName(\"RequestHeader.proto\")\n+          .createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n       .createRootSerializer(\"RequestHeader\", RequestHeader.class);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/98/RequestHeader.java\nindex 1835e25b96c..94e043b36c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/98/RequestHeader.java\n@@ -109,4 +109,4 @@ public class RequestHeader {\n   public void setContext(Map<String, String> context) {\n     this.context = context;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/98/RequestHeader.java\nindex 1835e25b96c..c3e6433257a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/98/RequestHeader.java\n@@ -18,26 +18,23 @@\n package org.apache.servicecomb.transport.highway.message;\n \n import java.util.Map;\n-\n import org.apache.servicecomb.foundation.protobuf.ProtoMapperFactory;\n import org.apache.servicecomb.foundation.protobuf.RootDeserializer;\n import org.apache.servicecomb.foundation.protobuf.RootSerializer;\n-\n import io.vertx.core.buffer.Buffer;\n \n /**\n  * tag\u7684\u7f3a\u5931\u3001\u4e71\u5e8f\uff0c\u662f\u56e0\u4e3a\u8981\u517c\u5bb9\u5386\u53f2\u7248\u672c\n  * 1.tag(4)\uff0c\u662f\u5386\u53f2\u7248\u672c\u4e2d\u7684\u538b\u7f29\u7b97\u6cd5\u540d\uff0c\u8f6c\u79fb\u5230login\u6d88\u606f\u4e2d\u4f20\u9012\n  */\n+\n public class RequestHeader {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<RequestHeader> rootDeserializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n-      .createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n+  private static RootDeserializer<RequestHeader> rootDeserializer = protoMapperFactory.createFromName(\"RequestHeader.proto\").createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n \n-  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n-      .createRootSerializer(\"RequestHeader\", RequestHeader.class);\n+  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"RequestHeader.proto\").createRootSerializer(\"RequestHeader\", RequestHeader.class);\n \n   public static RootSerializer getRootSerializer() {\n     return rootSerializer;\n@@ -51,6 +48,7 @@ public class RequestHeader {\n \n   // \u8fd0\u884c\u65f6\u5fc5\u987b\u7684\u6570\u636e\uff0c\u6bd4\u5982body\u662f\u5426\u538b\u7f29\n   // \u9884\u7559\u7279\u6027\u9009\u9879\n+\n   private int flags;\n \n   private String destMicroservice;\n@@ -62,6 +60,7 @@ public class RequestHeader {\n   private Map<String, String> context;\n \n   //CHECKSTYLE:ON\n+\n   public int getMsgType() {\n     return msgType;\n   }\n@@ -109,4 +108,4 @@ public class RequestHeader {\n   public void setContext(Map<String, String> context) {\n     this.context = context;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "36",
                    "column": "50",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "36",
                    "column": "66",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "36",
                    "column": "67",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/98/RequestHeader.java\nindex 1835e25b96c..4ffb0a6da8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/98/RequestHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/98/RequestHeader.java\n@@ -33,8 +33,7 @@ public class RequestHeader {\n   // TODO : WEAK refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<RequestHeader> rootDeserializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n-      .createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n+  private static RootDeserializer <RequestHeader>rootDeserializer=protoMapperFactory.createFromName(\"RequestHeader.proto\").createRootDeserializer(\"RequestHeader\", RequestHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"RequestHeader.proto\")\n       .createRootSerializer(\"RequestHeader\", RequestHeader.class);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}