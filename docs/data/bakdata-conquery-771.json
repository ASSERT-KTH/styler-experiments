{
    "project_name": "bakdata-conquery",
    "violation_id": "771",
    "information": {
        "violations": [
            {
                "line": "48",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tuserId = UserId.Parser.INSTANCE.parse(uid);\n\t\t\t\treturn new DevelopmentToken(userId, uid);\n\t\t\t} catch (Exception e) {\n\t\t\t\t// do default\n\t\t\t}\n\t\t}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "48",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/771/UserIdTokenExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/771/UserIdTokenExtractor.java\nindex 6ad39acb165..d67c3d52e45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/violations/771/UserIdTokenExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/bakdata-conquery/checkstyle_idea/771/UserIdTokenExtractor.java\n@@ -13,44 +13,43 @@ import javax.ws.rs.core.HttpHeaders;\n @RequiredArgsConstructor\n public class UserIdTokenExtractor implements DefaultAuthFilter.TokenExtractor {\n \n-\tprivate static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n-\n-\tprivate final User defaultUser;\n-\n-\t/**\n-\t * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n-\t */\n-\t@Override\n-\tpublic AuthenticationToken apply(ContainerRequestContext requestContext) {\n-\t\t// Check if the developer passed a UserId under whose the Request should be\n-\t\t// executed\n-\n-\t\t// Check the Authorization header for a String which can be parsed as a UserId\n-\t\tString uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n-\n-\t\tif (uid != null) {\n-\t\t\tuid = uid.replaceFirst(\"^Bearer \", \"\");\n-\t\t}\n-\t\telse {\n-\t\t\t// Check also the query parameter \"access_token\" for a UserId\n-\t\t\tuid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n-\t\t}\n-\n-\n-\t\tUserId userId = null;\n-\n-\t\tif (StringUtils.isNotEmpty(uid)) {\n-\t\t\tuid = uid.replaceFirst(\"^Bearer \", \"\");\n-\n-\t\t\ttry {\n-\t\t\t\tuserId = UserId.Parser.INSTANCE.parse(uid);\n-\t\t\t\treturn new DevelopmentToken(userId, uid);\n-\t\t\t} catch (Exception e) {\n-\t\t\t\t// do default\n-\t\t\t}\n-\t\t}\n-\t\t// If nothing was found execute the request as the default user\n-\t\tuserId = defaultUser.getId();\n-\t\treturn new DevelopmentToken(userId, uid);\n-\t}\n+    private static final String UID_QUERY_STRING_PARAMETER = \"access_token\";\n+\n+    private final User defaultUser;\n+\n+    /**\n+     * Tries to extract a plain {@link UserId} from the request to submit it for the authentication process.\n+     */\n+    @Override\n+    public AuthenticationToken apply(ContainerRequestContext requestContext) {\n+        // Check if the developer passed a UserId under whose the Request should be\n+        // executed\n+\n+        // Check the Authorization header for a String which can be parsed as a UserId\n+        String uid = requestContext.getHeaders().getFirst(HttpHeaders.AUTHORIZATION);\n+\n+        if (uid != null) {\n+            uid = uid.replaceFirst(\"^Bearer \", \"\");\n+        } else {\n+            // Check also the query parameter \"access_token\" for a UserId\n+            uid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n+        }\n+\n+\n+        UserId userId = null;\n+\n+        if (StringUtils.isNotEmpty(uid)) {\n+            uid = uid.replaceFirst(\"^Bearer \", \"\");\n+\n+            try {\n+                userId = UserId.Parser.INSTANCE.parse(uid);\n+                return new DevelopmentToken(userId, uid);\n+            } catch (Exception e) {\n+                // do default\n+            }\n+        }\n+        // If nothing was found execute the request as the default user\n+        userId = defaultUser.getId();\n+        return new DevelopmentToken(userId, uid);\n+    }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "48",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "48",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}