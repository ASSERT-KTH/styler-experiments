{
    "project_name": "Activiti-Activiti",
    "violation_id": "477",
    "information": {
        "violations": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.bpmn.listener;\n\nimport org.activiti.engine.ActivitiIllegalArgumentException;\nimport org.activiti.engine.delegate.CustomPropertiesResolver;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/477/ExpressionCustomPropertiesResolver.java\nindex a0622f159da..c8b77c5042f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/477/ExpressionCustomPropertiesResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/477/ExpressionCustomPropertiesResolver.java\nindex a0622f159da..28919552753 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/477/ExpressionCustomPropertiesResolver.java\n@@ -26,31 +26,29 @@ import java.util.Map;\n \n /**\n  * An {@link CustomPropertiesResolver} that evaluates a {@link Expression} when notified.\n- *\n-\n  */\n public class ExpressionCustomPropertiesResolver implements CustomPropertiesResolver {\n \n-  protected Expression expression;\n+    protected Expression expression;\n \n-  public ExpressionCustomPropertiesResolver(Expression expression) {\n-    this.expression = expression;\n-  }\n+    public ExpressionCustomPropertiesResolver(Expression expression) {\n+        this.expression = expression;\n+    }\n+\n+    @Override\n+    public Map<String, Object> getCustomPropertiesMap(DelegateExecution execution) {\n+        Object expressionValue = expression.getValue(execution);\n+        if (expressionValue instanceof Map) {\n+            return (Map<String, Object>) expressionValue;\n+        } else {\n+            throw new ActivitiIllegalArgumentException(\"Custom properties resolver expression \" + expression + \" did not return a Map<String, Object>\");\n+        }\n+    }\n \n-  @Override\n-  public Map<String, Object> getCustomPropertiesMap(DelegateExecution execution) {\n-    Object expressionValue = expression.getValue(execution);\n-    if (expressionValue instanceof Map) {\n-      return (Map<String, Object>) expressionValue;\n-    } else {\n-      throw new ActivitiIllegalArgumentException(\"Custom properties resolver expression \" + expression + \" did not return a Map<String, Object>\");\n+    /**\n+     * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n+     */\n+    public String getExpressionText() {\n+        return expression.getExpressionText();\n     }\n-  }\n-\n-  /**\n-   * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n-   */\n-  public String getExpressionText() {\n-    return expression.getExpressionText();\n-  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/477/ExpressionCustomPropertiesResolver.java\nindex a0622f159da..e6e87dc6df8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/477/ExpressionCustomPropertiesResolver.java\n@@ -21,7 +21,6 @@ import org.activiti.engine.ActivitiIllegalArgumentException;\n import org.activiti.engine.delegate.CustomPropertiesResolver;\n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.delegate.Expression;\n-\n import java.util.Map;\n \n /**\n@@ -29,6 +28,8 @@ import java.util.Map;\n  *\n \n  */\n+\n+\n public class ExpressionCustomPropertiesResolver implements CustomPropertiesResolver {\n \n   protected Expression expression;\n@@ -50,7 +51,8 @@ public class ExpressionCustomPropertiesResolver implements CustomPropertiesResol\n   /**\n    * returns the expression text for this execution listener. Comes in handy if you want to check which listeners you already have.\n    */\n+\n   public String getExpressionText() {\n     return expression.getExpressionText();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/477/ExpressionCustomPropertiesResolver.java\nindex a0622f159da..c8b77c5042f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/477/ExpressionCustomPropertiesResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/477/ExpressionCustomPropertiesResolver.java\nindex a0622f159da..c8b77c5042f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/477/ExpressionCustomPropertiesResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/477/ExpressionCustomPropertiesResolver.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.bpmn.listener;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ]
}