{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3159",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "26",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3159/NotCurrentStoreVersionException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3159/NotCurrentStoreVersionException.java\nindex 9be6c097af1..c68ebb286b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3159/NotCurrentStoreVersionException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3159/NotCurrentStoreVersionException.java\n@@ -17,15 +17,16 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n public class NotCurrentStoreVersionException extends StoreFailureException\n {\n \n-    public NotCurrentStoreVersionException( String expectedVersion, String foundVersion, String msg,\n-            boolean possibleToAutomaticallyUpgrade )\n-    {\n-        super( String.format( \"Was expecting store version [%s] but found [%s]. Store %s be upgraded automatically. \",\n-                expectedVersion, foundVersion, possibleToAutomaticallyUpgrade ? \"can\" : \"cannot\") + msg );\n-    }\n+  public NotCurrentStoreVersionException(String expectedVersion, String foundVersion, String msg,\n+                                         boolean possibleToAutomaticallyUpgrade)\n+  {\n+    super(String.format(\"Was expecting store version [%s] but found [%s]. Store %s be upgraded automatically. \",\n+        expectedVersion, foundVersion, possibleToAutomaticallyUpgrade ? \"can\" : \"cannot\") + msg);\n+  }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3159/NotCurrentStoreVersionException.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3159/NotCurrentStoreVersionException.java\nindex 9be6c097af1..5de6ffdd8cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3159/NotCurrentStoreVersionException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3159/NotCurrentStoreVersionException.java\n@@ -21,11 +21,10 @@ package org.neo4j.kernel.impl.store;\n \n public class NotCurrentStoreVersionException extends StoreFailureException\n {\n-\n     public NotCurrentStoreVersionException( String expectedVersion, String foundVersion, String msg,\n             boolean possibleToAutomaticallyUpgrade )\n     {\n         super( String.format( \"Was expecting store version [%s] but found [%s]. Store %s be upgraded automatically. \",\n                 expectedVersion, foundVersion, possibleToAutomaticallyUpgrade ? \"can\" : \"cannot\") + msg );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}