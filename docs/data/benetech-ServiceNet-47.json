{
    "project_name": "benetech-ServiceNet",
    "violation_id": "47",
    "information": {
        "violations": [
            {
                "line": "66",
                "column": "5",
                "severity": "error",
                "message": "'METHOD_DEF' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n\n        Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/47/RecordFactory.java\nindex 25151f1e31b..aaffd195f69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/benetech-ServiceNet/styler/05_predictions/final/files-repaired/47/RecordFactory.java\n@@ -62,7 +62,6 @@ public class RecordFactory {\n         return filterRecord(organization, filteredConflicts, fieldExclusions, locationExclusions);\n     }\n \n-\n     public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n \n         Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/47/RecordFactory.java\nindex 25151f1e31b..496ff240332 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/checkstyle_idea/47/RecordFactory.java\n@@ -104,7 +104,7 @@ public class RecordFactory {\n     }\n \n     private List<ConflictDTO> filterConflicts(List<ConflictDTO> conflicts, Set<FieldExclusion> baseExclusions,\n-        Map<UUID, ExclusionsConfig> exclusionsMap) {\n+                                              Map<UUID, ExclusionsConfig> exclusionsMap) {\n \n         return conflicts.stream()\n             .filter(conf -> isNotExcluded(conf, baseExclusions)\n@@ -133,7 +133,8 @@ public class RecordFactory {\n     }\n \n     private Optional<ActivityRecordDTO> filterRecord(Organization organization, List<ConflictDTO> conflicts,\n-        Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions) {\n+                                                     Set<FieldExclusion> exclusions,\n+                                                     Set<LocationExclusion> locationExclusions) {\n         try {\n             return Optional.of(buildRecord(organization, conflicts, exclusions, locationExclusions));\n         } catch (IllegalAccessException e) {\n@@ -143,7 +144,8 @@ public class RecordFactory {\n     }\n \n     private Optional<ProviderRecordDTO> filterProviderRecord(Organization organization,\n-        Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions) {\n+                                                             Set<FieldExclusion> exclusions,\n+                                                             Set<LocationExclusion> locationExclusions) {\n         try {\n             return Optional.of(buildProviderRecord(organization, exclusions, locationExclusions));\n         } catch (IllegalAccessException e) {\n@@ -153,7 +155,8 @@ public class RecordFactory {\n     }\n \n     private ActivityRecordDTO buildRecord(Organization organization, List<ConflictDTO> conflictDTOS,\n-        Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions) throws IllegalAccessException {\n+                                          Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions)\n+        throws IllegalAccessException {\n \n         if (exclusions.isEmpty()) {\n             return recordBuilder.buildBasicRecord(\n@@ -165,14 +168,15 @@ public class RecordFactory {\n     }\n \n     private ProviderRecordDTO buildProviderRecord(Organization organization,\n-        Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions) throws IllegalAccessException {\n+                                                  Set<FieldExclusion> exclusions, Set<LocationExclusion> locationExclusions)\n+        throws IllegalAccessException {\n \n         if (exclusions.isEmpty()) {\n             return recordBuilder.buildBasicProviderRecord(\n                 organization, organization.getUpdatedAt(), locationExclusions);\n         } else {\n             return recordBuilder.buildFilteredProviderRecord(organization, organization.getUpdatedAt(),\n-                 exclusions, locationExclusions);\n+                exclusions, locationExclusions);\n         }\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/47/RecordFactory.java\nindex 25151f1e31b..31c4de46c3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/naturalize/47/RecordFactory.java\n@@ -62,8 +62,7 @@ public class RecordFactory {\n         return filterRecord(organization, filteredConflicts, fieldExclusions, locationExclusions);\n     }\n \n-\n-    public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n+public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n \n         Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n \n@@ -171,8 +170,7 @@ public class RecordFactory {\n             return recordBuilder.buildBasicProviderRecord(\n                 organization, organization.getUpdatedAt(), locationExclusions);\n         } else {\n-            return recordBuilder.buildFilteredProviderRecord(organization, organization.getUpdatedAt(),\n-                 exclusions, locationExclusions);\n-        }\n+            return recordBuilder.buildFilteredProviderRecord(organization, organization.getUpdatedAt(), exclusions, locationExclusions);\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/47/RecordFactory.java\nindex 25151f1e31b..aaffd195f69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/random/files-repaired/47/RecordFactory.java\n@@ -62,7 +62,6 @@ public class RecordFactory {\n         return filterRecord(organization, filteredConflicts, fieldExclusions, locationExclusions);\n     }\n \n-\n     public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n \n         Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/47/RecordFactory.java\nindex 25151f1e31b..aaffd195f69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/violations/47/RecordFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/benetech-ServiceNet/styler/05_predictions/three_grams/files-repaired/47/RecordFactory.java\n@@ -62,7 +62,6 @@ public class RecordFactory {\n         return filterRecord(organization, filteredConflicts, fieldExclusions, locationExclusions);\n     }\n \n-\n     public Optional<ProviderRecordDTO> getFilteredProviderRecord(Organization organization) {\n \n         Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ]
}