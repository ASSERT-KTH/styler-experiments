{
    "project_name": "griddynamics-jagger",
    "violation_id": "98",
    "information": {
        "violations": [
            {
                "line": "33",
                "column": "86",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    protected NodeContext context;\n\n    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n        this.sessionId = sessionId;\n        this.taskId = taskId;\n        this.context = context;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/98/DefaultMetricService.java\nindex f72901c71b0..5a4dc793a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/98/DefaultMetricService.java\n@@ -30,7 +30,7 @@ public class DefaultMetricService implements MetricService {\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/98/DefaultMetricService.java\nindex f72901c71b0..c8ef3c0a973 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/98/DefaultMetricService.java\n@@ -30,7 +30,7 @@ public class DefaultMetricService implements MetricService {\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n@@ -41,8 +41,8 @@ public class DefaultMetricService implements MetricService {\n         KeyValueStorage storage = context.getService(KeyValueStorage.class);\n \n         storage.put(Namespace.of(sessionId, taskId, \"metricDescription\"),\n-                    metricDescription.getMetricId(),\n-                    metricDescription\n+                metricDescription.getMetricId(),\n+                metricDescription\n         );\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'metricDescription' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/98/DefaultMetricService.java\nindex f72901c71b0..64efa336c0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/98/DefaultMetricService.java\n@@ -30,7 +30,7 @@ public class DefaultMetricService implements MetricService {\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n@@ -41,9 +41,8 @@ public class DefaultMetricService implements MetricService {\n         KeyValueStorage storage = context.getService(KeyValueStorage.class);\n \n         storage.put(Namespace.of(sessionId, taskId, \"metricDescription\"),\n-                    metricDescription.getMetricId(),\n-                    metricDescription\n-        );\n+metricDescription.getMetricId(),\n+                    metricDescription);\n     }\n \n     @Override\n@@ -74,4 +73,4 @@ public class DefaultMetricService implements MetricService {\n     public boolean isAvailable() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/98/DefaultMetricService.java\nindex f72901c71b0..af081fcb978 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/98/DefaultMetricService.java\n@@ -8,7 +8,6 @@ import com.griddynamics.jagger.storage.fs.logging.LogWriter;\n import com.griddynamics.jagger.storage.fs.logging.MetricLogEntry;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.File;\n import java.io.UnsupportedEncodingException;\n import java.net.URLEncoder;\n@@ -20,17 +19,18 @@ import java.net.URLEncoder;\n  * Time: 8:38 AM\n  * To change this template use File | Settings | File Templates.\n  */\n+\n+\n public class DefaultMetricService implements MetricService {\n-    private static final Logger log = LoggerFactory.getLogger(DefaultMetricService.class);\n \n+    private static final Logger log = LoggerFactory.getLogger(DefaultMetricService.class);\n \n     public static final String METRIC_MARKER = \"METRIC\";\n-\n     protected String sessionId;\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n@@ -39,11 +39,9 @@ public class DefaultMetricService implements MetricService {\n     @Override\n     public void createMetric(MetricDescription metricDescription) {\n         KeyValueStorage storage = context.getService(KeyValueStorage.class);\n-\n         storage.put(Namespace.of(sessionId, taskId, \"metricDescription\"),\n                     metricDescription.getMetricId(),\n-                    metricDescription\n-        );\n+                    metricDescription);\n     }\n \n     @Override\n@@ -57,8 +55,7 @@ public class DefaultMetricService implements MetricService {\n         LogWriter logWriter = context.getService(LogWriter.class);\n         try {\n             metricId = URLEncoder.encode(metricId, \"UTF-8\");\n-            logWriter.log(sessionId, taskId + File.separatorChar + METRIC_MARKER + File.separatorChar + metricId, context.getId().getIdentifier(),\n-                    new MetricLogEntry(timeStamp, metricId, value));\n+            logWriter.log(sessionId, taskId + File.separatorChar + METRIC_MARKER + File.separatorChar + metricId, context.getId().getIdentifier(), new MetricLogEntry(timeStamp, metricId, value));\n         } catch (UnsupportedEncodingException e) {\n             log.error(\"Can't save metric value with id={}\", metricId, e);\n         }\n@@ -74,4 +71,4 @@ public class DefaultMetricService implements MetricService {\n     public boolean isAvailable() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/98/DefaultMetricService.java\nindex f72901c71b0..5a4dc793a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/98/DefaultMetricService.java\n@@ -30,7 +30,7 @@ public class DefaultMetricService implements MetricService {\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/98/DefaultMetricService.java\nindex f72901c71b0..5a4dc793a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/98/DefaultMetricService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/98/DefaultMetricService.java\n@@ -30,7 +30,7 @@ public class DefaultMetricService implements MetricService {\n     protected String taskId;\n     protected NodeContext context;\n \n-    public DefaultMetricService(String sessionId, String taskId, NodeContext context){\n+    public DefaultMetricService(String sessionId, String taskId, NodeContext context) {\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.context = context;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}