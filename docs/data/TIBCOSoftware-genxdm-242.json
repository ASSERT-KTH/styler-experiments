{
    "project_name": "TIBCOSoftware-genxdm",
    "violation_id": "242",
    "information": {
        "violations": [
            {
                "line": "34",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends PathPatternBase\n{\n\tprivate final PathPatternBase childPattern;\n\tprivate final Pattern parentPattern;\n\n\t/**",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/final/files-repaired/242/ParentPattern.java\nindex b021f978828..c652efaeb8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/final/files-repaired/242/ParentPattern.java\n@@ -31,7 +31,7 @@ import org.genxdm.xpath.v10.ExprException;\n class ParentPattern\r\n     extends PathPatternBase\r\n {\r\n-\tprivate final PathPatternBase childPattern;\r\n+private final PathPatternBase childPattern;\r\n \tprivate final Pattern parentPattern;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/checkstyle_idea/242/ParentPattern.java\nindex b021f978828..d017fbf81ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/checkstyle_idea/242/ParentPattern.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.patterns;\r\n \r\n import org.genxdm.Model;\r\n@@ -29,64 +30,57 @@ import org.genxdm.xpath.v10.ExprException;\n  * represents the concatenation of step patterns, right to left in a LocationPathPattern\r\n  */\r\n class ParentPattern\r\n-    extends PathPatternBase\r\n-{\r\n-\tprivate final PathPatternBase childPattern;\r\n-\tprivate final Pattern parentPattern;\r\n+    extends PathPatternBase {\r\n+    private final PathPatternBase childPattern;\r\n+\r\n+    private final Pattern parentPattern;\r\n \r\n-\t/**\r\n-\t * construct with a new stepPattern: childPattern and a previous parentPattern\r\n-\t */\r\n-\tParentPattern(final PathPatternBase childPattern, final Pattern parentPattern)\r\n-\t{\r\n-\t\t// the right hand (child or attribute axis) StepPattern\r\n-\t\tthis.childPattern = childPattern;\r\n+    /**\r\n+     * construct with a new stepPattern: childPattern and a previous parentPattern\r\n+     */\r\n+    ParentPattern(final PathPatternBase childPattern, final Pattern parentPattern) {\r\n+        // the right hand (child or attribute axis) StepPattern\r\n+        this.childPattern = childPattern;\r\n \r\n-\t\t// whatever came before\r\n-\t\tthis.parentPattern = parentPattern;\r\n-\t}\r\n+        // whatever came before\r\n+        this.parentPattern = parentPattern;\r\n+    }\r\n \r\n-\t/**\r\n-\t * if the rightmost step matches, and our parentPattern's matches() returns true for this node's parent then we have a winner!\r\n-\t */\r\n-\tpublic <N> boolean matches(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\tif (!childPattern.matches(model, contextNode, dynEnv))\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tfinal N node = model.getParent(contextNode);\r\n-\t\tif (node == null)\r\n-\t\t{\r\n-\t\t\t// we ran out of ancestors before we ran out of StepPatterns\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\treturn parentPattern.matches(model, node, dynEnv);\r\n-\t}\r\n+    /**\r\n+     * if the rightmost step matches, and our parentPattern's matches() returns true for this node's parent then we have a winner!\r\n+     */\r\n+    public <N> boolean matches(Model<N> model, final N contextNode,\r\n+                               final ExprContextDynamic<N> dynEnv) throws ExprException {\r\n+        if (!childPattern.matches(model, contextNode, dynEnv)) {\r\n+            return false;\r\n+        }\r\n+        final N node = model.getParent(contextNode);\r\n+        if (node == null) {\r\n+            // we ran out of ancestors before we ran out of StepPatterns\r\n+            return false;\r\n+        }\r\n+        return parentPattern.matches(model, node, dynEnv);\r\n+    }\r\n \r\n-\tpublic int getDefaultPriority()\r\n-\t{\r\n-\t\treturn 1;\r\n-\t}\r\n+    public int getDefaultPriority() {\r\n+        return 1;\r\n+    }\r\n \r\n-\t/**\r\n-\t * gets the rightmost (final) step's matchNodeType\r\n-\t */\r\n-\tpublic String getMatchNamespaceURI()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNamespaceURI();\r\n-\t}\r\n+    /**\r\n+     * gets the rightmost (final) step's matchNodeType\r\n+     */\r\n+    public String getMatchNamespaceURI() {\r\n+        return childPattern.getMatchNamespaceURI();\r\n+    }\r\n \r\n-\tpublic String getMatchLocalName()\r\n-\t{\r\n-\t\treturn childPattern.getMatchLocalName();\r\n-\t}\r\n+    public String getMatchLocalName() {\r\n+        return childPattern.getMatchLocalName();\r\n+    }\r\n \r\n-\t/**\r\n-\t * gets the rightmost (final) step's matchNodeType\r\n-\t */\r\n-\tpublic NodeKind getMatchNodeType()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNodeType();\r\n-\t}\r\n+    /**\r\n+     * gets the rightmost (final) step's matchNodeType\r\n+     */\r\n+    public NodeKind getMatchNodeType() {\r\n+        return childPattern.getMatchNodeType();\r\n+    }\r\n }\r\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/naturalize/242/ParentPattern.java\nindex b021f978828..e7871bb9895 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/naturalize/242/ParentPattern.java\n@@ -30,63 +30,63 @@ import org.genxdm.xpath.v10.ExprException;\n  */\r\n class ParentPattern\r\n     extends PathPatternBase\r\n-{\r\n-\tprivate final PathPatternBase childPattern;\r\n+{\n+    private final PathPatternBase childPattern;\r\n \tprivate final Pattern parentPattern;\r\n \r\n \t/**\r\n \t * construct with a new stepPattern: childPattern and a previous parentPattern\r\n \t */\r\n \tParentPattern(final PathPatternBase childPattern, final Pattern parentPattern)\r\n-\t{\r\n-\t\t// the right hand (child or attribute axis) StepPattern\r\n+\t{\n+    // the right hand (child or attribute axis) StepPattern\r\n \t\tthis.childPattern = childPattern;\r\n \r\n \t\t// whatever came before\r\n-\t\tthis.parentPattern = parentPattern;\r\n-\t}\r\n+\t\tthis.parentPattern = parentPattern;\n+    }\r\n \r\n \t/**\r\n \t * if the rightmost step matches, and our parentPattern's matches() returns true for this node's parent then we have a winner!\r\n \t */\r\n \tpublic <N> boolean matches(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\tif (!childPattern.matches(model, contextNode, dynEnv))\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n+\t{\n+    if (!childPattern.matches(model, contextNode, dynEnv))\r\n+\t\t{\n+    return false;\n+    }\r\n \t\tfinal N node = model.getParent(contextNode);\r\n \t\tif (node == null)\r\n-\t\t{\r\n-\t\t\t// we ran out of ancestors before we ran out of StepPatterns\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\treturn parentPattern.matches(model, node, dynEnv);\r\n-\t}\r\n+\t\t{\n+    // we ran out of ancestors before we ran out of StepPatterns\r\n+\t\t\treturn false;\n+    }\r\n+\t\treturn parentPattern.matches(model, node, dynEnv);\n+    }\r\n \r\n \tpublic int getDefaultPriority()\r\n-\t{\r\n-\t\treturn 1;\r\n-\t}\r\n+\t{\n+    return 1;\n+    }\r\n \r\n \t/**\r\n \t * gets the rightmost (final) step's matchNodeType\r\n \t */\r\n \tpublic String getMatchNamespaceURI()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNamespaceURI();\r\n-\t}\r\n+\t{\n+    return childPattern.getMatchNamespaceURI();\n+    }\r\n \r\n \tpublic String getMatchLocalName()\r\n-\t{\r\n-\t\treturn childPattern.getMatchLocalName();\r\n-\t}\r\n+\t{\n+    return childPattern.getMatchLocalName();\n+    }\r\n \r\n \t/**\r\n \t * gets the rightmost (final) step's matchNodeType\r\n \t */\r\n \tpublic NodeKind getMatchNodeType()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNodeType();\r\n-\t}\r\n-}\r\n+\t{\n+    return childPattern.getMatchNodeType();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/codebuff/242/ParentPattern.java\nindex b021f978828..6c99313becd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/codebuff/242/ParentPattern.java\n@@ -18,75 +18,80 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.patterns;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.NodeKind;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n+package org.genxdm.processor.xpath.v10.patterns;\n+\n+import org.genxdm.Model;\n+import org.genxdm.NodeKind;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n import org.genxdm.xpath.v10.ExprException;\r\n \r\n /**\r\n  * represents the concatenation of step patterns, right to left in a LocationPathPattern\r\n- */\r\n-class ParentPattern\r\n-    extends PathPatternBase\r\n-{\r\n-\tprivate final PathPatternBase childPattern;\r\n-\tprivate final Pattern parentPattern;\r\n-\r\n-\t/**\r\n-\t * construct with a new stepPattern: childPattern and a previous parentPattern\r\n-\t */\r\n-\tParentPattern(final PathPatternBase childPattern, final Pattern parentPattern)\r\n-\t{\r\n-\t\t// the right hand (child or attribute axis) StepPattern\r\n-\t\tthis.childPattern = childPattern;\r\n-\r\n-\t\t// whatever came before\r\n-\t\tthis.parentPattern = parentPattern;\r\n-\t}\r\n+ */\n+\n+class ParentPattern extends PathPatternBase\n+{\n+    private final PathPatternBase childPattern;\n+    private final Pattern parentPattern;\r\n \r\n-\t/**\r\n-\t * if the rightmost step matches, and our parentPattern's matches() returns true for this node's parent then we have a winner!\r\n-\t */\r\n-\tpublic <N> boolean matches(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\r\n-\t{\r\n-\t\tif (!childPattern.matches(model, contextNode, dynEnv))\r\n-\t\t{\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\tfinal N node = model.getParent(contextNode);\r\n-\t\tif (node == null)\r\n-\t\t{\r\n-\t\t\t// we ran out of ancestors before we ran out of StepPatterns\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\treturn parentPattern.matches(model, node, dynEnv);\r\n-\t}\r\n+    /**\r\n+     * construct with a new stepPattern: childPattern and a previous parentPattern\r\n+     */\n+\n+    ParentPattern(final PathPatternBase childPattern, final Pattern parentPattern)\n+    {\r\n+        // the right hand (child or attribute axis) StepPattern\n+        this.childPattern = childPattern;\r\n \r\n-\tpublic int getDefaultPriority()\r\n-\t{\r\n-\t\treturn 1;\r\n-\t}\r\n+        // whatever came before\n+        this.parentPattern = parentPattern;\n+    }\r\n \r\n-\t/**\r\n-\t * gets the rightmost (final) step's matchNodeType\r\n-\t */\r\n-\tpublic String getMatchNamespaceURI()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNamespaceURI();\r\n-\t}\r\n+    /**\r\n+     * if the rightmost step matches, and our parentPattern's matches() returns true for this node's parent then we have a winner!\r\n+     */\n+\n+    public <N> boolean matches(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) throws ExprException\n+    {\n+        if (!childPattern.matches(model, contextNode, dynEnv))\n+        {\n+            return false;\n+        }\n+\n+        final N node = model.getParent(contextNode);\n+        if (node == null)\n+        {\r\n+            // we ran out of ancestors before we ran out of StepPatterns\n+            return false;\n+        }\n+        return parentPattern.matches(model, node, dynEnv);\n+    }\n+\n+    public int getDefaultPriority()\n+    {\n+        return 1;\n+    }\r\n \r\n-\tpublic String getMatchLocalName()\r\n-\t{\r\n-\t\treturn childPattern.getMatchLocalName();\r\n-\t}\r\n+    /**\r\n+     * gets the rightmost (final) step's matchNodeType\r\n+     */\n+\n+    public String getMatchNamespaceURI()\n+    {\n+        return childPattern.getMatchNamespaceURI();\n+    }\n+\n+    public String getMatchLocalName()\n+    {\n+        return childPattern.getMatchLocalName();\n+    }\r\n \r\n-\t/**\r\n-\t * gets the rightmost (final) step's matchNodeType\r\n-\t */\r\n-\tpublic NodeKind getMatchNodeType()\r\n-\t{\r\n-\t\treturn childPattern.getMatchNodeType();\r\n-\t}\r\n-}\r\n+    /**\r\n+     * gets the rightmost (final) step's matchNodeType\r\n+     */\n+\n+    public NodeKind getMatchNodeType()\n+    {\n+        return childPattern.getMatchNodeType();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 90
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/random/files-repaired/242/ParentPattern.java\nindex b021f978828..c652efaeb8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/random/files-repaired/242/ParentPattern.java\n@@ -31,7 +31,7 @@ import org.genxdm.xpath.v10.ExprException;\n class ParentPattern\r\n     extends PathPatternBase\r\n {\r\n-\tprivate final PathPatternBase childPattern;\r\n+private final PathPatternBase childPattern;\r\n \tprivate final Pattern parentPattern;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "35",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/three_grams/files-repaired/242/ParentPattern.java\nindex b021f978828..d7d0dcc17d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/violations/242/ParentPattern.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/TIBCOSoftware-genxdm/styler/05_predictions/three_grams/files-repaired/242/ParentPattern.java\n@@ -31,7 +31,7 @@ import org.genxdm.xpath.v10.ExprException;\n class ParentPattern\r\n     extends PathPatternBase\r\n {\r\n-\tprivate final PathPatternBase childPattern;\r\n+    private final PathPatternBase childPattern;\r\n \tprivate final Pattern parentPattern;\r\n \r\n \t/**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}