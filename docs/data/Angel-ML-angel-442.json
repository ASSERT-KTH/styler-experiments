{
    "project_name": "Angel-ML-angel",
    "violation_id": "442",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/442/ParameterServerThreadStackBlock.java\nindex 0b8c23fe0c0..fa34ac8a1fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/442/ParameterServerThreadStackBlock.java\n@@ -33,34 +33,34 @@ import static org.apache.hadoop.yarn.util.StringHelper.join;\n \n \n public class ParameterServerThreadStackBlock extends HtmlBlock {\n-  final AMContext amContext;\n-  private static final Log LOG = LogFactory.getLog(ParameterServerThreadStackBlock.class);\n+    final AMContext amContext;\n+    private static final Log LOG = LogFactory.getLog(ParameterServerThreadStackBlock.class);\n \n-  @Inject\n-  ParameterServerThreadStackBlock(AMContext amctx) {\n-    amContext = amctx;\n-    amContext.getParameterServerManager();\n-  }\n-\n-  @Override\n-  protected void render(Block html) {\n-    set(TITLE, join(\"Angel ParameterServerThread \", $(PSATTEMPT_ID)));\n-    PSAttemptId psAttempttId = null;\n-    try {\n-      psAttempttId = new PSAttemptId($(PSATTEMPT_ID));\n-    } catch (UnvalidIdStrException e) {\n-      LOG.error(\"unvalid id string, \", e);\n-      return;\n+    @Inject\n+    ParameterServerThreadStackBlock(AMContext amctx) {\n+        amContext = amctx;\n+        amContext.getParameterServerManager();\n     }\n \n-    try {\n-      LOG.info(\"start init PSClient\");\n-      PSClient psClient = new PSClient(amContext, psAttempttId);\n-      String info = psClient.getThreadStack();\n-      html.pre()._(info)._();\n-    } catch (IOException | ServiceException e) {\n-      LOG.error(\"get thread stack from ps \" + psAttempttId + \" failed. \", e);\n+    @Override\n+    protected void render(Block html) {\n+        set(TITLE, join(\"Angel ParameterServerThread \", $(PSATTEMPT_ID)));\n+        PSAttemptId psAttempttId = null;\n+        try {\n+            psAttempttId = new PSAttemptId($(PSATTEMPT_ID));\n+        } catch (UnvalidIdStrException e) {\n+            LOG.error(\"unvalid id string, \", e);\n+            return;\n+        }\n+\n+        try {\n+            LOG.info(\"start init PSClient\");\n+            PSClient psClient = new PSClient(amContext, psAttempttId);\n+            String info = psClient.getThreadStack();\n+            html.pre()._(info)._();\n+        } catch (IOException | ServiceException e) {\n+            LOG.error(\"get thread stack from ps \" + psAttempttId + \" failed. \", e);\n+        }\n     }\n-  }\n \n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/442/ParameterServerThreadStackBlock.java\nindex 0b8c23fe0c0..9f98f32be03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/442/ParameterServerThreadStackBlock.java\n@@ -63,4 +63,4 @@ public class ParameterServerThreadStackBlock extends HtmlBlock {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/442/ParameterServerThreadStackBlock.java\nindex 0b8c23fe0c0..7708261060f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/442/ParameterServerThreadStackBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/442/ParameterServerThreadStackBlock.java\n@@ -25,14 +25,12 @@ import com.tencent.angel.ps.PSAttemptId;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.yarn.webapp.view.HtmlBlock;\n-\n import java.io.IOException;\n-\n import static com.tencent.angel.webapp.AngelParams.PSATTEMPT_ID;\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n \n-\n public class ParameterServerThreadStackBlock extends HtmlBlock {\n+\n   final AMContext amContext;\n   private static final Log LOG = LogFactory.getLog(ParameterServerThreadStackBlock.class);\n \n@@ -52,15 +50,14 @@ public class ParameterServerThreadStackBlock extends HtmlBlock {\n       LOG.error(\"unvalid id string, \", e);\n       return;\n     }\n-\n     try {\n       LOG.info(\"start init PSClient\");\n       PSClient psClient = new PSClient(amContext, psAttempttId);\n       String info = psClient.getThreadStack();\n       html.pre()._(info)._();\n-    } catch (IOException | ServiceException e) {\n+    } catch (IOException| ServiceException e) {\n       LOG.error(\"get thread stack from ps \" + psAttempttId + \" failed. \", e);\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}