{
    "project_name": "EMResearch-EMB",
    "violation_id": "59",
    "information": {
        "violations": [
            {
                "line": "14",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Provider\npublic class NotFoundExceptionMapper implements ExceptionMapper<javax.ws.rs.NotFoundException> {\n\t\n\tprivate static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n\n\t@Override",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/59/NotFoundExceptionMapper.java\nindex 2630c5ba9af..6a5f1c5a821 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/59/NotFoundExceptionMapper.java\n@@ -11,13 +11,13 @@ import org.springframework.stereotype.Component;\n @Component\n @Provider\n public class NotFoundExceptionMapper implements ExceptionMapper<javax.ws.rs.NotFoundException> {\n-\t\n-\tprivate static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n \n-\t@Override\n-\tpublic Response toResponse(javax.ws.rs.NotFoundException exception) {\n-\t\tLOG.error(exception.getMessage());\n-\t\treturn Response.status(Status.NOT_FOUND).build();\n-\t}\n+    private static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n+\n+    @Override\n+    public Response toResponse(javax.ws.rs.NotFoundException exception) {\n+        LOG.error(exception.getMessage());\n+        return Response.status(Status.NOT_FOUND).build();\n+    }\n \n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/59/NotFoundExceptionMapper.java\nindex 2630c5ba9af..9b7dcc8e5c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/59/NotFoundExceptionMapper.java\n@@ -11,13 +11,11 @@ import org.springframework.stereotype.Component;\n @Component\n @Provider\n public class NotFoundExceptionMapper implements ExceptionMapper<javax.ws.rs.NotFoundException> {\n-\t\n-\tprivate static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n+    private static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n \n-\t@Override\n+@Override\n \tpublic Response toResponse(javax.ws.rs.NotFoundException exception) {\n-\t\tLOG.error(exception.getMessage());\n+    LOG.error(exception.getMessage());\n \t\treturn Response.status(Status.NOT_FOUND).build();\n-\t}\n-\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/59/NotFoundExceptionMapper.java\nindex 2630c5ba9af..e908cd70fc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/59/NotFoundExceptionMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/59/NotFoundExceptionMapper.java\n@@ -4,20 +4,19 @@ import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n import javax.ws.rs.ext.ExceptionMapper;\n import javax.ws.rs.ext.Provider;\n-\n import org.apache.log4j.Logger;\n import org.springframework.stereotype.Component;\n \n+\n @Component\n @Provider\n public class NotFoundExceptionMapper implements ExceptionMapper<javax.ws.rs.NotFoundException> {\n-\t\n-\tprivate static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n \n-\t@Override\n-\tpublic Response toResponse(javax.ws.rs.NotFoundException exception) {\n-\t\tLOG.error(exception.getMessage());\n-\t\treturn Response.status(Status.NOT_FOUND).build();\n-\t}\n+    private static final Logger LOG = Logger.getLogger(NotFoundExceptionMapper.class);\n \n-}\n+    @Override\n+    public Response toResponse(javax.ws.rs.NotFoundException exception) {\n+        LOG.error(exception.getMessage());\n+        return Response.status(Status.NOT_FOUND).build();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "14",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}