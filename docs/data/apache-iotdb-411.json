{
    "project_name": "apache-iotdb",
    "violation_id": "411",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.qp.physical.crud;\n\nimport org.apache.iotdb.db.exception.metadata.IllegalPathException;\nimport org.apache.iotdb.db.exception.query.QueryProcessException;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/411/AggregationPlan.java\nindex 8a26610f52e..db46a25e15e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/411/AggregationPlan.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.physical.crud;\n \n import org.apache.iotdb.db.exception.metadata.IllegalPathException;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/411/AggregationPlan.java\nindex 8a26610f52e..db46a25e15e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/411/AggregationPlan.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.physical.crud;\n \n import org.apache.iotdb.db.exception.metadata.IllegalPathException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 10, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'?' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "':' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/411/AggregationPlan.java\nindex 8a26610f52e..649a0102948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/411/AggregationPlan.java\n@@ -26,7 +26,6 @@ import org.apache.iotdb.db.query.aggregation.AggregateResult;\n import org.apache.iotdb.db.query.factory.AggregateResultFactory;\n import org.apache.iotdb.db.utils.FilePathUtils;\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n-\n import java.util.ArrayList;\n import java.util.LinkedHashMap;\n import java.util.List;\n@@ -40,7 +39,6 @@ public class AggregationPlan extends RawDataQueryPlan {\n \n   private List<String> aggregations = new ArrayList<>();\n   private List<String> deduplicatedAggregations = new ArrayList<>();\n-\n   private int level = -1;\n   // group by level aggregation result path\n   private final Map<String, AggregateResult> levelAggPaths = new LinkedHashMap<>();\n@@ -87,13 +85,12 @@ public class AggregationPlan extends RawDataQueryPlan {\n     List<TSDataType> dataTypes = getDataTypes();\n     try {\n       for (int i = 0; i < seriesPaths.size(); i++) {\n-        String transformedPath =\n-            FilePathUtils.generatePartialPathByLevel(seriesPaths.get(i).getFullPath(), getLevel());\n-        String key = getAggregations().get(i) + \"(\" + transformedPath + \")\";\n+        String transformedPath = FilePathUtils.generatePartialPathByLevel(seriesPaths.get(i).getFullPath(), getLevel());\n+        String key = getAggregations().get(i)\n+          + \"(\"\n+          + transformedPath + \")\";\n         if (!levelAggPaths.containsKey(key)) {\n-          AggregateResult aggRet =\n-              AggregateResultFactory.getAggrResultByName(\n-                  getAggregations().get(i), dataTypes.get(i));\n+          AggregateResult aggRet = AggregateResultFactory.getAggrResultByName(getAggregations().get(i), dataTypes.get(i));\n           levelAggPaths.put(key, aggRet);\n         }\n       }\n@@ -106,8 +103,7 @@ public class AggregationPlan extends RawDataQueryPlan {\n   @Override\n   public void setAlignByTime(boolean align) throws QueryProcessException {\n     if (!align) {\n-      throw new QueryProcessException(\n-          getOperatorType().name() + \" doesn't support disable align clause.\");\n+      throw new QueryProcessException(getOperatorType().name() + \" doesn't support disable align clause.\");\n     }\n   }\n \n@@ -115,22 +111,24 @@ public class AggregationPlan extends RawDataQueryPlan {\n   public String getColumnForReaderFromPath(PartialPath path, int pathIndex) {\n     String columnForReader = super.getColumnForReaderFromPath(path, pathIndex);\n     if (!path.isTsAliasExists()) {\n-      columnForReader = this.getAggregations().get(pathIndex) + \"(\" + columnForReader + \")\";\n+      columnForReader = this.getAggregations().get(pathIndex)\n+        + \"(\"\n+        + columnForReader + \")\";\n     }\n     return columnForReader;\n   }\n \n   @Override\n-  public String getColumnForDisplay(String columnForReader, int pathIndex)\n-      throws IllegalPathException {\n+  public String getColumnForDisplay(String columnForReader, int pathIndex) throws IllegalPathException {\n     String columnForDisplay = columnForReader;\n     if (level >= 0) {\n       PartialPath path = paths.get(pathIndex);\n-      String aggregatePath =\n-          path.isMeasurementAliasExists()\n-              ? FilePathUtils.generatePartialPathByLevel(path.getFullPathWithAlias(), level)\n-              : FilePathUtils.generatePartialPathByLevel(path.toString(), level);\n-      columnForDisplay = aggregations.get(pathIndex) + \"(\" + aggregatePath + \")\";\n+      String aggregatePath = path.isMeasurementAliasExists()\n+        ? FilePathUtils.generatePartialPathByLevel(path.getFullPathWithAlias(), level)\n+        : FilePathUtils.generatePartialPathByLevel(path.toString(), level);\n+      columnForDisplay = aggregations.get(pathIndex)\n+        + \"(\"\n+        + aggregatePath + \")\";\n     }\n     return columnForDisplay;\n   }\n@@ -139,4 +137,4 @@ public class AggregationPlan extends RawDataQueryPlan {\n   public boolean isRawQuery() {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "column": "69",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/411/AggregationPlan.java\nindex 8a26610f52e..cab8ab8577e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/411/AggregationPlan.java\n@@ -16,9 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.qp.physical.crud;\n+package org.apache.iotdb.db.qp.physical.crud\n \n-import org.apache.iotdb.db.exception.metadata.IllegalPathException;\n+; import org.apache.iotdb.db.exception.metadata.IllegalPathException;\n import org.apache.iotdb.db.exception.query.QueryProcessException;\n import org.apache.iotdb.db.metadata.PartialPath;\n import org.apache.iotdb.db.qp.logical.Operator;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/411/AggregationPlan.java\nindex 8a26610f52e..db46a25e15e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/411/AggregationPlan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/411/AggregationPlan.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.qp.physical.crud;\n \n import org.apache.iotdb.db.exception.metadata.IllegalPathException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}