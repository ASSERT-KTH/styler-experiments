{
    "project_name": "neuhalje-bouncy-gpg",
    "violation_id": "32",
    "information": {
        "violations": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms;\n\nimport java.util.HashMap;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/checkstyle_idea/32/Feature.java\nindex e61e5cb008d..0bdf4e5f057 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/checkstyle_idea/32/Feature.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package name.neuhalfen.projects.crypto.bouncycastle.openpgp.algorithms;\n \n import java.util.HashMap;\n@@ -30,7 +31,7 @@ public enum Feature {\n    * Add modification detection package.\n    *\n    * @see <a href=\"https://tools.ietf.org/html/rfc4880#section-5.14\">\n-   *     RFC-4880 \u00a75.14: Modification Detection Code Packet</a>\n+   * RFC-4880 \u00a75.14: Modification Detection Code Packet</a>\n    */\n   MODIFICATION_DETECTION(Features.FEATURE_MODIFICATION_DETECTION),\n   ;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/naturalize/32/Feature.java\nindex e61e5cb008d..6fcb3d7a44f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/naturalize/32/Feature.java\n@@ -50,11 +50,12 @@ public enum Feature {\n     this.featureId = featureId;\n   }\n \n-  public static Feature fromId(byte id) { // NOPMD: ShortVariable\n+  public static Feature fromId(byte id) {\n+  // NOPMD: ShortVariable\n     return MAP.get(id);\n   }\n \n   public byte getFeatureId() {\n     return featureId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/codebuff/32/Feature.java\nindex e61e5cb008d..5b1509925eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/violations/32/Feature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neuhalje-bouncy-gpg/codebuff/32/Feature.java\n@@ -24,6 +24,8 @@ import org.bouncycastle.bcpg.sig.Features;\n  *\n  * @see Features\n  */\n+\n+\n public enum Feature {\n \n   /**\n@@ -35,8 +37,10 @@ public enum Feature {\n   MODIFICATION_DETECTION(Features.FEATURE_MODIFICATION_DETECTION),\n   ;\n \n+\n   private static final Map<Byte, Feature> MAP = new HashMap<>();\n \n+\n   static {\n     for (final Feature f : Feature.values()) {\n       MAP.put(f.featureId, f);\n@@ -50,6 +54,7 @@ public enum Feature {\n     this.featureId = featureId;\n   }\n \n+\n   public static Feature fromId(byte id) { // NOPMD: ShortVariable\n     return MAP.get(id);\n   }\n@@ -57,4 +62,4 @@ public enum Feature {\n   public byte getFeatureId() {\n     return featureId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}