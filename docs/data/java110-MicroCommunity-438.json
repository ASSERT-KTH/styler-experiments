{
    "project_name": "java110-MicroCommunity",
    "violation_id": "438",
    "information": {
        "violations": [
            {
                "line": "48",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 160).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n\n        if (notices == null || notices.size() == 0) {\n            return notices;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..cfa82ed84b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/438/NoticeInnerServiceSMOImpl.java\n@@ -45,7 +45,7 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n             noticeDto.setRow(page * noticeDto.getRow());\n         }\n \n-        List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n+        List <NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n \n         if (notices == null || notices.size() == 0) {\n             return notices;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..03bcf1dab81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/438/NoticeInnerServiceSMOImpl.java\n@@ -34,7 +34,7 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<NoticeDto> queryNotices(@RequestBody  NoticeDto noticeDto) {\n+    public List<NoticeDto> queryNotices(@RequestBody NoticeDto noticeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n@@ -45,7 +45,8 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n             noticeDto.setRow(page * noticeDto.getRow());\n         }\n \n-        List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n+        List<NoticeDto> notices =\n+            BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n \n         if (notices == null || notices.size() == 0) {\n             return notices;\n@@ -65,7 +66,7 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n      * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n      *\n      * @param notice \u5c0f\u533a\u901a\u77e5\u4fe1\u606f\n-     * @param users \u7528\u6237\u5217\u8868\n+     * @param users  \u7528\u6237\u5217\u8868\n      */\n     private void refreshNotice(NoticeDto notice, List<UserDto> users) {\n         for (UserDto user : users) {\n@@ -92,7 +93,8 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n \n     @Override\n     public int queryNoticesCount(@RequestBody NoticeDto noticeDto) {\n-        return noticeServiceDaoImpl.queryNoticesCount(BeanConvertUtil.beanCovertMap(noticeDto));    }\n+        return noticeServiceDaoImpl.queryNoticesCount(BeanConvertUtil.beanCovertMap(noticeDto));\n+    }\n \n     public INoticeServiceDao getNoticeServiceDaoImpl() {\n         return noticeServiceDaoImpl;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..c208d552bab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/438/NoticeInnerServiceSMOImpl.java\n@@ -109,4 +109,4 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..7ecf443b06f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/438/NoticeInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.community.smo.impl;\n \n-\n import com.java110.common.util.BeanConvertUtil;\n import com.java110.community.dao.INoticeServiceDao;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -12,7 +11,6 @@ import com.java110.dto.notice.NoticeDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -24,6 +22,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INoticeInnerServiceSMO {\n \n@@ -34,19 +34,19 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n     private IUserInnerServiceSMO userInnerServiceSMOImpl;\n \n     @Override\n-    public List<NoticeDto> queryNotices(@RequestBody  NoticeDto noticeDto) {\n+    public List<NoticeDto> queryNotices(@RequestBody NoticeDto noticeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = noticeDto.getPage();\n \n+\n+        int page = noticeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             noticeDto.setPage((page - 1) * noticeDto.getRow());\n             noticeDto.setRow(page * noticeDto.getRow());\n         }\n \n         List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n-\n         if (notices == null || notices.size() == 0) {\n             return notices;\n         }\n@@ -54,7 +54,6 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n         String[] userIds = getUserIds(notices);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (NoticeDto notice : notices) {\n             refreshNotice(notice, users);\n         }\n@@ -67,6 +66,8 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n      * @param notice \u5c0f\u533a\u901a\u77e5\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshNotice(NoticeDto notice, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (notice.getUserId().equals(user.getUserId())) {\n@@ -81,18 +82,20 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n      * @param notices \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<NoticeDto> notices) {\n         List<String> userIds = new ArrayList<String>();\n         for (NoticeDto notice : notices) {\n             userIds.add(notice.getUserId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n     @Override\n     public int queryNoticesCount(@RequestBody NoticeDto noticeDto) {\n-        return noticeServiceDaoImpl.queryNoticesCount(BeanConvertUtil.beanCovertMap(noticeDto));    }\n+        return noticeServiceDaoImpl.queryNoticesCount(BeanConvertUtil.beanCovertMap(noticeDto));\n+    }\n \n     public INoticeServiceDao getNoticeServiceDaoImpl() {\n         return noticeServiceDaoImpl;\n@@ -109,4 +112,4 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..cfa82ed84b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/438/NoticeInnerServiceSMOImpl.java\n@@ -45,7 +45,7 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n             noticeDto.setRow(page * noticeDto.getRow());\n         }\n \n-        List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n+        List <NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n \n         if (notices == null || notices.size() == 0) {\n             return notices;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/438/NoticeInnerServiceSMOImpl.java\nindex 858c3aa0e31..d8b90a37a97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/438/NoticeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/438/NoticeInnerServiceSMOImpl.java\n@@ -44,7 +44,6 @@ public class NoticeInnerServiceSMOImpl extends BaseServiceSMO implements INotice\n             noticeDto.setPage((page - 1) * noticeDto.getRow());\n             noticeDto.setRow(page * noticeDto.getRow());\n         }\n-\n         List<NoticeDto> notices = BeanConvertUtil.covertBeanList(noticeServiceDaoImpl.getNoticeInfo(BeanConvertUtil.beanCovertMap(noticeDto)), NoticeDto.class);\n \n         if (notices == null || notices.size() == 0) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}