{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3409",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3409/MonitoredTermStateStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3409/MonitoredTermStateStorage.java\nindex ccd538b06b1..bdd724768a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3409/MonitoredTermStateStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3409/MonitoredTermStateStorage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.term;\n \n import java.io.IOException;\n@@ -27,27 +28,27 @@ import org.neo4j.kernel.monitoring.Monitors;\n \n public class MonitoredTermStateStorage implements StateStorage<TermState>\n {\n-    private String TERM_TAG = \"term\";\n-\n-    private final StateStorage<TermState> delegate;\n-    private final RaftTermMonitor termMonitor;\n-\n-    public MonitoredTermStateStorage( StateStorage<TermState> delegate, Monitors monitors )\n-    {\n-        this.delegate = delegate;\n-        this.termMonitor = monitors.newMonitor( RaftTermMonitor.class, getClass(), TERM_TAG );\n-    }\n-\n-    @Override\n-    public TermState getInitialState()\n-    {\n-        return delegate.getInitialState();\n-    }\n-\n-    @Override\n-    public void persistStoreData( TermState state ) throws IOException\n-    {\n-        delegate.persistStoreData( state );\n-        termMonitor.term( state.currentTerm() );\n-    }\n+  private String TERM_TAG = \"term\";\n+\n+  private final StateStorage<TermState> delegate;\n+  private final RaftTermMonitor termMonitor;\n+\n+  public MonitoredTermStateStorage(StateStorage<TermState> delegate, Monitors monitors)\n+  {\n+    this.delegate = delegate;\n+    this.termMonitor = monitors.newMonitor(RaftTermMonitor.class, getClass(), TERM_TAG);\n+  }\n+\n+  @Override\n+  public TermState getInitialState()\n+  {\n+    return delegate.getInitialState();\n+  }\n+\n+  @Override\n+  public void persistStoreData(TermState state) throws IOException\n+  {\n+    delegate.persistStoreData(state);\n+    termMonitor.term(state.currentTerm());\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3409/MonitoredTermStateStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3409/MonitoredTermStateStorage.java\nindex ccd538b06b1..5c6d958e534 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3409/MonitoredTermStateStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3409/MonitoredTermStateStorage.java\n@@ -28,8 +28,7 @@ import org.neo4j.kernel.monitoring.Monitors;\n public class MonitoredTermStateStorage implements StateStorage<TermState>\n {\n     private String TERM_TAG = \"term\";\n-\n-    private final StateStorage<TermState> delegate;\n+private final StateStorage<TermState> delegate;\n     private final RaftTermMonitor termMonitor;\n \n     public MonitoredTermStateStorage( StateStorage<TermState> delegate, Monitors monitors )\n@@ -50,4 +49,4 @@ public class MonitoredTermStateStorage implements StateStorage<TermState>\n         delegate.persistStoreData( state );\n         termMonitor.term( state.currentTerm() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}