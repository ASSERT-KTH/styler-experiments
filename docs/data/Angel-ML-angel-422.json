{
    "project_name": "Angel-ML-angel",
    "violation_id": "422",
    "information": {
        "violations": [
            {
                "line": "12",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private int checkPointId;\n\n  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n    super(userRequestId, psId);\n    this.matrixId = matrixId;\n    this.checkPointId = checkPointId;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/422/CheckpointPSRequest.java\nindex 98eb0a374a4..a31139e5f24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/422/CheckpointPSRequest.java\n@@ -9,8 +9,9 @@ public class CheckpointPSRequest extends PSRequest {\n   private int matrixId;\n   private int checkPointId;\n \n-  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n-    super(userRequestId, psId);\n+  public CheckpointPSRequest(\n+      int userRequestId, int matrixId, int checkPointId, ParameterServerId psId)\n+  { super(userRequestId, psId);\n     this.matrixId = matrixId;\n     this.checkPointId = checkPointId;\n   }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/422/CheckpointPSRequest.java\nindex 98eb0a374a4..715f130e338 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/422/CheckpointPSRequest.java\n@@ -6,63 +6,67 @@ import io.netty.buffer.ByteBuf;\n \n public class CheckpointPSRequest extends PSRequest {\n \n-  private int matrixId;\n-  private int checkPointId;\n+    private int matrixId;\n+    private int checkPointId;\n \n-  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n-    super(userRequestId, psId);\n-    this.matrixId = matrixId;\n-    this.checkPointId = checkPointId;\n-  }\n+    public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId,\n+                               ParameterServerId psId) {\n+        super(userRequestId, psId);\n+        this.matrixId = matrixId;\n+        this.checkPointId = checkPointId;\n+    }\n \n-  public CheckpointPSRequest() {\n-    this(-1, -1, -1, null);\n-  }\n+    public CheckpointPSRequest() {\n+        this(-1, -1, -1, null);\n+    }\n \n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n+    public int getMatrixId() {\n+        return matrixId;\n+    }\n \n-  public void setMatrixId(int matrixId) {\n-    this.matrixId = matrixId;\n-  }\n+    public void setMatrixId(int matrixId) {\n+        this.matrixId = matrixId;\n+    }\n \n-  public int getCheckPointId() {\n-    return checkPointId;\n-  }\n+    public int getCheckPointId() {\n+        return checkPointId;\n+    }\n \n-  public void setCheckPointId(int checkPointId) {\n-    this.checkPointId = checkPointId;\n-  }\n+    public void setCheckPointId(int checkPointId) {\n+        this.checkPointId = checkPointId;\n+    }\n \n-  @Override\n-  public int getEstimizeDataSize() {\n-    return 0;\n-  }\n+    @Override\n+    public int getEstimizeDataSize() {\n+        return 0;\n+    }\n \n-  @Override public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(matrixId);\n-    buf.writeInt(checkPointId);\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(matrixId);\n+        buf.writeInt(checkPointId);\n+    }\n \n-  @Override public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    matrixId = buf.readInt();\n-    checkPointId = buf.readInt();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        matrixId = buf.readInt();\n+        checkPointId = buf.readInt();\n+    }\n \n-  @Override public int bufferLen() {\n-    return 4 + 4 + super.bufferLen();\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return 4 + 4 + super.bufferLen();\n+    }\n \n-  @Override\n-  public TransportMethod getType() {\n-    return TransportMethod.CHECKPOINT;\n-  }\n+    @Override\n+    public TransportMethod getType() {\n+        return TransportMethod.CHECKPOINT;\n+    }\n \n-  @Override\n-  public boolean timeoutEnable() {\n-    return false;\n-  }\n+    @Override\n+    public boolean timeoutEnable() {\n+        return false;\n+    }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/422/CheckpointPSRequest.java\nindex 98eb0a374a4..5531520ab47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/422/CheckpointPSRequest.java\n@@ -40,19 +40,22 @@ public class CheckpointPSRequest extends PSRequest {\n     return 0;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(matrixId);\n     buf.writeInt(checkPointId);\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     matrixId = buf.readInt();\n     checkPointId = buf.readInt();\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+public int bufferLen() {\n     return 4 + 4 + super.bufferLen();\n   }\n \n@@ -65,4 +68,4 @@ public class CheckpointPSRequest extends PSRequest {\n   public boolean timeoutEnable() {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/422/CheckpointPSRequest.java\nindex 98eb0a374a4..8e3906e1182 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/422/CheckpointPSRequest.java\n@@ -40,19 +40,22 @@ public class CheckpointPSRequest extends PSRequest {\n     return 0;\n   }\n \n-  @Override public void serialize(ByteBuf buf) {\n+  @Override\n+  public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     buf.writeInt(matrixId);\n     buf.writeInt(checkPointId);\n   }\n \n-  @Override public void deserialize(ByteBuf buf) {\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n     matrixId = buf.readInt();\n     checkPointId = buf.readInt();\n   }\n \n-  @Override public int bufferLen() {\n+  @Override\n+  public int bufferLen() {\n     return 4 + 4 + super.bufferLen();\n   }\n \n@@ -65,4 +68,5 @@ public class CheckpointPSRequest extends PSRequest {\n   public boolean timeoutEnable() {\n     return false;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/422/CheckpointPSRequest.java\nindex 98eb0a374a4..a31139e5f24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/422/CheckpointPSRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/422/CheckpointPSRequest.java\n@@ -9,8 +9,9 @@ public class CheckpointPSRequest extends PSRequest {\n   private int matrixId;\n   private int checkPointId;\n \n-  public CheckpointPSRequest(int userRequestId, int matrixId, int checkPointId, ParameterServerId psId) {\n-    super(userRequestId, psId);\n+  public CheckpointPSRequest(\n+      int userRequestId, int matrixId, int checkPointId, ParameterServerId psId)\n+  { super(userRequestId, psId);\n     this.matrixId = matrixId;\n     this.checkPointId = checkPointId;\n   }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}