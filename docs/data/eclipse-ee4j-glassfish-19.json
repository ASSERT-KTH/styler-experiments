{
    "project_name": "eclipse-ee4j-glassfish",
    "violation_id": "19",
    "information": {
        "violations": [
            {
                "line": "67",
                "column": "21",
                "severity": "warning",
                "message": "'new lparen' has incorrect indentation level 20, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                   ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n            throw new IllegalStateException\n                    (\"Illegal invocation type for EJB Context : \"\n                     + currentInv.getInvocationType());\n        }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/19/EJBContextNamingProxy.java\nindex d7a3ac7ed3e..a18e8d827f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/19/EJBContextNamingProxy.java\n@@ -63,8 +63,7 @@ public class EJBContextNamingProxy\n             throw new IllegalStateException(\"no current invocation\");\n         } else if (currentInv.getInvocationType() !=\n                    ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n-            throw new IllegalStateException\n-                    (\"Illegal invocation type for EJB Context : \"\n+            throw new IllegalStateException(\"Illegal invocation type for EJB Context : \"\n                      + currentInv.getInvocationType());\n         }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "66",
                    "column": "17",
                    "severity": "warning",
                    "message": "'new lparen' has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/19/EJBContextNamingProxy.java\nindex d7a3ac7ed3e..916a33b6e8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/19/EJBContextNamingProxy.java\n@@ -30,16 +30,15 @@ import javax.naming.NamingException;\n  * Proxy for accessing EJBContext objects when requested by lookup or injection.\n  * NamingManager will call the handle() method when the JNDI name is looked up.\n  *\n- *\n  * @author Ken Saks\n  */\n @Service\n @NamespacePrefixes(EJBContextNamingProxy.EJB_CONTEXT)\n public class EJBContextNamingProxy\n-        implements NamedNamingObjectProxy {\n+    implements NamedNamingObjectProxy {\n \n     static final String EJB_CONTEXT\n-            = \"java:comp/EJBContext\";\n+        = \"java:comp/EJBContext\";\n \n     public Object handle(String name) throws NamingException {\n \n@@ -57,15 +56,15 @@ public class EJBContextNamingProxy\n         // NamedNamingObjectProxy is initialized on the first lookup.\n \n         ComponentInvocation currentInv =\n-                EjbContainerUtilImpl.getInstance().getCurrentInvocation();\n+            EjbContainerUtilImpl.getInstance().getCurrentInvocation();\n \n-        if(currentInv == null) {\n+        if (currentInv == null) {\n             throw new IllegalStateException(\"no current invocation\");\n         } else if (currentInv.getInvocationType() !=\n-                   ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n+            ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n             throw new IllegalStateException\n-                    (\"Illegal invocation type for EJB Context : \"\n-                     + currentInv.getInvocationType());\n+                (\"Illegal invocation type for EJB Context : \"\n+                    + currentInv.getInvocationType());\n         }\n \n         return ((EjbInvocation) currentInv).context;\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "65",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/19/EJBContextNamingProxy.java\nindex d7a3ac7ed3e..b959708a043 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/19/EJBContextNamingProxy.java\n@@ -61,13 +61,10 @@ public class EJBContextNamingProxy\n \n         if(currentInv == null) {\n             throw new IllegalStateException(\"no current invocation\");\n-        } else if (currentInv.getInvocationType() !=\n-                   ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n-            throw new IllegalStateException\n-                    (\"Illegal invocation type for EJB Context : \"\n-                     + currentInv.getInvocationType());\n-        }\n+        } else if (currentInv.getInvocationType() != ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n+    throw new IllegalStateException(\"Illegal invocation type for EJB Context : \" + currentInv.getInvocationType());\n+    }\n \n         return ((EjbInvocation) currentInv).context;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/19/EJBContextNamingProxy.java\nindex d7a3ac7ed3e..a18e8d827f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/19/EJBContextNamingProxy.java\n@@ -63,8 +63,7 @@ public class EJBContextNamingProxy\n             throw new IllegalStateException(\"no current invocation\");\n         } else if (currentInv.getInvocationType() !=\n                    ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n-            throw new IllegalStateException\n-                    (\"Illegal invocation type for EJB Context : \"\n+            throw new IllegalStateException(\"Illegal invocation type for EJB Context : \"\n                      + currentInv.getInvocationType());\n         }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/19/EJBContextNamingProxy.java\nindex d7a3ac7ed3e..a18e8d827f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/19/EJBContextNamingProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/19/EJBContextNamingProxy.java\n@@ -63,8 +63,7 @@ public class EJBContextNamingProxy\n             throw new IllegalStateException(\"no current invocation\");\n         } else if (currentInv.getInvocationType() !=\n                    ComponentInvocation.ComponentInvocationType.EJB_INVOCATION) {\n-            throw new IllegalStateException\n-                    (\"Illegal invocation type for EJB Context : \"\n+            throw new IllegalStateException(\"Illegal invocation type for EJB Context : \"\n                      + currentInv.getInvocationType());\n         }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ]
}