{
    "project_name": "eclipse-milo",
    "violation_id": "79",
    "information": {
        "violations": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 171).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public UaMethodNode getExportNamespaceMethodNode() {\n        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"ExportNamespace\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n        return (UaMethodNode) methodNode.orElse(null);\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/79/AddressSpaceFileTypeNode.java\nindex 0e1f030869d..c82ab8b8dca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/79/AddressSpaceFileTypeNode.java\n@@ -38,7 +38,9 @@ public class AddressSpaceFileTypeNode extends FileTypeNode implements AddressSpa\n \n     @Override\n     public UaMethodNode getExportNamespaceMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"ExportNamespace\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+        Optional<UaNode> methodNode =\n+            findNode(\"http://opcfoundation.org/UA/\", \"ExportNamespace\", node -> node instanceof UaMethodNode,\n+                Reference.HAS_COMPONENT_PREDICATE);\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/79/AddressSpaceFileTypeNode.java\nindex 0e1f030869d..d44a2ae12e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/79/AddressSpaceFileTypeNode.java\n@@ -41,4 +41,4 @@ public class AddressSpaceFileTypeNode extends FileTypeNode implements AddressSpa\n         Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"ExportNamespace\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/79/AddressSpaceFileTypeNode.java\nindex 0e1f030869d..f6aca7a78ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/79/AddressSpaceFileTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/79/AddressSpaceFileTypeNode.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.model.nodes.objects;\n \n import java.util.Optional;\n-\n import org.eclipse.milo.opcua.sdk.core.Reference;\n import org.eclipse.milo.opcua.sdk.server.model.types.objects.AddressSpaceFileType;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaMethodNode;\n@@ -24,21 +23,35 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n \n public class AddressSpaceFileTypeNode extends FileTypeNode implements AddressSpaceFileType {\n-    public AddressSpaceFileTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask) {\n+    public AddressSpaceFileTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public AddressSpaceFileTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask, UByte eventNotifier) {\n+    public AddressSpaceFileTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask, UByte eventNotifier) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n     }\n \n     @Override\n     public UaMethodNode getExportNamespaceMethodNode() {\n-        Optional<UaNode> methodNode = findNode(\"http://opcfoundation.org/UA/\", \"ExportNamespace\", node -> node instanceof UaMethodNode, Reference.HAS_COMPONENT_PREDICATE);\n+        Optional<UaNode> methodNode = findNode(\n+            \"http://opcfoundation.org/UA/\",\n+            \"ExportNamespace\",\n+            node -> node instanceof UaMethodNode,\n+            Reference.HAS_COMPONENT_PREDICATE\n+        );\n         return (UaMethodNode) methodNode.orElse(null);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}