{
    "project_name": "griddynamics-jagger",
    "violation_id": "85",
    "information": {
        "violations": [
            {
                "line": "75",
                "column": "23",
                "severity": "warning",
                "message": "'(' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
            }
        ]
    },
    "source_code": "    }\n\n    private void init () {\n        if (jmxMetricGroups != null) {\n            Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n            Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/85/DynamicPlotGroups.java\nindex 5e53a859163..77cdb7d757d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/griddynamics-jagger/styler/05_predictions/final/files-repaired/85/DynamicPlotGroups.java\n@@ -72,7 +72,7 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n             Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/85/DynamicPlotGroups.java\nindex 5e53a859163..3264e46c4db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/85/DynamicPlotGroups.java\n@@ -33,7 +33,7 @@ import java.util.Map;\n \n /**\n  * @author Nikolay Musienko\n- *         Date: 11.07.13\n+ * Date: 11.07.13\n  */\n public class DynamicPlotGroups {\n     private Map<GroupKey, MonitoringParameter[]> plotGroups;\n@@ -63,8 +63,8 @@ public class DynamicPlotGroups {\n         }\n         jmxMetrics = Lists.newArrayList();\n         if (jmxMetricGroups != null) {\n-            for (JmxMetricGroup metricGroup: jmxMetricGroups) {\n-                for (JmxMetric metric: metricGroup.getJmxMetrics()) {\n+            for (JmxMetricGroup metricGroup : jmxMetricGroups) {\n+                for (JmxMetric metric : metricGroup.getJmxMetrics()) {\n                     jmxMetrics.add(metric);\n                 }\n             }\n@@ -72,11 +72,11 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n             Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n-            for (JmxMetricGroup metricGroup: jmxMetricGroups) {\n+            for (JmxMetricGroup metricGroup : jmxMetricGroups) {\n \n                 GroupKey key = additionalGroups.get(metricGroup.getGroupName());\n \n@@ -91,16 +91,16 @@ public class DynamicPlotGroups {\n                     additionalParameters.put(key, params);\n                 }\n \n-                for (JmxMetric metric: metricGroup.getJmxMetrics()) {\n+                for (JmxMetric metric : metricGroup.getJmxMetrics()) {\n                     params.add(metric.getParameter());\n                 }\n             }\n \n             //adding to default monitoring parameters\n-            for (Map.Entry<GroupKey,List<MonitoringParameter>> paramsEntry: additionalParameters.entrySet()) {\n+            for (Map.Entry<GroupKey, List<MonitoringParameter>> paramsEntry : additionalParameters.entrySet()) {\n                 MonitoringParameter[] parameters = plotGroups.get(paramsEntry.getKey());\n                 if (parameters != null) {\n-                    for (MonitoringParameter parameter: parameters) {\n+                    for (MonitoringParameter parameter : parameters) {\n                         paramsEntry.getValue().add(parameter);\n                     }\n                 }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/85/DynamicPlotGroups.java\nindex 5e53a859163..a27c366ebd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/85/DynamicPlotGroups.java\n@@ -72,7 +72,7 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n             Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n@@ -97,7 +97,7 @@ public class DynamicPlotGroups {\n             }\n \n             //adding to default monitoring parameters\n-            for (Map.Entry<GroupKey,List<MonitoringParameter>> paramsEntry: additionalParameters.entrySet()) {\n+            for (Map.Entry<GroupKey, List<MonitoringParameter>> paramsEntry: additionalParameters.entrySet()) {\n                 MonitoringParameter[] parameters = plotGroups.get(paramsEntry.getKey());\n                 if (parameters != null) {\n                     for (MonitoringParameter parameter: parameters) {\n@@ -110,4 +110,4 @@ public class DynamicPlotGroups {\n         }\n         inited = true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/85/DynamicPlotGroups.java\nindex 5e53a859163..b1d2bb32714 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/85/DynamicPlotGroups.java\n@@ -26,7 +26,6 @@ import com.griddynamics.jagger.agent.model.JmxMetric;\n import com.griddynamics.jagger.agent.model.JmxMetricGroup;\n import com.griddynamics.jagger.dbapi.parameter.MonitoringParameter;\n import com.griddynamics.jagger.dbapi.parameter.GroupKey;\n-\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n@@ -35,10 +34,12 @@ import java.util.Map;\n  * @author Nikolay Musienko\n  *         Date: 11.07.13\n  */\n+\n+\n public class DynamicPlotGroups {\n+\n     private Map<GroupKey, MonitoringParameter[]> plotGroups;\n     private boolean inited = false;\n-\n     private ArrayList<JmxMetricGroup> jmxMetricGroups;\n     private ArrayList<JmxMetric> jmxMetrics;\n \n@@ -63,8 +64,8 @@ public class DynamicPlotGroups {\n         }\n         jmxMetrics = Lists.newArrayList();\n         if (jmxMetricGroups != null) {\n-            for (JmxMetricGroup metricGroup: jmxMetricGroups) {\n-                for (JmxMetric metric: metricGroup.getJmxMetrics()) {\n+            for (JmxMetricGroup metricGroup : jmxMetricGroups) {\n+                for (JmxMetric metric : metricGroup.getJmxMetrics()) {\n                     jmxMetrics.add(metric);\n                 }\n             }\n@@ -72,14 +73,13 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n-            Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n-            for (JmxMetricGroup metricGroup: jmxMetricGroups) {\n \n+            Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n+            for (JmxMetricGroup metricGroup : jmxMetricGroups) {\n                 GroupKey key = additionalGroups.get(metricGroup.getGroupName());\n-\n                 if (key == null) {\n                     key = new GroupKey(metricGroup.getGroupName(), \"\");\n                     additionalGroups.put(metricGroup.getGroupName(), key);\n@@ -91,16 +91,17 @@ public class DynamicPlotGroups {\n                     additionalParameters.put(key, params);\n                 }\n \n-                for (JmxMetric metric: metricGroup.getJmxMetrics()) {\n+                for (JmxMetric metric : metricGroup.getJmxMetrics()) {\n                     params.add(metric.getParameter());\n                 }\n             }\n \n             //adding to default monitoring parameters\n-            for (Map.Entry<GroupKey,List<MonitoringParameter>> paramsEntry: additionalParameters.entrySet()) {\n+\n+            for (Map.Entry<GroupKey, List<MonitoringParameter>> paramsEntry : additionalParameters.entrySet()) {\n                 MonitoringParameter[] parameters = plotGroups.get(paramsEntry.getKey());\n                 if (parameters != null) {\n-                    for (MonitoringParameter parameter: parameters) {\n+                    for (MonitoringParameter parameter : parameters) {\n                         paramsEntry.getValue().add(parameter);\n                     }\n                 }\n@@ -110,4 +111,4 @@ public class DynamicPlotGroups {\n         }\n         inited = true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/85/DynamicPlotGroups.java\nindex 5e53a859163..77cdb7d757d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/random/files-repaired/85/DynamicPlotGroups.java\n@@ -72,7 +72,7 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n             Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/85/DynamicPlotGroups.java\nindex 5e53a859163..77cdb7d757d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/85/DynamicPlotGroups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/85/DynamicPlotGroups.java\n@@ -72,7 +72,7 @@ public class DynamicPlotGroups {\n         return jmxMetrics;\n     }\n \n-    private void init () {\n+    private void init() {\n         if (jmxMetricGroups != null) {\n             Map<String, GroupKey> additionalGroups = Maps.newHashMap();\n             Map<GroupKey, List<MonitoringParameter>> additionalParameters = Maps.newHashMap();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}