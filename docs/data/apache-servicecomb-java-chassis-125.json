{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "125",
    "information": {
        "violations": [
            {
                "line": "103",
                "column": "44",
                "severity": "warning",
                "message": "';' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
            }
        ]
    },
    "source_code": "\n  protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n    for (int idx = 0; idx < filters.size(); ) {\n      DiscoveryFilter filter = filters.get(idx);\n      context.setCurrentNode(parent);\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/125/DiscoveryTree.java\nindex ee4e2736f84..2b0dc67a2eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/final/files-repaired/125/DiscoveryTree.java\n@@ -100,7 +100,7 @@ public class DiscoveryTree {\n   }\n \n   protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n-    for (int idx = 0; idx < filters.size(); ) {\n+    for (int idx = 0; idx < filters.size();) {\n       DiscoveryFilter filter = filters.get(idx);\n       context.setCurrentNode(parent);\n \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "103",
                    "column": "44",
                    "severity": "warning",
                    "message": "';' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/125/DiscoveryTree.java\nindex ee4e2736f84..1f2c245cd83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/125/DiscoveryTree.java\n@@ -61,7 +61,7 @@ public class DiscoveryTree {\n   }\n \n   public DiscoveryTreeNode discovery(DiscoveryContext context, String appId, String microserviceName,\n-      String versionRule) {\n+                                     String versionRule) {\n     VersionedCache instanceVersionedCache = RegistryUtils\n         .getServiceRegistry()\n         .getInstanceCacheManager()\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/125/DiscoveryTree.java\nindex ee4e2736f84..339e2aadea7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/125/DiscoveryTree.java\n@@ -100,7 +100,7 @@ public class DiscoveryTree {\n   }\n \n   protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n-    for (int idx = 0; idx < filters.size(); ) {\n+    for (int idx = 0; idx < filters.size();) {\n       DiscoveryFilter filter = filters.get(idx);\n       context.setCurrentNode(parent);\n \n@@ -134,4 +134,4 @@ public class DiscoveryTree {\n \n     return parent;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/125/DiscoveryTree.java\nindex ee4e2736f84..987bf47defc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/125/DiscoveryTree.java\n@@ -20,7 +20,6 @@ package org.apache.servicecomb.serviceregistry.discovery;\n import java.util.ArrayList;\n import java.util.Comparator;\n import java.util.List;\n-\n import org.apache.servicecomb.foundation.common.cache.VersionedCache;\n import org.apache.servicecomb.foundation.common.exceptions.ServiceCombException;\n import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n@@ -47,9 +46,9 @@ public class DiscoveryTree {\n \n   // group name are qualifiedName\n   // all leaf group will create a loadbalancer instance, groupName is loadBalancer key\n+\n   public void sort() {\n     filters.sort(Comparator.comparingInt(DiscoveryFilter::getOrder));\n-\n     LOGGER.info(\"sort DiscoveryFilter:\");\n     for (DiscoveryFilter filter : filters) {\n       LOGGER.info(\"DiscoveryFilter {}.\", filter.getClass().getName());\n@@ -60,13 +59,9 @@ public class DiscoveryTree {\n     return existing == null || existing.isExpired(inputCache);\n   }\n \n-  public DiscoveryTreeNode discovery(DiscoveryContext context, String appId, String microserviceName,\n-      String versionRule) {\n-    VersionedCache instanceVersionedCache = RegistryUtils\n-        .getServiceRegistry()\n-        .getInstanceCacheManager()\n-        .getOrCreateVersionedCache(appId, microserviceName, versionRule);\n-\n+  public DiscoveryTreeNode discovery(DiscoveryContext context, String appId, String microserviceName, String versionRule) {\n+    VersionedCache instanceVersionedCache = RegistryUtils.getServiceRegistry().getInstanceCacheManager()\n+                                                                              .getOrCreateVersionedCache(appId, microserviceName, versionRule);\n     return discovery(context, instanceVersionedCache);\n   }\n \n@@ -89,18 +84,20 @@ public class DiscoveryTree {\n     //    is not expired\n     //    but if create old children in new version root, it's a wrong logic\n     //    and this is rarely to happen, so we only let it go with a real temporary root.\n+\n     if (tmpRoot.cacheVersion() > inputCache.cacheVersion()) {\n       tmpRoot = new DiscoveryTreeNode().cacheVersion(inputCache.cacheVersion());\n     }\n \n-    DiscoveryTreeNode parent = tmpRoot.children().computeIfAbsent(inputCache.name(), name -> {\n+    DiscoveryTreeNode parent = tmpRoot.children().computeIfAbsent(inputCache.name(),\n+      name -> {\n       return new DiscoveryTreeNode().fromCache(inputCache);\n-    });\n+                               });\n     return doDiscovery(context, parent);\n   }\n \n   protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n-    for (int idx = 0; idx < filters.size(); ) {\n+    for (int idx = 0; idx < filters.size();) {\n       DiscoveryFilter filter = filters.get(idx);\n       context.setCurrentNode(parent);\n \n@@ -131,7 +128,6 @@ public class DiscoveryTree {\n       parent = child;\n       idx++;\n     }\n-\n     return parent;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/125/DiscoveryTree.java\nindex ee4e2736f84..2b0dc67a2eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/random/files-repaired/125/DiscoveryTree.java\n@@ -100,7 +100,7 @@ public class DiscoveryTree {\n   }\n \n   protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n-    for (int idx = 0; idx < filters.size(); ) {\n+    for (int idx = 0; idx < filters.size();) {\n       DiscoveryFilter filter = filters.get(idx);\n       context.setCurrentNode(parent);\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/125/DiscoveryTree.java\nindex ee4e2736f84..2b0dc67a2eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/125/DiscoveryTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/125/DiscoveryTree.java\n@@ -100,7 +100,7 @@ public class DiscoveryTree {\n   }\n \n   protected DiscoveryTreeNode doDiscovery(DiscoveryContext context, DiscoveryTreeNode parent) {\n-    for (int idx = 0; idx < filters.size(); ) {\n+    for (int idx = 0; idx < filters.size();) {\n       DiscoveryFilter filter = filters.get(idx);\n       context.setCurrentNode(parent);\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ]
}