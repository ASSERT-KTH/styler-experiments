{
    "project_name": "Angel-ML-angel",
    "violation_id": "114",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/114/RMSELoss.java\nindex 5bd4440edf5..8a0edefeb12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/114/RMSELoss.java\n@@ -25,81 +25,81 @@ import com.tencent.angel.spark.ml.tree.util.Maths;\n @Singleton\n public class RMSELoss implements BinaryLoss, MultiLoss {\n \n-  private static RMSELoss instance;\n-\n-  private RMSELoss() {\n-  }\n-\n-  @Override\n-  public Kind getKind() {\n-    return Kind.RMSE;\n-  }\n-\n-  @Override\n-  public EvalMetric.Kind defaultEvalMetric() {\n-    return EvalMetric.Kind.RMSE;\n-  }\n-\n-  @Override\n-  public double firOrderGrad(float pred, float label) {\n-    return pred - label;\n-  }\n-\n-  @Override\n-  public double secOrderGrad(float pred, float label) {\n-    return 1.0;\n-  }\n-\n-  @Override\n-  public double secOrderGrad(float pred, float label, double firGrad) {\n-    return 1.0;\n-  }\n-\n-  @Override\n-  public double[] firOrderGrad(float[] pred, float label) {\n-    int numLabel = pred.length;\n-    int trueLabel = (int) label;\n-    double[] grad = new double[numLabel];\n-    for (int i = 0; i < numLabel; i++) {\n-      grad[i] = pred[i] - (trueLabel == i ? 1 : 0);\n+    private static RMSELoss instance;\n+\n+    private RMSELoss() {\n+    }\n+\n+    @Override\n+    public Kind getKind() {\n+        return Kind.RMSE;\n+    }\n+\n+    @Override\n+    public EvalMetric.Kind defaultEvalMetric() {\n+        return EvalMetric.Kind.RMSE;\n     }\n-    return grad;\n-  }\n-\n-  @Override\n-  public double[] secOrderGradDiag(float[] pred, float label) {\n-    int numLabel = pred.length;\n-    double[] hess = new double[numLabel];\n-    Arrays.fill(hess, 1.0);\n-    return hess;\n-  }\n-\n-  @Override\n-  public double[] secOrderGradDiag(float[] pred, float label, double[] firGrad) {\n-    return secOrderGradDiag(pred, label);\n-  }\n-\n-  @Override\n-  public double[] secOrderGradFull(float[] pred, float label) {\n-    int numLabel = pred.length;\n-    int size = (numLabel + 1) * numLabel / 2;\n-    double[] hess = new double[size];\n-    for (int i = 0; i < numLabel; i++) {\n-      int t = Maths.indexOfLowerTriangularMatrix(i, i);\n-      hess[t] = 1.0;\n+\n+    @Override\n+    public double firOrderGrad(float pred, float label) {\n+        return pred - label;\n+    }\n+\n+    @Override\n+    public double secOrderGrad(float pred, float label) {\n+        return 1.0;\n+    }\n+\n+    @Override\n+    public double secOrderGrad(float pred, float label, double firGrad) {\n+        return 1.0;\n     }\n-    return hess;\n-  }\n \n-  @Override\n-  public double[] secOrderGradFull(float[] pred, float label, double[] firGrad) {\n-    return secOrderGradFull(pred, label);\n-  }\n+    @Override\n+    public double[] firOrderGrad(float[] pred, float label) {\n+        int numLabel = pred.length;\n+        int trueLabel = (int) label;\n+        double[] grad = new double[numLabel];\n+        for (int i = 0; i < numLabel; i++) {\n+            grad[i] = pred[i] - (trueLabel == i ? 1 : 0);\n+        }\n+        return grad;\n+    }\n+\n+    @Override\n+    public double[] secOrderGradDiag(float[] pred, float label) {\n+        int numLabel = pred.length;\n+        double[] hess = new double[numLabel];\n+        Arrays.fill(hess, 1.0);\n+        return hess;\n+    }\n+\n+    @Override\n+    public double[] secOrderGradDiag(float[] pred, float label, double[] firGrad) {\n+        return secOrderGradDiag(pred, label);\n+    }\n+\n+    @Override\n+    public double[] secOrderGradFull(float[] pred, float label) {\n+        int numLabel = pred.length;\n+        int size = (numLabel + 1) * numLabel / 2;\n+        double[] hess = new double[size];\n+        for (int i = 0; i < numLabel; i++) {\n+            int t = Maths.indexOfLowerTriangularMatrix(i, i);\n+            hess[t] = 1.0;\n+        }\n+        return hess;\n+    }\n+\n+    @Override\n+    public double[] secOrderGradFull(float[] pred, float label, double[] firGrad) {\n+        return secOrderGradFull(pred, label);\n+    }\n \n-  public static RMSELoss getInstance() {\n-    if (instance == null) {\n-      instance = new RMSELoss();\n+    public static RMSELoss getInstance() {\n+        if (instance == null) {\n+            instance = new RMSELoss();\n+        }\n+        return instance;\n     }\n-    return instance;\n-  }\n }\n",
            "diff_size": 110
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/114/RMSELoss.java\nindex 5bd4440edf5..0e5825b09d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/114/RMSELoss.java\n@@ -102,4 +102,4 @@ public class RMSELoss implements BinaryLoss, MultiLoss {\n     }\n     return instance;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/114/RMSELoss.java\nindex 5bd4440edf5..aa73f199273 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/114/RMSELoss.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/114/RMSELoss.java\n@@ -27,8 +27,7 @@ public class RMSELoss implements BinaryLoss, MultiLoss {\n \n   private static RMSELoss instance;\n \n-  private RMSELoss() {\n-  }\n+  private RMSELoss() {}\n \n   @Override\n   public Kind getKind() {\n@@ -102,4 +101,4 @@ public class RMSELoss implements BinaryLoss, MultiLoss {\n     }\n     return instance;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}