{
    "project_name": "Chaklader-Multi-threading",
    "violation_id": "3",
    "information": {
        "violations": [
            {
                "line": "10",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class ParallelScrapper extends CommonScrapper {\n\n\tprivate final List<String> urlList;\n\n\tpublic ParallelScrapper(final String urlFile) throws IOException {\n\t\tthis.urlList = CommonUtils.getLinks(urlFile);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/3/ParallelScrapper.java\nindex ec53ce7b4cb..cd5582309a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Chaklader-Multi-threading/styler/05_predictions/final/files-repaired/3/ParallelScrapper.java\n@@ -7,7 +7,7 @@ import com.asynch.util.CommonUtils;\n \r\n public class ParallelScrapper extends CommonScrapper {\r\n \r\n-\tprivate final List<String> urlList;\r\n+private final List<String> urlList;\r\n \r\n \tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n \t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/3/ParallelScrapper.java\nindex ec53ce7b4cb..d9b4a888c8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/checkstyle_idea/3/ParallelScrapper.java\n@@ -7,20 +7,20 @@ import com.asynch.util.CommonUtils;\n \r\n public class ParallelScrapper extends CommonScrapper {\r\n \r\n-\tprivate final List<String> urlList;\r\n+    private final List<String> urlList;\r\n \r\n-\tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n-\t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n-\t}\r\n+    public ParallelScrapper(final String urlFile) throws IOException {\r\n+        this.urlList = CommonUtils.getLinks(urlFile);\r\n+    }\r\n \r\n-\t@Override\r\n-\tpublic void process() {\r\n-\t\turlList\r\n-\t\t\t\t.stream()\r\n-\t\t\t\t\t.parallel()\r\n-\t\t\t\t\t.map(url -> getPageSource(url))\r\n-\t\t\t\t\t.map(pageSource -> fetchArticle(pageSource))\r\n-\t\t\t\t\t.map(article -> getResult(article))\r\n-\t\t\t\t\t.forEach(System.out::println);\r\n-\t}\r\n+    @Override\r\n+    public void process() {\r\n+        urlList\r\n+            .stream()\r\n+            .parallel()\r\n+            .map(url -> getPageSource(url))\r\n+            .map(pageSource -> fetchArticle(pageSource))\r\n+            .map(article -> getResult(article))\r\n+            .forEach(System.out::println);\r\n+    }\r\n }\r\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/3/ParallelScrapper.java\nindex ec53ce7b4cb..a56bda8a557 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/naturalize/3/ParallelScrapper.java\n@@ -5,22 +5,20 @@ import java.util.List;\n \r\n import com.asynch.util.CommonUtils;\r\n \r\n-public class ParallelScrapper extends CommonScrapper {\r\n+public class ParallelScrapper extends CommonScrapper {\n+\n+    private final List<String> urlList;\r\n \r\n-\tprivate final List<String> urlList;\r\n-\r\n-\tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n-\t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n-\t}\r\n+\tpublic ParallelScrapper(final String urlFile) throws IOException {\n+    this.urlList = CommonUtils.getLinks(urlFile);\n+    }\r\n \r\n \t@Override\r\n-\tpublic void process() {\r\n-\t\turlList\r\n-\t\t\t\t.stream()\r\n-\t\t\t\t\t.parallel()\r\n+\tpublic void process() {\n+    urlList.stream().parallel()\r\n \t\t\t\t\t.map(url -> getPageSource(url))\r\n \t\t\t\t\t.map(pageSource -> fetchArticle(pageSource))\r\n \t\t\t\t\t.map(article -> getResult(article))\r\n-\t\t\t\t\t.forEach(System.out::println);\r\n-\t}\r\n-}\r\n+\t\t\t\t\t.forEach(System.out::println);\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/3/ParallelScrapper.java\nindex ec53ce7b4cb..c2a4308ed9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/codebuff/3/ParallelScrapper.java\n@@ -1,26 +1,22 @@\n-package com.asynch.crawl;\r\n-\r\n-import java.io.IOException;\r\n-import java.util.List;\r\n-\r\n-import com.asynch.util.CommonUtils;\r\n-\r\n-public class ParallelScrapper extends CommonScrapper {\r\n-\r\n-\tprivate final List<String> urlList;\r\n-\r\n-\tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n-\t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic void process() {\r\n-\t\turlList\r\n-\t\t\t\t.stream()\r\n-\t\t\t\t\t.parallel()\r\n-\t\t\t\t\t.map(url -> getPageSource(url))\r\n-\t\t\t\t\t.map(pageSource -> fetchArticle(pageSource))\r\n-\t\t\t\t\t.map(article -> getResult(article))\r\n-\t\t\t\t\t.forEach(System.out::println);\r\n-\t}\r\n-}\r\n+package com.asynch.crawl;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import com.asynch.util.CommonUtils;\n+\n+public class ParallelScrapper extends CommonScrapper {\n+\n+    private final List<String> urlList;\n+\n+    public ParallelScrapper(final String urlFile) throws IOException {\n+        this.urlList = CommonUtils.getLinks(urlFile);\n+    }\n+\n+    @Override\n+    public void process() {\n+        urlList.stream().parallel()\n+                        .map(url -> getPageSource(url))\n+                        .map(pageSource -> fetchArticle(pageSource))\n+                        .map(article -> getResult(article)).forEach(System.out::println);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/3/ParallelScrapper.java\nindex ec53ce7b4cb..cd5582309a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/random/files-repaired/3/ParallelScrapper.java\n@@ -7,7 +7,7 @@ import com.asynch.util.CommonUtils;\n \r\n public class ParallelScrapper extends CommonScrapper {\r\n \r\n-\tprivate final List<String> urlList;\r\n+private final List<String> urlList;\r\n \r\n \tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n \t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/3/ParallelScrapper.java\nindex ec53ce7b4cb..9a9bccd9bdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/violations/3/ParallelScrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Chaklader-Multi-threading/styler/05_predictions/three_grams/files-repaired/3/ParallelScrapper.java\n@@ -7,7 +7,7 @@ import com.asynch.util.CommonUtils;\n \r\n public class ParallelScrapper extends CommonScrapper {\r\n \r\n-\tprivate final List<String> urlList;\r\n+    private final List<String> urlList;\r\n \r\n \tpublic ParallelScrapper(final String urlFile) throws IOException {\r\n \t\tthis.urlList = CommonUtils.getLinks(urlFile);\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}