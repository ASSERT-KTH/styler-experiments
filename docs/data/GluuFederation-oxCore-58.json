{
    "project_name": "GluuFederation-oxCore",
    "violation_id": "58",
    "information": {
        "violations": [
            {
                "line": "123",
                "column": "13",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "                compoundKey.append(\"_\");\n            } else {\n            \tcompoundKey.append(\"l_\");\n            }\n            compoundKey.append(inum);\n        }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/58/LookupService.java\nindex a208ee40888..41774735c39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/58/LookupService.java\n@@ -120,7 +120,7 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n+                compoundKey.append(\"l_\");\n             }\n             compoundKey.append(inum);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/58/LookupService.java\nindex a208ee40888..42a672de22e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/58/LookupService.java\n@@ -45,8 +45,7 @@ public class LookupService implements Serializable {\n     /**\n      * Returns DisplayNameEntry based on display name\n      *\n-     * @param dn\n-     *            display name\n+     * @param dn display name\n      * @return DisplayNameEntry object\n      */\n     public DisplayNameEntry getDisplayNameEntry(String dn) throws Exception {\n@@ -64,10 +63,8 @@ public class LookupService implements Serializable {\n     /**\n      * Returns list of DisplayNameEntry objects\n      *\n-     * @param baseDn\n-     *            base DN\n-     * @param dns\n-     *            list of display names to find\n+     * @param baseDn base DN\n+     * @param dns    list of display names to find\n      * @return list of DisplayNameEntry objects\n      */\n     @SuppressWarnings(\"unchecked\")\n@@ -92,7 +89,7 @@ public class LookupService implements Serializable {\n         for (String inum : inums) {\n             inumFilters.add(Filter.createEqualityFilter(OxConstants.INUM, inum).multiValued(false));\n         }\n-       return Filter.createORFilter(inumFilters);\n+        return Filter.createORFilter(inumFilters);\n     }\n \n     public List<String> getInumsFromDns(List<String> dns) {\n@@ -120,7 +117,7 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n+                compoundKey.append(\"l_\");\n             }\n             compoundKey.append(inum);\n         }\n@@ -144,8 +141,7 @@ public class LookupService implements Serializable {\n     /**\n      * Get inum from DN\n      *\n-     * @param dn\n-     *            DN\n+     * @param dn DN\n      * @return Inum\n      */\n     public String getInumFromDn(String dn) {\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/58/LookupService.java\nindex a208ee40888..2a47ad4eb0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/58/LookupService.java\n@@ -92,7 +92,8 @@ public class LookupService implements Serializable {\n         for (String inum : inums) {\n             inumFilters.add(Filter.createEqualityFilter(OxConstants.INUM, inum).multiValued(false));\n         }\n-       return Filter.createORFilter(inumFilters);\n+\n+return Filter.createORFilter(inumFilters);\n     }\n \n     public List<String> getInumsFromDns(List<String> dns) {\n@@ -120,8 +121,8 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n-            }\n+    compoundKey.append(\"l_\");\n+    }\n             compoundKey.append(inum);\n         }\n \n@@ -165,4 +166,4 @@ public class LookupService implements Serializable {\n         return dn.substring(5, idx);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/58/LookupService.java\nindex a208ee40888..5c03d2224c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/58/LookupService.java\n@@ -10,11 +10,9 @@ import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n import javax.inject.Named;\n-\n import org.gluu.model.DisplayNameEntry;\n import org.gluu.persist.PersistenceEntryManager;\n import org.gluu.persist.model.base.Entry;\n@@ -27,6 +25,8 @@ import org.slf4j.Logger;\n  *\n  * @author Yuriy Movchan Date: 08/11/2010\n  */\n+\n+\n @ApplicationScoped\n @Named\n public class LookupService implements Serializable {\n@@ -49,12 +49,12 @@ public class LookupService implements Serializable {\n      *            display name\n      * @return DisplayNameEntry object\n      */\n+\n     public DisplayNameEntry getDisplayNameEntry(String dn) throws Exception {\n         String key = \"l_\" + dn;\n         DisplayNameEntry entry = (DisplayNameEntry) cacheService.get(OxConstants.CACHE_LOOKUP_NAME, key);\n         if (entry == null) {\n             entry = ldapEntryManager.find(key, DisplayNameEntry.class, null);\n-\n             cacheService.put(OxConstants.CACHE_LOOKUP_NAME, key, entry);\n         }\n \n@@ -70,6 +70,7 @@ public class LookupService implements Serializable {\n      *            list of display names to find\n      * @return list of DisplayNameEntry objects\n      */\n+\n     @SuppressWarnings(\"unchecked\")\n     public List<DisplayNameEntry> getDisplayNameEntries(String baseDn, List<String> dns) {\n         List<String> inums = getInumsFromDns(dns);\n@@ -84,6 +85,7 @@ public class LookupService implements Serializable {\n             entries = ldapEntryManager.findEntries(baseDn, DisplayNameEntry.class, searchFilter);\n             cacheService.put(OxConstants.CACHE_LOOKUP_NAME, key, entries);\n         }\n+\n         return entries;\n     }\n \n@@ -92,12 +94,12 @@ public class LookupService implements Serializable {\n         for (String inum : inums) {\n             inumFilters.add(Filter.createEqualityFilter(OxConstants.INUM, inum).multiValued(false));\n         }\n-       return Filter.createORFilter(inumFilters);\n+\n+        return Filter.createORFilter(inumFilters);\n     }\n \n     public List<String> getInumsFromDns(List<String> dns) {\n         List<String> inums = new ArrayList<String>();\n-\n         if (dns == null) {\n             return inums;\n         }\n@@ -110,7 +112,6 @@ public class LookupService implements Serializable {\n         }\n \n         Collections.sort(inums);\n-\n         return inums;\n     }\n \n@@ -120,8 +121,9 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n+                compoundKey.append(\"l_\");\n             }\n+\n             compoundKey.append(inum);\n         }\n \n@@ -148,6 +150,7 @@ public class LookupService implements Serializable {\n      *            DN\n      * @return Inum\n      */\n+\n     public String getInumFromDn(String dn) {\n         if (dn == null) {\n             return null;\n@@ -164,5 +167,4 @@ public class LookupService implements Serializable {\n \n         return dn.substring(5, idx);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/58/LookupService.java\nindex a208ee40888..41774735c39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/58/LookupService.java\n@@ -120,7 +120,7 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n+                compoundKey.append(\"l_\");\n             }\n             compoundKey.append(inum);\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/58/LookupService.java\nindex a208ee40888..41774735c39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/58/LookupService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/58/LookupService.java\n@@ -120,7 +120,7 @@ public class LookupService implements Serializable {\n             if (compoundKey.length() > 0) {\n                 compoundKey.append(\"_\");\n             } else {\n-            \tcompoundKey.append(\"l_\");\n+                compoundKey.append(\"l_\");\n             }\n             compoundKey.append(inum);\n         }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}