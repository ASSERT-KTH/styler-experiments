{
    "project_name": "apache-usergrid",
    "violation_id": "71",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\n/** @author zznate */\npublic class CountSerDeUtils {\n\n    public static String serialize( Count count ) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/71/CountSerDeUtils.java\nindex 501651ad67b..7283b74afd9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/71/CountSerDeUtils.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.count.common;\n \n \n@@ -24,29 +25,29 @@ import org.codehaus.jackson.annotate.JsonMethod;\n import org.codehaus.jackson.map.ObjectMapper;\n \n \n-/** @author zznate */\n+/**\n+ * @author zznate\n+ */\n public class CountSerDeUtils {\n \n-    public static String serialize( Count count ) {\n+    public static String serialize(Count count) {\n         ObjectMapper mapper = new ObjectMapper();\n         try {\n-            return mapper.writeValueAsString( count );\n-        }\n-        catch ( Exception ex ) {\n-            throw new CountTransportSerDeException( \"Problem in serialize() call\", ex );\n+            return mapper.writeValueAsString(count);\n+        } catch (Exception ex) {\n+            throw new CountTransportSerDeException(\"Problem in serialize() call\", ex);\n         }\n     }\n \n \n-    public static Count deserialize( String json ) {\n+    public static Count deserialize(String json) {\n         ObjectMapper mapper = new ObjectMapper();\n-        mapper.setVisibility( JsonMethod.CREATOR, JsonAutoDetect.Visibility.ANY );\n+        mapper.setVisibility(JsonMethod.CREATOR, JsonAutoDetect.Visibility.ANY);\n \n         try {\n-            return mapper.readValue( json, Count.class );\n-        }\n-        catch ( IOException e ) {\n-            throw new CountTransportSerDeException( \"Problem in deserialize() call\", e );\n+            return mapper.readValue(json, Count.class);\n+        } catch (IOException e) {\n+            throw new CountTransportSerDeException(\"Problem in deserialize() call\", e);\n         }\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/71/CountSerDeUtils.java\nindex 501651ad67b..682bb2be1e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/71/CountSerDeUtils.java\n@@ -49,4 +49,4 @@ public class CountSerDeUtils {\n             throw new CountTransportSerDeException( \"Problem in deserialize() call\", e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/71/CountSerDeUtils.java\nindex 501651ad67b..97156026e50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/71/CountSerDeUtils.java\n@@ -18,13 +18,14 @@ package org.apache.usergrid.count.common;\n \n \n import java.io.IOException;\n-\n import org.codehaus.jackson.annotate.JsonAutoDetect;\n import org.codehaus.jackson.annotate.JsonMethod;\n import org.codehaus.jackson.map.ObjectMapper;\n \n \n /** @author zznate */\n+\n+\n public class CountSerDeUtils {\n \n     public static String serialize( Count count ) {\n@@ -49,4 +50,4 @@ public class CountSerDeUtils {\n             throw new CountTransportSerDeException( \"Problem in deserialize() call\", e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/styler/05_predictions/three_grams/files-repaired/71/CountSerDeUtils.java\nindex 501651ad67b..eb0e4defa2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/71/CountSerDeUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/styler/05_predictions/three_grams/files-repaired/71/CountSerDeUtils.java\n@@ -24,8 +24,7 @@ import org.codehaus.jackson.annotate.JsonMethod;\n import org.codehaus.jackson.map.ObjectMapper;\n \n \n-/** @author zznate */\n-public class CountSerDeUtils {\n+/** @author zznate */ public class CountSerDeUtils {\n \n     public static String serialize( Count count ) {\n         ObjectMapper mapper = new ObjectMapper();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}