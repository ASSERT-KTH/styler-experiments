{
    "project_name": "junkdog-artemis-odb",
    "violation_id": "37",
    "information": {
        "violations": [
            {
                "line": "29",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                new MethodBuilder(boolean.class,\n\n                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n                        .debugNotes(component.getComponentType().getName())\n                        .mapper(\"return \", component, \".has(entityId)\")\n                        .build();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/37/ComponentExistStrategy.java\nindex b15309ae5d0..87541a4db3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/37/ComponentExistStrategy.java\n@@ -25,9 +25,8 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n         return\n                 new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n+                Strings.assembleMethodName(component.getPreferences(). getPrefixComponentHas(),\n+                component.getName())).debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/37/ComponentExistStrategy.java\nindex b15309ae5d0..9ef42e20235 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/37/ComponentExistStrategy.java\n@@ -14,21 +14,22 @@ import com.artemis.generator.util.Strings;\n  */\n public class ComponentExistStrategy extends IterativeModelStrategy {\n \n-    @Override\n-    protected void apply(ComponentDescriptor component, TypeModel model) {\n-        model.add(createHasComponentMethod(component));\n-    }\n+  @Override\n+  protected void apply(ComponentDescriptor component, TypeModel model) {\n+    model.add(createHasComponentMethod(component));\n+  }\n \n-    /**\n-     * boolean E::hasComponent()\n-     */\n-    private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n-        return\n-                new MethodBuilder(boolean.class,\n+  /**\n+   * boolean E::hasComponent()\n+   */\n+  private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n+    return\n+        new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n-                        .mapper(\"return \", component, \".has(entityId)\")\n-                        .build();\n-    }\n+            Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),\n+                component.getName()))\n+            .debugNotes(component.getComponentType().getName())\n+            .mapper(\"return \", component, \".has(entityId)\")\n+            .build();\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/37/ComponentExistStrategy.java\nindex b15309ae5d0..6ebfa327e8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/naturalize/37/ComponentExistStrategy.java\n@@ -13,8 +13,7 @@ import com.artemis.generator.util.Strings;\n  * @author Daan van Yperen\n  */\n public class ComponentExistStrategy extends IterativeModelStrategy {\n-\n-    @Override\n+\t@Override\n     protected void apply(ComponentDescriptor component, TypeModel model) {\n         model.add(createHasComponentMethod(component));\n     }\n@@ -23,12 +22,9 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n      * boolean E::hasComponent()\n      */\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n-        return\n-                new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+\treturn new MethodBuilder(boolean.class, Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(), component.getName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/37/ComponentExistStrategy.java\nindex b15309ae5d0..387d96e0330 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/37/ComponentExistStrategy.java\n@@ -12,23 +12,21 @@ import com.artemis.generator.util.Strings;\n  *\n  * @author Daan van Yperen\n  */\n-public class ComponentExistStrategy extends IterativeModelStrategy {\n \n-    @Override\n-    protected void apply(ComponentDescriptor component, TypeModel model) {\n-        model.add(createHasComponentMethod(component));\n-    }\n+public class ComponentExistStrategy extends IterativeModelStrategy {\n+ @Override\n+ protected void apply(ComponentDescriptor component, TypeModel model) {\n+  model.add(createHasComponentMethod(component));\n+ }\n \n     /**\n      * boolean E::hasComponent()\n      */\n-    private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n-        return\n-                new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n-                        .mapper(\"return \", component, \".has(entityId)\")\n-                        .build();\n-    }\n-}\n+ private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n+  return new MethodBuilder(boolean.class, Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),\n+                            component.getName())).debugNotes(component.getComponentType().getName())\n+                                                 .mapper(\"return \", component, \".has(entityId)\")\n+                                                 .build();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/37/ComponentExistStrategy.java\nindex b15309ae5d0..87541a4db3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/37/ComponentExistStrategy.java\n@@ -25,9 +25,8 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n         return\n                 new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n+                Strings.assembleMethodName(component.getPreferences(). getPrefixComponentHas(),\n+                component.getName())).debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/37/ComponentExistStrategy.java\nindex b15309ae5d0..aea42938dc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/37/ComponentExistStrategy.java\n@@ -25,8 +25,8 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n         return\n                 new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStrings .assembleMethodName(component .getPreferences ( ).getPrefixComponentHas( ),component.\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgetName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}