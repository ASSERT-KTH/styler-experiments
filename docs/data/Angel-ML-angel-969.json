{
    "project_name": "Angel-ML-angel",
    "violation_id": "969",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/969/TaskCountersBlock.java\nindex 9ca0dc90dcf..e375885010c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/969/TaskCountersBlock.java\n@@ -26,26 +26,26 @@ import static com.tencent.angel.webapp.AngelParams.TASK_ID;\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n \n public class TaskCountersBlock extends HtmlBlock {\n-  final AMContext amContext;\n+    final AMContext amContext;\n \n-  @Inject\n-  TaskCountersBlock(AMContext amctx) {\n-    amContext = amctx;\n-  }\n+    @Inject\n+    TaskCountersBlock(AMContext amctx) {\n+        amContext = amctx;\n+    }\n \n-  @Override\n-  protected void render(Block html) {\n-    set(TITLE, join(\"Angel TaskCountersBlock\", $(TASK_ID)));\n-    String taskIdSr = $(TASK_ID);\n-    html.h1(taskIdSr);\n+    @Override\n+    protected void render(Block html) {\n+        set(TITLE, join(\"Angel TaskCountersBlock\", $(TASK_ID)));\n+        String taskIdSr = $(TASK_ID);\n+        html.h1(taskIdSr);\n \n-    try {\n-      TaskId taskId = new TaskId(taskIdSr);\n-      String taskCounters =\n-          amContext.getTaskManager().getTask(taskId).getMetrics().get(\"taskCounters\");\n-      html.pre()._(taskCounters)._();\n-    } catch (UnvalidIdStrException e) {\n-      LOG.error(\"unvalid id string \", e);\n+        try {\n+            TaskId taskId = new TaskId(taskIdSr);\n+            String taskCounters =\n+                    amContext.getTaskManager().getTask(taskId).getMetrics().get(\"taskCounters\");\n+            html.pre()._(taskCounters)._();\n+        } catch (UnvalidIdStrException e) {\n+            LOG.error(\"unvalid id string \", e);\n+        }\n     }\n-  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/969/TaskCountersBlock.java\nindex 9ca0dc90dcf..e3c78e8d0ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/969/TaskCountersBlock.java\n@@ -38,8 +38,7 @@ public class TaskCountersBlock extends HtmlBlock {\n     set(TITLE, join(\"Angel TaskCountersBlock\", $(TASK_ID)));\n     String taskIdSr = $(TASK_ID);\n     html.h1(taskIdSr);\n-\n-    try {\n+try {\n       TaskId taskId = new TaskId(taskIdSr);\n       String taskCounters =\n           amContext.getTaskManager().getTask(taskId).getMetrics().get(\"taskCounters\");\n@@ -48,4 +47,4 @@ public class TaskCountersBlock extends HtmlBlock {\n       LOG.error(\"unvalid id string \", e);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/969/TaskCountersBlock.java\nindex 9ca0dc90dcf..06a7ec1ede9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/969/TaskCountersBlock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/969/TaskCountersBlock.java\n@@ -21,11 +21,11 @@ import com.tencent.angel.exception.UnvalidIdStrException;\n import com.tencent.angel.master.app.AMContext;\n import com.tencent.angel.worker.task.TaskId;\n import org.apache.hadoop.yarn.webapp.view.HtmlBlock;\n-\n import static com.tencent.angel.webapp.AngelParams.TASK_ID;\n import static org.apache.hadoop.yarn.util.StringHelper.join;\n \n public class TaskCountersBlock extends HtmlBlock {\n+\n   final AMContext amContext;\n \n   @Inject\n@@ -38,14 +38,13 @@ public class TaskCountersBlock extends HtmlBlock {\n     set(TITLE, join(\"Angel TaskCountersBlock\", $(TASK_ID)));\n     String taskIdSr = $(TASK_ID);\n     html.h1(taskIdSr);\n-\n     try {\n       TaskId taskId = new TaskId(taskIdSr);\n-      String taskCounters =\n-          amContext.getTaskManager().getTask(taskId).getMetrics().get(\"taskCounters\");\n+      String taskCounters = amContext.getTaskManager().getTask(taskId).getMetrics().get(\"taskCounters\");\n       html.pre()._(taskCounters)._();\n     } catch (UnvalidIdStrException e) {\n       LOG.error(\"unvalid id string \", e);\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}