{
    "project_name": "wso2-attic-commons",
    "violation_id": "421",
    "information": {
        "violations": [
            {
                "line": "116",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                .append(\"@\").append(CARBON_CLIENT_ID)\n                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                .toString();\n    }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/421/SampleMessageRecieverTask.java\nindex 798e7ed38e2..cb3cd1ae32d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/421/SampleMessageRecieverTask.java\n@@ -113,7 +113,8 @@ public class SampleMessageRecieverTask implements Task, ManagedLifecycle {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/421/SampleMessageRecieverTask.java\nindex 798e7ed38e2..22a63cf7074 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/421/SampleMessageRecieverTask.java\n@@ -43,94 +43,95 @@ import javax.jms.TextMessage;\n \n \n public class SampleMessageRecieverTask implements Task, ManagedLifecycle {\n-\t\n-\tpublic static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n-    private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n-    private static final String CF_NAME = \"qpidConnectionfactory\";\n-    String userName = \"admin\";\n-    String password = \"admin\";\n-    private static String CARBON_CLIENT_ID = \"carbon\";\n-    private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n-    private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n-    private static String CARBON_DEFAULT_PORT = \"5673\";\n-    String queueName = \"taskqueue\";\n-    \n-\n-    private Log log = LogFactory.getLog(SampleMessageRecieverTask.class);\n-\n-    private String sequence = null;\n-    private SynapseEnvironment synapseEnvironment;\n-\n-    public void execute() {\n-    \tSampleMessageRecieverTask queueReceiver = new SampleMessageRecieverTask();\n-    \ttry {\n-\t\t\tqueueReceiver.receiveMessages();\n-\t\t} catch (NamingException e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\te.printStackTrace();\n-\t\t} catch (JMSException e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\te.printStackTrace();\n-\t\t}\n-    }\n-    public void receiveMessages() throws NamingException, JMSException {\n-        Properties properties = new Properties();\n-        properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n-        properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n-        properties.put(\"queue.\"+ queueName,queueName);\n-        System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n-        InitialContext ctx = new InitialContext(properties);\n-        // Lookup connection factory\n-        QueueConnectionFactory connFactory = (QueueConnectionFactory) ctx.lookup(CF_NAME);\n-        QueueConnection queueConnection = connFactory.createQueueConnection();\n-        queueConnection.start();\n-        \n-        //QueueSession queueSession =queueConnection.createQueueSession(false,100 ); \n-        \t\n-        \t\n-        QueueSession queueSession =queueConnection.createQueueSession(false,QueueSession.AUTO_ACKNOWLEDGE  ); \n-        \n-        \n-        //Receive message\n-        Queue queue =  (Queue) ctx.lookup(queueName);\n-        MessageConsumer queueReceiver = queueSession.createConsumer(queue);\n-\tint count=1;\n-\n-\twhile(true){\n-\t\n-        TextMessage message = (TextMessage) queueReceiver.receive();\n-       \n-        System.out.println(count+\"::::::Got message :::::::\" + message.getText());\n-\t   \n-\t    count++;\n-\n-\t}\n-\t}\n-    \n-    public String getTCPConnectionURL(String username, String password) {\n-        // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n-        return new StringBuffer()\n-                .append(\"amqp://\").append(username).append(\":\").append(password)\n-                .append(\"@\").append(CARBON_CLIENT_ID)\n-                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n-                .toString();\n-    }\n \n-    public void destroy() {\n+  public static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n+  private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n+  private static final String CF_NAME = \"qpidConnectionfactory\";\n+  String userName = \"admin\";\n+  String password = \"admin\";\n+  private static String CARBON_CLIENT_ID = \"carbon\";\n+  private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n+  private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n+  private static String CARBON_DEFAULT_PORT = \"5673\";\n+  String queueName = \"taskqueue\";\n \n-    }\n \n-    public void init(SynapseEnvironment synapseEnvironment) {\n-        this.synapseEnvironment = synapseEnvironment;\n-    }\n+  private Log log = LogFactory.getLog(SampleMessageRecieverTask.class);\n+\n+  private String sequence = null;\n+  private SynapseEnvironment synapseEnvironment;\n \n-    public String getSequence() {\n-        return sequence;\n+  public void execute() {\n+    SampleMessageRecieverTask queueReceiver = new SampleMessageRecieverTask();\n+    try {\n+      queueReceiver.receiveMessages();\n+    } catch (NamingException e) {\n+      // TODO Auto-generated catch block\n+      e.printStackTrace();\n+    } catch (JMSException e) {\n+      // TODO Auto-generated catch block\n+      e.printStackTrace();\n     }\n+  }\n+\n+  public void receiveMessages() throws NamingException, JMSException {\n+    Properties properties = new Properties();\n+    properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n+    properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n+    properties.put(\"queue.\" + queueName, queueName);\n+    System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n+    InitialContext ctx = new InitialContext(properties);\n+    // Lookup connection factory\n+    QueueConnectionFactory connFactory = (QueueConnectionFactory) ctx.lookup(CF_NAME);\n+    QueueConnection queueConnection = connFactory.createQueueConnection();\n+    queueConnection.start();\n+\n+    //QueueSession queueSession =queueConnection.createQueueSession(false,100 );\n+\n+\n+    QueueSession queueSession = queueConnection.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);\n+\n+\n+    //Receive message\n+    Queue queue = (Queue) ctx.lookup(queueName);\n+    MessageConsumer queueReceiver = queueSession.createConsumer(queue);\n+    int count = 1;\n+\n+    while (true) {\n+\n+      TextMessage message = (TextMessage) queueReceiver.receive();\n+\n+      System.out.println(count + \"::::::Got message :::::::\" + message.getText());\n+\n+      count++;\n \n-    public void setSequence(String sequence) {\n-        this.sequence = sequence;\n     }\n-    \n+  }\n+\n+  public String getTCPConnectionURL(String username, String password) {\n+    // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n+    return new StringBuffer()\n+      .append(\"amqp://\").append(username).append(\":\").append(password)\n+      .append(\"@\").append(CARBON_CLIENT_ID)\n+      .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n+      .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+      .toString();\n+  }\n+\n+  public void destroy() {\n+\n+  }\n+\n+  public void init(SynapseEnvironment synapseEnvironment) {\n+    this.synapseEnvironment = synapseEnvironment;\n+  }\n+\n+  public String getSequence() {\n+    return sequence;\n+  }\n+\n+  public void setSequence(String sequence) {\n+    this.sequence = sequence;\n+  }\n+\n }\n",
            "diff_size": 160
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/421/SampleMessageRecieverTask.java\nindex 798e7ed38e2..cb3cd1ae32d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/421/SampleMessageRecieverTask.java\n@@ -113,7 +113,8 @@ public class SampleMessageRecieverTask implements Task, ManagedLifecycle {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/421/SampleMessageRecieverTask.java\nindex 798e7ed38e2..57f3d0c88f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/421/SampleMessageRecieverTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/421/SampleMessageRecieverTask.java\n@@ -113,7 +113,8 @@ public class SampleMessageRecieverTask implements Task, ManagedLifecycle {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\")\n+                .append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                 .toString();\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}