{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2252",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2252/WaitingOnQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2252/WaitingOnQuery.java\nindex 9e71c7675b6..aa9fb1496d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2252/WaitingOnQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2252/WaitingOnQuery.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.query;\n \n import java.util.HashMap;\n@@ -25,33 +26,33 @@ import java.util.concurrent.TimeUnit;\n \n class WaitingOnQuery extends ExecutingQueryStatus\n {\n-    private final ExecutingQuery query;\n-    private final long startTimeNanos;\n+  private final ExecutingQuery query;\n+  private final long startTimeNanos;\n \n-    WaitingOnQuery( ExecutingQuery query, long startTimeNanos )\n-    {\n-        this.query = query;\n-        this.startTimeNanos = startTimeNanos;\n-    }\n+  WaitingOnQuery(ExecutingQuery query, long startTimeNanos)\n+  {\n+    this.query = query;\n+    this.startTimeNanos = startTimeNanos;\n+  }\n \n-    @Override\n-    long waitTimeNanos( long currentTimeNanos )\n-    {\n-        return currentTimeNanos - startTimeNanos;\n-    }\n+  @Override\n+  long waitTimeNanos(long currentTimeNanos)\n+  {\n+    return currentTimeNanos - startTimeNanos;\n+  }\n \n-    @Override\n-    Map<String,Object> toMap( long currentTimeNanos )\n-    {\n-        Map<String,Object> map = new HashMap<>();\n-        map.put( \"queryId\", \"query-\" + query.internalQueryId() );\n-        map.put( \"waitTimeMillis\", TimeUnit.NANOSECONDS.toMillis( waitTimeNanos( currentTimeNanos ) ) );\n-        return map;\n-    }\n+  @Override\n+  Map<String, Object> toMap(long currentTimeNanos)\n+  {\n+    Map<String, Object> map = new HashMap<>();\n+    map.put(\"queryId\", \"query-\" + query.internalQueryId());\n+    map.put(\"waitTimeMillis\", TimeUnit.NANOSECONDS.toMillis(waitTimeNanos(currentTimeNanos)));\n+    return map;\n+  }\n \n-    @Override\n-    String name()\n-    {\n-        return WAITING_STATE;\n-    }\n+  @Override\n+  String name()\n+  {\n+    return WAITING_STATE;\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2252/WaitingOnQuery.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2252/WaitingOnQuery.java\nindex 9e71c7675b6..d4f01b717e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2252/WaitingOnQuery.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2252/WaitingOnQuery.java\n@@ -54,4 +54,4 @@ class WaitingOnQuery extends ExecutingQueryStatus\n     {\n         return WAITING_STATE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}