{
    "project_name": "dzhw-metadatamanagement",
    "violation_id": "92",
    "information": {
        "violations": [
            {
                "line": "25",
                "column": "61",
                "severity": "error",
                "message": "'}' at column 61 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidFormat constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/92/ValidFormatValidator.java\nindex 6302d7ec685..145914a9857 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/92/ValidFormatValidator.java\n@@ -22,7 +22,9 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidFormat constraintAnnotation) {}\n+  public void initialize(ValidFormat constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/92/ValidFormatValidator.java\nindex 6302d7ec685..bc80cdf8017 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/92/ValidFormatValidator.java\n@@ -10,23 +10,23 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.Format;\n \n /**\n  * Validator of the format of datasets. Only values from the class {@link Format} are allowed.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I18nString> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidFormat constraintAnnotation) {}\n+  public void initialize(ValidFormat constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "column": "61",
                    "severity": "error",
                    "message": "'}' at column 61 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/92/ValidFormatValidator.java\nindex 6302d7ec685..67a31bcbc93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/92/ValidFormatValidator.java\n@@ -32,8 +32,7 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n    */\n   @Override\n   public boolean isValid(I18nString format, ConstraintValidatorContext context) {\n-\n-    if (format == null) {\n+  if (format == null) {\n       return true;\n     }\n \n@@ -44,4 +43,4 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n     // check for formats\n     return Format.ALL.contains(format);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/92/ValidFormatValidator.java\nindex 6302d7ec685..780b188f8d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/92/ValidFormatValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import com.google.common.base.Strings;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.Format;\n \n@@ -14,6 +12,8 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.Format;\n  * @author Daniel Katzberg\n  *\n  */\n+\n+\n public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I18nString> {\n \n   /*\n@@ -21,8 +21,11 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidFormat constraintAnnotation) {}\n+  public void initialize(ValidFormat constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -30,18 +33,20 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n-  @Override\n-  public boolean isValid(I18nString format, ConstraintValidatorContext context) {\n \n+\n+  @Override\n+  public boolean isValid(I18nString format,\n+    ConstraintValidatorContext context) {\n     if (format == null) {\n       return true;\n     }\n-\n     if (Strings.isNullOrEmpty(format.getDe()) && Strings.isNullOrEmpty(format.getEn())) {\n       return true;\n     }\n \n     // check for formats\n+\n     return Format.ALL.contains(format);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/92/ValidFormatValidator.java\nindex 6302d7ec685..145914a9857 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/92/ValidFormatValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/92/ValidFormatValidator.java\n@@ -22,7 +22,9 @@ public class ValidFormatValidator implements ConstraintValidator<ValidFormat, I1\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidFormat constraintAnnotation) {}\n+  public void initialize(ValidFormat constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "25",
                    "column": "61",
                    "severity": "error",
                    "message": "'}' at column 61 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}