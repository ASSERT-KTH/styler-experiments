{
    "project_name": "apache-iotdb",
    "violation_id": "154",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.kafka;\n\nimport kafka.consumer.ConsumerConfig;\nimport kafka.consumer.KafkaStream;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/154/KafkaConsumer.java\nindex f19cc5569f2..fa92743e56c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/154/KafkaConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.kafka;\n \n import kafka.consumer.ConsumerConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/154/KafkaConsumer.java\nindex f19cc5569f2..fa92743e56c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/154/KafkaConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.kafka;\n \n import kafka.consumer.ConsumerConfig;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/154/KafkaConsumer.java\nindex f19cc5569f2..29dda582468 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/154/KafkaConsumer.java\n@@ -23,7 +23,6 @@ import kafka.consumer.KafkaStream;\n import kafka.javaapi.consumer.ConsumerConnector;\n import kafka.serializer.StringDecoder;\n import kafka.utils.VerifiableProperties;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -35,6 +34,7 @@ import java.util.concurrent.Executors;\n  * The class is to show how to get data from kafka through multi-threads. The data is sent by class\n  * KafkaProducer.\n  */\n+\n public class KafkaConsumer {\n \n   private ConsumerConnector consumer;\n@@ -60,7 +60,6 @@ public class KafkaConsumer {\n \n     /** serializer class */\n     props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\");\n-\n     ConsumerConfig config = new ConsumerConfig(props);\n     consumer = kafka.consumer.Consumer.createJavaConsumerConnector(config);\n   }\n@@ -77,14 +76,11 @@ public class KafkaConsumer {\n     /** Specify data decoder */\n     StringDecoder keyDecoder = new StringDecoder(new VerifiableProperties());\n     StringDecoder valueDecoder = new StringDecoder(new VerifiableProperties());\n-\n-    Map<String, List<KafkaStream<String, String>>> consumerMap =\n-        consumer.createMessageStreams(topicCountMap, keyDecoder, valueDecoder);\n-\n+    Map<String, List<KafkaStream<String, String>>> consumerMap = consumer.createMessageStreams(topicCountMap, keyDecoder, valueDecoder);\n     List<KafkaStream<String, String>> streams = consumerMap.get(Constant.TOPIC);\n     ExecutorService executor = Executors.newFixedThreadPool(Constant.CONSUMER_THREAD_NUM);\n     for (final KafkaStream<String, String> stream : streams) {\n       executor.submit(new KafkaConsumerThread(stream));\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/154/KafkaConsumer.java\nindex f19cc5569f2..fa92743e56c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/154/KafkaConsumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/154/KafkaConsumer.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.kafka;\n \n import kafka.consumer.ConsumerConfig;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}