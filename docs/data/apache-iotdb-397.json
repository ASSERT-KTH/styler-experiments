{
    "project_name": "apache-iotdb",
    "violation_id": "397",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.tsfile.read.reader.series;\n\nimport org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\nimport org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/397/FileSeriesReaderByTimestamp.java\nindex 482a19267fb..878ad9b0504 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/397/FileSeriesReaderByTimestamp.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.reader.series;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/397/FileSeriesReaderByTimestamp.java\nindex 482a19267fb..94084f6d9af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/397/FileSeriesReaderByTimestamp.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.reader.series;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n@@ -44,7 +45,9 @@ public class FileSeriesReaderByTimestamp {\n   private long currentTimestamp;\n   private BatchData data = null; // current batch data\n \n-  /** init with chunkLoader and chunkMetaDataList. */\n+  /**\n+   * init with chunkLoader and chunkMetaDataList.\n+   */\n   public FileSeriesReaderByTimestamp(\n       IChunkLoader chunkLoader, List<IChunkMetadata> chunkMetadataList) {\n     this.chunkLoader = chunkLoader;\n@@ -56,7 +59,9 @@ public class FileSeriesReaderByTimestamp {\n     return chunkMetadataList.get(0).getDataType();\n   }\n \n-  /** get value with time equals timestamp. If there is no such point, return null. */\n+  /**\n+   * get value with time equals timestamp. If there is no such point, return null.\n+   */\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   public Object getValueInTimestamp(long timestamp) throws IOException {\n     this.currentTimestamp = timestamp;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/397/FileSeriesReaderByTimestamp.java\nindex 482a19267fb..d480a2236b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/397/FileSeriesReaderByTimestamp.java\n@@ -26,7 +26,6 @@ import org.apache.iotdb.tsfile.read.common.Chunk;\n import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReaderByTimestamp;\n-\n import java.io.IOException;\n import java.util.List;\n \n@@ -34,19 +33,20 @@ import java.util.List;\n  * Series reader is used to query one series of one tsfile, using this reader to query the value of\n  * a series with given timestamps.\n  */\n+\n public class FileSeriesReaderByTimestamp {\n \n   protected IChunkLoader chunkLoader;\n+\n   protected List<IChunkMetadata> chunkMetadataList;\n   private int currentChunkIndex = 0;\n-\n   private ChunkReader chunkReader;\n   private long currentTimestamp;\n   private BatchData data = null; // current batch data\n \n   /** init with chunkLoader and chunkMetaDataList. */\n-  public FileSeriesReaderByTimestamp(\n-      IChunkLoader chunkLoader, List<IChunkMetadata> chunkMetadataList) {\n+\n+  public FileSeriesReaderByTimestamp(IChunkLoader chunkLoader, List<IChunkMetadata> chunkMetadataList) {\n     this.chunkLoader = chunkLoader;\n     this.chunkMetadataList = chunkMetadataList;\n     currentTimestamp = Long.MIN_VALUE;\n@@ -57,6 +57,7 @@ public class FileSeriesReaderByTimestamp {\n   }\n \n   /** get value with time equals timestamp. If there is no such point, return null. */\n+\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   public Object getValueInTimestamp(long timestamp) throws IOException {\n     this.currentTimestamp = timestamp;\n@@ -66,14 +67,12 @@ public class FileSeriesReaderByTimestamp {\n       if (!constructNextSatisfiedChunkReader()) {\n         return null;\n       }\n-\n       if (chunkReader.hasNextSatisfiedPage()) {\n         data = chunkReader.nextPageData();\n       } else {\n         return null;\n       }\n     }\n-\n     while (data != null) {\n       while (data.hasCurrent()) {\n         if (data.currentTime() < timestamp) {\n@@ -82,7 +81,6 @@ public class FileSeriesReaderByTimestamp {\n           break;\n         }\n       }\n-\n       if (data.hasCurrent()) {\n         if (data.currentTime() == timestamp) {\n           Object value = data.currentValue();\n@@ -98,7 +96,6 @@ public class FileSeriesReaderByTimestamp {\n         }\n       }\n     }\n-\n     return null;\n   }\n \n@@ -107,9 +104,9 @@ public class FileSeriesReaderByTimestamp {\n    *\n    * @return true if has next, false if not.\n    */\n+\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   public boolean hasNext() throws IOException {\n-\n     if (chunkReader != null) {\n       if (data != null && data.hasCurrent()) {\n         return true;\n@@ -152,4 +149,4 @@ public class FileSeriesReaderByTimestamp {\n   private boolean chunkSatisfied(IChunkMetadata chunkMetaData) {\n     return chunkMetaData.getEndTime() >= currentTimestamp;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "column": "61",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/397/FileSeriesReaderByTimestamp.java\nindex 482a19267fb..98ff20881a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/397/FileSeriesReaderByTimestamp.java\n@@ -16,9 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.tsfile.read.reader.series;\n+package org.apache.iotdb.tsfile.read.reader.series\n \n-import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n+; import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n import org.apache.iotdb.tsfile.read.common.BatchData;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/397/FileSeriesReaderByTimestamp.java\nindex 482a19267fb..878ad9b0504 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/397/FileSeriesReaderByTimestamp.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/397/FileSeriesReaderByTimestamp.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.tsfile.read.reader.series;\n \n import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}