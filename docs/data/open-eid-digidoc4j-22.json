{
    "project_name": "open-eid-digidoc4j",
    "violation_id": "22",
    "information": {
        "violations": [
            {
                "line": "25",
                "column": "43",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "   */\n  public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n    logger.debug(\"File name: \" + fileName +\n        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n    try {\n      DigestDocument document = new DigestDocument();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/22/DigestDataFile.java\nindex 559fa6eee9b..c903ccfac6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/22/DigestDataFile.java\n@@ -22,8 +22,8 @@ public class DigestDataFile extends DataFile {\n    * @param digest digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName\n+      + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "25",
                    "column": "43",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/22/DigestDataFile.java\nindex 559fa6eee9b..a2b5c494cec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/22/DigestDataFile.java\n@@ -17,9 +17,9 @@ public class DigestDataFile extends DataFile {\n    * Creates digest based data file.\n    * In other words only the content's digest (not the content itself) is provided.\n    *\n-   * @param fileName name of the file\n+   * @param fileName        name of the file\n    * @param digestAlgorithm algorithm of the digest\n-   * @param digest digest of the file contents\n+   * @param digest          digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n     logger.debug(\"File name: \" + fileName +\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/22/DigestDataFile.java\nindex 559fa6eee9b..d668260dcc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/22/DigestDataFile.java\n@@ -22,9 +22,8 @@ public class DigestDataFile extends DataFile {\n    * @param digest digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n-    try {\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n       document.addDigest(digestAlgorithm.getDssDigestAlgorithm(), Base64.encodeBase64String(digest));\n@@ -35,4 +34,4 @@ public class DigestDataFile extends DataFile {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/22/DigestDataFile.java\nindex 559fa6eee9b..6edbd827372 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/22/DigestDataFile.java\n@@ -1,14 +1,13 @@\n package org.digidoc4j;\n \n import java.util.Arrays;\n-\n import org.apache.commons.codec.binary.Base64;\n import org.digidoc4j.exceptions.InvalidDataFileException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import eu.europa.esig.dss.DigestDocument;\n \n+\n public class DigestDataFile extends DataFile {\n \n   private static final Logger logger = LoggerFactory.getLogger(DigestDataFile.class);\n@@ -21,9 +20,9 @@ public class DigestDataFile extends DataFile {\n    * @param digestAlgorithm algorithm of the digest\n    * @param digest digest of the file contents\n    */\n+\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n@@ -34,5 +33,4 @@ public class DigestDataFile extends DataFile {\n       throw new InvalidDataFileException(e);\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "26",
                    "column": "5",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/22/DigestDataFile.java\nindex 559fa6eee9b..70e8a1661d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/22/DigestDataFile.java\n@@ -22,8 +22,8 @@ public class DigestDataFile extends DataFile {\n    * @param digest digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName\n+    +\", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/22/DigestDataFile.java\nindex 559fa6eee9b..c903ccfac6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/22/DigestDataFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/22/DigestDataFile.java\n@@ -22,8 +22,8 @@ public class DigestDataFile extends DataFile {\n    * @param digest digest of the file contents\n    */\n   public DigestDataFile(String fileName, DigestAlgorithm digestAlgorithm, byte[] digest) {\n-    logger.debug(\"File name: \" + fileName +\n-        \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n+    logger.debug(\"File name: \" + fileName\n+      + \", digest algorithm: \" + digestAlgorithm + \", digest: \" + Arrays.toString(digest));\n     try {\n       DigestDocument document = new DigestDocument();\n       document.setName(fileName);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}