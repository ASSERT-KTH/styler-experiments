{
    "project_name": "eclipse-milo",
    "violation_id": "89",
    "information": {
        "violations": [
            {
                "line": "34",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                                    UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                    double minimumSamplingInterval, boolean historizing) {\n        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "column": "90",
                    "severity": "error",
                    "message": "'{' at column 90 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 32, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 28, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-milo/styler/05_predictions/final/files-repaired/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..67410dcde27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-milo/styler/05_predictions/final/files-repaired/89/BaseDataVariableTypeNode.java\n@@ -30,7 +30,6 @@ public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements Ba\n                                     LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                                    double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n-}\n+                                    double minimumSamplingInterval, boolean historizing) { super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+                                }\n+                            }\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..832d97644af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/89/BaseDataVariableTypeNode.java\n@@ -31,6 +31,7 @@ public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements Ba\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                     double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType,\n+            valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..62726f11cff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/89/BaseDataVariableTypeNode.java\n@@ -33,4 +33,4 @@ public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements Ba\n                                     double minimumSamplingInterval, boolean historizing) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..4dabca726ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/89/BaseDataVariableTypeNode.java\n@@ -20,17 +20,45 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n \n public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements BaseDataVariableType {\n-    public BaseDataVariableTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask) {\n+    public BaseDataVariableTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask, UInteger userWriteMask) {\n         super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask);\n     }\n \n-    public BaseDataVariableTypeNode(UaNodeContext context, NodeId nodeId, QualifiedName browseName,\n-                                    LocalizedText displayName, LocalizedText description, UInteger writeMask,\n-                                    UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n-                                    UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                                    double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+    public BaseDataVariableTypeNode(\n+        UaNodeContext context,\n+        NodeId nodeId,\n+        QualifiedName browseName,\n+        LocalizedText displayName,\n+        LocalizedText description,\n+        UInteger writeMask,\n+        UInteger userWriteMask,\n+        DataValue value,\n+        NodeId dataType,\n+        Integer valueRank,\n+        UInteger[] arrayDimensions,\n+        UByte accessLevel,\n+        UByte userAccessLevel,\n+        double minimumSamplingInterval, boolean historizing) {\n+        super(context,\n+            nodeId,\n+            browseName,\n+            displayName,\n+            description,\n+            writeMask,\n+            userWriteMask,\n+            value,\n+            dataType,\n+            valueRank,\n+            arrayDimensions,\n+            accessLevel,\n+            userAccessLevel,\n+            minimumSamplingInterval,\n+            historizing);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "34",
                    "column": "94",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "column": "5",
                    "severity": "error",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/random/files-repaired/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..64b63b96b00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/random/files-repaired/89/BaseDataVariableTypeNode.java\n@@ -31,6 +31,8 @@ public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements Ba\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n                                     double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n-}\n+        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask,value\n+    ,\n+        dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+     }\n+ }\n",
            "diff_size": 5
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "column": "90",
                    "severity": "error",
                    "message": "'{' at column 90 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 32, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 28, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/89/BaseDataVariableTypeNode.java\nindex b1ed8402a06..67410dcde27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/89/BaseDataVariableTypeNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/89/BaseDataVariableTypeNode.java\n@@ -30,7 +30,6 @@ public class BaseDataVariableTypeNode extends BaseVariableTypeNode implements Ba\n                                     LocalizedText displayName, LocalizedText description, UInteger writeMask,\n                                     UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,\n                                     UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,\n-                                    double minimumSamplingInterval, boolean historizing) {\n-        super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n-    }\n-}\n+                                    double minimumSamplingInterval, boolean historizing) { super(context, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);\n+                                }\n+                            }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}