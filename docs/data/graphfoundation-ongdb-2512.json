{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2512",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2512/RecordAccessSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2512/RecordAccessSet.java\nindex b4e9b4cf2e4..93e5d5863b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2512/RecordAccessSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2512/RecordAccessSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import org.neo4j.kernel.impl.store.record.LabelTokenRecord;\n@@ -32,25 +33,25 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n \n public interface RecordAccessSet\n {\n-    RecordAccess<NodeRecord, Void> getNodeRecords();\n+  RecordAccess<NodeRecord, Void> getNodeRecords();\n \n-    RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords();\n+  RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords();\n \n-    RecordAccess<RelationshipRecord, Void> getRelRecords();\n+  RecordAccess<RelationshipRecord, Void> getRelRecords();\n \n-    RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords();\n+  RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords();\n \n-    RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges();\n+  RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges();\n \n-    RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges();\n+  RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges();\n \n-    RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges();\n+  RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges();\n \n-    RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges();\n+  RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges();\n \n-    boolean hasChanges();\n+  boolean hasChanges();\n \n-    int changeSize();\n+  int changeSize();\n \n-    void close();\n+  void close();\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2512/RecordAccessSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2512/RecordAccessSet.java\nindex b4e9b4cf2e4..a94d55cb9b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2512/RecordAccessSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2512/RecordAccessSet.java\n@@ -32,25 +32,25 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n \n public interface RecordAccessSet\n {\n-    RecordAccess<NodeRecord, Void> getNodeRecords();\n+    RecordAccess<NodeRecord,Void> getNodeRecords();\n \n-    RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords();\n+    RecordAccess<PropertyRecord,PrimitiveRecord> getPropertyRecords();\n \n-    RecordAccess<RelationshipRecord, Void> getRelRecords();\n+    RecordAccess<RelationshipRecord,Void> getRelRecords();\n \n-    RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords();\n+    RecordAccess<RelationshipGroupRecord,Integer> getRelGroupRecords();\n \n-    RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges();\n+    RecordAccess<SchemaRecord,SchemaRule> getSchemaRuleChanges();\n \n-    RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges();\n+    RecordAccess<PropertyKeyTokenRecord,Void> getPropertyKeyTokenChanges();\n \n-    RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges();\n+    RecordAccess<LabelTokenRecord,Void> getLabelTokenChanges();\n \n-    RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges();\n+    RecordAccess<RelationshipTypeTokenRecord,Void> getRelationshipTypeTokenChanges();\n \n     boolean hasChanges();\n \n     int changeSize();\n \n     void close();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}