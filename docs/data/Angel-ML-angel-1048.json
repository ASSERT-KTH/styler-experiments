{
    "project_name": "Angel-ML-angel",
    "violation_id": "1048",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1048/LogisErrorMetric.java\nindex 2b176d820f8..63bd0362947 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1048/LogisErrorMetric.java\n@@ -13,52 +13,52 @@\n  * either express or implied. See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.tencent.angel.ml.algorithm.metric;\n \n /**\n  * Description: the metric of logistic error\n- *\n  */\n \n public class LogisErrorMetric implements Metric {\n \n-  /**\n-   * return name of metric\n-   *\n-   * @return the name\n-   */\n-  @Override\n-  public String getName() {\n-    return \"logerror\";\n-  }\n+    /**\n+     * return name of metric\n+     *\n+     * @return the name\n+     */\n+    @Override\n+    public String getName() {\n+        return \"logerror\";\n+    }\n \n-  /**\n-   * evaluate a specific metric for instances\n-   *\n-   * @param preds the predictions\n-   * @param labels the labels\n-   * @return the eval metric\n-   */\n-  @Override\n-  public float eval(float[] preds, float[] labels) {\n-    float errSum = 0.0f;\n-    for (int i = 0; i < preds.length; i++) {\n-      errSum += evalOne(preds[i], labels[i]);\n+    /**\n+     * evaluate a specific metric for instances\n+     *\n+     * @param preds  the predictions\n+     * @param labels the labels\n+     * @return the eval metric\n+     */\n+    @Override\n+    public float eval(float[] preds, float[] labels) {\n+        float errSum = 0.0f;\n+        for (int i = 0; i < preds.length; i++) {\n+            errSum += evalOne(preds[i], labels[i]);\n+        }\n+        return errSum / preds.length;\n     }\n-    return errSum / preds.length;\n-  }\n \n-  /**\n-   * evaluate a specific metric for one instance\n-   *\n-   * @param pred the prediction\n-   * @param label the label\n-   * @return the eval metric\n-   */\n-  @Override\n-  public float evalOne(float pred, float label) {\n-    return pred > 0f ? 1.0f - label : label;\n-  }\n+    /**\n+     * evaluate a specific metric for one instance\n+     *\n+     * @param pred  the prediction\n+     * @param label the label\n+     * @return the eval metric\n+     */\n+    @Override\n+    public float evalOne(float pred, float label) {\n+        return pred > 0f ? 1.0f - label : label;\n+    }\n \n \n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1048/LogisErrorMetric.java\nindex 2b176d820f8..e497a3981c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1048/LogisErrorMetric.java\n@@ -61,4 +61,4 @@ public class LogisErrorMetric implements Metric {\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1048/LogisErrorMetric.java\nindex 2b176d820f8..7e48c8fb8f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1048/LogisErrorMetric.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1048/LogisErrorMetric.java\n@@ -20,6 +20,8 @@ package com.tencent.angel.ml.algorithm.metric;\n  *\n  */\n \n+\n+\n public class LogisErrorMetric implements Metric {\n \n   /**\n@@ -27,6 +29,8 @@ public class LogisErrorMetric implements Metric {\n    *\n    * @return the name\n    */\n+\n+\n   @Override\n   public String getName() {\n     return \"logerror\";\n@@ -39,6 +43,7 @@ public class LogisErrorMetric implements Metric {\n    * @param labels the labels\n    * @return the eval metric\n    */\n+\n   @Override\n   public float eval(float[] preds, float[] labels) {\n     float errSum = 0.0f;\n@@ -55,10 +60,10 @@ public class LogisErrorMetric implements Metric {\n    * @param label the label\n    * @return the eval metric\n    */\n+\n   @Override\n   public float evalOne(float pred, float label) {\n     return pred > 0f ? 1.0f - label : label;\n   }\n \n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}