{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1543",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1543/CompilationPhaseTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1543/CompilationPhaseTracer.java\nindex 764934b7854..6ac976bc3e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1543/CompilationPhaseTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1543/CompilationPhaseTracer.java\n@@ -14,39 +14,40 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.neo4j.cypher.internal.frontend.v3_4.phases;\n \n public interface CompilationPhaseTracer\n {\n-    enum CompilationPhase\n-    {\n-        PARSING,\n-        DEPRECATION_WARNINGS,\n-        SEMANTIC_CHECK,\n-        AST_REWRITE,\n-        LOGICAL_PLANNING,\n-        CODE_GENERATION,\n-        PIPE_BUILDING,\n-    }\n+  enum CompilationPhase\n+  {\n+    PARSING,\n+    DEPRECATION_WARNINGS,\n+    SEMANTIC_CHECK,\n+    AST_REWRITE,\n+    LOGICAL_PLANNING,\n+    CODE_GENERATION,\n+    PIPE_BUILDING,\n+  }\n \n-    CompilationPhaseEvent beginPhase( CompilationPhase phase );\n+  CompilationPhaseEvent beginPhase(CompilationPhase phase);\n \n-    interface CompilationPhaseEvent extends AutoCloseable\n-    {\n-        @Override\n-        void close();\n-    }\n+  interface CompilationPhaseEvent extends AutoCloseable\n+  {\n+    @Override\n+    void close();\n+  }\n \n-    CompilationPhaseTracer NO_TRACING = new CompilationPhaseTracer()\n+  CompilationPhaseTracer NO_TRACING = new CompilationPhaseTracer()\n+  {\n+    @Override\n+    public CompilationPhaseEvent beginPhase(CompilationPhase phase)\n     {\n-        @Override\n-        public CompilationPhaseEvent beginPhase( CompilationPhase phase )\n-        {\n-            return NONE_PHASE;\n-        }\n-    };\n+      return NONE_PHASE;\n+    }\n+  };\n \n-    CompilationPhaseEvent NONE_PHASE = () ->\n-    {\n-    };\n+  CompilationPhaseEvent NONE_PHASE = () ->\n+  {\n+  };\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1543/CompilationPhaseTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1543/CompilationPhaseTracer.java\nindex 764934b7854..dcb2ae67b9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1543/CompilationPhaseTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1543/CompilationPhaseTracer.java\n@@ -20,13 +20,7 @@ public interface CompilationPhaseTracer\n {\n     enum CompilationPhase\n     {\n-        PARSING,\n-        DEPRECATION_WARNINGS,\n-        SEMANTIC_CHECK,\n-        AST_REWRITE,\n-        LOGICAL_PLANNING,\n-        CODE_GENERATION,\n-        PIPE_BUILDING,\n+        PARSING, DEPRECATION_WARNINGS, SEMANTIC_CHECK, AST_REWRITE, LOGICAL_PLANNING, CODE_GENERATION, PIPE_BUILDING,\n     }\n \n     CompilationPhaseEvent beginPhase( CompilationPhase phase );\n@@ -49,4 +43,4 @@ public interface CompilationPhaseTracer\n     CompilationPhaseEvent NONE_PHASE = () ->\n     {\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}