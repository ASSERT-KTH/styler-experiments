{
    "project_name": "Angel-ML-angel",
    "violation_id": "907",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/907/ContainerRequestEvent.java\nindex 952bb6ab0ff..ded115d1554 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/907/ContainerRequestEvent.java\n@@ -23,36 +23,36 @@ import org.apache.hadoop.yarn.api.records.Resource;\n \n public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n \n-  private final Resource capability;\n-  private final String[] hosts;\n-  private final String[] racks;\n-\n-  public ContainerRequestEvent(Id id, Resource capability, String[] hosts, String[] racks) {\n-    super(id, ContainerAllocatorEventType.CONTAINER_REQ);\n-    this.capability = capability;\n-    this.hosts = hosts;\n-    this.racks = racks;\n-  }\n-\n-  ContainerRequestEvent(Id id, Resource capability) {\n-    this(id, capability, new String[0], new String[0]);\n-  }\n-\n-  public static ContainerRequestEvent createContainerRequestEventForFailedContainer(Id id,\n-      Resource capability) {\n-    // ContainerRequest for failed events does not consider rack / node locality?\n-    return new ContainerRequestEvent(id, capability);\n-  }\n-\n-  public Resource getCapability() {\n-    return capability;\n-  }\n-\n-  public String[] getHosts() {\n-    return hosts;\n-  }\n-\n-  public String[] getRacks() {\n-    return racks;\n-  }\n+    private final Resource capability;\n+    private final String[] hosts;\n+    private final String[] racks;\n+\n+    public ContainerRequestEvent(Id id, Resource capability, String[] hosts, String[] racks) {\n+        super(id, ContainerAllocatorEventType.CONTAINER_REQ);\n+        this.capability = capability;\n+        this.hosts = hosts;\n+        this.racks = racks;\n+    }\n+\n+    ContainerRequestEvent(Id id, Resource capability) {\n+        this(id, capability, new String[0], new String[0]);\n+    }\n+\n+    public static ContainerRequestEvent createContainerRequestEventForFailedContainer(Id id,\n+                                                                                      Resource capability) {\n+        // ContainerRequest for failed events does not consider rack / node locality?\n+        return new ContainerRequestEvent(id, capability);\n+    }\n+\n+    public Resource getCapability() {\n+        return capability;\n+    }\n+\n+    public String[] getHosts() {\n+        return hosts;\n+    }\n+\n+    public String[] getRacks() {\n+        return racks;\n+    }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/907/ContainerRequestEvent.java\nindex 952bb6ab0ff..9bd9acba6e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/907/ContainerRequestEvent.java\n@@ -40,7 +40,7 @@ public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n \n   public static ContainerRequestEvent createContainerRequestEventForFailedContainer(Id id,\n       Resource capability) {\n-    // ContainerRequest for failed events does not consider rack / node locality?\n+  // ContainerRequest for failed events does not consider rack / node locality?\n     return new ContainerRequestEvent(id, capability);\n   }\n \n@@ -55,4 +55,4 @@ public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n   public String[] getRacks() {\n     return racks;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/907/ContainerRequestEvent.java\nindex 952bb6ab0ff..0eadeedd90d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/907/ContainerRequestEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/907/ContainerRequestEvent.java\n@@ -18,7 +18,6 @@ package com.tencent.angel.master.deploy.yarn;\n \n import com.tencent.angel.common.Id;\n import com.tencent.angel.master.deploy.ContainerAllocatorEventType;\n-\n import org.apache.hadoop.yarn.api.records.Resource;\n \n public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n@@ -38,8 +37,7 @@ public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n     this(id, capability, new String[0], new String[0]);\n   }\n \n-  public static ContainerRequestEvent createContainerRequestEventForFailedContainer(Id id,\n-      Resource capability) {\n+  public static ContainerRequestEvent createContainerRequestEventForFailedContainer(Id id, Resource capability) {\n     // ContainerRequest for failed events does not consider rack / node locality?\n     return new ContainerRequestEvent(id, capability);\n   }\n@@ -55,4 +53,4 @@ public class ContainerRequestEvent extends YarnContainerAllocatorEvent {\n   public String[] getRacks() {\n     return racks;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}