{
    "project_name": "Angel-ML-angel",
    "violation_id": "46",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/46/MomentumUpdateFunc.java\nindex caf3824c8c0..d2c23ef8ee2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/46/MomentumUpdateFunc.java\n@@ -26,56 +26,56 @@ import org.apache.commons.logging.LogFactory;\n \n public class MomentumUpdateFunc extends OptMMUpdateFunc {\n \n-  private static final Log LOG = LogFactory.getLog(MomentumUpdateFunc.class);\n-\n-  public MomentumUpdateFunc() {\n-    super();\n-  }\n-\n-  public MomentumUpdateFunc(int matId, int factor, double momentum, double lr) {\n-    this(matId, factor, momentum, lr, 0.0, 1);\n-  }\n-\n-  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam) {\n-    this(matId, offset, momentum, lr, regParam, 1);\n-  }\n-\n-  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam,\n-      int batchSize) {\n-    super(matId, new int[]{offset}, new double[]{momentum, lr, regParam, batchSize});\n-  }\n-\n-  @Override\n-  public void update(ServerPartition partition, int factor, double[] scalars) {\n-    double momentum = scalars[0];\n-    double lr = scalars[1];\n-    double regParam = scalars[2];\n-    double batchSize = scalars[3];\n-\n-    for (int f = 0; f < factor; f++) {\n-      ServerRow gradientServerRow = partition.getRow(f + 2 * factor);\n-      try {\n-        gradientServerRow.startWrite();\n-        Vector weight = partition.getRow(f).getSplit();\n-        Vector velocity = partition.getRow(f + factor).getSplit();\n-        Vector gradient = gradientServerRow.getSplit();\n-\n-        if (batchSize > 1) {\n-          gradient.idiv(batchSize);\n-        }\n+    private static final Log LOG = LogFactory.getLog(MomentumUpdateFunc.class);\n \n-        if (regParam != 0.0) {\n-          gradient.iaxpy(weight, regParam);\n-        }\n+    public MomentumUpdateFunc() {\n+        super();\n+    }\n \n-        velocity.imul(momentum).iadd(gradient);\n-        weight.isub(velocity.mul(lr));\n+    public MomentumUpdateFunc(int matId, int factor, double momentum, double lr) {\n+        this(matId, factor, momentum, lr, 0.0, 1);\n+    }\n \n-        gradient.clear();\n-      } finally {\n-        gradientServerRow.endWrite();\n-      }\n+    public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam) {\n+        this(matId, offset, momentum, lr, regParam, 1);\n+    }\n+\n+    public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam,\n+                              int batchSize) {\n+        super(matId, new int[] {offset}, new double[] {momentum, lr, regParam, batchSize});\n+    }\n+\n+    @Override\n+    public void update(ServerPartition partition, int factor, double[] scalars) {\n+        double momentum = scalars[0];\n+        double lr = scalars[1];\n+        double regParam = scalars[2];\n+        double batchSize = scalars[3];\n+\n+        for (int f = 0; f < factor; f++) {\n+            ServerRow gradientServerRow = partition.getRow(f + 2 * factor);\n+            try {\n+                gradientServerRow.startWrite();\n+                Vector weight = partition.getRow(f).getSplit();\n+                Vector velocity = partition.getRow(f + factor).getSplit();\n+                Vector gradient = gradientServerRow.getSplit();\n+\n+                if (batchSize > 1) {\n+                    gradient.idiv(batchSize);\n+                }\n+\n+                if (regParam != 0.0) {\n+                    gradient.iaxpy(weight, regParam);\n+                }\n+\n+                velocity.imul(momentum).iadd(gradient);\n+                weight.isub(velocity.mul(lr));\n+\n+                gradient.clear();\n+            } finally {\n+                gradientServerRow.endWrite();\n+            }\n+        }\n     }\n-  }\n \n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/46/MomentumUpdateFunc.java\nindex caf3824c8c0..8f9968fddf5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/46/MomentumUpdateFunc.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ml.psf.optimizer;\n \n import com.tencent.angel.ml.math2.vector.Vector;\n@@ -40,8 +39,7 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n     this(matId, offset, momentum, lr, regParam, 1);\n   }\n \n-  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam,\n-      int batchSize) {\n+  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam, int batchSize) {\n     super(matId, new int[]{offset}, new double[]{momentum, lr, regParam, batchSize});\n   }\n \n@@ -78,4 +76,4 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/46/MomentumUpdateFunc.java\nindex caf3824c8c0..68b3857d6d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/46/MomentumUpdateFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/46/MomentumUpdateFunc.java\n@@ -40,18 +40,17 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n     this(matId, offset, momentum, lr, regParam, 1);\n   }\n \n-  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam,\n-      int batchSize) {\n+  public MomentumUpdateFunc(int matId, int offset, double momentum, double lr, double regParam, int batchSize) {\n     super(matId, new int[]{offset}, new double[]{momentum, lr, regParam, batchSize});\n   }\n \n   @Override\n-  public void update(ServerPartition partition, int factor, double[] scalars) {\n+  public void update(\n+    ServerPartition partition, int factor, double[] scalars) {\n     double momentum = scalars[0];\n     double lr = scalars[1];\n     double regParam = scalars[2];\n     double batchSize = scalars[3];\n-\n     for (int f = 0; f < factor; f++) {\n       ServerRow gradientServerRow = partition.getRow(f + 2 * factor);\n       try {\n@@ -59,7 +58,6 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n         Vector weight = partition.getRow(f).getSplit();\n         Vector velocity = partition.getRow(f + factor).getSplit();\n         Vector gradient = gradientServerRow.getSplit();\n-\n         if (batchSize > 1) {\n           gradient.idiv(batchSize);\n         }\n@@ -67,10 +65,8 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n         if (regParam != 0.0) {\n           gradient.iaxpy(weight, regParam);\n         }\n-\n         velocity.imul(momentum).iadd(gradient);\n         weight.isub(velocity.mul(lr));\n-\n         gradient.clear();\n       } finally {\n         gradientServerRow.endWrite();\n@@ -78,4 +74,4 @@ public class MomentumUpdateFunc extends OptMMUpdateFunc {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}