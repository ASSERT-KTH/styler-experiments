{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "166",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\nindex b9887a3da41..e3c080a9bf8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import com.sun.jersey.api.core.HttpContext;\n@@ -27,46 +28,46 @@ import org.neo4j.server.rest.repr.RepresentationWriteHandler;\n \n public class CommitOnSuccessfulStatusCodeRepresentationWriteHandler implements RepresentationWriteHandler\n {\n-    private final HttpContext httpContext;\n-    private Transaction transaction;\n+  private final HttpContext httpContext;\n+  private Transaction transaction;\n \n-    public CommitOnSuccessfulStatusCodeRepresentationWriteHandler( HttpContext httpContext, Transaction transaction )\n-    {\n-        this.httpContext = httpContext;\n-        this.transaction = transaction;\n-    }\n+  public CommitOnSuccessfulStatusCodeRepresentationWriteHandler(HttpContext httpContext, Transaction transaction)\n+  {\n+    this.httpContext = httpContext;\n+    this.transaction = transaction;\n+  }\n \n-    @Override\n-    public void onRepresentationStartWriting()\n-    {\n-        // do nothing\n-    }\n+  @Override\n+  public void onRepresentationStartWriting()\n+  {\n+    // do nothing\n+  }\n \n-    @Override\n-    public void onRepresentationWritten()\n-    {\n-        HttpResponseContext response = httpContext.getResponse();\n+  @Override\n+  public void onRepresentationWritten()\n+  {\n+    HttpResponseContext response = httpContext.getResponse();\n \n-        int statusCode = response.getStatus();\n-        if ( statusCode >= 200 && statusCode < 300 )\n-        {\n-            transaction.success();\n-        }\n-    }\n-\n-    @Override\n-    public void onRepresentationFinal()\n+    int statusCode = response.getStatus();\n+    if (statusCode >= 200 && statusCode < 300)\n     {\n-        closeTransaction();\n+      transaction.success();\n     }\n+  }\n \n-    public void closeTransaction()\n-    {\n-        transaction.close();\n-    }\n+  @Override\n+  public void onRepresentationFinal()\n+  {\n+    closeTransaction();\n+  }\n \n-    public void setTransaction( Transaction transaction )\n-    {\n-        this.transaction = transaction;\n-    }\n+  public void closeTransaction()\n+  {\n+    transaction.close();\n+  }\n+\n+  public void setTransaction(Transaction transaction)\n+  {\n+    this.transaction = transaction;\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\nindex b9887a3da41..be37b0a0ac7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/166/CommitOnSuccessfulStatusCodeRepresentationWriteHandler.java\n@@ -69,4 +69,4 @@ public class CommitOnSuccessfulStatusCodeRepresentationWriteHandler implements R\n     {\n         this.transaction = transaction;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}