{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "violation_id": "37",
    "information": {
        "violations": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 99).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n        .combineBy(\n            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n            TypeDescriptor.of(StreamElement.class))\n        .outputValues();\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/37/PCollectionTools.java\nindex 7fbefa61119..c4842543595 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/final/files-repaired/37/PCollectionTools.java\n@@ -42,7 +42,8 @@ public class PCollectionTools {\n         .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n         .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n         .combineBy(\n-            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n+            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement\n+            ::getStamp))),\n             TypeDescriptor.of(StreamElement.class))\n         .outputValues();\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/37/PCollectionTools.java\nindex 7fbefa61119..1b72c259725 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/37/PCollectionTools.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core;\n \n import cz.o2.proxima.storage.StreamElement;\n@@ -42,10 +43,12 @@ public class PCollectionTools {\n         .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n         .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n         .combineBy(\n-            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n+            values -> Optionals.get(\n+                values.max(Comparator.comparingLong(StreamElement::getStamp))),\n             TypeDescriptor.of(StreamElement.class))\n         .outputValues();\n   }\n \n-  private PCollectionTools() {}\n+  private PCollectionTools() {\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/37/PCollectionTools.java\nindex 7fbefa61119..593377c5d13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/37/PCollectionTools.java\n@@ -34,8 +34,7 @@ public class PCollectionTools {\n    * @param other the other {@link PCollection} containing updates\n    * @return snapshot\n    */\n-  public static PCollection<StreamElement> reduceAsSnapshot(\n-      @Nullable String name, PCollection<StreamElement> other) {\n+  public static PCollection<StreamElement> reduceAsSnapshot(@Nullable String name, PCollection<StreamElement> other) {\n \n     return ReduceByKey.named(name)\n         .of(other)\n@@ -43,9 +42,8 @@ public class PCollectionTools {\n         .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n         .combineBy(\n             values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n-            TypeDescriptor.of(StreamElement.class))\n-        .outputValues();\n+            TypeDescriptor.of(StreamElement.class)).outputValues();\n   }\n \n   private PCollectionTools() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/37/PCollectionTools.java\nindex 7fbefa61119..e4c7803f894 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/37/PCollectionTools.java\n@@ -25,6 +25,8 @@ import org.apache.beam.sdk.values.TypeDescriptor;\n import org.apache.beam.sdk.values.TypeDescriptors;\n \n /** Various tools related to manipulation with {@link PCollection}s. */\n+\n+\n public class PCollectionTools {\n \n   /**\n@@ -34,18 +36,14 @@ public class PCollectionTools {\n    * @param other the other {@link PCollection} containing updates\n    * @return snapshot\n    */\n-  public static PCollection<StreamElement> reduceAsSnapshot(\n-      @Nullable String name, PCollection<StreamElement> other) {\n \n-    return ReduceByKey.named(name)\n-        .of(other)\n-        .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n-        .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n-        .combineBy(\n-            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n-            TypeDescriptor.of(StreamElement.class))\n-        .outputValues();\n+  public static PCollection<StreamElement> reduceAsSnapshot(@Nullable String name, PCollection<StreamElement> other) {\n+    return ReduceByKey.named(name).of(other)\n+                                  .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n+                                  .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n+                                  .combineBy(values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))), TypeDescriptor.of(StreamElement.class))\n+                                  .outputValues();\n   }\n \n   private PCollectionTools() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/random/files-repaired/37/PCollectionTools.java\nindex 7fbefa61119..cfb59856d3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/random/files-repaired/37/PCollectionTools.java\n@@ -42,8 +42,8 @@ public class PCollectionTools {\n         .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n         .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n         .combineBy(\n-            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n-            TypeDescriptor.of(StreamElement.class))\n+            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp\n+            ) )),TypeDescriptor.of(StreamElement.class))\n         .outputValues();\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/37/PCollectionTools.java\nindex 7fbefa61119..c4842543595 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/37/PCollectionTools.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/styler/05_predictions/three_grams/files-repaired/37/PCollectionTools.java\n@@ -42,7 +42,8 @@ public class PCollectionTools {\n         .keyBy(e -> e.getKey() + \"#\" + e.getAttribute(), TypeDescriptors.strings())\n         .valueBy(e -> e, TypeDescriptor.of(StreamElement.class))\n         .combineBy(\n-            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement::getStamp))),\n+            values -> Optionals.get(values.max(Comparator.comparingLong(StreamElement\n+            ::getStamp))),\n             TypeDescriptor.of(StreamElement.class))\n         .outputValues();\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}