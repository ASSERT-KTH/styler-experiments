{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3579",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3579/HaDiscoveryRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3579/HaDiscoveryRepresentation.java\nindex 87143c02bad..9d6103b35c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3579/HaDiscoveryRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3579/HaDiscoveryRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest;\n \n import org.neo4j.server.rest.repr.MappingRepresentation;\n@@ -24,26 +25,26 @@ import org.neo4j.server.rest.repr.MappingSerializer;\n \n public class HaDiscoveryRepresentation extends MappingRepresentation\n {\n-    private static final String MASTER_KEY = \"master\";\n-    private static final String SLAVE_KEY = \"slave\";\n-    private static final String DISCOVERY_REPRESENTATION_TYPE = \"discovery\";\n+  private static final String MASTER_KEY = \"master\";\n+  private static final String SLAVE_KEY = \"slave\";\n+  private static final String DISCOVERY_REPRESENTATION_TYPE = \"discovery\";\n \n-    private final String basePath;\n-    private final String isMasterUri;\n-    private final String isSlaveUri;\n+  private final String basePath;\n+  private final String isMasterUri;\n+  private final String isSlaveUri;\n \n-    public HaDiscoveryRepresentation( String basePath, String isMasterUri, String isSlaveUri )\n-    {\n-        super( DISCOVERY_REPRESENTATION_TYPE );\n-        this.basePath = basePath;\n-        this.isMasterUri = isMasterUri;\n-        this.isSlaveUri = isSlaveUri;\n-    }\n+  public HaDiscoveryRepresentation(String basePath, String isMasterUri, String isSlaveUri)\n+  {\n+    super(DISCOVERY_REPRESENTATION_TYPE);\n+    this.basePath = basePath;\n+    this.isMasterUri = isMasterUri;\n+    this.isSlaveUri = isSlaveUri;\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n-    {\n-        serializer.putRelativeUri( MASTER_KEY, basePath + isMasterUri );\n-        serializer.putRelativeUri( SLAVE_KEY, basePath + isSlaveUri );\n-    }\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    serializer.putRelativeUri(MASTER_KEY, basePath + isMasterUri);\n+    serializer.putRelativeUri(SLAVE_KEY, basePath + isSlaveUri);\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3579/HaDiscoveryRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3579/HaDiscoveryRepresentation.java\nindex 87143c02bad..70fed5b455f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3579/HaDiscoveryRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3579/HaDiscoveryRepresentation.java\n@@ -27,8 +27,7 @@ public class HaDiscoveryRepresentation extends MappingRepresentation\n     private static final String MASTER_KEY = \"master\";\n     private static final String SLAVE_KEY = \"slave\";\n     private static final String DISCOVERY_REPRESENTATION_TYPE = \"discovery\";\n-\n-    private final String basePath;\n+private final String basePath;\n     private final String isMasterUri;\n     private final String isSlaveUri;\n \n@@ -46,4 +45,4 @@ public class HaDiscoveryRepresentation extends MappingRepresentation\n         serializer.putRelativeUri( MASTER_KEY, basePath + isMasterUri );\n         serializer.putRelativeUri( SLAVE_KEY, basePath + isSlaveUri );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}