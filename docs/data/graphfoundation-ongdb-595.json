{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "595",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/595/KernelTransactionTimeoutMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/595/KernelTransactionTimeoutMonitor.java\nindex 90a588aec65..c98ae70c07a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/595/KernelTransactionTimeoutMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/595/KernelTransactionTimeoutMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.Set;\n@@ -34,40 +35,40 @@ import org.neo4j.time.SystemNanoClock;\n  */\n public class KernelTransactionTimeoutMonitor implements Runnable\n {\n-    private final KernelTransactions kernelTransactions;\n-    private final SystemNanoClock clock;\n-    private final Log log;\n+  private final KernelTransactions kernelTransactions;\n+  private final SystemNanoClock clock;\n+  private final Log log;\n \n-    public KernelTransactionTimeoutMonitor( KernelTransactions kernelTransactions, SystemNanoClock clock, LogService logService )\n-    {\n-        this.kernelTransactions = kernelTransactions;\n-        this.clock = clock;\n-        this.log = logService.getInternalLog( KernelTransactionTimeoutMonitor.class );\n-    }\n+  public KernelTransactionTimeoutMonitor(KernelTransactions kernelTransactions, SystemNanoClock clock, LogService logService)\n+  {\n+    this.kernelTransactions = kernelTransactions;\n+    this.clock = clock;\n+    this.log = logService.getInternalLog(KernelTransactionTimeoutMonitor.class);\n+  }\n \n-    @Override\n-    public synchronized void run()\n+  @Override\n+  public synchronized void run()\n+  {\n+    Set<KernelTransactionHandle> activeTransactions = kernelTransactions.activeTransactions();\n+    long nowNanos = clock.nanos();\n+    for (KernelTransactionHandle activeTransaction : activeTransactions)\n     {\n-        Set<KernelTransactionHandle> activeTransactions = kernelTransactions.activeTransactions();\n-        long nowNanos = clock.nanos();\n-        for ( KernelTransactionHandle activeTransaction : activeTransactions )\n+      long transactionTimeoutMillis = activeTransaction.timeoutMillis();\n+      if (transactionTimeoutMillis > 0)\n+      {\n+        if (isTransactionExpired(activeTransaction, nowNanos, transactionTimeoutMillis))\n         {\n-            long transactionTimeoutMillis = activeTransaction.timeoutMillis();\n-            if ( transactionTimeoutMillis > 0 )\n-            {\n-                if ( isTransactionExpired( activeTransaction, nowNanos, transactionTimeoutMillis ) )\n-                {\n-                    if ( activeTransaction.markForTermination( Status.Transaction.TransactionTimedOut ) )\n-                    {\n-                        log.warn( \"Transaction %s timeout.\", activeTransaction );\n-                    }\n-                }\n-            }\n+          if (activeTransaction.markForTermination(Status.Transaction.TransactionTimedOut))\n+          {\n+            log.warn(\"Transaction %s timeout.\", activeTransaction);\n+          }\n         }\n+      }\n     }\n+  }\n \n-    private boolean isTransactionExpired( KernelTransactionHandle activeTransaction, long nowNanos, long transactionTimeoutMillis )\n-    {\n-        return nowNanos - activeTransaction.startTimeNanos() > TimeUnit.MILLISECONDS.toNanos( transactionTimeoutMillis );\n-    }\n+  private boolean isTransactionExpired(KernelTransactionHandle activeTransaction, long nowNanos, long transactionTimeoutMillis)\n+  {\n+    return nowNanos - activeTransaction.startTimeNanos() > TimeUnit.MILLISECONDS.toNanos(transactionTimeoutMillis);\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/595/KernelTransactionTimeoutMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/595/KernelTransactionTimeoutMonitor.java\nindex 90a588aec65..1b2d656d559 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/595/KernelTransactionTimeoutMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/595/KernelTransactionTimeoutMonitor.java\n@@ -70,4 +70,4 @@ public class KernelTransactionTimeoutMonitor implements Runnable\n     {\n         return nowNanos - activeTransaction.startTimeNanos() > TimeUnit.MILLISECONDS.toNanos( transactionTimeoutMillis );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}