{
    "project_name": "Angel-ML-angel",
    "violation_id": "812",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/812/LessZero.java\nindex 1c96da85ce5..aae0343d0e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/812/LessZero.java\n@@ -14,40 +14,41 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.psf.pagerank;\n \n import com.tencent.angel.ml.math2.ufuncs.expression.Unary;\n \n public class LessZero extends Unary {\n \n-  private float threshold;\n-\n-  public LessZero(boolean inplace, float threshold) {\n-    setInplace(inplace);\n-    this.threshold = threshold;\n-  }\n-\n-  @Override\n-  public double apply(double elem) {\n-    if (elem < threshold) return 0;\n-    return elem;\n-  }\n-\n-  @Override\n-  public float apply(float elem) {\n-    if (elem < threshold) return 0;\n-    return elem;\n-  }\n-\n-  @Override\n-  public long apply(long elem) {\n-    if (elem < threshold) return 0;\n-    return elem;\n-  }\n-\n-  @Override\n-  public int apply(int elem) {\n-    if (elem < threshold) return 0;\n-    return elem;\n-  }\n+    private float threshold;\n+\n+    public LessZero(boolean inplace, float threshold) {\n+        setInplace(inplace);\n+        this.threshold = threshold;\n+    }\n+\n+    @Override\n+    public double apply(double elem) {\n+        if (elem < threshold) return 0;\n+        return elem;\n+    }\n+\n+    @Override\n+    public float apply(float elem) {\n+        if (elem < threshold) return 0;\n+        return elem;\n+    }\n+\n+    @Override\n+    public long apply(long elem) {\n+        if (elem < threshold) return 0;\n+        return elem;\n+    }\n+\n+    @Override\n+    public int apply(int elem) {\n+        if (elem < threshold) return 0;\n+        return elem;\n+    }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/812/LessZero.java\nindex 1c96da85ce5..323f3f2c8df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/812/LessZero.java\n@@ -29,25 +29,29 @@ public class LessZero extends Unary {\n \n   @Override\n   public double apply(double elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+  return 0;\n     return elem;\n   }\n \n   @Override\n   public float apply(float elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+  return 0;\n     return elem;\n   }\n \n   @Override\n   public long apply(long elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+  return 0;\n     return elem;\n   }\n \n   @Override\n   public int apply(int elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+  return 0;\n     return elem;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/812/LessZero.java\nindex 1c96da85ce5..67bb656ab51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/812/LessZero.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/812/LessZero.java\n@@ -29,25 +29,30 @@ public class LessZero extends Unary {\n \n   @Override\n   public double apply(double elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+      return 0;\n     return elem;\n   }\n \n   @Override\n   public float apply(float elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+      return 0;\n     return elem;\n   }\n \n   @Override\n   public long apply(long elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+      return 0;\n     return elem;\n   }\n \n   @Override\n   public int apply(int elem) {\n-    if (elem < threshold) return 0;\n+    if (elem < threshold)\n+      return 0;\n     return elem;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}