{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1719",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1719/IdBasedStoreEntityCounters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1719/IdBasedStoreEntityCounters.java\nindex 9881ef296bd..93f43de1641 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1719/IdBasedStoreEntityCounters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1719/IdBasedStoreEntityCounters.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.stats;\n \n import org.neo4j.kernel.impl.store.id.IdGeneratorFactory;\n@@ -28,34 +29,34 @@ import static org.neo4j.kernel.impl.store.id.IdType.RELATIONSHIP_TYPE_TOKEN;\n \n public class IdBasedStoreEntityCounters implements StoreEntityCounters\n {\n-    private final IdGeneratorFactory idGeneratorFactory;\n-\n-    public IdBasedStoreEntityCounters( IdGeneratorFactory idGeneratorFactory )\n-    {\n-        this.idGeneratorFactory = idGeneratorFactory;\n-    }\n-\n-    @Override\n-    public long nodes()\n-    {\n-        return idGeneratorFactory.get( NODE ).getNumberOfIdsInUse();\n-    }\n-\n-    @Override\n-    public long relationships()\n-    {\n-        return idGeneratorFactory.get( RELATIONSHIP ).getNumberOfIdsInUse();\n-    }\n-\n-    @Override\n-    public long properties()\n-    {\n-        return idGeneratorFactory.get( PROPERTY ).getNumberOfIdsInUse();\n-    }\n-\n-    @Override\n-    public long relationshipTypes()\n-    {\n-        return idGeneratorFactory.get( RELATIONSHIP_TYPE_TOKEN ).getNumberOfIdsInUse();\n-    }\n+  private final IdGeneratorFactory idGeneratorFactory;\n+\n+  public IdBasedStoreEntityCounters(IdGeneratorFactory idGeneratorFactory)\n+  {\n+    this.idGeneratorFactory = idGeneratorFactory;\n+  }\n+\n+  @Override\n+  public long nodes()\n+  {\n+    return idGeneratorFactory.get(NODE).getNumberOfIdsInUse();\n+  }\n+\n+  @Override\n+  public long relationships()\n+  {\n+    return idGeneratorFactory.get(RELATIONSHIP).getNumberOfIdsInUse();\n+  }\n+\n+  @Override\n+  public long properties()\n+  {\n+    return idGeneratorFactory.get(PROPERTY).getNumberOfIdsInUse();\n+  }\n+\n+  @Override\n+  public long relationshipTypes()\n+  {\n+    return idGeneratorFactory.get(RELATIONSHIP_TYPE_TOKEN).getNumberOfIdsInUse();\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1719/IdBasedStoreEntityCounters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1719/IdBasedStoreEntityCounters.java\nindex 9881ef296bd..b85e3f566a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1719/IdBasedStoreEntityCounters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1719/IdBasedStoreEntityCounters.java\n@@ -58,4 +58,4 @@ public class IdBasedStoreEntityCounters implements StoreEntityCounters\n     {\n         return idGeneratorFactory.get( RELATIONSHIP_TYPE_TOKEN ).getNumberOfIdsInUse();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}