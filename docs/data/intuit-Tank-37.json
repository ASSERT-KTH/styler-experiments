{
    "project_name": "intuit-Tank",
    "violation_id": "37",
    "information": {
        "violations": [
            {
                "line": "23",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\npublic class HDResponse {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/37/HDResponse.java\nindex 6328edb554f..9812877c525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/intuit-Tank/styler/05_predictions/final/files-repaired/37/HDResponse.java\n@@ -20,7 +20,8 @@ import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@\n+XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDResponse {\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/37/HDResponse.java\nindex 6328edb554f..71f2684dfa8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/checkstyle_idea/37/HDResponse.java\n@@ -20,43 +20,44 @@ import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"response\", propOrder = {\"respFormat\", \"assignment\",\n+  \"validation\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDResponse {\n \n-    @XmlAttribute(name = \"format\")\n-    private String respFormat;\n-    @XmlElement(name = \"assignments\")\n-    private HDAssignment assignment = new HDAssignment();\n-    @XmlElement(name = \"validations\")\n-    private HDValidation validation = new HDValidation();\n-\n-    public HDResponse() {\n-    }\n-\n-    public HDResponse(@Nonnull String responseFormat) {\n-        this.respFormat = responseFormat;\n-    }\n-\n-    /**\n-     * @return the respFormat\n-     */\n-    public String getRespFormat() {\n-        return respFormat;\n-    }\n-\n-    /**\n-     * @return the assignment\n-     */\n-    public HDAssignment getAssignment() {\n-        return assignment;\n-    }\n-\n-    /**\n-     * @return the validation\n-     */\n-    public HDValidation getValidation() {\n-        return validation;\n-    }\n+  @XmlAttribute(name = \"format\")\n+  private String respFormat;\n+  @XmlElement(name = \"assignments\")\n+  private HDAssignment assignment = new HDAssignment();\n+  @XmlElement(name = \"validations\")\n+  private HDValidation validation = new HDValidation();\n+\n+  public HDResponse() {\n+  }\n+\n+  public HDResponse(@Nonnull String responseFormat) {\n+    this.respFormat = responseFormat;\n+  }\n+\n+  /**\n+   * @return the respFormat\n+   */\n+  public String getRespFormat() {\n+    return respFormat;\n+  }\n+\n+  /**\n+   * @return the assignment\n+   */\n+  public HDAssignment getAssignment() {\n+    return assignment;\n+  }\n+\n+  /**\n+   * @return the validation\n+   */\n+  public HDValidation getValidation() {\n+    return validation;\n+  }\n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/37/HDResponse.java\nindex 6328edb554f..59077523141 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/naturalize/37/HDResponse.java\n@@ -59,4 +59,4 @@ public class HDResponse {\n         return validation;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/37/HDResponse.java\nindex 6328edb554f..82a5a527754 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/codebuff/37/HDResponse.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import javax.annotation.Nonnull;\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n@@ -23,17 +25,19 @@ import javax.xml.bind.annotation.XmlType;\n @XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDResponse {\n-\n     @XmlAttribute(name = \"format\")\n     private String respFormat;\n+\n     @XmlElement(name = \"assignments\")\n     private HDAssignment assignment = new HDAssignment();\n+\n     @XmlElement(name = \"validations\")\n     private HDValidation validation = new HDValidation();\n \n     public HDResponse() {\n     }\n \n+\n     public HDResponse(@Nonnull String responseFormat) {\n         this.respFormat = responseFormat;\n     }\n@@ -41,6 +45,8 @@ public class HDResponse {\n     /**\n      * @return the respFormat\n      */\n+\n+\n     public String getRespFormat() {\n         return respFormat;\n     }\n@@ -48,6 +54,8 @@ public class HDResponse {\n     /**\n      * @return the assignment\n      */\n+\n+\n     public HDAssignment getAssignment() {\n         return assignment;\n     }\n@@ -55,8 +63,10 @@ public class HDResponse {\n     /**\n      * @return the validation\n      */\n+\n+\n     public HDValidation getValidation() {\n         return validation;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/37/HDResponse.java\nindex 6328edb554f..9812877c525 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/random/files-repaired/37/HDResponse.java\n@@ -20,7 +20,8 @@ import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@\n+XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDResponse {\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "22",
                    "column": "14",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "14",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "25",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "35",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "35",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "49",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "62",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "76",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "22",
                    "column": "86",
                    "severity": "warning",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "22",
                    "column": "86",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/37/HDResponse.java\nindex 6328edb554f..b41027c99fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/violations/37/HDResponse.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/intuit-Tank/styler/05_predictions/three_grams/files-repaired/37/HDResponse.java\n@@ -19,8 +19,8 @@ import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlElement;\n import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType(name = \"response\", propOrder = { \"respFormat\", \"assignment\", \"validation\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name=\"response\",propOrder={\"respFormat\",\"assignment\",\"validation\"},namespace=HarnessDataNamespace.\n+NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n public class HDResponse {\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}