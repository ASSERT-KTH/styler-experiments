{
    "project_name": "Angel-ML-angel",
    "violation_id": "112",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/112/AdjustParam.java\nindex 77465bf3c51..5a072931d4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/112/AdjustParam.java\n@@ -27,41 +27,41 @@ import java.util.List;\n \n public class AdjustParam extends UpdateParam {\n \n-  private int seed;\n-  private int partitionId;\n-  private int model;\n-  private float[] gradient;\n-  private int[][] sentences;\n+    private int seed;\n+    private int partitionId;\n+    private int model;\n+    private float[] gradient;\n+    private int[][] sentences;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n-                     int partitionId,\n-                     int model,\n-                     float[] gradient,\n-                     int[][] sentences) {\n-    super(matrixId);\n-    this.seed = seed;\n-    this.partitionId = partitionId;\n-    this.model = model;\n-    this.gradient = gradient;\n-    this.sentences = sentences;\n-  }\n+    public AdjustParam(int matrixId,\n+                       int seed,\n+                       int partitionId,\n+                       int model,\n+                       float[] gradient,\n+                       int[][] sentences) {\n+        super(matrixId);\n+        this.seed = seed;\n+        this.partitionId = partitionId;\n+        this.model = model;\n+        this.gradient = gradient;\n+        this.sentences = sentences;\n+    }\n \n-  @Override\n-  public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-            .getPartitions(matrixId);\n-    List<PartitionUpdateParam> params = new ArrayList<>();\n-    for (PartitionKey pkey : pkeys) {\n-      params.add(new AdjustPartitionParam(matrixId,\n-              pkey,\n-              seed,\n-              partitionId,\n-              model,\n-              gradient,\n-              sentences));\n+    @Override\n+    public List<PartitionUpdateParam> split() {\n+        List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n+                .getPartitions(matrixId);\n+        List<PartitionUpdateParam> params = new ArrayList<>();\n+        for (PartitionKey pkey : pkeys) {\n+            params.add(new AdjustPartitionParam(matrixId,\n+                    pkey,\n+                    seed,\n+                    partitionId,\n+                    model,\n+                    gradient,\n+                    sentences));\n+        }\n+        return params;\n     }\n-    return params;\n-  }\n }\n \n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/112/AdjustParam.java\nindex 77465bf3c51..aec548c218e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/112/AdjustParam.java\n@@ -33,13 +33,11 @@ public class AdjustParam extends UpdateParam {\n   private float[] gradient;\n   private int[][] sentences;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n+  public AdjustParam(int matrixId, int seed,\n                      int partitionId,\n-                     int model,\n-                     float[] gradient,\n+                     int model, float[] gradient,\n                      int[][] sentences) {\n-    super(matrixId);\n+  super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n     this.model = model;\n@@ -49,19 +47,16 @@ public class AdjustParam extends UpdateParam {\n \n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-            .getPartitions(matrixId);\n-    List<PartitionUpdateParam> params = new ArrayList<>();\n+    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n+List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n-      params.add(new AdjustPartitionParam(matrixId,\n-              pkey,\n+      params.add(new AdjustPartitionParam(matrixId, pkey,\n               seed,\n               partitionId,\n               model,\n               gradient,\n               sentences));\n-    }\n+  }\n     return params;\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/112/AdjustParam.java\nindex 77465bf3c51..97f42ede31c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/112/AdjustParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/112/AdjustParam.java\n@@ -21,7 +21,6 @@ import com.tencent.angel.PartitionKey;\n import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -33,12 +32,7 @@ public class AdjustParam extends UpdateParam {\n   private float[] gradient;\n   private int[][] sentences;\n \n-  public AdjustParam(int matrixId,\n-                     int seed,\n-                     int partitionId,\n-                     int model,\n-                     float[] gradient,\n-                     int[][] sentences) {\n+  public AdjustParam(int matrixId, int seed, int partitionId, int model, float[] gradient, int[][] sentences) {\n     super(matrixId);\n     this.seed = seed;\n     this.partitionId = partitionId;\n@@ -49,19 +43,12 @@ public class AdjustParam extends UpdateParam {\n \n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-            .getPartitions(matrixId);\n+    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n-      params.add(new AdjustPartitionParam(matrixId,\n-              pkey,\n-              seed,\n-              partitionId,\n-              model,\n-              gradient,\n-              sentences));\n+      params.add(new AdjustPartitionParam(matrixId, pkey, seed, partitionId, model, gradient, sentences));\n     }\n     return params;\n   }\n-}\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}