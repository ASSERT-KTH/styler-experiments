{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1817",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1817/LeaderOnlyStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1817/LeaderOnlyStrategy.java\nindex 03577b57d72..87fcc293992 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1817/LeaderOnlyStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1817/LeaderOnlyStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.upstream.strategies;\n \n import java.util.Map;\n@@ -28,35 +29,35 @@ import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionException;\n import org.neo4j.causalclustering.upstream.UpstreamDatabaseSelectionStrategy;\n import org.neo4j.helpers.Service;\n \n-@Service.Implementation( UpstreamDatabaseSelectionStrategy.class )\n+@Service.Implementation(UpstreamDatabaseSelectionStrategy.class)\n public class LeaderOnlyStrategy extends UpstreamDatabaseSelectionStrategy\n {\n-    public static final String IDENTITY = \"leader-only\";\n+  public static final String IDENTITY = \"leader-only\";\n+\n+  public LeaderOnlyStrategy()\n+  {\n+    super(IDENTITY);\n+  }\n \n-    public LeaderOnlyStrategy()\n+  @Override\n+  public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n+  {\n+    Map<MemberId, RoleInfo> memberRoles = topologyService.allCoreRoles();\n+\n+    if (memberRoles.size() == 0)\n     {\n-        super( IDENTITY );\n+      throw new UpstreamDatabaseSelectionException(\"No core servers available\");\n     }\n \n-    @Override\n-    public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n+    for (Map.Entry<MemberId, RoleInfo> entry : memberRoles.entrySet())\n     {\n-        Map<MemberId,RoleInfo> memberRoles = topologyService.allCoreRoles();\n-\n-        if ( memberRoles.size() == 0 )\n-        {\n-            throw new UpstreamDatabaseSelectionException( \"No core servers available\" );\n-        }\n-\n-        for ( Map.Entry<MemberId,RoleInfo> entry : memberRoles.entrySet() )\n-        {\n-            RoleInfo role = entry.getValue();\n-            if ( role == RoleInfo.LEADER )\n-            {\n-                return Optional.of( entry.getKey() );\n-            }\n-        }\n-\n-        return Optional.empty();\n+      RoleInfo role = entry.getValue();\n+      if (role == RoleInfo.LEADER)\n+      {\n+        return Optional.of(entry.getKey());\n+      }\n     }\n+\n+    return Optional.empty();\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1817/LeaderOnlyStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1817/LeaderOnlyStrategy.java\nindex 03577b57d72..29c3e84fb14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1817/LeaderOnlyStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1817/LeaderOnlyStrategy.java\n@@ -42,8 +42,7 @@ public class LeaderOnlyStrategy extends UpstreamDatabaseSelectionStrategy\n     public Optional<MemberId> upstreamDatabase() throws UpstreamDatabaseSelectionException\n     {\n         Map<MemberId,RoleInfo> memberRoles = topologyService.allCoreRoles();\n-\n-        if ( memberRoles.size() == 0 )\n+if ( memberRoles.size() == 0 )\n         {\n             throw new UpstreamDatabaseSelectionException( \"No core servers available\" );\n         }\n@@ -59,4 +58,4 @@ public class LeaderOnlyStrategy extends UpstreamDatabaseSelectionStrategy\n \n         return Optional.empty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}