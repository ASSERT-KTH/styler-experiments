{
    "project_name": "wso2-attic-commons",
    "violation_id": "259",
    "information": {
        "violations": [
            {
                "line": "33",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 136).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tString [] nextLine;\n\t\twhile ((nextLine = reader.readNext()) != null) {\n\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\n\t\t}\n\t\t\n\t\t// Try writing it back out as CSV to the console",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/259/AddressExample.java\nindex ac18be5ef05..702e681c91a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/259/AddressExample.java\n@@ -30,9 +30,12 @@ public class AddressExample {\n \t\tCSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tString [] nextLine;\r\n \t\twhile ((nextLine = reader.readNext()) != null) {\r\n-\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n+      System.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\"+nextLine\r\n+\t[\r\n+\r\n+  2] + \"]\");\r\n \t\t}\r\n-\t\t\r\n+\r\n \t\t// Try writing it back out as CSV to the console\r\n \t\tCSVReader reader2 = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tList allElements = reader2.readAll();\r\n",
            "diff_size": 5
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/259/AddressExample.java\nindex ac18be5ef05..afe57452b7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/259/AddressExample.java\n@@ -7,42 +7,42 @@ import au.com.bytecode.opencsv.CSVReader;\n import au.com.bytecode.opencsv.CSVWriter;\r\n \r\n /**\r\n-Copyright 2005 Bytecode Pty Ltd.\r\n+ * Copyright 2005 Bytecode Pty Ltd.\r\n+ * <p>\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+public class AddressExample {\r\n \r\n-Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-you may not use this file except in compliance with the License.\r\n-You may obtain a copy of the License at\r\n+  private static final String ADDRESS_FILE = \"examples/addresses.csv\";\r\n \r\n-http://www.apache.org/licenses/LICENSE-2.0\r\n+  public static void main(String[] args) throws IOException {\r\n+\r\n+    CSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n+    String[] nextLine;\r\n+    while ((nextLine = reader.readNext()) != null) {\r\n+      System.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n+    }\r\n+\r\n+    // Try writing it back out as CSV to the console\r\n+    CSVReader reader2 = new CSVReader(new FileReader(ADDRESS_FILE));\r\n+    List allElements = reader2.readAll();\r\n+    StringWriter sw = new StringWriter();\r\n+    CSVWriter writer = new CSVWriter(sw);\r\n+    writer.writeAll(allElements);\r\n+\r\n+    System.out.println(\"\\n\\nGenerated CSV File:\\n\\n\");\r\n+    System.out.println(sw.toString());\r\n \r\n-Unless required by applicable law or agreed to in writing, software\r\n-distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-See the License for the specific language governing permissions and\r\n-limitations under the License.\r\n-*/\r\n-public class AddressExample {\r\n \r\n-\tprivate static final String ADDRESS_FILE=\"examples/addresses.csv\";\r\n-\t\r\n-\tpublic static void main(String[] args) throws IOException {\r\n-\t\t\r\n-\t\tCSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n-\t\tString [] nextLine;\r\n-\t\twhile ((nextLine = reader.readNext()) != null) {\r\n-\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n-\t\t}\r\n-\t\t\r\n-\t\t// Try writing it back out as CSV to the console\r\n-\t\tCSVReader reader2 = new CSVReader(new FileReader(ADDRESS_FILE));\r\n-\t\tList allElements = reader2.readAll();\r\n-\t\tStringWriter sw = new StringWriter();\r\n-\t\tCSVWriter writer = new CSVWriter(sw);\r\n-\t\twriter.writeAll(allElements);\r\n-\t\t\r\n-\t\tSystem.out.println(\"\\n\\nGenerated CSV File:\\n\\n\");\r\n-\t\tSystem.out.println(sw.toString());\r\n-\t\t\r\n-\t\t\r\n-\t}\r\n+  }\r\n }\r\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/259/AddressExample.java\nindex ac18be5ef05..835836709de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/259/AddressExample.java\n@@ -25,10 +25,10 @@ public class AddressExample {\n \r\n \tprivate static final String ADDRESS_FILE=\"examples/addresses.csv\";\r\n \t\r\n-\tpublic static void main(String[] args) throws IOException {\r\n-\t\t\r\n-\t\tCSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n-\t\tString [] nextLine;\r\n+\tpublic static void main(String[] args) throws IOException {\n+CSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\n+\n+        String [] nextLine;\r\n \t\twhile ((nextLine = reader.readNext()) != null) {\r\n \t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n \t\t}\r\n@@ -38,11 +38,9 @@ public class AddressExample {\n \t\tList allElements = reader2.readAll();\r\n \t\tStringWriter sw = new StringWriter();\r\n \t\tCSVWriter writer = new CSVWriter(sw);\r\n-\t\twriter.writeAll(allElements);\r\n-\t\t\r\n-\t\tSystem.out.println(\"\\n\\nGenerated CSV File:\\n\\n\");\r\n-\t\tSystem.out.println(sw.toString());\r\n-\t\t\r\n-\t\t\r\n-\t}\r\n-}\r\n+\t\twriter.writeAll(allElements);\n+System.out.println(\"\\n\\nGenerated CSV File:\\n\\n\");\r\n+\t\tSystem.out.println(sw.toString());\n+    }\n+\n+\t\t\t\t\t}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/259/AddressExample.java\nindex ac18be5ef05..45d538c4ed4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/259/AddressExample.java\n@@ -30,10 +30,7 @@ public class AddressExample {\n \t\tCSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tString [] nextLine;\r\n \t\twhile ((nextLine = reader.readNext()) != null) {\r\n-\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n-\t\t}\r\n-\t\t\r\n-\t\t// Try writing it back out as CSV to the console\r\n+\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\" ) ;}// Try writing it back out as CSV to the console\r\n \t\tCSVReader reader2 = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tList allElements = reader2.readAll();\r\n \t\tStringWriter sw = new StringWriter();\r\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/259/AddressExample.java\nindex ac18be5ef05..702e681c91a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/259/AddressExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/259/AddressExample.java\n@@ -30,9 +30,12 @@ public class AddressExample {\n \t\tCSVReader reader = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tString [] nextLine;\r\n \t\twhile ((nextLine = reader.readNext()) != null) {\r\n-\t\t\tSystem.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\" + nextLine[2] + \"]\");\r\n+      System.out.println(\"Name: [\" + nextLine[0] + \"]\\nAddress: [\" + nextLine[1] + \"]\\nEmail: [\"+nextLine\r\n+\t[\r\n+\r\n+  2] + \"]\");\r\n \t\t}\r\n-\t\t\r\n+\r\n \t\t// Try writing it back out as CSV to the console\r\n \t\tCSVReader reader2 = new CSVReader(new FileReader(ADDRESS_FILE));\r\n \t\tList allElements = reader2.readAll();\r\n",
            "diff_size": 5
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}