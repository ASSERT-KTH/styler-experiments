{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "155",
    "information": {
        "violations": [
            {
                "line": "103",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        //   swagger interface is a.b.c, and consumer interface is a.b.c too.\n        //   version 1, they are the same\n        //   version 2, producer add a new operation, that means swagger have more operation than consumer interface a.b.c\n        //              interface a.b.c in consumer process is the old interface\n        //              so for swagger, can not do any valid check here\n        //              only need to save found method, that's enough.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/155/SchemaMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/155/SchemaMeta.java\nindex 56529047931..c6ce9735d70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/155/SchemaMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/155/SchemaMeta.java\n@@ -110,7 +110,7 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n               operation.getOperationId(),\n               swaggerIntf.getName(),\n               getSchemaId());\n-          continue;\n+continue;\n         }\n \n         String httpMethod = operationEntry.getKey().name();\n@@ -160,4 +160,4 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n   public void setProviderHandlerChain(List<Handler> providerHandlerChain) {\n     this.providerHandlerChain = providerHandlerChain;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/155/SchemaMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/155/SchemaMeta.java\nindex 56529047931..8cd31928383 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/155/SchemaMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/155/SchemaMeta.java\n@@ -20,14 +20,12 @@ package org.apache.servicecomb.core.definition;\n import java.lang.reflect.Method;\n import java.util.List;\n import java.util.Map.Entry;\n-\n import org.apache.servicecomb.core.Handler;\n import org.apache.servicecomb.core.exception.ExceptionUtils;\n import org.apache.servicecomb.foundation.common.utils.ReflectUtils;\n import org.apache.servicecomb.swagger.converter.SwaggerToClassGenerator;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import io.swagger.models.HttpMethod;\n import io.swagger.models.Operation;\n import io.swagger.models.Path;\n@@ -37,6 +35,7 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n   private static final Logger LOGGER = LoggerFactory.getLogger(SchemaMeta.class);\n \n   // \u5982\u679c\u8981\u751f\u6210class\uff0c\u4f7f\u7528\u8fd9\u4e2apackage\n+\n   private String packageName;\n \n   private Swagger swagger;\n@@ -44,12 +43,15 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n   private MicroserviceMeta microserviceMeta;\n \n   // microserviceName:schemaId\n+\n   private String microserviceQualifiedName;\n \n   // \u5951\u7ea6\u5bf9\u5e94\u7684\u63a5\u53e3\n+\n   private Class<?> swaggerIntf;\n \n   // handlerChain\u662fmicroservice\u7ea7\u522b\u7684\n+\n   private List<Handler> consumerHandlerChain;\n \n   private List<Handler> providerHandlerChain;\n@@ -58,19 +60,14 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n \n   public SchemaMeta(Swagger swagger, MicroserviceMeta microserviceMeta, String schemaId) {\n     this.packageName = SchemaUtils.generatePackageName(microserviceMeta, schemaId);\n-\n     this.swagger = swagger;\n     this.name = schemaId;\n-\n     this.microserviceMeta = microserviceMeta;\n     this.microserviceQualifiedName = microserviceMeta.getName() + \".\" + schemaId;\n-\n     swaggerToClassGenerator = new SwaggerToClassGenerator(microserviceMeta.getClassLoader(), swagger, packageName);\n     swaggerIntf = swaggerToClassGenerator.convert();\n-\n     createOperationMgr(\"schemaMeta \" + schemaId + \" operation mgr\");\n     operationMgr.setRegisterErrorFmt(\"Operation name repeat, schema=%s, operation=%s\");\n-\n     initOperations();\n   }\n \n@@ -104,12 +101,13 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n         //              interface a.b.c in consumer process is the old interface\n         //              so for swagger, can not do any valid check here\n         //              only need to save found method, that's enough.\n+\n         Method method = ReflectUtils.findMethod(swaggerIntf, operation.getOperationId());\n         if (method == null) {\n           LOGGER.warn(\"method {} not found in swagger interface {}, schemaId={}\",\n-              operation.getOperationId(),\n-              swaggerIntf.getName(),\n-              getSchemaId());\n+operation.getOperationId(),\n+swaggerIntf.getName(),\n+getSchemaId());\n           continue;\n         }\n \n@@ -160,4 +158,4 @@ public class SchemaMeta extends CommonService<OperationMeta> {\n   public void setProviderHandlerChain(List<Handler> providerHandlerChain) {\n     this.providerHandlerChain = providerHandlerChain;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}