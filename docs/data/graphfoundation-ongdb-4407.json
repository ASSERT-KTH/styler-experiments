{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "4407",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4407/BaseSetting.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4407/BaseSetting.java\nindex f975ae55644..6cbb4adfce9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4407/BaseSetting.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4407/BaseSetting.java\n@@ -17,111 +17,113 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.config;\n \n import java.util.Optional;\n \n /**\n  * All fields specified here are set via annotations when loaded\n+ *\n  * @deprecated The settings API will be completely rewritten in 4.0\n  */\n @Deprecated\n public abstract class BaseSetting<T> implements Setting<T>\n {\n-    private boolean deprecated;\n-    private String replacement;\n-    private boolean internal;\n-    private boolean secret;\n-    private boolean dynamic;\n-    private String documentedDefaultValue;\n-    private String description;\n-\n-    @Override\n-    public boolean deprecated()\n-    {\n-        return this.deprecated;\n-    }\n-\n-    public void setDeprecated( final boolean val )\n-    {\n-        this.deprecated = val;\n-    }\n-\n-    @Override\n-    public Optional<String> replacement()\n-    {\n-        return Optional.ofNullable( this.replacement );\n-    }\n-\n-    public void setReplacement( final String val )\n-    {\n-        this.replacement = val;\n-    }\n-\n-    @Override\n-    public boolean internal()\n-    {\n-        return this.internal;\n-    }\n-\n-    public void setInternal( final boolean val )\n-    {\n-        this.internal = val;\n-    }\n-\n-    @Override\n-    public boolean secret()\n-    {\n-        return this.secret;\n-    }\n-\n-    public void setSecret( final boolean val )\n-    {\n-        this.secret = val;\n-    }\n-\n-    @Override\n-    public Optional<String> documentedDefaultValue()\n-    {\n-        return Optional.ofNullable( this.documentedDefaultValue );\n-    }\n-\n-    public void setDocumentedDefaultValue( final String val )\n-    {\n-        this.documentedDefaultValue = val;\n-    }\n-\n-    @Override\n-    public Optional<String> description()\n-    {\n-        return Optional.ofNullable( description );\n-    }\n-\n-    public void setDescription( final String description )\n-    {\n-        this.description = description;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return valueDescription();\n-    }\n-\n-    /**\n-     * Checks whether this setting is dynamic or not. Dynamic properties are allowed to be changed at runtime without\n-     * restarting the server.\n-     *\n-     * @return {@code true} if this setting can be changed at runtime.\n-     */\n-    @Override\n-    public boolean dynamic()\n-    {\n-        return dynamic;\n-    }\n-\n-    public void setDynamic( boolean dynamic )\n-    {\n-        this.dynamic = dynamic;\n-    }\n+  private boolean deprecated;\n+  private String replacement;\n+  private boolean internal;\n+  private boolean secret;\n+  private boolean dynamic;\n+  private String documentedDefaultValue;\n+  private String description;\n+\n+  @Override\n+  public boolean deprecated()\n+  {\n+    return this.deprecated;\n+  }\n+\n+  public void setDeprecated(final boolean val)\n+  {\n+    this.deprecated = val;\n+  }\n+\n+  @Override\n+  public Optional<String> replacement()\n+  {\n+    return Optional.ofNullable(this.replacement);\n+  }\n+\n+  public void setReplacement(final String val)\n+  {\n+    this.replacement = val;\n+  }\n+\n+  @Override\n+  public boolean internal()\n+  {\n+    return this.internal;\n+  }\n+\n+  public void setInternal(final boolean val)\n+  {\n+    this.internal = val;\n+  }\n+\n+  @Override\n+  public boolean secret()\n+  {\n+    return this.secret;\n+  }\n+\n+  public void setSecret(final boolean val)\n+  {\n+    this.secret = val;\n+  }\n+\n+  @Override\n+  public Optional<String> documentedDefaultValue()\n+  {\n+    return Optional.ofNullable(this.documentedDefaultValue);\n+  }\n+\n+  public void setDocumentedDefaultValue(final String val)\n+  {\n+    this.documentedDefaultValue = val;\n+  }\n+\n+  @Override\n+  public Optional<String> description()\n+  {\n+    return Optional.ofNullable(description);\n+  }\n+\n+  public void setDescription(final String description)\n+  {\n+    this.description = description;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return valueDescription();\n+  }\n+\n+  /**\n+   * Checks whether this setting is dynamic or not. Dynamic properties are allowed to be changed at runtime without\n+   * restarting the server.\n+   *\n+   * @return {@code true} if this setting can be changed at runtime.\n+   */\n+  @Override\n+  public boolean dynamic()\n+  {\n+    return dynamic;\n+  }\n+\n+  public void setDynamic(boolean dynamic)\n+  {\n+    this.dynamic = dynamic;\n+  }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4407/BaseSetting.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4407/BaseSetting.java\nindex f975ae55644..428bbefc261 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4407/BaseSetting.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4407/BaseSetting.java\n@@ -124,4 +124,4 @@ public abstract class BaseSetting<T> implements Setting<T>\n     {\n         this.dynamic = dynamic;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}