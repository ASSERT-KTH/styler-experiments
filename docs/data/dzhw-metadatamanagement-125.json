{
    "project_name": "dzhw-metadatamanagement",
    "violation_id": "125",
    "information": {
        "violations": [
            {
                "line": "23",
                "column": "66",
                "severity": "error",
                "message": "'}' at column 66 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidDataSetType constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/125/ValidDataSetTypeValidator.java\nindex 696b63a75b5..7d5e24863ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/125/ValidDataSetTypeValidator.java\n@@ -20,7 +20,9 @@ public class ValidDataSetTypeValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDataSetType constraintAnnotation) {}\n+  public void initialize(ValidDataSetType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/125/ValidDataSetTypeValidator.java\nindex 696b63a75b5..083afd2d016 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/125/ValidDataSetTypeValidator.java\n@@ -9,22 +9,22 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSetTypes;\n /**\n  * Validator for the type of a data set. Only valued from the {@link DataSetTypes} class are\n  * allowed.\n- *\n  */\n-public class ValidDataSetTypeValidator implements \n-             ConstraintValidator<ValidDataSetType, I18nString> {\n+public class ValidDataSetTypeValidator implements\n+    ConstraintValidator<ValidDataSetType, I18nString> {\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDataSetType constraintAnnotation) {}\n+  public void initialize(ValidDataSetType constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "21",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/125/ValidDataSetTypeValidator.java\nindex 696b63a75b5..e6131755663 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/naturalize/125/ValidDataSetTypeValidator.java\n@@ -11,9 +11,7 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSetTypes;\n  * allowed.\n  *\n  */\n-public class ValidDataSetTypeValidator implements \n-             ConstraintValidator<ValidDataSetType, I18nString> {\n-\n+public class ValidDataSetTypeValidator implements ConstraintValidator<ValidDataSetType, I18nString> {\n   /*\n    * (non-Javadoc)\n    * \n@@ -35,4 +33,4 @@ public class ValidDataSetTypeValidator implements\n     return DataSetTypes.ALL.contains(dataSetType);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/125/ValidDataSetTypeValidator.java\nindex 696b63a75b5..8284811dff6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/125/ValidDataSetTypeValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.I18nString;\n import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSetTypes;\n \n@@ -11,16 +10,20 @@ import eu.dzhw.fdz.metadatamanagement.datasetmanagement.domain.DataSetTypes;\n  * allowed.\n  *\n  */\n-public class ValidDataSetTypeValidator implements \n-             ConstraintValidator<ValidDataSetType, I18nString> {\n+\n+\n+public class ValidDataSetTypeValidator implements ConstraintValidator<ValidDataSetType, I18nString> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidDataSetType constraintAnnotation) {}\n+  public void initialize(ValidDataSetType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -28,11 +31,13 @@ public class ValidDataSetTypeValidator implements\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(I18nString dataSetType, ConstraintValidatorContext context) {\n+  public boolean isValid(I18nString dataSetType,\n+    ConstraintValidatorContext context) {\n \n     // check for data set types\n     return DataSetTypes.ALL.contains(dataSetType);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/125/ValidDataSetTypeValidator.java\nindex 696b63a75b5..7d5e24863ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/125/ValidDataSetTypeValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/125/ValidDataSetTypeValidator.java\n@@ -20,7 +20,9 @@ public class ValidDataSetTypeValidator implements\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDataSetType constraintAnnotation) {}\n+  public void initialize(ValidDataSetType constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "23",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}