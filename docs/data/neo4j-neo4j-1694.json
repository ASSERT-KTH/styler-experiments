{
    "project_name": "neo4j-neo4j",
    "violation_id": "1694",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/1694/EntryTimespanThreshold.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/1694/EntryTimespanThreshold.java\nindex 7fd6def78f9..720a386c215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/1694/EntryTimespanThreshold.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/1694/EntryTimespanThreshold.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n import java.io.IOException;\n@@ -37,12 +38,12 @@ public final class EntryTimespanThreshold implements Threshold\n     private final Log log;\n     private long lowerLimit;\n \n-    EntryTimespanThreshold( LogProvider logProvider, SystemNanoClock clock, TimeUnit timeUnit, long timeToKeep )\n+    EntryTimespanThreshold(LogProvider logProvider, SystemNanoClock clock, TimeUnit timeUnit, long timeToKeep)\n     {\n-        this.log = logProvider.getLog( getClass() );\n+        this.log = logProvider.getLog(getClass());\n         this.clock = clock;\n         this.timeUnit = timeUnit;\n-        this.timeToKeepInMillis = timeUnit.toMillis( timeToKeep );\n+        this.timeToKeepInMillis = timeUnit.toMillis(timeToKeep);\n     }\n \n     @Override\n@@ -52,16 +53,15 @@ public final class EntryTimespanThreshold implements Threshold\n     }\n \n     @Override\n-    public boolean reached( Path file, long version, LogFileInformation source )\n+    public boolean reached(Path file, long version, LogFileInformation source)\n     {\n         try\n         {\n-            long firstStartRecordTimestamp = source.getFirstStartRecordTimestamp( version );\n+            long firstStartRecordTimestamp = source.getFirstStartRecordTimestamp(version);\n             return firstStartRecordTimestamp >= 0 && firstStartRecordTimestamp < lowerLimit;\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            log.warn( \"Fail to get timestamp info from transaction log file \" + version, e );\n+            log.warn(\"Fail to get timestamp info from transaction log file \" + version, e);\n             return false;\n         }\n     }\n@@ -69,6 +69,6 @@ public final class EntryTimespanThreshold implements Threshold\n     @Override\n     public String toString()\n     {\n-        return timeUnit.convert( timeToKeepInMillis, TimeUnit.MILLISECONDS ) + \" \" + timeUnit.name().toLowerCase( Locale.ROOT );\n+        return timeUnit.convert(timeToKeepInMillis, TimeUnit.MILLISECONDS) + \" \" + timeUnit.name().toLowerCase(Locale.ROOT);\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}