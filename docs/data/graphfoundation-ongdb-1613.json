{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1613",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1613/RelationshipReadOnlyIndexFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1613/RelationshipReadOnlyIndexFacade.java\nindex 3c53b02f243..a8a876db973 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1613/RelationshipReadOnlyIndexFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1613/RelationshipReadOnlyIndexFacade.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import org.neo4j.graphdb.Node;\n@@ -26,43 +27,43 @@ import org.neo4j.graphdb.index.ReadableRelationshipIndex;\n import org.neo4j.graphdb.index.RelationshipIndex;\n \n public class RelationshipReadOnlyIndexFacade extends\n-        ReadOnlyIndexFacade<Relationship> implements\n-        RelationshipIndex\n+    ReadOnlyIndexFacade<Relationship> implements\n+    RelationshipIndex\n {\n-    private final ReadableRelationshipIndex delegate;\n+  private final ReadableRelationshipIndex delegate;\n \n-    public RelationshipReadOnlyIndexFacade(\n-            ReadableRelationshipIndex delegate )\n-    {\n-        super( delegate );\n-        this.delegate = delegate;\n-    }\n+  public RelationshipReadOnlyIndexFacade(\n+      ReadableRelationshipIndex delegate)\n+  {\n+    super(delegate);\n+    this.delegate = delegate;\n+  }\n \n-    @Override\n-    public IndexHits<Relationship> get( String key, Object valueOrNull,\n-                                        Node startNodeOrNull, Node endNodeOrNull )\n-    {\n-        return delegate.get( key,\n-                valueOrNull, startNodeOrNull,\n-                endNodeOrNull );\n-    }\n+  @Override\n+  public IndexHits<Relationship> get(String key, Object valueOrNull,\n+                                     Node startNodeOrNull, Node endNodeOrNull)\n+  {\n+    return delegate.get(key,\n+        valueOrNull, startNodeOrNull,\n+        endNodeOrNull);\n+  }\n \n-    @Override\n-    public IndexHits<Relationship> query( String key,\n-                                          Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n-                                          Node endNodeOrNull )\n-    {\n-        return delegate.query( key,\n-                queryOrQueryObjectOrNull,\n-                startNodeOrNull, endNodeOrNull );\n-    }\n+  @Override\n+  public IndexHits<Relationship> query(String key,\n+                                       Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n+                                       Node endNodeOrNull)\n+  {\n+    return delegate.query(key,\n+        queryOrQueryObjectOrNull,\n+        startNodeOrNull, endNodeOrNull);\n+  }\n \n-    @Override\n-    public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull,\n-                                          Node startNodeOrNull, Node endNodeOrNull )\n-    {\n-        return delegate.query(\n-                queryOrQueryObjectOrNull, startNodeOrNull,\n-                endNodeOrNull );\n-    }\n+  @Override\n+  public IndexHits<Relationship> query(Object queryOrQueryObjectOrNull,\n+                                       Node startNodeOrNull, Node endNodeOrNull)\n+  {\n+    return delegate.query(\n+        queryOrQueryObjectOrNull, startNodeOrNull,\n+        endNodeOrNull);\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1613/RelationshipReadOnlyIndexFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1613/RelationshipReadOnlyIndexFacade.java\nindex 3c53b02f243..d963c058500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1613/RelationshipReadOnlyIndexFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1613/RelationshipReadOnlyIndexFacade.java\n@@ -25,44 +25,34 @@ import org.neo4j.graphdb.index.IndexHits;\n import org.neo4j.graphdb.index.ReadableRelationshipIndex;\n import org.neo4j.graphdb.index.RelationshipIndex;\n \n-public class RelationshipReadOnlyIndexFacade extends\n-        ReadOnlyIndexFacade<Relationship> implements\n-        RelationshipIndex\n+public class RelationshipReadOnlyIndexFacade extends ReadOnlyIndexFacade<Relationship> implements RelationshipIndex\n {\n     private final ReadableRelationshipIndex delegate;\n \n-    public RelationshipReadOnlyIndexFacade(\n-            ReadableRelationshipIndex delegate )\n+    public RelationshipReadOnlyIndexFacade( ReadableRelationshipIndex delegate )\n     {\n         super( delegate );\n         this.delegate = delegate;\n     }\n \n     @Override\n-    public IndexHits<Relationship> get( String key, Object valueOrNull,\n-                                        Node startNodeOrNull, Node endNodeOrNull )\n-    {\n+    public IndexHits<Relationship> get( String key, Object valueOrNull, Node startNodeOrNull, Node endNodeOrNull )\n+{\n         return delegate.get( key,\n-                valueOrNull, startNodeOrNull,\n-                endNodeOrNull );\n+                valueOrNull, startNodeOrNull, endNodeOrNull );\n     }\n \n     @Override\n-    public IndexHits<Relationship> query( String key,\n-                                          Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n+    public IndexHits<Relationship> query( String key, Object queryOrQueryObjectOrNull, Node startNodeOrNull,\n                                           Node endNodeOrNull )\n-    {\n+{\n         return delegate.query( key,\n-                queryOrQueryObjectOrNull,\n-                startNodeOrNull, endNodeOrNull );\n+                queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull );\n     }\n \n     @Override\n-    public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull,\n-                                          Node startNodeOrNull, Node endNodeOrNull )\n-    {\n-        return delegate.query(\n-                queryOrQueryObjectOrNull, startNodeOrNull,\n-                endNodeOrNull );\n+    public IndexHits<Relationship> query( Object queryOrQueryObjectOrNull, Node startNodeOrNull, Node endNodeOrNull )\n+{\n+        return delegate.query( queryOrQueryObjectOrNull, startNodeOrNull, endNodeOrNull );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}