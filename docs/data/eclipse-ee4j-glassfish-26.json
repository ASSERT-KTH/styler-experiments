{
    "project_name": "eclipse-ee4j-glassfish",
    "violation_id": "26",
    "information": {
        "violations": [
            {
                "line": "61",
                "column": "21",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "        if (jobPayload == null) {\n            ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n            return; //Just return. This is OK.\n        }\n        Outbound paylaod = context.getOutboundPayload();\n        if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "63",
                    "column": "14",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/26/GetPayloadCommand.java\nindex 9f777b4eb23..b87be589d56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/final/files-repaired/26/GetPayloadCommand.java\n@@ -58,8 +58,9 @@ public class GetPayloadCommand implements AdminCommand {\n         Outbound jobPayload = job.getPayload();\n         if (jobPayload == null) {\n             ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n-            return; //Just return. This is OK.\n-        }\n+            return;\n+        //Just return. This is OK. }\n+             }\n         Outbound paylaod = context.getOutboundPayload();\n         if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {\n             PayloadImpl.Outbound destination = (PayloadImpl.Outbound) paylaod;\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "65",
                    "column": "21",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/26/GetPayloadCommand.java\nindex 9f777b4eb23..bb25b59749b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/checkstyle_idea/26/GetPayloadCommand.java\n@@ -27,7 +27,8 @@ import org.glassfish.api.admin.Payload.Outbound;\n import org.glassfish.hk2.api.PerLookup;\n import org.jvnet.hk2.annotations.Service;\n \n-/** Retrieve outbound payload from finished managed job.\n+/**\n+ * Retrieve outbound payload from finished managed job.\n  *\n  * @author mmares\n  */\n@@ -35,15 +36,16 @@ import org.jvnet.hk2.annotations.Service;\n @PerLookup\n @CommandLock(CommandLock.LockType.NONE)\n @I18n(\"getpayload\")\n-@AccessRequired(resource=\"jobs/job/$jobID\", action=\"read\")\n+@AccessRequired(resource = \"jobs/job/$jobID\", action = \"read\")\n public class GetPayloadCommand implements AdminCommand {\n \n-    private final static LocalStringManagerImpl strings = new LocalStringManagerImpl(GetPayloadCommand.class);\n+    private final static LocalStringManagerImpl strings =\n+        new LocalStringManagerImpl(GetPayloadCommand.class);\n \n     @Inject\n     JobManager registry;\n \n-    @Param(primary=true, optional=false, multiple=false)\n+    @Param(primary = true, optional = false, multiple = false)\n     String jobID;\n \n     @Override\n@@ -52,22 +54,26 @@ public class GetPayloadCommand implements AdminCommand {\n         Job job = registry.get(jobID);\n         if (job == null) {\n             ar.setActionExitCode(ActionReport.ExitCode.FAILURE);\n-            ar.setMessage(strings.getLocalString(\"getPayload.wrong.commandinstance.id\", \"Command instance {0} does not exist.\", jobID));\n+            ar.setMessage(strings.getLocalString(\"getPayload.wrong.commandinstance.id\",\n+                \"Command instance {0} does not exist.\", jobID));\n             return;\n         }\n         Outbound jobPayload = job.getPayload();\n         if (jobPayload == null) {\n-            ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n+            ar.setMessage(\n+                strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n             return; //Just return. This is OK.\n         }\n         Outbound paylaod = context.getOutboundPayload();\n-        if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {\n+        if ((paylaod instanceof PayloadImpl.Outbound) &&\n+            (jobPayload instanceof PayloadImpl.Outbound)) {\n             PayloadImpl.Outbound destination = (PayloadImpl.Outbound) paylaod;\n             PayloadImpl.Outbound source = (PayloadImpl.Outbound) jobPayload;\n             destination.getParts().addAll(source.getParts());\n         } else {\n             ar.setActionExitCode(ActionReport.ExitCode.FAILURE);\n-            ar.setMessage(strings.getLocalString(\"getPayload.unsupported\", \"Payload type is not supported. Can not download data.\"));\n+            ar.setMessage(strings.getLocalString(\"getPayload.unsupported\",\n+                \"Payload type is not supported. Can not download data.\"));\n         }\n \n     }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/26/GetPayloadCommand.java\nindex 9f777b4eb23..524565ada94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/naturalize/26/GetPayloadCommand.java\n@@ -58,7 +58,8 @@ public class GetPayloadCommand implements AdminCommand {\n         Outbound jobPayload = job.getPayload();\n         if (jobPayload == null) {\n             ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n-            return; //Just return. This is OK.\n+            return;\n+    //Just return. This is OK.\n         }\n         Outbound paylaod = context.getOutboundPayload();\n         if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {\n@@ -73,4 +74,4 @@ public class GetPayloadCommand implements AdminCommand {\n     }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "63",
                    "column": "14",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/26/GetPayloadCommand.java\nindex 9f777b4eb23..b87be589d56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/random/files-repaired/26/GetPayloadCommand.java\n@@ -58,8 +58,9 @@ public class GetPayloadCommand implements AdminCommand {\n         Outbound jobPayload = job.getPayload();\n         if (jobPayload == null) {\n             ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n-            return; //Just return. This is OK.\n-        }\n+            return;\n+        //Just return. This is OK. }\n+             }\n         Outbound paylaod = context.getOutboundPayload();\n         if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {\n             PayloadImpl.Outbound destination = (PayloadImpl.Outbound) paylaod;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "64",
                    "column": "10",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/26/GetPayloadCommand.java\nindex 9f777b4eb23..7bdd5e7bcea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/violations/26/GetPayloadCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-ee4j-glassfish/styler/05_predictions/three_grams/files-repaired/26/GetPayloadCommand.java\n@@ -58,8 +58,10 @@ public class GetPayloadCommand implements AdminCommand {\n         Outbound jobPayload = job.getPayload();\n         if (jobPayload == null) {\n             ar.setMessage(strings.getLocalString(\"getPayload.nopayload\", \"Outbound payload does not exist.\"));\n-            return; //Just return. This is OK.\n-        }\n+            return;\n+\n+            //Just return. This is OK.\n+         }\n         Outbound paylaod = context.getOutboundPayload();\n         if ((paylaod instanceof PayloadImpl.Outbound) && (jobPayload instanceof PayloadImpl.Outbound)) {\n             PayloadImpl.Outbound destination = (PayloadImpl.Outbound) paylaod;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}