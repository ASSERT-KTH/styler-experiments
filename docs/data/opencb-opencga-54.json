{
    "project_name": "opencb-opencga",
    "violation_id": "54",
    "information": {
        "violations": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 155).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n            throws IOException, VersionException {\n        super(apiVersion, uriInfo, httpServletRequest, httpHeaders);\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/54/AnalysisWSService.java\nindex e62ea067508..e43086c470b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/54/AnalysisWSService.java\n@@ -42,9 +42,7 @@ public class AnalysisWSService extends OpenCGAWSServer {\n     public AnalysisWSService(@Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n             throws IOException, VersionException {\n         this(uriInfo.getPathParameters().getFirst(\"apiVersion\"), uriInfo, httpServletRequest, httpHeaders);\n-    }\n-\n-    public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n+    }public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n             throws IOException, VersionException {\n         super(apiVersion, uriInfo, httpServletRequest, httpHeaders);\n \n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/54/AnalysisWSService.java\nindex e62ea067508..ac39d96a5c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/54/AnalysisWSService.java\n@@ -37,22 +37,23 @@ import java.io.IOException;\n @Produces(MediaType.APPLICATION_JSON)\n public class AnalysisWSService extends OpenCGAWSServer {\n \n-    protected JobManager jobManager;\n+  protected JobManager jobManager;\n \n-    public AnalysisWSService(@Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n-            throws IOException, VersionException {\n-        this(uriInfo.getPathParameters().getFirst(\"apiVersion\"), uriInfo, httpServletRequest, httpHeaders);\n-    }\n+  public AnalysisWSService(@Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n+      throws IOException, VersionException {\n+    this(uriInfo.getPathParameters().getFirst(\"apiVersion\"), uriInfo, httpServletRequest, httpHeaders);\n+  }\n \n-    public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n-            throws IOException, VersionException {\n-        super(apiVersion, uriInfo, httpServletRequest, httpHeaders);\n+  public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest,\n+                           @Context HttpHeaders httpHeaders)\n+      throws IOException, VersionException {\n+    super(apiVersion, uriInfo, httpServletRequest, httpHeaders);\n \n-        this.jobManager = catalogManager.getJobManager();\n-    }\n+    this.jobManager = catalogManager.getJobManager();\n+  }\n \n-    protected Job createJob() {\n-        return null;\n-    }\n+  protected Job createJob() {\n+    return null;\n+  }\n \n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/54/AnalysisWSService.java\nindex e62ea067508..5c91b1bb073 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/54/AnalysisWSService.java\n@@ -55,4 +55,4 @@ public class AnalysisWSService extends OpenCGAWSServer {\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/54/AnalysisWSService.java\nindex e62ea067508..e43086c470b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/54/AnalysisWSService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/54/AnalysisWSService.java\n@@ -42,9 +42,7 @@ public class AnalysisWSService extends OpenCGAWSServer {\n     public AnalysisWSService(@Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n             throws IOException, VersionException {\n         this(uriInfo.getPathParameters().getFirst(\"apiVersion\"), uriInfo, httpServletRequest, httpHeaders);\n-    }\n-\n-    public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n+    }public AnalysisWSService(String apiVersion, @Context UriInfo uriInfo, @Context HttpServletRequest httpServletRequest, @Context HttpHeaders httpHeaders)\n             throws IOException, VersionException {\n         super(apiVersion, uriInfo, httpServletRequest, httpHeaders);\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}