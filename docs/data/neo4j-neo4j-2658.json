{
    "project_name": "neo4j-neo4j",
    "violation_id": "2658",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2658/FulltextSettings.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2658/FulltextSettings.java\nindex bdf3be22dc1..955dca9b4ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2658/FulltextSettings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2658/FulltextSettings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import org.neo4j.annotations.api.PublicApi;\n@@ -36,19 +37,19 @@ public class FulltextSettings implements SettingsDeclaration\n {\n     private static final String DEFAULT_ANALYZER = StandardNoStopWords.ANALYZER_NAME;\n \n-    @Description( \"The name of the analyzer that the fulltext indexes should use by default.\" )\n+    @Description(\"The name of the analyzer that the fulltext indexes should use by default.\")\n     public static final Setting<String> fulltext_default_analyzer =\n-            newBuilder( \"dbms.index.fulltext.default_analyzer\", STRING, DEFAULT_ANALYZER ).build();\n+      newBuilder(\"dbms.index.fulltext.default_analyzer\", STRING, DEFAULT_ANALYZER).build();\n \n-    @Description( \"Whether or not fulltext indexes should be eventually consistent by default or not.\" )\n+    @Description(\"Whether or not fulltext indexes should be eventually consistent by default or not.\")\n     public static final Setting<Boolean> eventually_consistent =\n-            newBuilder( \"dbms.index.fulltext.eventually_consistent\", BOOL, false ).build();\n+      newBuilder(\"dbms.index.fulltext.eventually_consistent\", BOOL, false).build();\n \n-    @Description( \"The eventually_consistent mode of the fulltext indexes works by queueing up index updates to be applied later in a background thread. \" +\n-            \"This newBuilder sets an upper bound on how many index updates are allowed to be in this queue at any one point in time. When it is reached, \" +\n-            \"the commit process will slow down and wait for the index update applier thread to make some more room in the queue.\" )\n+    @Description(\"The eventually_consistent mode of the fulltext indexes works by queueing up index updates to be applied later in a background thread. \" +\n+      \"This newBuilder sets an upper bound on how many index updates are allowed to be in this queue at any one point in time. When it is reached, \" +\n+      \"the commit process will slow down and wait for the index update applier thread to make some more room in the queue.\")\n     public static final Setting<Integer> eventually_consistent_index_update_queue_max_length =\n-            newBuilder( \"dbms.index.fulltext.eventually_consistent_index_update_queue_max_length\", INT,  10000 )\n-                    .addConstraint( range( 1, 50_000_000 ) )\n-                    .build();\n+      newBuilder(\"dbms.index.fulltext.eventually_consistent_index_update_queue_max_length\", INT, 10000)\n+        .addConstraint(range(1, 50_000_000))\n+        .build();\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}