{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2983",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2983/FailedPopulatingIndexProxyFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2983/FailedPopulatingIndexProxyFactory.java\nindex 3c3a4773ca6..d48b4d09e19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2983/FailedPopulatingIndexProxyFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2983/FailedPopulatingIndexProxyFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.neo4j.kernel.api.index.IndexPopulator;\n@@ -26,29 +27,29 @@ import static org.neo4j.kernel.impl.api.index.IndexPopulationFailure.failure;\n \n public class FailedPopulatingIndexProxyFactory implements FailedIndexProxyFactory\n {\n-    private final IndexMeta indexMeta;\n-    private final IndexPopulator populator;\n-    private final String indexUserDescription;\n-    private final IndexCountsRemover indexCountsRemover;\n-    private final LogProvider logProvider;\n+  private final IndexMeta indexMeta;\n+  private final IndexPopulator populator;\n+  private final String indexUserDescription;\n+  private final IndexCountsRemover indexCountsRemover;\n+  private final LogProvider logProvider;\n \n-    FailedPopulatingIndexProxyFactory( IndexMeta indexMeta,\n-            IndexPopulator populator,\n-            String indexUserDescription,\n-            IndexCountsRemover indexCountsRemover,\n-            LogProvider logProvider )\n-    {\n-        this.indexMeta = indexMeta;\n-        this.populator = populator;\n-        this.indexUserDescription = indexUserDescription;\n-        this.indexCountsRemover = indexCountsRemover;\n-        this.logProvider = logProvider;\n-    }\n+  FailedPopulatingIndexProxyFactory(IndexMeta indexMeta,\n+                                    IndexPopulator populator,\n+                                    String indexUserDescription,\n+                                    IndexCountsRemover indexCountsRemover,\n+                                    LogProvider logProvider)\n+  {\n+    this.indexMeta = indexMeta;\n+    this.populator = populator;\n+    this.indexUserDescription = indexUserDescription;\n+    this.indexCountsRemover = indexCountsRemover;\n+    this.logProvider = logProvider;\n+  }\n \n-    @Override\n-    public IndexProxy create( Throwable failure )\n-    {\n-        return new FailedIndexProxy( indexMeta, indexUserDescription, populator, failure( failure ),\n-                indexCountsRemover, logProvider );\n-    }\n+  @Override\n+  public IndexProxy create(Throwable failure)\n+  {\n+    return new FailedIndexProxy(indexMeta, indexUserDescription, populator, failure(failure),\n+        indexCountsRemover, logProvider);\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2983/FailedPopulatingIndexProxyFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2983/FailedPopulatingIndexProxyFactory.java\nindex 3c3a4773ca6..0955c55d616 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2983/FailedPopulatingIndexProxyFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2983/FailedPopulatingIndexProxyFactory.java\n@@ -51,4 +51,4 @@ public class FailedPopulatingIndexProxyFactory implements FailedIndexProxyFactor\n         return new FailedIndexProxy( indexMeta, indexUserDescription, populator, failure( failure ),\n                 indexCountsRemover, logProvider );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}