{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "519",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/519/NumberSchemaIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/519/NumberSchemaIndexAccessor.java\nindex b00590e1276..39bb12d1929 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/519/NumberSchemaIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/519/NumberSchemaIndexAccessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.File;\n@@ -31,26 +32,26 @@ import org.neo4j.kernel.api.schema.index.SchemaIndexDescriptor;\n import org.neo4j.kernel.impl.api.index.sampling.IndexSamplingConfig;\n import org.neo4j.storageengine.api.schema.IndexReader;\n \n-public class NumberSchemaIndexAccessor extends NativeSchemaIndexAccessor<NumberSchemaKey,NativeSchemaValue>\n+public class NumberSchemaIndexAccessor extends NativeSchemaIndexAccessor<NumberSchemaKey, NativeSchemaValue>\n {\n-    NumberSchemaIndexAccessor(\n-            PageCache pageCache,\n-            FileSystemAbstraction fs,\n-            File storeFile,\n-            Layout<NumberSchemaKey,NativeSchemaValue> layout,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n-            IndexProvider.Monitor monitor,\n-            SchemaIndexDescriptor descriptor,\n-            long indexId,\n-            IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n-        super( pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig );\n-    }\n+  NumberSchemaIndexAccessor(\n+      PageCache pageCache,\n+      FileSystemAbstraction fs,\n+      File storeFile,\n+      Layout<NumberSchemaKey, NativeSchemaValue> layout,\n+      RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n+      IndexProvider.Monitor monitor,\n+      SchemaIndexDescriptor descriptor,\n+      long indexId,\n+      IndexSamplingConfig samplingConfig) throws IOException\n+  {\n+    super(pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig);\n+  }\n \n-    @Override\n-    public IndexReader newReader()\n-    {\n-        assertOpen();\n-        return new NumberSchemaIndexReader<>( tree, layout, samplingConfig, descriptor );\n-    }\n+  @Override\n+  public IndexReader newReader()\n+  {\n+    assertOpen();\n+    return new NumberSchemaIndexReader<>(tree, layout, samplingConfig, descriptor);\n+  }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/519/NumberSchemaIndexAccessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/519/NumberSchemaIndexAccessor.java\nindex b00590e1276..6ce5ed4cae3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/519/NumberSchemaIndexAccessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/519/NumberSchemaIndexAccessor.java\n@@ -33,17 +33,15 @@ import org.neo4j.storageengine.api.schema.IndexReader;\n \n public class NumberSchemaIndexAccessor extends NativeSchemaIndexAccessor<NumberSchemaKey,NativeSchemaValue>\n {\n-    NumberSchemaIndexAccessor(\n-            PageCache pageCache,\n+    NumberSchemaIndexAccessor( PageCache pageCache,\n             FileSystemAbstraction fs,\n-            File storeFile,\n-            Layout<NumberSchemaKey,NativeSchemaValue> layout,\n+            File storeFile, Layout<NumberSchemaKey,NativeSchemaValue> layout,\n             RecoveryCleanupWorkCollector recoveryCleanupWorkCollector,\n             IndexProvider.Monitor monitor,\n             SchemaIndexDescriptor descriptor,\n             long indexId,\n             IndexSamplingConfig samplingConfig ) throws IOException\n-    {\n+{\n         super( pageCache, fs, storeFile, layout, recoveryCleanupWorkCollector, monitor, descriptor, indexId, samplingConfig );\n     }\n \n@@ -53,4 +51,4 @@ public class NumberSchemaIndexAccessor extends NativeSchemaIndexAccessor<NumberS\n         assertOpen();\n         return new NumberSchemaIndexReader<>( tree, layout, samplingConfig, descriptor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}