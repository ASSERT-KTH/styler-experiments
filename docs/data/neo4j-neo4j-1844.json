{
    "project_name": "neo4j-neo4j",
    "violation_id": "1844",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/1844/ConnectionConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/1844/ConnectionConfig.java\nindex 9f33d4a11cd..2a091de618b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/1844/ConnectionConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/1844/ConnectionConfig.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell;\n \n import javax.annotation.Nonnull;\n@@ -38,31 +39,31 @@ public class ConnectionConfig\n     private String newPassword;\n     private String database;\n \n-    public ConnectionConfig( @Nonnull String scheme,\n-                             @Nonnull String host,\n-                             int port,\n-                             @Nonnull String username,\n-                             @Nonnull String password,\n-                             Encryption encryption,\n-                             @Nonnull String database )\n+    public ConnectionConfig(@Nonnull String scheme,\n+                            @Nonnull String host,\n+                            int port,\n+                            @Nonnull String username,\n+                            @Nonnull String password,\n+                            Encryption encryption,\n+                            @Nonnull String database)\n     {\n         this.host = host;\n         this.port = port;\n-        this.username = fallbackToEnvVariable( username, USERNAME_ENV_VAR );\n-        this.password = fallbackToEnvVariable( password, PASSWORD_ENV_VAR );\n+        this.username = fallbackToEnvVariable(username, USERNAME_ENV_VAR);\n+        this.password = fallbackToEnvVariable(password, PASSWORD_ENV_VAR);\n         this.encryption = encryption;\n         this.scheme = scheme;\n-        this.database = fallbackToEnvVariable( database, DATABASE_ENV_VAR );\n+        this.database = fallbackToEnvVariable(database, DATABASE_ENV_VAR);\n     }\n \n     /**\n      * @return preferredValue if not empty, else the contents of the fallback environment variable\n      */\n     @Nonnull\n-    private static String fallbackToEnvVariable( @Nonnull String preferredValue, @Nonnull String fallbackEnvVar )\n+    private static String fallbackToEnvVariable(@Nonnull String preferredValue, @Nonnull String fallbackEnvVar)\n     {\n-        String result = System.getenv( fallbackEnvVar );\n-        if ( result == null || !preferredValue.isEmpty() )\n+        String result = System.getenv(fallbackEnvVar);\n+        if (result == null || !preferredValue.isEmpty())\n         {\n             result = preferredValue;\n         }\n@@ -106,7 +107,7 @@ public class ConnectionConfig\n     @Nonnull\n     public String driverUrl()\n     {\n-        return String.format( \"%s://%s:%d\", scheme(), host(), port() );\n+        return String.format(\"%s://%s:%d\", scheme(), host(), port());\n     }\n \n     @Nonnull\n@@ -121,17 +122,17 @@ public class ConnectionConfig\n         return database;\n     }\n \n-    public void setUsername( @Nonnull String username )\n+    public void setUsername(@Nonnull String username)\n     {\n         this.username = username;\n     }\n \n-    public void setPassword( @Nonnull String password )\n+    public void setPassword(@Nonnull String password)\n     {\n         this.password = password;\n     }\n \n-    public void setNewPassword( String password )\n+    public void setNewPassword(String password)\n     {\n         this.newPassword = password;\n     }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}