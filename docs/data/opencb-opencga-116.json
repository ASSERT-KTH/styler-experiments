{
    "project_name": "opencb-opencga",
    "violation_id": "116",
    "information": {
        "violations": [
            {
                "line": "84",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                           KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                           List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n    }\n\n    public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 324).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "84",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "60",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "181",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "183",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/116/KnockoutVariant.java\nindex 35e5616ab17..d59097b83fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/opencb-opencga/styler/05_predictions/final/files-repaired/116/KnockoutVariant.java\n@@ -81,10 +81,7 @@ public class KnockoutVariant {\n     public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n-    }\n-\n-    public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n+                               this(newVariant (id ) ,dbSnp ,genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance) ;} public public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n         this.id = variant.toString();\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/116/KnockoutVariant.java\nindex 35e5616ab17..aff6a6c0ef8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/checkstyle_idea/116/KnockoutVariant.java\n@@ -27,294 +27,295 @@ import java.util.*;\n \n public class KnockoutVariant {\n \n-    private String id;\n-    private String dbSnp;\n-    private String chromosome;\n-    private int start;\n-    private int end;\n-    private int length;\n-    private String reference;\n-    private String alternate;\n-    private VariantType type;\n-    private String genotype;\n-    private Integer depth;\n-    private String filter;\n-    private String qual;\n-    private VariantStats stats;\n-    private KnockoutType knockoutType;\n-    private List<PopulationFrequency> populationFrequencies;\n-    private List<SequenceOntologyTerm> sequenceOntologyTerms;\n-    private List<ClinicalSignificance> clinicalSignificance;\n-\n-    public enum KnockoutType {\n-        HOM_ALT,\n-        COMP_HET,\n-        HET_ALT,\n-        DELETION_OVERLAP\n-    }\n-\n-    public KnockoutVariant() {\n-    }\n-\n-    public KnockoutVariant(Variant variant, StudyEntry study, FileEntry file, SampleEntry sample, VariantAnnotation annotation,\n-                           ConsequenceType ct, KnockoutType knockoutType) {\n-        this.id = variant.toString();\n-        this.dbSnp = annotation.getId();\n-        this.chromosome = variant.getChromosome();\n-        this.start = variant.getStart();\n-        this.end = variant.getEnd();\n-        this.length = variant.getLength();\n-        this.reference = variant.getReference();\n-        this.alternate = variant.getAlternate();\n-        this.type = variant.getType();\n-        this.genotype = sample.getData().get(0);\n-        this.depth = getDepth(study, file, sample);\n-        this.filter = file.getData().get(StudyEntry.FILTER);\n-        this.qual = file.getData().get(StudyEntry.QUAL);\n-        this.stats = study.getStats(StudyEntry.DEFAULT_COHORT);\n-        this.knockoutType = knockoutType;\n-        this.sequenceOntologyTerms = ct == null ? null : ct.getSequenceOntologyTerms();\n-        this.populationFrequencies = annotation.getPopulationFrequencies();\n-        this.clinicalSignificance = getClinicalSignificance(annotation);\n-    }\n-\n-    public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n-                           KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n-                           List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n-    }\n-\n-    public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n-                           KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n-                           List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this.id = variant.toString();\n-        this.dbSnp = dbSnp;\n-        this.chromosome = variant.getChromosome();\n-        this.start = variant.getStart();\n-        this.end = variant.getEnd();\n-        this.length = variant.getLength();\n-        this.reference = variant.getReference();\n-        this.alternate = variant.getAlternate();\n-        this.type = variant.getType();\n-        this.genotype = genotype;\n-        this.depth = depth;\n-        this.filter = filter;\n-        this.qual = qual;\n-        this.stats = stats;\n-        this.knockoutType = knockoutType;\n-        this.sequenceOntologyTerms = sequenceOntologyTerms;\n-        this.populationFrequencies = populationFrequencies;\n-        this.clinicalSignificance = clinicalSignificance;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"KnockoutVariant{\");\n-        sb.append(\"id='\").append(id).append('\\'');\n-        sb.append(\", chromosome='\").append(chromosome).append('\\'');\n-        sb.append(\", start=\").append(start);\n-        sb.append(\", end=\").append(end);\n-        sb.append(\", length=\").append(length);\n-        sb.append(\", reference='\").append(reference).append('\\'');\n-        sb.append(\", alternate='\").append(alternate).append('\\'');\n-        sb.append(\", type=\").append(type);\n-        sb.append(\", genotype='\").append(genotype).append('\\'');\n-        sb.append(\", depth=\").append(depth);\n-        sb.append(\", filter='\").append(filter).append('\\'');\n-        sb.append(\", qual='\").append(qual).append('\\'');\n-        sb.append(\", knockoutType=\").append(knockoutType);\n-        sb.append(\", populationFrequencies=\").append(populationFrequencies);\n-        sb.append(\", sequenceOntologyTerms=\").append(sequenceOntologyTerms);\n-        sb.append(\", clinicalSignificance=\").append(clinicalSignificance);\n-        sb.append('}');\n-        return sb.toString();\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public KnockoutVariant setId(String id) {\n-        this.id = id;\n-        return this;\n-    }\n-\n-    public String getDbSnp() {\n-        return dbSnp;\n-    }\n-\n-    public KnockoutVariant setDbSnp(String dbSnp) {\n-        this.dbSnp = dbSnp;\n-        return this;\n-    }\n-\n-    public String getChromosome() {\n-        return chromosome;\n-    }\n-\n-    public KnockoutVariant setChromosome(String chromosome) {\n-        this.chromosome = chromosome;\n-        return this;\n-    }\n-\n-    public int getStart() {\n-        return start;\n-    }\n-\n-    public KnockoutVariant setStart(int start) {\n-        this.start = start;\n-        return this;\n-    }\n-\n-    public int getEnd() {\n-        return end;\n-    }\n-\n-    public KnockoutVariant setEnd(int end) {\n-        this.end = end;\n-        return this;\n-    }\n-\n-    public int getLength() {\n-        return length;\n-    }\n-\n-    public KnockoutVariant setLength(int length) {\n-        this.length = length;\n-        return this;\n-    }\n-\n-    public String getReference() {\n-        return reference;\n-    }\n-\n-    public KnockoutVariant setReference(String reference) {\n-        this.reference = reference;\n-        return this;\n-    }\n-\n-    public String getAlternate() {\n-        return alternate;\n-    }\n-\n-    public KnockoutVariant setAlternate(String alternate) {\n-        this.alternate = alternate;\n-        return this;\n-    }\n-\n-    public VariantType getType() {\n-        return type;\n-    }\n-\n-    public KnockoutVariant setType(VariantType type) {\n-        this.type = type;\n-        return this;\n-    }\n-\n-    public String getGenotype() {\n-        return genotype;\n-    }\n-\n-    public KnockoutVariant setGenotype(String genotype) {\n-        this.genotype = genotype;\n-        return this;\n-    }\n-\n-    public Integer getDepth() {\n-        return depth;\n-    }\n-\n-    public KnockoutVariant setDepth(Integer depth) {\n-        this.depth = depth;\n-        return this;\n-    }\n-\n-    public String getFilter() {\n-        return filter;\n-    }\n-\n-    public KnockoutVariant setFilter(String filter) {\n-        this.filter = filter;\n-        return this;\n-    }\n-\n-    public String getQual() {\n-        return qual;\n-    }\n-\n-    public KnockoutVariant setQual(String qual) {\n-        this.qual = qual;\n-        return this;\n-    }\n-\n-    public VariantStats getStats() {\n-        return stats;\n-    }\n-\n-    public KnockoutVariant setStats(VariantStats stats) {\n-        this.stats = stats;\n-        return this;\n-    }\n-\n-    public KnockoutType getKnockoutType() {\n-        return knockoutType;\n-    }\n-\n-    public KnockoutVariant setKnockoutType(KnockoutType knockoutType) {\n-        this.knockoutType = knockoutType;\n-        return this;\n-    }\n-\n-    public List<SequenceOntologyTerm> getSequenceOntologyTerms() {\n-        return sequenceOntologyTerms;\n-    }\n-\n-    public KnockoutVariant setSequenceOntologyTerms(List<SequenceOntologyTerm> sequenceOntologyTerms) {\n-        this.sequenceOntologyTerms = sequenceOntologyTerms;\n-        return this;\n-    }\n-\n-    public List<PopulationFrequency> getPopulationFrequencies() {\n-        return populationFrequencies;\n-    }\n-\n-    public KnockoutVariant setPopulationFrequencies(List<PopulationFrequency> populationFrequencies) {\n-        this.populationFrequencies = populationFrequencies;\n-        return this;\n-    }\n-\n-    public List<ClinicalSignificance> getClinicalSignificance() {\n-        return clinicalSignificance;\n-    }\n-\n-    public KnockoutVariant setClinicalSignificance(List<ClinicalSignificance> clinicalSignificance) {\n-        this.clinicalSignificance = clinicalSignificance;\n-        return this;\n-    }\n-\n-\n-    public static Integer getDepth(StudyEntry study, FileEntry file, SampleEntry sample) {\n-        Integer dpId = study.getSampleDataKeyPosition(VCFConstants.DEPTH_KEY);\n-        if (dpId != null) {\n-            String dpStr = sample.getData().get(dpId);\n-            if (StringUtils.isNumeric(dpStr)) {\n-                return Integer.valueOf(dpStr);\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public static List<ClinicalSignificance> getClinicalSignificance(VariantAnnotation annotation) {\n-        if (annotation.getTraitAssociation() != null) {\n-            Set<ClinicalSignificance> uniqueValues = new HashSet<>();\n-            for (EvidenceEntry evidenceEntry : annotation.getTraitAssociation()) {\n-                if (evidenceEntry.getVariantClassification() != null\n-                        && evidenceEntry.getVariantClassification().getClinicalSignificance() != null) {\n-                    uniqueValues.add(evidenceEntry.getVariantClassification().getClinicalSignificance());\n-                }\n-            }\n-            return new ArrayList<>(uniqueValues);\n+  private String id;\n+  private String dbSnp;\n+  private String chromosome;\n+  private int start;\n+  private int end;\n+  private int length;\n+  private String reference;\n+  private String alternate;\n+  private VariantType type;\n+  private String genotype;\n+  private Integer depth;\n+  private String filter;\n+  private String qual;\n+  private VariantStats stats;\n+  private KnockoutType knockoutType;\n+  private List<PopulationFrequency> populationFrequencies;\n+  private List<SequenceOntologyTerm> sequenceOntologyTerms;\n+  private List<ClinicalSignificance> clinicalSignificance;\n+\n+  public enum KnockoutType {\n+    HOM_ALT,\n+    COMP_HET,\n+    HET_ALT,\n+    DELETION_OVERLAP\n+  }\n+\n+  public KnockoutVariant() {\n+  }\n+\n+  public KnockoutVariant(Variant variant, StudyEntry study, FileEntry file, SampleEntry sample, VariantAnnotation annotation,\n+                         ConsequenceType ct, KnockoutType knockoutType) {\n+    this.id = variant.toString();\n+    this.dbSnp = annotation.getId();\n+    this.chromosome = variant.getChromosome();\n+    this.start = variant.getStart();\n+    this.end = variant.getEnd();\n+    this.length = variant.getLength();\n+    this.reference = variant.getReference();\n+    this.alternate = variant.getAlternate();\n+    this.type = variant.getType();\n+    this.genotype = sample.getData().get(0);\n+    this.depth = getDepth(study, file, sample);\n+    this.filter = file.getData().get(StudyEntry.FILTER);\n+    this.qual = file.getData().get(StudyEntry.QUAL);\n+    this.stats = study.getStats(StudyEntry.DEFAULT_COHORT);\n+    this.knockoutType = knockoutType;\n+    this.sequenceOntologyTerms = ct == null ? null : ct.getSequenceOntologyTerms();\n+    this.populationFrequencies = annotation.getPopulationFrequencies();\n+    this.clinicalSignificance = getClinicalSignificance(annotation);\n+  }\n+\n+  public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n+                         KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n+                         List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n+    this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies,\n+        clinicalSignificance);\n+  }\n+\n+  public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n+                         KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n+                         List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n+    this.id = variant.toString();\n+    this.dbSnp = dbSnp;\n+    this.chromosome = variant.getChromosome();\n+    this.start = variant.getStart();\n+    this.end = variant.getEnd();\n+    this.length = variant.getLength();\n+    this.reference = variant.getReference();\n+    this.alternate = variant.getAlternate();\n+    this.type = variant.getType();\n+    this.genotype = genotype;\n+    this.depth = depth;\n+    this.filter = filter;\n+    this.qual = qual;\n+    this.stats = stats;\n+    this.knockoutType = knockoutType;\n+    this.sequenceOntologyTerms = sequenceOntologyTerms;\n+    this.populationFrequencies = populationFrequencies;\n+    this.clinicalSignificance = clinicalSignificance;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"KnockoutVariant{\");\n+    sb.append(\"id='\").append(id).append('\\'');\n+    sb.append(\", chromosome='\").append(chromosome).append('\\'');\n+    sb.append(\", start=\").append(start);\n+    sb.append(\", end=\").append(end);\n+    sb.append(\", length=\").append(length);\n+    sb.append(\", reference='\").append(reference).append('\\'');\n+    sb.append(\", alternate='\").append(alternate).append('\\'');\n+    sb.append(\", type=\").append(type);\n+    sb.append(\", genotype='\").append(genotype).append('\\'');\n+    sb.append(\", depth=\").append(depth);\n+    sb.append(\", filter='\").append(filter).append('\\'');\n+    sb.append(\", qual='\").append(qual).append('\\'');\n+    sb.append(\", knockoutType=\").append(knockoutType);\n+    sb.append(\", populationFrequencies=\").append(populationFrequencies);\n+    sb.append(\", sequenceOntologyTerms=\").append(sequenceOntologyTerms);\n+    sb.append(\", clinicalSignificance=\").append(clinicalSignificance);\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  public String getId() {\n+    return id;\n+  }\n+\n+  public KnockoutVariant setId(String id) {\n+    this.id = id;\n+    return this;\n+  }\n+\n+  public String getDbSnp() {\n+    return dbSnp;\n+  }\n+\n+  public KnockoutVariant setDbSnp(String dbSnp) {\n+    this.dbSnp = dbSnp;\n+    return this;\n+  }\n+\n+  public String getChromosome() {\n+    return chromosome;\n+  }\n+\n+  public KnockoutVariant setChromosome(String chromosome) {\n+    this.chromosome = chromosome;\n+    return this;\n+  }\n+\n+  public int getStart() {\n+    return start;\n+  }\n+\n+  public KnockoutVariant setStart(int start) {\n+    this.start = start;\n+    return this;\n+  }\n+\n+  public int getEnd() {\n+    return end;\n+  }\n+\n+  public KnockoutVariant setEnd(int end) {\n+    this.end = end;\n+    return this;\n+  }\n+\n+  public int getLength() {\n+    return length;\n+  }\n+\n+  public KnockoutVariant setLength(int length) {\n+    this.length = length;\n+    return this;\n+  }\n+\n+  public String getReference() {\n+    return reference;\n+  }\n+\n+  public KnockoutVariant setReference(String reference) {\n+    this.reference = reference;\n+    return this;\n+  }\n+\n+  public String getAlternate() {\n+    return alternate;\n+  }\n+\n+  public KnockoutVariant setAlternate(String alternate) {\n+    this.alternate = alternate;\n+    return this;\n+  }\n+\n+  public VariantType getType() {\n+    return type;\n+  }\n+\n+  public KnockoutVariant setType(VariantType type) {\n+    this.type = type;\n+    return this;\n+  }\n+\n+  public String getGenotype() {\n+    return genotype;\n+  }\n+\n+  public KnockoutVariant setGenotype(String genotype) {\n+    this.genotype = genotype;\n+    return this;\n+  }\n+\n+  public Integer getDepth() {\n+    return depth;\n+  }\n+\n+  public KnockoutVariant setDepth(Integer depth) {\n+    this.depth = depth;\n+    return this;\n+  }\n+\n+  public String getFilter() {\n+    return filter;\n+  }\n+\n+  public KnockoutVariant setFilter(String filter) {\n+    this.filter = filter;\n+    return this;\n+  }\n+\n+  public String getQual() {\n+    return qual;\n+  }\n+\n+  public KnockoutVariant setQual(String qual) {\n+    this.qual = qual;\n+    return this;\n+  }\n+\n+  public VariantStats getStats() {\n+    return stats;\n+  }\n+\n+  public KnockoutVariant setStats(VariantStats stats) {\n+    this.stats = stats;\n+    return this;\n+  }\n+\n+  public KnockoutType getKnockoutType() {\n+    return knockoutType;\n+  }\n+\n+  public KnockoutVariant setKnockoutType(KnockoutType knockoutType) {\n+    this.knockoutType = knockoutType;\n+    return this;\n+  }\n+\n+  public List<SequenceOntologyTerm> getSequenceOntologyTerms() {\n+    return sequenceOntologyTerms;\n+  }\n+\n+  public KnockoutVariant setSequenceOntologyTerms(List<SequenceOntologyTerm> sequenceOntologyTerms) {\n+    this.sequenceOntologyTerms = sequenceOntologyTerms;\n+    return this;\n+  }\n+\n+  public List<PopulationFrequency> getPopulationFrequencies() {\n+    return populationFrequencies;\n+  }\n+\n+  public KnockoutVariant setPopulationFrequencies(List<PopulationFrequency> populationFrequencies) {\n+    this.populationFrequencies = populationFrequencies;\n+    return this;\n+  }\n+\n+  public List<ClinicalSignificance> getClinicalSignificance() {\n+    return clinicalSignificance;\n+  }\n+\n+  public KnockoutVariant setClinicalSignificance(List<ClinicalSignificance> clinicalSignificance) {\n+    this.clinicalSignificance = clinicalSignificance;\n+    return this;\n+  }\n+\n+\n+  public static Integer getDepth(StudyEntry study, FileEntry file, SampleEntry sample) {\n+    Integer dpId = study.getSampleDataKeyPosition(VCFConstants.DEPTH_KEY);\n+    if (dpId != null) {\n+      String dpStr = sample.getData().get(dpId);\n+      if (StringUtils.isNumeric(dpStr)) {\n+        return Integer.valueOf(dpStr);\n+      }\n+    }\n+    return null;\n+  }\n+\n+  public static List<ClinicalSignificance> getClinicalSignificance(VariantAnnotation annotation) {\n+    if (annotation.getTraitAssociation() != null) {\n+      Set<ClinicalSignificance> uniqueValues = new HashSet<>();\n+      for (EvidenceEntry evidenceEntry : annotation.getTraitAssociation()) {\n+        if (evidenceEntry.getVariantClassification() != null\n+            && evidenceEntry.getVariantClassification().getClinicalSignificance() != null) {\n+          uniqueValues.add(evidenceEntry.getVariantClassification().getClinicalSignificance());\n         }\n-        return Collections.emptyList();\n+      }\n+      return new ArrayList<>(uniqueValues);\n     }\n+    return Collections.emptyList();\n+  }\n }\n",
            "diff_size": 291
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/116/KnockoutVariant.java\nindex 35e5616ab17..990613d628e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/naturalize/116/KnockoutVariant.java\n@@ -81,7 +81,7 @@ public class KnockoutVariant {\n     public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n+    this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n     }\n \n     public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n@@ -317,4 +317,4 @@ public class KnockoutVariant {\n         }\n         return Collections.emptyList();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "84",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "58",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "67",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "72",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "74",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 260).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "column": "76",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "column": "98",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "85",
                    "column": "120",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/116/KnockoutVariant.java\nindex 35e5616ab17..623c21f1a86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/random/files-repaired/116/KnockoutVariant.java\n@@ -81,10 +81,8 @@ public class KnockoutVariant {\n     public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n-    }\n-\n-    public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n+                           this (newVariant( id ) ,dbSnp,genotype,depth ,filter,\n+                           qual,stats, knockoutType, sequenceOntologyTerms,populationFrequencies,clinicalSignificance);}public public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n         this.id = variant.toString();\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 324).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "84",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "55",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "60",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "62",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "84",
                    "column": "181",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "84",
                    "column": "183",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/116/KnockoutVariant.java\nindex 35e5616ab17..d59097b83fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/violations/116/KnockoutVariant.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/opencb-opencga/styler/05_predictions/three_grams/files-repaired/116/KnockoutVariant.java\n@@ -81,10 +81,7 @@ public class KnockoutVariant {\n     public KnockoutVariant(String id, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n-        this(new Variant(id), dbSnp, genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance);\n-    }\n-\n-    public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n+                               this(newVariant (id ) ,dbSnp ,genotype, depth, filter, qual, stats, knockoutType, sequenceOntologyTerms, populationFrequencies, clinicalSignificance) ;} public public KnockoutVariant(Variant variant, String dbSnp, String genotype, Integer depth, String filter, String qual, VariantStats stats,\n                            KnockoutType knockoutType, List<SequenceOntologyTerm> sequenceOntologyTerms,\n                            List<PopulationFrequency> populationFrequencies, List<ClinicalSignificance> clinicalSignificance) {\n         this.id = variant.toString();\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}