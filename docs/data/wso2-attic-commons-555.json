{
    "project_name": "wso2-attic-commons",
    "violation_id": "555",
    "information": {
        "violations": [
            {
                "line": "105",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                .append(\"@\").append(CARBON_CLIENT_ID)\n                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                .toString();\n    }\n ",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/555/ObjectMessageProducer.java\nindex a66b106213c..8246947ec52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/555/ObjectMessageProducer.java\n@@ -102,7 +102,8 @@ public class ObjectMessageProducer {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n  \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/555/ObjectMessageProducer.java\nindex a66b106213c..008199f2f9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/555/ObjectMessageProducer.java\n@@ -17,94 +17,93 @@ import javax.naming.NamingException;\n import java.io.Serializable;\n import java.util.Properties;\n \n-class Employee implements java.io.Serializable\n-{\n-   public String name;\n-   public String address;\n-   public transient int SSN;\n-   public int number;\n-   public void mailCheck()\n-   {\n-      System.out.println(\"Mailing a check to \" + name\n-                           + \" \" + address);\n-   }\n+class Employee implements java.io.Serializable {\n+  public String name;\n+  public String address;\n+  public transient int SSN;\n+  public int number;\n+\n+  public void mailCheck() {\n+    System.out.println(\"Mailing a check to \" + name\n+      + \" \" + address);\n+  }\n }\n \n public class ObjectMessageProducer {\n-\t\n-\tpublic static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n-    private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n-    private static final String QUEUE_NAME_PREFIX = \"queue.\";\n-    private static final String CF_NAME = \"qpidConnectionfactory\";\n-    String userName = \"admin\"; \n-    String password = \"admin\";\n-    private static String CARBON_CLIENT_ID = \"carbon\";\n-    private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n-    private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n-    private static String CARBON_DEFAULT_PORT = \"5672\";\n-    String queueName = \"asanka\";\n-\n-\n- \n-    public static void main(String[] args) throws NamingException, JMSException {\n-    \tObjectMessageProducer queueSender = new ObjectMessageProducer();\n-        queueSender.sendMessages();\n-    }\n-    \n-    public void sendMessages() throws NamingException, JMSException {\n-    \t\n-        Properties properties = new Properties();\n-        properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n-        properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n-        properties.put(QUEUE_NAME_PREFIX + queueName, queueName);\n-        \n-        Properties properties2 = new Properties();\n-        properties2.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n-        properties2.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n-      \n-        \n-        System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n-        InitialContext ctx = new InitialContext(properties);\n-        \n-        \n-        // Lookup connection factory\n-        QueueConnectionFactory connFactory = (QueueConnectionFactory) ctx.lookup(CF_NAME);\n-        QueueConnection queueConnection = connFactory.createQueueConnection();\n-        queueConnection.start();\n-        QueueSession queueSession =  queueConnection.createQueueSession(false,QueueSession.AUTO_ACKNOWLEDGE );//\n-   \n-        Queue queue = (Queue)ctx.lookup(queueName);\n-      \n-\t    javax.jms.QueueSender queueSender = queueSession.createSender(queue);\n-\t\n-\t\n-\t//sending 100 messages to the above created queue here\n-\tfor(int i=1;i<=100;i=i+1){\n-\t\t\n-\t\t\n-\t\tObjectMessage message = queueSession.createObjectMessage();\n-\t\tSerializable abc=new Employee();\n-\t     message.setObject(abc);\n-         \n-\t\tqueueSender.send(message);\n-\t      \n-     }\n-\n-        queueSender.close();\n-        queueSession.close();\n-        queueConnection.close();\n \n+  public static final String QPID_ICF = \"org.wso2.andes.jndi.PropertiesFileInitialContextFactory\";\n+  private static final String CF_NAME_PREFIX = \"connectionfactory.\";\n+  private static final String QUEUE_NAME_PREFIX = \"queue.\";\n+  private static final String CF_NAME = \"qpidConnectionfactory\";\n+  String userName = \"admin\";\n+  String password = \"admin\";\n+  private static String CARBON_CLIENT_ID = \"carbon\";\n+  private static String CARBON_VIRTUAL_HOST_NAME = \"carbon\";\n+  private static String CARBON_DEFAULT_HOSTNAME = \"localhost\";\n+  private static String CARBON_DEFAULT_PORT = \"5672\";\n+  String queueName = \"asanka\";\n+\n+\n+  public static void main(String[] args) throws NamingException, JMSException {\n+    ObjectMessageProducer queueSender = new ObjectMessageProducer();\n+    queueSender.sendMessages();\n+  }\n+\n+  public void sendMessages() throws NamingException, JMSException {\n+\n+    Properties properties = new Properties();\n+    properties.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n+    properties.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n+    properties.put(QUEUE_NAME_PREFIX + queueName, queueName);\n+\n+    Properties properties2 = new Properties();\n+    properties2.put(Context.INITIAL_CONTEXT_FACTORY, QPID_ICF);\n+    properties2.put(CF_NAME_PREFIX + CF_NAME, getTCPConnectionURL(userName, password));\n+\n+\n+    System.out.println(\"getTCPConnectionURL(userName,password) = \" + getTCPConnectionURL(userName, password));\n+    InitialContext ctx = new InitialContext(properties);\n+\n+\n+    // Lookup connection factory\n+    QueueConnectionFactory connFactory = (QueueConnectionFactory) ctx.lookup(CF_NAME);\n+    QueueConnection queueConnection = connFactory.createQueueConnection();\n+    queueConnection.start();\n+    QueueSession queueSession = queueConnection.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE);//\n+\n+    Queue queue = (Queue) ctx.lookup(queueName);\n+\n+    javax.jms.QueueSender queueSender = queueSession.createSender(queue);\n+\n+\n+    //sending 100 messages to the above created queue here\n+    for (int i = 1; i <= 100; i = i + 1) {\n+\n+\n+      ObjectMessage message = queueSession.createObjectMessage();\n+      Serializable abc = new Employee();\n+      message.setObject(abc);\n+\n+      queueSender.send(message);\n \n     }\n-    public String getTCPConnectionURL(String username, String password) {\n-        // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n-        return new StringBuffer()\n-                .append(\"amqp://\").append(username).append(\":\").append(password)\n-                .append(\"@\").append(CARBON_CLIENT_ID)\n-                .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n-                .toString();\n-    }\n- \n+\n+    queueSender.close();\n+    queueSession.close();\n+    queueConnection.close();\n+\n+\n+  }\n+\n+  public String getTCPConnectionURL(String username, String password) {\n+    // amqp://{username}:{password}@carbon/carbon?brokerlist='tcp://{hostname}:{port}'\n+    return new StringBuffer()\n+      .append(\"amqp://\").append(username).append(\":\").append(password)\n+      .append(\"@\").append(CARBON_CLIENT_ID)\n+      .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n+      .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+      .toString();\n+  }\n+\n \n }\n",
            "diff_size": 145
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/555/ObjectMessageProducer.java\nindex a66b106213c..8246947ec52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/555/ObjectMessageProducer.java\n@@ -102,7 +102,8 @@ public class ObjectMessageProducer {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).\n+                append(\"'\")\n                 .toString();\n     }\n  \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/555/ObjectMessageProducer.java\nindex a66b106213c..21db898f728 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/555/ObjectMessageProducer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/555/ObjectMessageProducer.java\n@@ -102,7 +102,8 @@ public class ObjectMessageProducer {\n                 .append(\"amqp://\").append(username).append(\":\").append(password)\n                 .append(\"@\").append(CARBON_CLIENT_ID)\n                 .append(\"/\").append(CARBON_VIRTUAL_HOST_NAME)\n-                .append(\"?brokerlist='tcp://\").append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n+                .append(\"?brokerlist='tcp://\")\n+                .append(CARBON_DEFAULT_HOSTNAME).append(\":\").append(CARBON_DEFAULT_PORT).append(\"'\")\n                 .toString();\n     }\n  \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}