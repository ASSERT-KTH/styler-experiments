{
    "project_name": "IQSS-dataverse",
    "violation_id": "55",
    "information": {
        "violations": [
            {
                "line": "20",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n    \n\tprivate final boolean newValue;\n\tprivate final Dataverse dvoc;\n    \n\tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/IQSS-dataverse/styler/05_predictions/final/files-repaired/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..e2b49dd6890 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/IQSS-dataverse/styler/05_predictions/final/files-repaired/55/UpdatePermissionRootCommand.java\n@@ -16,8 +16,8 @@ import java.util.Set;\n  */\n // no annotations here, since permissions are dynamically decided\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n+\n+private final boolean newValue;\n \tprivate final Dataverse dvoc;\n     \n \tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..663310d0675 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/55/UpdatePermissionRootCommand.java\n@@ -12,44 +12,45 @@ import java.util.Set;\n \n /**\n  * Updates the permission root-ness of a DvObjectContainer.\n+ *\n  * @author michael\n  */\n // no annotations here, since permissions are dynamically decided\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n-\tprivate final Dataverse dvoc;\n-    \n-\tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n-\t\tsuper(aRequest, anAffectedDataverse);\n-\t\tthis.newValue = newValue;\n-\t\tdvoc = anAffectedDataverse;\n-\t}\n-\t\n-\t@Override\n-\tpublic Dataverse execute( final CommandContext ctxt) throws CommandException {\n-\t\tif ( dvoc.isPermissionRoot() == newValue ) {\n-            return dvoc;\n-\n-        } else {\n-\t\t\tdvoc.setPermissionRoot(newValue);\n-            return ctxt.dataverses().save(dvoc);\n-\t\t}\n-\t}\n-\n-    @Override\n-    public boolean onSuccess(CommandContext ctxt, Object r) {  \n-        return ctxt.dataverses().index((Dataverse) r,true);\n-    }        \n-\n-\n-    //TODO: Review this as this will never be an instance of Dataset, will it?\n-    @Override\n-    public Map<String, Set<Permission>> getRequiredPermissions() {\n-        // for data file check permission on owning dataset\n-        return Collections.singletonMap(\"\",\n-                dvoc instanceof Dataverse ? Collections.singleton(Permission.ManageDataversePermissions)\n-                : Collections.singleton(Permission.ManageDatasetPermissions));\n+\n+  private final boolean newValue;\n+  private final Dataverse dvoc;\n+\n+  public UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n+    super(aRequest, anAffectedDataverse);\n+    this.newValue = newValue;\n+    dvoc = anAffectedDataverse;\n+  }\n+\n+  @Override\n+  public Dataverse execute(final CommandContext ctxt) throws CommandException {\n+    if (dvoc.isPermissionRoot() == newValue) {\n+      return dvoc;\n+\n+    } else {\n+      dvoc.setPermissionRoot(newValue);\n+      return ctxt.dataverses().save(dvoc);\n     }\n-        \n+  }\n+\n+  @Override\n+  public boolean onSuccess(CommandContext ctxt, Object r) {\n+    return ctxt.dataverses().index((Dataverse) r, true);\n+  }\n+\n+\n+  //TODO: Review this as this will never be an instance of Dataset, will it?\n+  @Override\n+  public Map<String, Set<Permission>> getRequiredPermissions() {\n+    // for data file check permission on owning dataset\n+    return Collections.singletonMap(\"\",\n+      dvoc instanceof Dataverse ? Collections.singleton(Permission.ManageDataversePermissions)\n+        : Collections.singleton(Permission.ManageDatasetPermissions));\n+  }\n+\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..86a0179164f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/naturalize/55/UpdatePermissionRootCommand.java\n@@ -16,30 +16,30 @@ import java.util.Set;\n  */\n // no annotations here, since permissions are dynamically decided\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n+\n+    private final boolean newValue;\n \tprivate final Dataverse dvoc;\n     \n \tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n-\t\tsuper(aRequest, anAffectedDataverse);\n+    super(aRequest, anAffectedDataverse);\n \t\tthis.newValue = newValue;\n \t\tdvoc = anAffectedDataverse;\n-\t}\n-\t\n-\t@Override\n-\tpublic Dataverse execute( final CommandContext ctxt) throws CommandException {\n-\t\tif ( dvoc.isPermissionRoot() == newValue ) {\n-            return dvoc;\n+    }\n+\n+@Override\n+public Dataverse execute( final CommandContext ctxt) throws CommandException {\n+    if ( dvoc.isPermissionRoot() == newValue ) {\n+    return dvoc;\n \n         } else {\n-\t\t\tdvoc.setPermissionRoot(newValue);\n-            return ctxt.dataverses().save(dvoc);\n-\t\t}\n-\t}\n+    dvoc.setPermissionRoot(newValue);\n+return ctxt.dataverses().save(dvoc);\n+    }\n+    }\n \n-    @Override\n-    public boolean onSuccess(CommandContext ctxt, Object r) {  \n-        return ctxt.dataverses().index((Dataverse) r,true);\n+@Override\n+    public boolean onSuccess(CommandContext ctxt, Object r) {\n+    return ctxt.dataverses().index((Dataverse) r,true);\n     }        \n \n \n@@ -52,4 +52,4 @@ public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n                 : Collections.singleton(Permission.ManageDatasetPermissions));\n     }\n         \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..acb3b7189ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/55/UpdatePermissionRootCommand.java\n@@ -15,41 +15,40 @@ import java.util.Set;\n  * @author michael\n  */\n // no annotations here, since permissions are dynamically decided\n+\n+\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n-\tprivate final Dataverse dvoc;\n-    \n-\tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n-\t\tsuper(aRequest, anAffectedDataverse);\n-\t\tthis.newValue = newValue;\n-\t\tdvoc = anAffectedDataverse;\n-\t}\n-\t\n-\t@Override\n-\tpublic Dataverse execute( final CommandContext ctxt) throws CommandException {\n-\t\tif ( dvoc.isPermissionRoot() == newValue ) {\n-            return dvoc;\n \n+    private final boolean newValue;\n+    private final Dataverse dvoc;\n+\n+    public UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n+        super(aRequest, anAffectedDataverse);\n+        this.newValue = newValue;\n+        dvoc = anAffectedDataverse;\n+    }\n+\n+    @Override\n+    public Dataverse execute(final CommandContext ctxt) throws CommandException {\n+        if (dvoc.isPermissionRoot() == newValue) {\n+            return dvoc;\n         } else {\n-\t\t\tdvoc.setPermissionRoot(newValue);\n+            dvoc.setPermissionRoot(newValue);\n             return ctxt.dataverses().save(dvoc);\n-\t\t}\n-\t}\n+        }\n+    }\n \n     @Override\n-    public boolean onSuccess(CommandContext ctxt, Object r) {  \n-        return ctxt.dataverses().index((Dataverse) r,true);\n+    public boolean onSuccess(CommandContext ctxt, Object r) {\n+        return ctxt.dataverses().index((Dataverse) r, true);\n     }        \n \n \n     //TODO: Review this as this will never be an instance of Dataset, will it?\n+\n     @Override\n     public Map<String, Set<Permission>> getRequiredPermissions() {\n         // for data file check permission on owning dataset\n-        return Collections.singletonMap(\"\",\n-                dvoc instanceof Dataverse ? Collections.singleton(Permission.ManageDataversePermissions)\n-                : Collections.singleton(Permission.ManageDatasetPermissions));\n+        return Collections.singletonMap(\"\", dvoc instanceof Dataverse ? Collections.singleton(Permission.ManageDataversePermissions) : Collections.singleton(Permission.ManageDatasetPermissions));\n     }\n-        \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/random/files-repaired/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..e2b49dd6890 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/random/files-repaired/55/UpdatePermissionRootCommand.java\n@@ -16,8 +16,8 @@ import java.util.Set;\n  */\n // no annotations here, since permissions are dynamically decided\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n+\n+private final boolean newValue;\n \tprivate final Dataverse dvoc;\n     \n \tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/three_grams/files-repaired/55/UpdatePermissionRootCommand.java\nindex 0d08cff8b17..39d91443544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/55/UpdatePermissionRootCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/three_grams/files-repaired/55/UpdatePermissionRootCommand.java\n@@ -16,8 +16,8 @@ import java.util.Set;\n  */\n // no annotations here, since permissions are dynamically decided\n public class UpdatePermissionRootCommand extends AbstractCommand<Dataverse> {\n-    \n-\tprivate final boolean newValue;\n+\n+    private final boolean newValue;\n \tprivate final Dataverse dvoc;\n     \n \tpublic UpdatePermissionRootCommand(boolean newValue, DataverseRequest aRequest, Dataverse anAffectedDataverse) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}