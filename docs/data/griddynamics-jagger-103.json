{
    "project_name": "griddynamics-jagger",
    "violation_id": "103",
    "information": {
        "violations": [
            {
                "line": "34",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 157).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching) throws RuntimeException;\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/103/MetricDataService.java\nindex b46a6a1beb5..047510a0a46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/checkstyle_idea/103/MetricDataService.java\n@@ -31,5 +31,6 @@ public interface MetricDataService extends RemoteService {\n         }\n     }\n \n-    public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching) throws RuntimeException;\n+    public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching)\n+            throws RuntimeException;\n }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/103/MetricDataService.java\nindex b46a6a1beb5..3a90dd03736 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/naturalize/103/MetricDataService.java\n@@ -32,4 +32,4 @@ public interface MetricDataService extends RemoteService {\n     }\n \n     public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching) throws RuntimeException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/103/MetricDataService.java\nindex b46a6a1beb5..c28746d77a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/codebuff/103/MetricDataService.java\n@@ -5,8 +5,6 @@ import com.google.gwt.user.client.rpc.RemoteServiceRelativePath;\n import com.google.gwt.core.client.GWT;\n import com.griddynamics.jagger.dbapi.dto.SummaryIntegratedDto;\n import com.griddynamics.jagger.dbapi.model.MetricNode;\n-\n-\n import java.util.Map;\n import java.util.Set;\n \n@@ -17,13 +15,16 @@ import java.util.Set;\n  * Time: 17:53\n  * To change this template use File | Settings | File Templates.\n  */\n+\n @RemoteServiceRelativePath(\"rpc/MetricDataService\")\n public interface MetricDataService extends RemoteService {\n     /**\n      * Utility/Convenience class.\n      * Use MetricDataService.App.getInstance() to access static instance of MetricDataServiceAsync\n      */\n+\n     public static class Async {\n+\n         private static final MetricDataServiceAsync ourInstance = (MetricDataServiceAsync) GWT.create(MetricDataService.class);\n \n         public static MetricDataServiceAsync getInstance() {\n@@ -31,5 +32,6 @@ public interface MetricDataService extends RemoteService {\n         }\n     }\n \n+\n     public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching) throws RuntimeException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/103/MetricDataService.java\nindex b46a6a1beb5..7b170fa82fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/violations/103/MetricDataService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/griddynamics-jagger/styler/05_predictions/three_grams/files-repaired/103/MetricDataService.java\n@@ -31,5 +31,5 @@ public interface MetricDataService extends RemoteService {\n         }\n     }\n \n-    public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching) throws RuntimeException;\n-}\n+    public Map<MetricNode, SummaryIntegratedDto> getMetrics(Set<MetricNode> metricNames, boolean isEnableDecisionsPerMetricFetching)throws RuntimeException\n+        ; }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}