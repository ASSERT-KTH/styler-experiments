{
    "project_name": "junkdog-artemis-odb",
    "violation_id": "89",
    "information": {
        "violations": [
            {
                "line": "31",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 106).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     */\n    public TypeModel generate(ArtemisModel artemisModel) {\n        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n\n        TypeModel result = new TypeModel();\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/89/TypeModelGenerator.java\nindex ca55dd4a35f..e72fb6655fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/junkdog-artemis-odb/styler/05_predictions/final/files-repaired/89/TypeModelGenerator.java\n@@ -28,9 +28,8 @@ public class TypeModelGenerator {\n      * Generate a builder based on component model.\n      */\n     public TypeModel generate(ArtemisModel artemisModel) {\n-        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n-\n-        TypeModel result = new TypeModel();\n+\t\t\t\t\tPreconditions . checkArgument (!strategies.isEmpty()\n+    , \"No strategies registered to generate model.\" ) ;TypeModelresult result = new TypeModel();\n \n         for (BuilderModelStrategy strategy : strategies) {\n             strategy.apply(artemisModel, result);\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/89/TypeModelGenerator.java\nindex ca55dd4a35f..abb25c6e7dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/checkstyle_idea/89/TypeModelGenerator.java\n@@ -15,27 +15,27 @@ import java.util.List;\n  */\n public class TypeModelGenerator {\n \n-    private List<BuilderModelStrategy> strategies = new LinkedList<BuilderModelStrategy>();\n+  private List<BuilderModelStrategy> strategies = new LinkedList<BuilderModelStrategy>();\n \n-    /**\n-     * Add strategy used to convert components to agnostic builder model.\n-     */\n-    public void addStrategy(BuilderModelStrategy strategy) {\n-        strategies.add(strategy);\n-    }\n-\n-    /**\n-     * Generate a builder based on component model.\n-     */\n-    public TypeModel generate(ArtemisModel artemisModel) {\n-        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n+  /**\n+   * Add strategy used to convert components to agnostic builder model.\n+   */\n+  public void addStrategy(BuilderModelStrategy strategy) {\n+    strategies.add(strategy);\n+  }\n \n-        TypeModel result = new TypeModel();\n+  /**\n+   * Generate a builder based on component model.\n+   */\n+  public TypeModel generate(ArtemisModel artemisModel) {\n+    Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n \n-        for (BuilderModelStrategy strategy : strategies) {\n-            strategy.apply(artemisModel, result);\n-        }\n+    TypeModel result = new TypeModel();\n \n-        return result;\n+    for (BuilderModelStrategy strategy : strategies) {\n+      strategy.apply(artemisModel, result);\n     }\n+\n+    return result;\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/89/TypeModelGenerator.java\nindex ca55dd4a35f..98bac700427 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/codebuff/89/TypeModelGenerator.java\n@@ -4,7 +4,6 @@ import com.artemis.generator.common.BuilderModelStrategy;\n import com.artemis.generator.model.type.TypeModel;\n import com.artemis.generator.model.artemis.ArtemisModel;\n import com.google.common.base.Preconditions;\n-\n import java.util.LinkedList;\n import java.util.List;\n \n@@ -13,29 +12,30 @@ import java.util.List;\n  *\n  * @author Daan van Yperen\n  */\n-public class TypeModelGenerator {\n \n-    private List<BuilderModelStrategy> strategies = new LinkedList<BuilderModelStrategy>();\n+public class TypeModelGenerator {\n+ private List<BuilderModelStrategy> strategies = new LinkedList<BuilderModelStrategy>();\n \n     /**\n      * Add strategy used to convert components to agnostic builder model.\n      */\n-    public void addStrategy(BuilderModelStrategy strategy) {\n-        strategies.add(strategy);\n-    }\n+ public void addStrategy(BuilderModelStrategy strategy) {\n+  strategies.add(strategy);\n+ }\n \n     /**\n      * Generate a builder based on component model.\n      */\n-    public TypeModel generate(ArtemisModel artemisModel) {\n-        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n \n-        TypeModel result = new TypeModel();\n \n-        for (BuilderModelStrategy strategy : strategies) {\n-            strategy.apply(artemisModel, result);\n-        }\n+ public TypeModel generate(ArtemisModel artemisModel) {\n+  Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n+\n+  TypeModel result = new TypeModel();\n+  for (BuilderModelStrategy strategy : strategies) {\n+   strategy.apply(artemisModel, result);\n+  }\n \n-        return result;\n-    }\n+  return result;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/89/TypeModelGenerator.java\nindex ca55dd4a35f..7cde3ebe50a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/random/files-repaired/89/TypeModelGenerator.java\n@@ -28,9 +28,8 @@ public class TypeModelGenerator {\n      * Generate a builder based on component model.\n      */\n     public TypeModel generate(ArtemisModel artemisModel) {\n-        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n \n-        TypeModel result = new TypeModel();\n+\t\t\tPreconditions .checkArgument( ! strategies.isEmpty(),\"No strategies registered to generate model.\") ; TypeModelresult result = new TypeModel();\n \n         for (BuilderModelStrategy strategy : strategies) {\n             strategy.apply(artemisModel, result);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/89/TypeModelGenerator.java\nindex ca55dd4a35f..e72fb6655fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/violations/89/TypeModelGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/junkdog-artemis-odb/styler/05_predictions/three_grams/files-repaired/89/TypeModelGenerator.java\n@@ -28,9 +28,8 @@ public class TypeModelGenerator {\n      * Generate a builder based on component model.\n      */\n     public TypeModel generate(ArtemisModel artemisModel) {\n-        Preconditions.checkArgument(!strategies.isEmpty(), \"No strategies registered to generate model.\");\n-\n-        TypeModel result = new TypeModel();\n+\t\t\t\t\tPreconditions . checkArgument (!strategies.isEmpty()\n+    , \"No strategies registered to generate model.\" ) ;TypeModelresult result = new TypeModel();\n \n         for (BuilderModelStrategy strategy : strategies) {\n             strategy.apply(artemisModel, result);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "styler_random"
    ]
}