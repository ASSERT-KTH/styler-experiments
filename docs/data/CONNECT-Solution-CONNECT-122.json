{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "122",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.orchestration;\n\nimport gov.hhs.fha.nhinc.admindistribution.entity.OutboundAdminDistributionFactory;\nimport gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/122/OrchestrationContextFactory.java\nindex 5b095b1f791..5e9123c2eee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/122/OrchestrationContextFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.orchestration;\n \n import gov.hhs.fha.nhinc.admindistribution.entity.OutboundAdminDistributionFactory;\n@@ -36,43 +37,44 @@ import gov.hhs.fha.nhinc.orchestration.OrchestrationContextBuilder;\n \n /**\n  * @author zmelnick\n- *\n  */\n public final class OrchestrationContextFactory extends AbstractOrchestrationContextFactory {\n \n-    //CHECKSTYLE:OFF\n-    private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n-    //CHECKSTYLE:ON\n+  //CHECKSTYLE:OFF\n+  private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n+  //CHECKSTYLE:ON\n \n-    private OrchestrationContextFactory() {\n-    }\n+  private OrchestrationContextFactory() {\n+  }\n \n-    /**\n-     * @return OrchestrationContextFactory instance.\n-     */\n-    public static OrchestrationContextFactory getInstance() {\n-        return INSTANCE;\n-    }\n+  /**\n+   * @return OrchestrationContextFactory instance.\n+   */\n+  public static OrchestrationContextFactory getInstance() {\n+    return INSTANCE;\n+  }\n \n-    /**This method returns outbound OrchestrationContextBuilder for AdminDist based on gateway apiLevel (g0/g1).\n-     * @param homeCommunityType Nhin TargetHomeCommunity received.\n-     * @param serviceName serviceName (Administrative Distribution) received.\n-     * @return OrchestrationContextBuilder for AdminDist based on gateway apiLevel.\n-     */\n-    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NHIN_SERVICE_NAMES serviceName) {\n-        NhinEndpointManager nem = new NhinEndpointManager();\n-        GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n-        return getBuilder(apiLevel, serviceName);\n-    }\n+  /**\n+   * This method returns outbound OrchestrationContextBuilder for AdminDist based on gateway apiLevel (g0/g1).\n+   *\n+   * @param homeCommunityType Nhin TargetHomeCommunity received.\n+   * @param serviceName       serviceName (Administrative Distribution) received.\n+   * @return OrchestrationContextBuilder for AdminDist based on gateway apiLevel.\n+   */\n+  public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NHIN_SERVICE_NAMES serviceName) {\n+    NhinEndpointManager nem = new NhinEndpointManager();\n+    GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n+        serviceName);\n+    return getBuilder(apiLevel, serviceName);\n+  }\n \n-    private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel,\n-            NHIN_SERVICE_NAMES serviceName) {\n-        if (serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n-            return OutboundAdminDistributionFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n-        } else {\n-            return null;\n-        }\n+  private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel,\n+                                                 NHIN_SERVICE_NAMES serviceName) {\n+    if (serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n+      return OutboundAdminDistributionFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n+    } else {\n+      return null;\n     }\n+  }\n \n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/122/OrchestrationContextFactory.java\nindex 5b095b1f791..55d1109516a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/122/OrchestrationContextFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.orchestration;\n \n import gov.hhs.fha.nhinc.admindistribution.entity.OutboundAdminDistributionFactory;\n@@ -61,18 +62,17 @@ public final class OrchestrationContextFactory extends AbstractOrchestrationCont\n      */\n     public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NHIN_SERVICE_NAMES serviceName) {\n         NhinEndpointManager nem = new NhinEndpointManager();\n-        GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n-        return getBuilder(apiLevel, serviceName);\n+        GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(), serviceName);\n+\n+return getBuilder(apiLevel, serviceName);\n     }\n \n-    private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel,\n-            NHIN_SERVICE_NAMES serviceName) {\n-        if (serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n+    private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel, NHIN_SERVICE_NAMES serviceName) {\n+    if (serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n             return OutboundAdminDistributionFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n         } else {\n             return null;\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/122/OrchestrationContextFactory.java\nindex 5b095b1f791..eee3961a6e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/122/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/122/OrchestrationContextFactory.java\n@@ -38,18 +38,23 @@ import gov.hhs.fha.nhinc.orchestration.OrchestrationContextBuilder;\n  * @author zmelnick\n  *\n  */\n-public final class OrchestrationContextFactory extends AbstractOrchestrationContextFactory {\n+\n+\n+public final class OrchestrationContextFactory extends\n+    AbstractOrchestrationContextFactory {\n \n     //CHECKSTYLE:OFF\n+\n     private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n     //CHECKSTYLE:ON\n-\n     private OrchestrationContextFactory() {\n-    }\n+}\n \n     /**\n      * @return OrchestrationContextFactory instance.\n      */\n+\n+\n     public static OrchestrationContextFactory getInstance() {\n         return INSTANCE;\n     }\n@@ -59,20 +64,23 @@ public final class OrchestrationContextFactory extends AbstractOrchestrationCont\n      * @param serviceName serviceName (Administrative Distribution) received.\n      * @return OrchestrationContextBuilder for AdminDist based on gateway apiLevel.\n      */\n+\n+\n     public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NHIN_SERVICE_NAMES serviceName) {\n         NhinEndpointManager nem = new NhinEndpointManager();\n-        GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n+        GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(), serviceName);\n         return getBuilder(apiLevel, serviceName);\n     }\n \n-    private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel,\n-            NHIN_SERVICE_NAMES serviceName) {\n-        if (serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n+    private OrchestrationContextBuilder getBuilder(GATEWAY_API_LEVEL apiLevel, NHIN_SERVICE_NAMES serviceName) {\n+        if(serviceName == NHIN_SERVICE_NAMES.ADMINISTRATIVE_DISTRIBUTION) {\n             return OutboundAdminDistributionFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n-        } else {\n+        }\n+\n+\n+else {\n             return null;\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}