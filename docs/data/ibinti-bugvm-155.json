{
    "project_name": "ibinti-bugvm",
    "violation_id": "155",
    "information": {
        "violations": [
            {
                "line": "34",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 84).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Interface for releasing a connection. This can be implemented by various\n * \"trigger\" objects which are associated with a connection, for example\n * a {@link EofSensorInputStream} or the {@link ManagedHttpClientConnection} itself.\n * <p>\n * The methods in this interface can safely be called multiple times.\n * The first invocation releases the connection, subsequent calls",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/checkstyle_idea/155/ConnectionReleaseTrigger.java\nindex 8a47637228c..c708d3946f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/checkstyle_idea/155/ConnectionReleaseTrigger.java\n@@ -24,6 +24,7 @@\n  * <http://www.apache.org/>.\n  *\n  */\n+\n package org.apache.http.conn;\n \n import java.io.IOException;\n@@ -41,29 +42,28 @@ import java.io.IOException;\n  */\n public interface ConnectionReleaseTrigger {\n \n-    /**\n-     * Releases the connection with the option of keep-alive. This is a\n-     * \"graceful\" release and may cause IO operations for consuming the\n-     * remainder of a response entity. Use\n-     * {@link #abortConnection abortConnection} for a hard release. The\n-     * connection may be reused as specified by the duration.\n-     *\n-     * @throws IOException\n-     *             in case of an IO problem. The connection will be released\n-     *             anyway.\n-     */\n-    void releaseConnection()\n-        throws IOException;\n+  /**\n+   * Releases the connection with the option of keep-alive. This is a\n+   * \"graceful\" release and may cause IO operations for consuming the\n+   * remainder of a response entity. Use\n+   * {@link #abortConnection abortConnection} for a hard release. The\n+   * connection may be reused as specified by the duration.\n+   *\n+   * @throws IOException in case of an IO problem. The connection will be released\n+   *                     anyway.\n+   */\n+  void releaseConnection()\n+    throws IOException;\n \n-    /**\n-     * Releases the connection without the option of keep-alive.\n-     * This is a \"hard\" release that implies a shutdown of the connection.\n-     * Use {@link #releaseConnection()} for a graceful release.\n-     *\n-     * @throws IOException      in case of an IO problem.\n-     *         The connection will be released anyway.\n-     */\n-    void abortConnection()\n-        throws IOException;\n+  /**\n+   * Releases the connection without the option of keep-alive.\n+   * This is a \"hard\" release that implies a shutdown of the connection.\n+   * Use {@link #releaseConnection()} for a graceful release.\n+   *\n+   * @throws IOException in case of an IO problem.\n+   *                     The connection will be released anyway.\n+   */\n+  void abortConnection()\n+    throws IOException;\n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/naturalize/155/ConnectionReleaseTrigger.java\nindex 8a47637228c..42365e3d93a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/naturalize/155/ConnectionReleaseTrigger.java\n@@ -66,4 +66,4 @@ public interface ConnectionReleaseTrigger {\n     void abortConnection()\n         throws IOException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/codebuff/155/ConnectionReleaseTrigger.java\nindex 8a47637228c..0535b5ab2a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/violations/155/ConnectionReleaseTrigger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ibinti-bugvm/codebuff/155/ConnectionReleaseTrigger.java\n@@ -39,6 +39,8 @@ import java.io.IOException;\n  *\n  * @since 4.0\n  */\n+\n+\n public interface ConnectionReleaseTrigger {\n \n     /**\n@@ -52,8 +54,9 @@ public interface ConnectionReleaseTrigger {\n      *             in case of an IO problem. The connection will be released\n      *             anyway.\n      */\n-    void releaseConnection()\n-        throws IOException;\n+\n+\n+    void releaseConnection() throws IOException;\n \n     /**\n      * Releases the connection without the option of keep-alive.\n@@ -63,7 +66,7 @@ public interface ConnectionReleaseTrigger {\n      * @throws IOException      in case of an IO problem.\n      *         The connection will be released anyway.\n      */\n-    void abortConnection()\n-        throws IOException;\n \n-}\n+\n+    void abortConnection() throws IOException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}