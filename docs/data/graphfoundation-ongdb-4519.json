{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "4519",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4519/LazyInstanceSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4519/LazyInstanceSelector.java\nindex 968f49251ac..18a2f4419f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4519/LazyInstanceSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/4519/LazyInstanceSelector.java\n@@ -17,60 +17,62 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import java.util.function.IntFunction;\n \n /**\n  * Selects an instance given a certain slot and instantiate them lazy.\n+ *\n  * @param <T> type of instance\n  */\n class LazyInstanceSelector<T> extends InstanceSelector<T>\n {\n-    private final IntFunction<T> factory;\n+  private final IntFunction<T> factory;\n \n-    /**\n-     * @param instances uninstantiated instances, instantiated lazily by the {@code factory}\n-     * @param factory {@link IntFunction} for instantiating instances for specific slots.\n-     */\n-    LazyInstanceSelector( T[] instances, IntFunction<T> factory )\n-    {\n-        super( instances );\n-        this.factory = factory;\n-    }\n+  /**\n+   * @param instances uninstantiated instances, instantiated lazily by the {@code factory}\n+   * @param factory   {@link IntFunction} for instantiating instances for specific slots.\n+   */\n+  LazyInstanceSelector(T[] instances, IntFunction<T> factory)\n+  {\n+    super(instances);\n+    this.factory = factory;\n+  }\n \n-    /**\n-     * Instantiating an instance if it hasn't already been instantiated.\n-     *\n-     * See {@link InstanceSelector#select(int)}\n-     */\n-    @Override\n-    T select( int slot )\n+  /**\n+   * Instantiating an instance if it hasn't already been instantiated.\n+   * <p>\n+   * See {@link InstanceSelector#select(int)}\n+   */\n+  @Override\n+  T select(int slot)\n+  {\n+    if (instances[slot] == null)\n     {\n-        if ( instances[slot] == null )\n-        {\n-            assertOpen();\n-            instances[slot] = factory.apply( slot );\n-        }\n-        return super.select( slot );\n+      assertOpen();\n+      instances[slot] = factory.apply(slot);\n     }\n+    return super.select(slot);\n+  }\n \n-    /**\n-     * Returns the instance at the given slot. If the instance at the given {@code slot} hasn't been instantiated yet, {@code null} is returned.\n-     *\n-     * @param slot slot number to return instance for.\n-     * @return the instance at the given {@code slot}, or {@code null}.\n-     */\n-    T getIfInstantiated( int slot )\n-    {\n-        return instances[slot];\n-    }\n+  /**\n+   * Returns the instance at the given slot. If the instance at the given {@code slot} hasn't been instantiated yet, {@code null} is returned.\n+   *\n+   * @param slot slot number to return instance for.\n+   * @return the instance at the given {@code slot}, or {@code null}.\n+   */\n+  T getIfInstantiated(int slot)\n+  {\n+    return instances[slot];\n+  }\n \n-    private void assertOpen()\n+  private void assertOpen()\n+  {\n+    if (closed)\n     {\n-        if ( closed )\n-        {\n-            throw new IllegalStateException( \"This selector has been closed\" );\n-        }\n+      throw new IllegalStateException(\"This selector has been closed\");\n     }\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4519/LazyInstanceSelector.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4519/LazyInstanceSelector.java\nindex 968f49251ac..d61673d2652 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/4519/LazyInstanceSelector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/4519/LazyInstanceSelector.java\n@@ -73,4 +73,4 @@ class LazyInstanceSelector<T> extends InstanceSelector<T>\n             throw new IllegalStateException( \"This selector has been closed\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}