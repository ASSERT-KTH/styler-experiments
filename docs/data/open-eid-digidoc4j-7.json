{
    "project_name": "open-eid-digidoc4j",
    "violation_id": "7",
    "information": {
        "violations": [
            {
                "line": "80",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private void validateNotDuplicateFile(String filePath) {\n    if (entries.containsKey(filePath)) {\n      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n      logger.error(digiDoc4JException.getMessage());\n      throw digiDoc4JException;\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "'{' at column 40 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/7/ManifestParser.java\nindex 06be8d49e1f..16d9237fa4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/open-eid-digidoc4j/styler/05_predictions/final/files-repaired/7/ManifestParser.java\n@@ -76,9 +76,8 @@ public class ManifestParser implements Serializable {\n   }\n \n   private void validateNotDuplicateFile(String filePath) {\n-    if (entries.containsKey(filePath)) {\n-      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n-      logger.error(digiDoc4JException.getMessage());\n+    if (entries.containsKey(filePath)) {DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n+    logger.error(digiDoc4JException.getMessage());\n       throw digiDoc4JException;\n     }\n   }\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/7/ManifestParser.java\nindex 06be8d49e1f..b7f9248daf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/checkstyle_idea/7/ManifestParser.java\n@@ -1,12 +1,12 @@\n /* DigiDoc4J library\n-*\n-* This software is released under either the GNU Library General Public\n-* License (see LICENSE.LGPL).\n-*\n-* Note that the only valid version of the LGPL license as far as this\n-* project is concerned is the original GNU Library General Public License\n-* Version 2.1, February 1999\n-*/\n+ *\n+ * This software is released under either the GNU Library General Public\n+ * License (see LICENSE.LGPL).\n+ *\n+ * Note that the only valid version of the LGPL license as far as this\n+ * project is concerned is the original GNU Library General Public License\n+ * Version 2.1, February 1999\n+ */\n \n package org.digidoc4j.impl.asic.manifest;\n \n@@ -77,7 +77,8 @@ public class ManifestParser implements Serializable {\n \n   private void validateNotDuplicateFile(String filePath) {\n     if (entries.containsKey(filePath)) {\n-      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n+      DuplicateDataFileException digiDoc4JException =\n+          new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n       logger.error(digiDoc4JException.getMessage());\n       throw digiDoc4JException;\n     }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/7/ManifestParser.java\nindex 06be8d49e1f..ca9b2392c6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/naturalize/7/ManifestParser.java\n@@ -82,4 +82,4 @@ public class ManifestParser implements Serializable {\n       throw digiDoc4JException;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/7/ManifestParser.java\nindex 06be8d49e1f..85f81292b7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/codebuff/7/ManifestParser.java\n@@ -14,17 +14,16 @@ import java.io.Serializable;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.digidoc4j.exceptions.DuplicateDataFileException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.w3c.dom.Element;\n import org.w3c.dom.NamedNodeMap;\n import org.w3c.dom.Node;\n-\n import eu.europa.esig.dss.DSSDocument;\n import eu.europa.esig.dss.DomUtils;\n \n+\n public class ManifestParser implements Serializable {\n \n   private static final Logger logger = LoggerFactory.getLogger(ManifestParser.class);\n@@ -36,6 +35,7 @@ public class ManifestParser implements Serializable {\n     this.manifestFile = manifestFile;\n   }\n \n+\n   public boolean containsManifestFile() {\n     return manifestFile != null;\n   }\n@@ -82,4 +82,5 @@ public class ManifestParser implements Serializable {\n       throw digiDoc4JException;\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "80",
                    "column": "123",
                    "severity": "error",
                    "message": "'+' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "80",
                    "column": "123",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "80",
                    "column": "133",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/7/ManifestParser.java\nindex 06be8d49e1f..28299ef4e03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/random/files-repaired/7/ManifestParser.java\n@@ -77,8 +77,7 @@ public class ManifestParser implements Serializable {\n \n   private void validateNotDuplicateFile(String filePath) {\n     if (entries.containsKey(filePath)) {\n-      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n-      logger.error(digiDoc4JException.getMessage());\n+      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException (\"duplicate entry in manifest file: \"+filePath);logger.error(digiDoc4JException.getMessage());\n       throw digiDoc4JException;\n     }\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "'{' at column 40 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/7/ManifestParser.java\nindex 06be8d49e1f..16d9237fa4d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/violations/7/ManifestParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/open-eid-digidoc4j/styler/05_predictions/three_grams/files-repaired/7/ManifestParser.java\n@@ -76,9 +76,8 @@ public class ManifestParser implements Serializable {\n   }\n \n   private void validateNotDuplicateFile(String filePath) {\n-    if (entries.containsKey(filePath)) {\n-      DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n-      logger.error(digiDoc4JException.getMessage());\n+    if (entries.containsKey(filePath)) {DuplicateDataFileException digiDoc4JException = new DuplicateDataFileException(\"duplicate entry in manifest file: \" + filePath);\n+    logger.error(digiDoc4JException.getMessage());\n       throw digiDoc4JException;\n     }\n   }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}