{
    "project_name": "apache-usergrid",
    "violation_id": "30",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": " * Dapper-style trace logging infrastructure.\n *\n * @author zznate\n */\npublic class TaggedOpTimer implements HOpTimer {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "warning",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "40",
                    "severity": "warning",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/30/TaggedOpTimer.java\nindex 089cb2db677..7b11e9c195c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/checkstyle_idea/30/TaggedOpTimer.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.cassandra.util;\n \n \n@@ -31,24 +32,24 @@ public class TaggedOpTimer implements HOpTimer {\n     private TraceTagManager traceTagManager;\n \n \n-    public TaggedOpTimer( TraceTagManager traceTagManager ) {\n+    public TaggedOpTimer(TraceTagManager traceTagManager) {\n         this.traceTagManager = traceTagManager;\n     }\n \n \n     @Override\n-    public Object start( String tagName ) {\n+    public Object start(String tagName) {\n         // look for our threadLocal. if not present, return this.\n         return traceTagManager.timerInstance();\n     }\n \n \n     @Override\n-    public void stop( Object timedOpTag, String opTagName, boolean success ) {\n-        if ( timedOpTag instanceof TimedOpTag ) {\n-            TimedOpTag t = ( ( TimedOpTag ) timedOpTag );\n-            t.stopAndApply( opTagName, success );\n-            traceTagManager.addTimer( t );\n+    public void stop(Object timedOpTag, String opTagName, boolean success) {\n+        if (timedOpTag instanceof TimedOpTag) {\n+            TimedOpTag t = ((TimedOpTag) timedOpTag);\n+            t.stopAndApply(opTagName, success);\n+            traceTagManager.addTimer(t);\n         }\n     }\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/30/TaggedOpTimer.java\nindex 089cb2db677..601e990abf6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/naturalize/30/TaggedOpTimer.java\n@@ -51,4 +51,4 @@ public class TaggedOpTimer implements HOpTimer {\n             traceTagManager.addTimer( t );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/30/TaggedOpTimer.java\nindex 089cb2db677..bc3825901f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/violations/30/TaggedOpTimer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-usergrid/codebuff/30/TaggedOpTimer.java\n@@ -26,6 +26,8 @@ import me.prettyprint.cassandra.connection.HOpTimer;\n  *\n  * @author zznate\n  */\n+\n+\n public class TaggedOpTimer implements HOpTimer {\n \n     private TraceTagManager traceTagManager;\n@@ -51,4 +53,4 @@ public class TaggedOpTimer implements HOpTimer {\n             traceTagManager.addTimer( t );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}