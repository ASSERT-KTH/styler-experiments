{
    "project_name": "EMResearch-EMB",
    "violation_id": "91",
    "information": {
        "violations": [
            {
                "line": "37",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 139).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n    }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/91/YMDNewYearDateFilter.java\nindex 2382f16def8..3a04b8780e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/91/YMDNewYearDateFilter.java\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.rules.de;\n \n import org.languagetool.AnalyzedTokenReadings;\n@@ -31,15 +32,16 @@ import java.util.Map;\n  */\n public class YMDNewYearDateFilter extends NewYearDateFilter {\n \n-  private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n+    private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n \n-  @Override\n-  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n-    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n-      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+    @Override\n+    public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos,\n+                                     AnalyzedTokenReadings[] patternTokens) {\n+        if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n+            throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+        }\n+        args = ymdDateHelper.parseDate(args);\n+        return super.acceptRuleMatch(ymdDateHelper.correctDate(match, args), args, patternTokenPos, patternTokens);\n     }\n-    args = ymdDateHelper.parseDate(args);\n-    return super.acceptRuleMatch(ymdDateHelper.correctDate(match, args), args, patternTokenPos, patternTokens);\n-  }\n \n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/91/YMDNewYearDateFilter.java\nindex 2382f16def8..683bac58dba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/91/YMDNewYearDateFilter.java\n@@ -42,4 +42,4 @@ public class YMDNewYearDateFilter extends NewYearDateFilter {\n     return super.acceptRuleMatch(ymdDateHelper.correctDate(match, args), args, patternTokenPos, patternTokens);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/91/YMDNewYearDateFilter.java\nindex 2382f16def8..c7d40f9e9df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/91/YMDNewYearDateFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/91/YMDNewYearDateFilter.java\n@@ -21,7 +21,6 @@ package org.languagetool.rules.de;\n import org.languagetool.AnalyzedTokenReadings;\n import org.languagetool.rules.RuleMatch;\n import org.languagetool.rules.YMDDateHelper;\n-\n import java.util.Map;\n \n /**\n@@ -29,17 +28,19 @@ import java.util.Map;\n  *\n  * @since 4.3\n  */\n+\n+\n public class YMDNewYearDateFilter extends NewYearDateFilter {\n \n-  private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n+    private final YMDDateHelper ymdDateHelper = new YMDDateHelper();\n \n-  @Override\n-  public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n-    if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n-      throw new RuntimeException(\"Set only 'weekDay' and 'date' for \" + YMDDateCheckFilter.class.getSimpleName());\n+    @Override\n+    public RuleMatch acceptRuleMatch(RuleMatch match, Map<String, String> args, int patternTokenPos, AnalyzedTokenReadings[] patternTokens) {\n+        if (args.containsKey(\"year\") || args.containsKey(\"month\") || args.containsKey(\"day\")) {\n+            throw new RuntimeException(\"Set only 'weekDay' and 'date' for \"\n+                + YMDDateCheckFilter.class.getSimpleName());\n+        }\n+        args = ymdDateHelper.parseDate(args);\n+        return super.acceptRuleMatch(ymdDateHelper.correctDate(match, args), args, patternTokenPos, patternTokens);\n     }\n-    args = ymdDateHelper.parseDate(args);\n-    return super.acceptRuleMatch(ymdDateHelper.correctDate(match, args), args, patternTokenPos, patternTokens);\n-  }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}