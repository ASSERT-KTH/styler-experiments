{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "604",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.entity.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetCommunitiesType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/604/EntityDocQueryProxyNoOpImpl.java\nindex 07d7b017049..9636a4ba4ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/604/EntityDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/604/EntityDocQueryProxyNoOpImpl.java\nindex 07d7b017049..ce84200d066 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/604/EntityDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -35,28 +36,24 @@ import oasis.names.tc.ebxml_regrep.xsd.rim._3.RegistryObjectListType;\n \n /**\n  * @author\n- *\n  */\n public class EntityDocQueryProxyNoOpImpl implements EntityDocQueryProxy {\n \n-    /**\n-     * This method does not have any implementation. Hence it returns a empty AdhocQueryResponse without any documents.\n-     *\n-     * @param msg\n-     *            AdhocQUery Request received.\n-     * @param assertion\n-     *            Assertion received.\n-     * @param targets\n-     *            TargetCommunities to send request.\n-     * @return AdhocQueryResponse from Entity Interface.\n-     */\n-    @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion,\n-            NhinTargetCommunitiesType targets) {\n-        AdhocQueryResponse response = new AdhocQueryResponse();\n-        response.setRegistryObjectList(new RegistryObjectListType());\n-        response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n-    }\n+  /**\n+   * This method does not have any implementation. Hence it returns a empty AdhocQueryResponse without any documents.\n+   *\n+   * @param msg       AdhocQUery Request received.\n+   * @param assertion Assertion received.\n+   * @param targets   TargetCommunities to send request.\n+   * @return AdhocQueryResponse from Entity Interface.\n+   */\n+  @Override\n+  public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion,\n+                                                               NhinTargetCommunitiesType targets) {\n+    AdhocQueryResponse response = new AdhocQueryResponse();\n+    response.setRegistryObjectList(new RegistryObjectListType());\n+    response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n+    return response;\n+  }\n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/604/EntityDocQueryProxyNoOpImpl.java\nindex 07d7b017049..cd7372263b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/604/EntityDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -51,12 +52,12 @@ public class EntityDocQueryProxyNoOpImpl implements EntityDocQueryProxy {\n      * @return AdhocQueryResponse from Entity Interface.\n      */\n     @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion,\n-            NhinTargetCommunitiesType targets) {\n+    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion, NhinTargetCommunitiesType targets) {\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryObjectList(new RegistryObjectListType());\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n+\n+return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/604/EntityDocQueryProxyNoOpImpl.java\nindex 07d7b017049..56be0faf0b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/604/EntityDocQueryProxyNoOpImpl.java\n@@ -37,6 +37,8 @@ import oasis.names.tc.ebxml_regrep.xsd.rim._3.RegistryObjectListType;\n  * @author\n  *\n  */\n+\n+\n public class EntityDocQueryProxyNoOpImpl implements EntityDocQueryProxy {\n \n     /**\n@@ -50,13 +52,14 @@ public class EntityDocQueryProxyNoOpImpl implements EntityDocQueryProxy {\n      *            TargetCommunities to send request.\n      * @return AdhocQueryResponse from Entity Interface.\n      */\n+\n+\n     @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg, AssertionType assertion,\n-            NhinTargetCommunitiesType targets) {\n+    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest msg,\n+        AssertionType assertion, NhinTargetCommunitiesType targets) {\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryObjectList(new RegistryObjectListType());\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n         return response;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/604/EntityDocQueryProxyNoOpImpl.java\nindex 07d7b017049..9636a4ba4ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/604/EntityDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/604/EntityDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.entity.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}