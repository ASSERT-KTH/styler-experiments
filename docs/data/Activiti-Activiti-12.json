{
    "project_name": "Activiti-Activiti",
    "violation_id": "12",
    "information": {
        "violations": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\npublic class IOParameter extends BaseElement {\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/12/IOParameter.java\nindex 48e01734e0a..039e104d4c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/12/IOParameter.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/12/IOParameter.java\nindex 48e01734e0a..543c1fe93a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/12/IOParameter.java\n@@ -1,67 +1,68 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n \n-  protected String source;\n-  protected String sourceExpression;\n-  protected String target;\n-  protected String targetExpression;\n+    protected String source;\n+    protected String sourceExpression;\n+    protected String target;\n+    protected String targetExpression;\n \n-  public String getSource() {\n-    return source;\n-  }\n+    public String getSource() {\n+        return source;\n+    }\n \n-  public void setSource(String source) {\n-    this.source = source;\n-  }\n+    public void setSource(String source) {\n+        this.source = source;\n+    }\n \n-  public String getTarget() {\n-    return target;\n-  }\n+    public String getTarget() {\n+        return target;\n+    }\n \n-  public void setTarget(String target) {\n-    this.target = target;\n-  }\n+    public void setTarget(String target) {\n+        this.target = target;\n+    }\n \n-  public String getSourceExpression() {\n-    return sourceExpression;\n-  }\n+    public String getSourceExpression() {\n+        return sourceExpression;\n+    }\n \n-  public void setSourceExpression(String sourceExpression) {\n-    this.sourceExpression = sourceExpression;\n-  }\n+    public void setSourceExpression(String sourceExpression) {\n+        this.sourceExpression = sourceExpression;\n+    }\n \n-  public String getTargetExpression() {\n-    return targetExpression;\n-  }\n+    public String getTargetExpression() {\n+        return targetExpression;\n+    }\n \n-  public void setTargetExpression(String targetExpression) {\n-    this.targetExpression = targetExpression;\n-  }\n+    public void setTargetExpression(String targetExpression) {\n+        this.targetExpression = targetExpression;\n+    }\n \n-  public IOParameter clone() {\n-    IOParameter clone = new IOParameter();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public IOParameter clone() {\n+        IOParameter clone = new IOParameter();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(IOParameter otherElement) {\n-    super.setValues(otherElement);\n-    setSource(otherElement.getSource());\n-    setSourceExpression(otherElement.getSourceExpression());\n-    setTarget(otherElement.getTarget());\n-    setTargetExpression(otherElement.getTargetExpression());\n-  }\n+    public void setValues(IOParameter otherElement) {\n+        super.setValues(otherElement);\n+        setSource(otherElement.getSource());\n+        setSourceExpression(otherElement.getSourceExpression());\n+        setTarget(otherElement.getTarget());\n+        setTargetExpression(otherElement.getTargetExpression());\n+    }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/12/IOParameter.java\nindex 48e01734e0a..eec2fb128df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/12/IOParameter.java\n@@ -18,7 +18,6 @@ public class IOParameter extends BaseElement {\n   protected String sourceExpression;\n   protected String target;\n   protected String targetExpression;\n-\n   public String getSource() {\n     return source;\n   }\n@@ -64,4 +63,4 @@ public class IOParameter extends BaseElement {\n     setTarget(otherElement.getTarget());\n     setTargetExpression(otherElement.getTargetExpression());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "13",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/12/IOParameter.java\nindex 48e01734e0a..d47db7cd9b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/12/IOParameter.java\n@@ -10,7 +10,9 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.activiti.bpmn.model;\n+package org.activiti.bpmn.\n+\n+model;\n \n public class IOParameter extends BaseElement {\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/12/IOParameter.java\nindex 48e01734e0a..039e104d4c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/12/IOParameter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/12/IOParameter.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n public class IOParameter extends BaseElement {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}