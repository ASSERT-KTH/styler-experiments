{
    "project_name": "IQSS-dataverse",
    "violation_id": "56",
    "information": {
        "violations": [
            {
                "line": "15",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n    \n\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n\t\tsuper(aRequest, dvObject);\n\t}\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/IQSS-dataverse/styler/05_predictions/final/files-repaired/56/AbstractVoidCommand.java\nindex 24d04a2efd1..6b7c2c68efb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/IQSS-dataverse/styler/05_predictions/final/files-repaired/56/AbstractVoidCommand.java\n@@ -11,8 +11,8 @@ import java.util.Map;\n  * @author michael\n  */\n public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n-    \n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n+\n+public AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n \t\tsuper(aRequest, dvObject);\n \t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/56/AbstractVoidCommand.java\nindex 24d04a2efd1..40fee2766a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/checkstyle_idea/56/AbstractVoidCommand.java\n@@ -7,29 +7,29 @@ import java.util.Map;\n /**\n  * A command that does not return anything. Implementer should\n  * override {@link #executeImpl(edu.harvard.iq.dataverse.engine.command.CommandContext) }.\n- * \n+ *\n  * @author michael\n  */\n public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n-    \n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n-\t\tsuper(aRequest, dvObject);\n-\t}\n-\n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvNamePair dvp, DvNamePair... more) {\n-\t\tsuper(aRequest, dvp, more);\n-\t}\n-\n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, Map<String, DvObject> someAffectedDataversae) {\n-\t\tsuper(aRequest, someAffectedDataversae);\n-\t}\n-\n-\t@Override\n-\tpublic final Void execute(CommandContext ctxt) throws CommandException {\n-\t\texecuteImpl(ctxt);\n-\t\treturn null;\n-\t}\n-\t\n-\tprotected abstract void executeImpl( CommandContext ctxt ) throws CommandException;\n-\t\n+\n+  public AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n+    super(aRequest, dvObject);\n+  }\n+\n+  public AbstractVoidCommand(DataverseRequest aRequest, DvNamePair dvp, DvNamePair... more) {\n+    super(aRequest, dvp, more);\n+  }\n+\n+  public AbstractVoidCommand(DataverseRequest aRequest, Map<String, DvObject> someAffectedDataversae) {\n+    super(aRequest, someAffectedDataversae);\n+  }\n+\n+  @Override\n+  public final Void execute(CommandContext ctxt) throws CommandException {\n+    executeImpl(ctxt);\n+    return null;\n+  }\n+\n+  protected abstract void executeImpl(CommandContext ctxt) throws CommandException;\n+\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/56/AbstractVoidCommand.java\nindex 24d04a2efd1..019f35657eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/codebuff/56/AbstractVoidCommand.java\n@@ -10,26 +10,28 @@ import java.util.Map;\n  * \n  * @author michael\n  */\n+\n+\n public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n-    \n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n-\t\tsuper(aRequest, dvObject);\n-\t}\n-\n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvNamePair dvp, DvNamePair... more) {\n-\t\tsuper(aRequest, dvp, more);\n-\t}\n-\n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, Map<String, DvObject> someAffectedDataversae) {\n-\t\tsuper(aRequest, someAffectedDataversae);\n-\t}\n-\n-\t@Override\n-\tpublic final Void execute(CommandContext ctxt) throws CommandException {\n-\t\texecuteImpl(ctxt);\n-\t\treturn null;\n-\t}\n-\t\n-\tprotected abstract void executeImpl( CommandContext ctxt ) throws CommandException;\n-\t\n-}\n+\n+    public AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n+        super(aRequest, dvObject);\n+    }\n+\n+    public AbstractVoidCommand(DataverseRequest aRequest, DvNamePair dvp, DvNamePair... more) {\n+        super(aRequest, dvp, more);\n+    }\n+\n+    public AbstractVoidCommand(DataverseRequest aRequest, Map<String, DvObject> someAffectedDataversae) {\n+        super(aRequest, someAffectedDataversae);\n+    }\n+\n+    @Override\n+    public final Void execute(CommandContext ctxt) throws CommandException {\n+        executeImpl(ctxt);\n+        return null;\n+    }\n+\n+\n+    protected abstract void executeImpl(CommandContext ctxt) throws CommandException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/random/files-repaired/56/AbstractVoidCommand.java\nindex 24d04a2efd1..6b7c2c68efb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/random/files-repaired/56/AbstractVoidCommand.java\n@@ -11,8 +11,8 @@ import java.util.Map;\n  * @author michael\n  */\n public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n-    \n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n+\n+public AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n \t\tsuper(aRequest, dvObject);\n \t}\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/three_grams/files-repaired/56/AbstractVoidCommand.java\nindex 24d04a2efd1..7956fcda124 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/violations/56/AbstractVoidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/IQSS-dataverse/styler/05_predictions/three_grams/files-repaired/56/AbstractVoidCommand.java\n@@ -11,8 +11,8 @@ import java.util.Map;\n  * @author michael\n  */\n public abstract class AbstractVoidCommand extends AbstractCommand<Void> {\n-    \n-\tpublic AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n+\n+    public AbstractVoidCommand(DataverseRequest aRequest, DvObject dvObject) {\n \t\tsuper(aRequest, dvObject);\n \t}\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}