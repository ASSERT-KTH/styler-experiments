{
    "project_name": "ciandt-dev-tech-gallery",
    "violation_id": "5",
    "information": {
        "violations": [
            {
                "line": "10",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 120).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " */\npublic class Constants {\n  public static final String WEB_CLIENT_ID = \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n  public static final String ANDROID_CLIENT_ID = \"replace this with your Android client ID\";\n  public static final String IOS_CLIENT_ID = \"replace this with your iOS client ID\";\n  public static final String ANDROID_AUDIENCE = WEB_CLIENT_ID;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/checkstyle_idea/5/Constants.java\nindex 4cb5b4c43ae..a78e933a42f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/checkstyle_idea/5/Constants.java\n@@ -7,7 +7,8 @@ import com.google.api.server.spi.Constant;\n  * Contains the client IDs and scopes for allowed clients consuming your API.\n  */\n public class Constants {\n-  public static final String WEB_CLIENT_ID = \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n+  public static final String WEB_CLIENT_ID =\n+      \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n   public static final String ANDROID_CLIENT_ID = \"replace this with your Android client ID\";\n   public static final String IOS_CLIENT_ID = \"replace this with your iOS client ID\";\n   public static final String ANDROID_AUDIENCE = WEB_CLIENT_ID;\n@@ -15,8 +16,9 @@ public class Constants {\n \n   public static final String EMAIL_SCOPE = \"https://www.googleapis.com/auth/userinfo.email\";\n   public static final String PLUS_SCOPE = \"https://www.googleapis.com/auth/plus.me\";\n-  public static final String PLUS_STREAM_WRITE = \"https://www.googleapis.com/auth/plus.stream.write\";\n-  \n+  public static final String PLUS_STREAM_WRITE =\n+      \"https://www.googleapis.com/auth/plus.stream.write\";\n+\n   public static final String CRON_MAIL_JOB = \"/cron/email\";\n   public static final String APP_EMAIL = \"google-project@ciandt.com\";\n \n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/naturalize/5/Constants.java\nindex 4cb5b4c43ae..0c284c45ec5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/naturalize/5/Constants.java\n@@ -16,12 +16,11 @@ public class Constants {\n   public static final String EMAIL_SCOPE = \"https://www.googleapis.com/auth/userinfo.email\";\n   public static final String PLUS_SCOPE = \"https://www.googleapis.com/auth/plus.me\";\n   public static final String PLUS_STREAM_WRITE = \"https://www.googleapis.com/auth/plus.stream.write\";\n-  \n-  public static final String CRON_MAIL_JOB = \"/cron/email\";\n-  public static final String APP_EMAIL = \"google-project@ciandt.com\";\n+public static final String CRON_MAIL_JOB = \"/cron/email\";\n+public static final String APP_EMAIL = \"google-project@ciandt.com\";\n \n   public static final String POSITIVE_RECOMMENDATION_TEXT = \"positivamente a tecnologia \";\n   public static final String NEGATIVE_RECOMMENDATION_TEXT = \"negativamente a tecnologia \";\n   public static final String NEW_LINE = System.getProperty(\"line.separator\");\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/codebuff/5/Constants.java\nindex 4cb5b4c43ae..0b9c15554f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/codebuff/5/Constants.java\n@@ -6,22 +6,35 @@ import com.google.api.server.spi.Constant;\n /**\n  * Contains the client IDs and scopes for allowed clients consuming your API.\n  */\n+\n+\n public class Constants {\n+\n+\n   public static final String WEB_CLIENT_ID = \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n+\n   public static final String ANDROID_CLIENT_ID = \"replace this with your Android client ID\";\n+\n   public static final String IOS_CLIENT_ID = \"replace this with your iOS client ID\";\n+\n   public static final String ANDROID_AUDIENCE = WEB_CLIENT_ID;\n+\n   public static final String API_EXPLORER_CLIENT_ID = Constant.API_EXPLORER_CLIENT_ID;\n \n   public static final String EMAIL_SCOPE = \"https://www.googleapis.com/auth/userinfo.email\";\n+\n   public static final String PLUS_SCOPE = \"https://www.googleapis.com/auth/plus.me\";\n+\n   public static final String PLUS_STREAM_WRITE = \"https://www.googleapis.com/auth/plus.stream.write\";\n-  \n+\n   public static final String CRON_MAIL_JOB = \"/cron/email\";\n+\n   public static final String APP_EMAIL = \"google-project@ciandt.com\";\n \n   public static final String POSITIVE_RECOMMENDATION_TEXT = \"positivamente a tecnologia \";\n+\n   public static final String NEGATIVE_RECOMMENDATION_TEXT = \"negativamente a tecnologia \";\n+\n   public static final String NEW_LINE = System.getProperty(\"line.separator\");\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/styler/05_predictions/random/files-repaired/5/Constants.java\nindex 4cb5b4c43ae..f95599aff05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/violations/5/Constants.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ciandt-dev-tech-gallery/styler/05_predictions/random/files-repaired/5/Constants.java\n@@ -7,8 +7,9 @@ import com.google.api.server.spi.Constant;\n  * Contains the client IDs and scopes for allowed clients consuming your API.\n  */\n public class Constants {\n-  public static final String WEB_CLIENT_ID = \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n-  public static final String ANDROID_CLIENT_ID = \"replace this with your Android client ID\";\n+  public static final String WEB_CLIENT_ID =\n+      \"146680675139-6fjea6lbua391tfv4hq36hl7kqo7cr96.apps.googleusercontent.com\";\n+public static final String ANDROID_CLIENT_ID = \"replace this with your Android client ID\";\n   public static final String IOS_CLIENT_ID = \"replace this with your iOS client ID\";\n   public static final String ANDROID_AUDIENCE = WEB_CLIENT_ID;\n   public static final String API_EXPLORER_CLIENT_ID = Constant.API_EXPLORER_CLIENT_ID;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}