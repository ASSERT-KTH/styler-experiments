{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1516",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1516/UniquenessVerifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1516/UniquenessVerifier.java\nindex cd0f5852d0c..fafcbf442a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1516/UniquenessVerifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1516/UniquenessVerifier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.verification;\n \n import java.io.Closeable;\n@@ -37,25 +38,25 @@ import org.neo4j.values.storable.Value;\n  */\n public interface UniquenessVerifier extends Closeable\n {\n-    /**\n-     * Verifies uniqueness of existing data.\n-     *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n-     * @param propKeyIds the ids of the properties to verify.\n-     * @throws IndexEntryConflictException if there are duplicates.\n-     * @throws IOException when Lucene throws {@link IOException}.\n-     */\n-    void verify( PropertyAccessor accessor, int[] propKeyIds ) throws IndexEntryConflictException, IOException;\n+  /**\n+   * Verifies uniqueness of existing data.\n+   *\n+   * @param accessor   the accessor to retrieve actual property values from the store.\n+   * @param propKeyIds the ids of the properties to verify.\n+   * @throws IndexEntryConflictException if there are duplicates.\n+   * @throws IOException                 when Lucene throws {@link IOException}.\n+   */\n+  void verify(PropertyAccessor accessor, int[] propKeyIds) throws IndexEntryConflictException, IOException;\n \n-    /**\n-     * Verifies uniqueness of given values and existing data.\n-     *\n-     * @param accessor the accessor to retrieve actual property values from the store.\n-     * @param propKeyIds the ids of the properties to verify.\n-     * @param updatedValueTuples the values to check uniqueness for.\n-     * @throws IndexEntryConflictException if there are duplicates.\n-     * @throws IOException when Lucene throws {@link IOException}.\n-     */\n-    void verify( PropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples )\n-            throws IndexEntryConflictException, IOException;\n+  /**\n+   * Verifies uniqueness of given values and existing data.\n+   *\n+   * @param accessor           the accessor to retrieve actual property values from the store.\n+   * @param propKeyIds         the ids of the properties to verify.\n+   * @param updatedValueTuples the values to check uniqueness for.\n+   * @throws IndexEntryConflictException if there are duplicates.\n+   * @throws IOException                 when Lucene throws {@link IOException}.\n+   */\n+  void verify(PropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples)\n+      throws IndexEntryConflictException, IOException;\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1516/UniquenessVerifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1516/UniquenessVerifier.java\nindex cd0f5852d0c..bb8a4c9ef63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1516/UniquenessVerifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1516/UniquenessVerifier.java\n@@ -56,6 +56,5 @@ public interface UniquenessVerifier extends Closeable\n      * @throws IndexEntryConflictException if there are duplicates.\n      * @throws IOException when Lucene throws {@link IOException}.\n      */\n-    void verify( PropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples )\n-            throws IndexEntryConflictException, IOException;\n-}\n+    void verify( PropertyAccessor accessor, int[] propKeyIds, List<Value[]> updatedValueTuples ) throws IndexEntryConflictException, IOException;\n+    }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}