{
    "project_name": "chenpengliang0909-WxJava",
    "violation_id": "22",
    "information": {
        "violations": [
            {
                "line": "26",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 127).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Created by ecoolper on 2017/5/5.\n */\npublic class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n\n  public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n    super(requestHttp, tmpDirFile);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "column": "91",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "125",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "127",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "127",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{'\u524d\u9762\u6ca1\u6709\u52a0\u7a7a\u683c\u3002",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/final/files-repaired/22/JoddHttpMediaDownloadRequestExecutor.java\nindex a0918f5b350..a16be6fad65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/final/files-repaired/22/JoddHttpMediaDownloadRequestExecutor.java\n@@ -23,9 +23,9 @@ import me.chanjar.weixin.common.util.http.RequestHttp;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor <HttpConnectionProvider,ProxyInfo >{ public\n \n-  public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n+  JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/22/JoddHttpMediaDownloadRequestExecutor.java\nindex a0918f5b350..9533dc1b8d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/22/JoddHttpMediaDownloadRequestExecutor.java\n@@ -23,7 +23,8 @@ import me.chanjar.weixin.common.util.http.RequestHttp;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddHttpMediaDownloadRequestExecutor\n+    extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n \n   public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n@@ -60,9 +61,9 @@ public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadReque\n \n     try (InputStream inputStream = new ByteArrayInputStream(response.bodyBytes())) {\n       return FileUtils.createTmpFile(inputStream,\n-        FilenameUtils.getBaseName(fileName),\n-        FilenameUtils.getExtension(fileName),\n-        super.tmpDirFile);\n+          FilenameUtils.getBaseName(fileName),\n+          FilenameUtils.getExtension(fileName),\n+          super.tmpDirFile);\n     }\n   }\n \n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/22/JoddHttpMediaDownloadRequestExecutor.java\nindex a0918f5b350..5f6a596bf59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/22/JoddHttpMediaDownloadRequestExecutor.java\n@@ -67,4 +67,4 @@ public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadReque\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/22/JoddHttpMediaDownloadRequestExecutor.java\nindex a0918f5b350..8b93e022a5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/22/JoddHttpMediaDownloadRequestExecutor.java\n@@ -4,10 +4,8 @@ import java.io.ByteArrayInputStream;\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n-\n import org.apache.commons.io.FilenameUtils;\n import org.apache.commons.lang3.StringUtils;\n-\n import jodd.http.HttpConnectionProvider;\n import jodd.http.HttpRequest;\n import jodd.http.HttpResponse;\n@@ -23,8 +21,9 @@ import me.chanjar.weixin.common.util.http.RequestHttp;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n \n+\n+public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n   public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n@@ -60,11 +59,9 @@ public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadReque\n \n     try (InputStream inputStream = new ByteArrayInputStream(response.bodyBytes())) {\n       return FileUtils.createTmpFile(inputStream,\n-        FilenameUtils.getBaseName(fileName),\n-        FilenameUtils.getExtension(fileName),\n+FilenameUtils.getBaseName(fileName),\n+FilenameUtils.getExtension(fileName),\n         super.tmpDirFile);\n     }\n   }\n-\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "26",
                    "column": "91",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "125",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "127",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "26",
                    "column": "127",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{'\u524d\u9762\u6ca1\u6709\u52a0\u7a7a\u683c\u3002",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/random/files-repaired/22/JoddHttpMediaDownloadRequestExecutor.java\nindex a0918f5b350..a16be6fad65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/22/JoddHttpMediaDownloadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/random/files-repaired/22/JoddHttpMediaDownloadRequestExecutor.java\n@@ -23,9 +23,9 @@ import me.chanjar.weixin.common.util.http.RequestHttp;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n-public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor<HttpConnectionProvider, ProxyInfo> {\n+public class JoddHttpMediaDownloadRequestExecutor extends BaseMediaDownloadRequestExecutor <HttpConnectionProvider,ProxyInfo >{ public\n \n-  public JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n+  JoddHttpMediaDownloadRequestExecutor(RequestHttp requestHttp, File tmpDirFile) {\n     super(requestHttp, tmpDirFile);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}