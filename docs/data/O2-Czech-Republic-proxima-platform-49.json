{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "violation_id": "49",
    "information": {
        "violations": [
            {
                "line": "52",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    try {\n      Config config = repository.getConfig();\n      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n      this.collectHostname =\n          isNonEmpty(config, COLLECT_HOSTNAME)\n              ? config.getString(COLLECT_HOSTNAME)",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/49/StreamConfig.java\nindex cc58a42db46..84f8c40e108 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/checkstyle_idea/49/StreamConfig.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.tools.groovy;\n \n import com.typesafe.config.Config;\n@@ -41,15 +42,18 @@ public class StreamConfig implements Serializable {\n     return new StreamConfig(((ConfigRepository) beam.getRepository()));\n   }\n \n-  @Getter private final int collectPort;\n-  @Getter private final String collectHostname;\n+  @Getter\n+  private final int collectPort;\n+  @Getter\n+  private final String collectHostname;\n   private final RepositoryFactory repositoryFactory;\n   private transient Repository repo;\n \n   private StreamConfig(ConfigRepository repository) {\n     try {\n       Config config = repository.getConfig();\n-      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n+      this.collectPort =\n+          config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n       this.collectHostname =\n           isNonEmpty(config, COLLECT_HOSTNAME)\n               ? config.getString(COLLECT_HOSTNAME)\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "column": "66",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/49/StreamConfig.java\nindex cc58a42db46..8369731d4d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/naturalize/49/StreamConfig.java\n@@ -50,11 +50,9 @@ public class StreamConfig implements Serializable {\n     try {\n       Config config = repository.getConfig();\n       this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n-      this.collectHostname =\n-          isNonEmpty(config, COLLECT_HOSTNAME)\n-              ? config.getString(COLLECT_HOSTNAME)\n+      this.collectHostname = isNonEmpty(config, COLLECT_HOSTNAME)? config.getString(COLLECT_HOSTNAME)\n               : InetAddress.getLocalHost().getHostName();\n-      this.repositoryFactory = repository.asFactory();\n+this.repositoryFactory = repository.asFactory();\n       this.repo = repository;\n     } catch (Exception ex) {\n       throw new RuntimeException(ex);\n@@ -71,4 +69,4 @@ public class StreamConfig implements Serializable {\n   private static boolean isNonEmpty(Config config, String path) {\n     return config.hasPath(path) && !config.getString(path).isEmpty();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "66",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/49/StreamConfig.java\nindex cc58a42db46..df570ff6462 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/violations/49/StreamConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/O2-Czech-Republic-proxima-platform/codebuff/49/StreamConfig.java\n@@ -26,10 +26,11 @@ import java.net.InetAddress;\n import lombok.Getter;\n \n /** Configuration object for {@link BeamStream}. */\n+\n+\n public class StreamConfig implements Serializable {\n \n   private static final long serialVersionUID = 1L;\n-\n   private static final String COLLECT_PORT_KEY = \"console.collect.server-port\";\n   private static final String COLLECT_HOSTNAME = \"console.collect.hostname\";\n \n@@ -42,6 +43,7 @@ public class StreamConfig implements Serializable {\n   }\n \n   @Getter private final int collectPort;\n+\n   @Getter private final String collectHostname;\n   private final RepositoryFactory repositoryFactory;\n   private transient Repository repo;\n@@ -49,11 +51,8 @@ public class StreamConfig implements Serializable {\n   private StreamConfig(ConfigRepository repository) {\n     try {\n       Config config = repository.getConfig();\n-      this.collectPort = config.hasPath(COLLECT_PORT_KEY) ? config.getInt(COLLECT_PORT_KEY) : -1;\n-      this.collectHostname =\n-          isNonEmpty(config, COLLECT_HOSTNAME)\n-              ? config.getString(COLLECT_HOSTNAME)\n-              : InetAddress.getLocalHost().getHostName();\n+      this.collectPort = config.hasPath(COLLECT_PORT_KEY)? config.getInt(COLLECT_PORT_KEY) : -1;\n+      this.collectHostname = isNonEmpty(config, COLLECT_HOSTNAME)? config.getString(COLLECT_HOSTNAME) : InetAddress.getLocalHost().getHostName();\n       this.repositoryFactory = repository.asFactory();\n       this.repo = repository;\n     } catch (Exception ex) {\n@@ -71,4 +70,4 @@ public class StreamConfig implements Serializable {\n   private static boolean isNonEmpty(Config config, String path) {\n     return config.hasPath(path) && !config.getString(path).isEmpty();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}