{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1532",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1532/OrderedByTypeExpander.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1532/OrderedByTypeExpander.java\nindex 990d07aff12..000e4bd08dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1532/OrderedByTypeExpander.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1532/OrderedByTypeExpander.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl;\n \n import java.util.ArrayList;\n@@ -37,81 +38,81 @@ import org.neo4j.helpers.collection.Pair;\n \n public final class OrderedByTypeExpander extends StandardExpander.RegularExpander\n {\n-    private final Collection<Pair<RelationshipType, Direction>> orderedTypes;\n+  private final Collection<Pair<RelationshipType, Direction>> orderedTypes;\n \n-    public OrderedByTypeExpander()\n-    {\n-        this( Collections.emptyList() );\n-    }\n+  public OrderedByTypeExpander()\n+  {\n+    this(Collections.emptyList());\n+  }\n \n-    private OrderedByTypeExpander( Collection<Pair<RelationshipType,Direction>> orderedTypes )\n-    {\n-        super( Collections.emptyMap() );\n-        this.orderedTypes = orderedTypes;\n-    }\n+  private OrderedByTypeExpander(Collection<Pair<RelationshipType, Direction>> orderedTypes)\n+  {\n+    super(Collections.emptyMap());\n+    this.orderedTypes = orderedTypes;\n+  }\n \n-    @Override\n-    public StandardExpander add( RelationshipType type, Direction direction )\n-    {\n-        Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>( orderedTypes );\n-        newTypes.add( Pair.of( type, direction ) );\n-        return new OrderedByTypeExpander( newTypes );\n-    }\n+  @Override\n+  public StandardExpander add(RelationshipType type, Direction direction)\n+  {\n+    Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>(orderedTypes);\n+    newTypes.add(Pair.of(type, direction));\n+    return new OrderedByTypeExpander(newTypes);\n+  }\n \n-    @Override\n-    public StandardExpander remove( RelationshipType type )\n+  @Override\n+  public StandardExpander remove(RelationshipType type)\n+  {\n+    Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>();\n+    for (Pair<RelationshipType, Direction> pair : orderedTypes)\n     {\n-        Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>();\n-        for ( Pair<RelationshipType,Direction> pair : orderedTypes )\n-        {\n-            if ( !type.name().equals( pair.first().name() ) )\n-            {\n-                newTypes.add( pair );\n-            }\n-        }\n-        return new OrderedByTypeExpander( newTypes );\n+      if (!type.name().equals(pair.first().name()))\n+      {\n+        newTypes.add(pair);\n+      }\n     }\n+    return new OrderedByTypeExpander(newTypes);\n+  }\n \n-    @Override\n-    void buildString( StringBuilder result )\n-    {\n-        result.append( orderedTypes.toString() );\n-    }\n+  @Override\n+  void buildString(StringBuilder result)\n+  {\n+    result.append(orderedTypes.toString());\n+  }\n \n-    @Override\n-    public StandardExpander reverse()\n+  @Override\n+  public StandardExpander reverse()\n+  {\n+    Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>();\n+    for (Pair<RelationshipType, Direction> pair : orderedTypes)\n     {\n-        Collection<Pair<RelationshipType, Direction>> newTypes = new ArrayList<>();\n-        for ( Pair<RelationshipType,Direction> pair : orderedTypes )\n-        {\n-            newTypes.add( Pair.of( pair.first(), pair.other().reverse() ) );\n-        }\n-        return new OrderedByTypeExpander( newTypes );\n+      newTypes.add(Pair.of(pair.first(), pair.other().reverse()));\n     }\n+    return new OrderedByTypeExpander(newTypes);\n+  }\n \n-    @Override\n-    RegularExpander createNew( Map<Direction, RelationshipType[]> newTypes )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n+  @Override\n+  RegularExpander createNew(Map<Direction, RelationshipType[]> newTypes)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n \n-    @Override\n-    ResourceIterator<Relationship> doExpand( final Path path, BranchState state )\n+  @Override\n+  ResourceIterator<Relationship> doExpand(final Path path, BranchState state)\n+  {\n+    final Node node = path.endNode();\n+    return new NestingResourceIterator<Relationship, Pair<RelationshipType, Direction>>(\n+        orderedTypes.iterator())\n     {\n-        final Node node = path.endNode();\n-        return new NestingResourceIterator<Relationship, Pair<RelationshipType, Direction>>(\n-                orderedTypes.iterator() )\n-        {\n-            @Override\n-            protected ResourceIterator<Relationship> createNestedIterator(\n-                    Pair<RelationshipType, Direction> entry )\n-            {\n-                RelationshipType type = entry.first();\n-                Direction dir = entry.other();\n-                Iterable<Relationship> relationshipsIterable =\n-                        (dir == Direction.BOTH) ? node.getRelationships( type ) : node.getRelationships( type, dir );\n-                return Iterables.asResourceIterable( relationshipsIterable ).iterator();\n-            }\n-        };\n-    }\n+      @Override\n+      protected ResourceIterator<Relationship> createNestedIterator(\n+          Pair<RelationshipType, Direction> entry)\n+      {\n+        RelationshipType type = entry.first();\n+        Direction dir = entry.other();\n+        Iterable<Relationship> relationshipsIterable =\n+            (dir == Direction.BOTH) ? node.getRelationships(type) : node.getRelationships(type, dir);\n+        return Iterables.asResourceIterable(relationshipsIterable).iterator();\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1532/OrderedByTypeExpander.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1532/OrderedByTypeExpander.java\nindex 990d07aff12..6661beee494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1532/OrderedByTypeExpander.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1532/OrderedByTypeExpander.java\n@@ -99,19 +99,16 @@ public final class OrderedByTypeExpander extends StandardExpander.RegularExpande\n     ResourceIterator<Relationship> doExpand( final Path path, BranchState state )\n     {\n         final Node node = path.endNode();\n-        return new NestingResourceIterator<Relationship, Pair<RelationshipType, Direction>>(\n-                orderedTypes.iterator() )\n+        return new NestingResourceIterator<Relationship, Pair<RelationshipType, Direction>>( orderedTypes.iterator() )\n         {\n             @Override\n-            protected ResourceIterator<Relationship> createNestedIterator(\n-                    Pair<RelationshipType, Direction> entry )\n+            protected ResourceIterator<Relationship> createNestedIterator( Pair<RelationshipType,Direction> entry )\n             {\n                 RelationshipType type = entry.first();\n                 Direction dir = entry.other();\n-                Iterable<Relationship> relationshipsIterable =\n-                        (dir == Direction.BOTH) ? node.getRelationships( type ) : node.getRelationships( type, dir );\n-                return Iterables.asResourceIterable( relationshipsIterable ).iterator();\n+                Iterable<Relationship> relationshipsIterable = ( dir == Direction.BOTH) ? node.getRelationships( type ) : node.getRelationships( type, dir );\n+return Iterables.asResourceIterable( relationshipsIterable ).iterator();\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}