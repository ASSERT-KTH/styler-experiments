{
    "project_name": "neo4j-neo4j",
    "violation_id": "614",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/614/LuceneIndexSnapshots.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/614/LuceneIndexSnapshots.java\nindex d00b43bde67..39ad259f6ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/614/LuceneIndexSnapshots.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/614/LuceneIndexSnapshots.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.backup;\n \n import org.apache.lucene.index.DirectoryReader;\n@@ -48,56 +49,57 @@ public final class LuceneIndexSnapshots\n \n     /**\n      * Create index snapshot iterator for a writable index.\n+     *\n      * @param indexFolder index location folder\n      * @param indexWriter index writer\n      * @return index file name iterator\n      * @throws IOException\n      */\n-    public static ResourceIterator<Path> forIndex( Path indexFolder, IndexWriter indexWriter ) throws IOException\n+    public static ResourceIterator<Path> forIndex(Path indexFolder, IndexWriter indexWriter) throws IOException\n     {\n         IndexDeletionPolicy deletionPolicy = indexWriter.getConfig().getIndexDeletionPolicy();\n-        if ( deletionPolicy instanceof SnapshotDeletionPolicy )\n+        if (deletionPolicy instanceof SnapshotDeletionPolicy)\n         {\n             SnapshotDeletionPolicy policy = (SnapshotDeletionPolicy) deletionPolicy;\n-            return hasCommits( indexWriter )\n-                   ? new WritableIndexSnapshotFileIterator( indexFolder, policy )\n-                   : emptyResourceIterator();\n-        }\n-        else\n+            return hasCommits(indexWriter)\n+              ? new WritableIndexSnapshotFileIterator(indexFolder, policy)\n+              : emptyResourceIterator();\n+        } else\n         {\n-            throw new UnsupportedIndexDeletionPolicy( \"Can't perform index snapshot with specified index deletion \" +\n-                                                      \"policy: \" + deletionPolicy.getClass().getName() + \". \" +\n-                                                      \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" +\n-                                                      \"supported\" );\n+            throw new UnsupportedIndexDeletionPolicy(\"Can't perform index snapshot with specified index deletion \" +\n+              \"policy: \" + deletionPolicy.getClass().getName() + \". \" +\n+              \"Only \" + SnapshotDeletionPolicy.class.getName() + \" is \" +\n+              \"supported\");\n         }\n     }\n \n     /**\n      * Create index snapshot iterator for a read only index.\n+     *\n      * @param indexFolder index location folder\n-     * @param directory index directory\n+     * @param directory   index directory\n      * @return index file name resource iterator\n      * @throws IOException\n      */\n-    public static ResourceIterator<Path> forIndex( Path indexFolder, Directory directory ) throws IOException\n+    public static ResourceIterator<Path> forIndex(Path indexFolder, Directory directory) throws IOException\n     {\n-        if ( !hasCommits( directory ) )\n+        if (!hasCommits(directory))\n         {\n             return emptyResourceIterator();\n         }\n-        Collection<IndexCommit> indexCommits = DirectoryReader.listCommits( directory );\n-        IndexCommit indexCommit = Iterables.last( indexCommits );\n-        return new ReadOnlyIndexSnapshotFileIterator( indexFolder, indexCommit );\n+        Collection<IndexCommit> indexCommits = DirectoryReader.listCommits(directory);\n+        IndexCommit indexCommit = Iterables.last(indexCommits);\n+        return new ReadOnlyIndexSnapshotFileIterator(indexFolder, indexCommit);\n     }\n \n-    private static boolean hasCommits( IndexWriter indexWriter ) throws IOException\n+    private static boolean hasCommits(IndexWriter indexWriter) throws IOException\n     {\n         Directory directory = indexWriter.getDirectory();\n-        return hasCommits( directory );\n+        return hasCommits(directory);\n     }\n \n-    private static boolean hasCommits( Directory directory ) throws IOException\n+    private static boolean hasCommits(Directory directory) throws IOException\n     {\n-        return DirectoryReader.indexExists( directory ) && SegmentInfos.readLatestCommit( directory ) != null;\n+        return DirectoryReader.indexExists(directory) && SegmentInfos.readLatestCommit(directory) != null;\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}