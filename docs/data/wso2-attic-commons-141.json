{
    "project_name": "wso2-attic-commons",
    "violation_id": "141",
    "information": {
        "violations": [
            {
                "line": "15",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " */\nclass BpelInstanceWorkerCache {\n    private HashMap<Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n    private ReferenceQueue<BpelInstanceWorker> _refQ = new ReferenceQueue<BpelInstanceWorker>();\n    \n    private ODEProcess _process;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/141/BpelInstanceWorkerCache.java\nindex 797b58b4877..aa0833276be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/141/BpelInstanceWorkerCache.java\n@@ -12,7 +12,8 @@ import java.util.HashMap;\n  *\n  */\n class BpelInstanceWorkerCache {\n-    private HashMap<Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n+    private HashMap<\n+            Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n     private ReferenceQueue<BpelInstanceWorker> _refQ = new ReferenceQueue<BpelInstanceWorker>();\n     \n     private ODEProcess _process;\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/141/BpelInstanceWorkerCache.java\nindex 797b58b4877..8d19d386c69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/141/BpelInstanceWorkerCache.java\n@@ -6,50 +6,50 @@ import java.lang.ref.WeakReference;\n import java.util.HashMap;\n \n /**\n- * A cache of {@link BpelInstanceWorker} objects. \n- * \n- * @author Maciej Szefler <mszefler at gmail dot com>\n+ * A cache of {@link BpelInstanceWorker} objects.\n  *\n+ * @author Maciej Szefler <mszefler at gmail dot com>\n  */\n class BpelInstanceWorkerCache {\n-    private HashMap<Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n-    private ReferenceQueue<BpelInstanceWorker> _refQ = new ReferenceQueue<BpelInstanceWorker>();\n-    \n-    private ODEProcess _process;\n-    \n-    public BpelInstanceWorkerCache(ODEProcess process) {\n-        _process = process;\n-    }\n-    \n-    synchronized BpelInstanceWorker get(long iid) {\n-        expungeStaleEntries();\n-        WeakReference<BpelInstanceWorker> wref = _cache.get(iid);\n-        BpelInstanceWorker worker;\n-        \n-        // Case: not in cache.\n-        if (wref == null) {\n-            worker = new BpelInstanceWorker(_process, iid);\n-            wref = new WeakReference<BpelInstanceWorker>(worker,_refQ);\n-            _cache.put(iid, wref);\n-        } else {\n-            worker = wref.get();\n-            \n-            // Case: garbage collected\n-            if (worker == null) {\n-                worker = new BpelInstanceWorker(_process, iid);\n-                wref = new WeakReference<BpelInstanceWorker>(worker,_refQ);\n-                _cache.put(iid, wref); \n-            }\n-        }\n-\n-        return worker;\n+  private HashMap<Long, WeakReference<BpelInstanceWorker>> _cache =\n+    new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n+  private ReferenceQueue<BpelInstanceWorker> _refQ = new ReferenceQueue<BpelInstanceWorker>();\n+\n+  private ODEProcess _process;\n+\n+  public BpelInstanceWorkerCache(ODEProcess process) {\n+    _process = process;\n+  }\n+\n+  synchronized BpelInstanceWorker get(long iid) {\n+    expungeStaleEntries();\n+    WeakReference<BpelInstanceWorker> wref = _cache.get(iid);\n+    BpelInstanceWorker worker;\n+\n+    // Case: not in cache.\n+    if (wref == null) {\n+      worker = new BpelInstanceWorker(_process, iid);\n+      wref = new WeakReference<BpelInstanceWorker>(worker, _refQ);\n+      _cache.put(iid, wref);\n+    } else {\n+      worker = wref.get();\n+\n+      // Case: garbage collected\n+      if (worker == null) {\n+        worker = new BpelInstanceWorker(_process, iid);\n+        wref = new WeakReference<BpelInstanceWorker>(worker, _refQ);\n+        _cache.put(iid, wref);\n+      }\n     }\n-    \n-    \n-    private void expungeStaleEntries() {\n-        Reference<? extends BpelInstanceWorker> x;\n-        while ((x=_refQ.poll()) != null){\n-            _cache.values().remove(x);\n-        }\n+\n+    return worker;\n+  }\n+\n+\n+  private void expungeStaleEntries() {\n+    Reference<? extends BpelInstanceWorker> x;\n+    while ((x = _refQ.poll()) != null) {\n+      _cache.values().remove(x);\n     }\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/141/BpelInstanceWorkerCache.java\nindex 797b58b4877..8d50aa29076 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/141/BpelInstanceWorkerCache.java\n@@ -20,8 +20,7 @@ class BpelInstanceWorkerCache {\n     public BpelInstanceWorkerCache(ODEProcess process) {\n         _process = process;\n     }\n-    \n-    synchronized BpelInstanceWorker get(long iid) {\n+synchronized BpelInstanceWorker get(long iid) {\n         expungeStaleEntries();\n         WeakReference<BpelInstanceWorker> wref = _cache.get(iid);\n         BpelInstanceWorker worker;\n@@ -52,4 +51,4 @@ class BpelInstanceWorkerCache {\n             _cache.values().remove(x);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/141/BpelInstanceWorkerCache.java\nindex 797b58b4877..aa0833276be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/141/BpelInstanceWorkerCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/141/BpelInstanceWorkerCache.java\n@@ -12,7 +12,8 @@ import java.util.HashMap;\n  *\n  */\n class BpelInstanceWorkerCache {\n-    private HashMap<Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n+    private HashMap<\n+            Long, WeakReference<BpelInstanceWorker>> _cache = new HashMap<Long, WeakReference<BpelInstanceWorker>>();\n     private ReferenceQueue<BpelInstanceWorker> _refQ = new ReferenceQueue<BpelInstanceWorker>();\n     \n     private ODEProcess _process;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}