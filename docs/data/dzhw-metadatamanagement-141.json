{
    "project_name": "dzhw-metadatamanagement",
    "violation_id": "141",
    "information": {
        "violations": [
            {
                "line": "26",
                "column": "66",
                "severity": "error",
                "message": "'}' at column 66 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(InstrumentExists constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/141/InstrumentExistsValidator.java\nindex 457f948eca8..0fd1552a048 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/dzhw-metadatamanagement/styler/05_predictions/final/files-repaired/141/InstrumentExistsValidator.java\n@@ -23,7 +23,9 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+  public void initialize(InstrumentExists constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/141/InstrumentExistsValidator.java\nindex 457f948eca8..ac55c4b34ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/checkstyle_idea/141/InstrumentExistsValidator.java\n@@ -9,30 +9,31 @@ import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.Instrument\n \n /**\n  * Validator which ensures that there is an instrument with the given id.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   @Autowired\n   private InstrumentRepository instrumentRepository;\n-  \n+\n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+  public void initialize(InstrumentExists constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/141/InstrumentExistsValidator.java\nindex 457f948eca8..dfebaf82683 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/codebuff/141/InstrumentExistsValidator.java\n@@ -2,9 +2,7 @@ package eu.dzhw.fdz.metadatamanagement.relatedpublicationmanagement.domain.valid\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n-\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.InstrumentRepository;\n \n /**\n@@ -12,6 +10,8 @@ import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.repository.Instrument\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n public class InstrumentExistsValidator implements ConstraintValidator<InstrumentExists, String> {\n \n   @Autowired\n@@ -22,8 +22,11 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+  public void initialize(InstrumentExists constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -31,8 +34,11 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(String instrumentId, ConstraintValidatorContext context) {   \n+  public boolean isValid(String instrumentId,\n+    ConstraintValidatorContext context) {\n     return instrumentRepository.existsById(instrumentId);\n   }\n }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/141/InstrumentExistsValidator.java\nindex 457f948eca8..0fd1552a048 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/violations/141/InstrumentExistsValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/dzhw-metadatamanagement/styler/05_predictions/random/files-repaired/141/InstrumentExistsValidator.java\n@@ -23,7 +23,9 @@ public class InstrumentExistsValidator implements ConstraintValidator<Instrument\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(InstrumentExists constraintAnnotation) {}\n+  public void initialize(InstrumentExists constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "26",
                    "column": "66",
                    "severity": "error",
                    "message": "'}' at column 66 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}