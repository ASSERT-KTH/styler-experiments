{
    "project_name": "findbugsproject-findbugs",
    "violation_id": "25",
    "information": {
        "violations": [
            {
                "line": "26",
                "column": "5",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    @ExpectWarning(\"IR\")\n    public void infiniteRecursiveLoop() {\n    \t    infiniteRecursiveLoop();\n    }\n    \n    ",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/findbugsproject-findbugs/styler/05_predictions/final/files-repaired/25/CheckForNullVarArgs.java\nindex 031f907a1c2..19417c64250 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/findbugsproject-findbugs/styler/05_predictions/final/files-repaired/25/CheckForNullVarArgs.java\n@@ -23,7 +23,7 @@ public class CheckForNullVarArgs {\n     \n     @ExpectWarning(\"IR\")\n     public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+        infiniteRecursiveLoop();\n     }\n     \n     \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/checkstyle_idea/25/CheckForNullVarArgs.java\nindex 031f907a1c2..630548a7ec1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/checkstyle_idea/25/CheckForNullVarArgs.java\n@@ -12,19 +12,19 @@ public class CheckForNullVarArgs {\n \n     @NoWarning(\"NP,RCN\")\n     protected Object caller(@CheckForNull Object param) {\n-        final Object[] paramArray = param == null ? null : new Object[] { param };\n+        final Object[] paramArray = param == null ? null : new Object[] {param};\n         return method(paramArray);\n     }\n-    \n+\n     @NoWarning(\"NP,RCN\")\n     protected Object method(@CheckForNull Object... params) {\n         return params == null ? Boolean.FALSE : Boolean.TRUE;\n     }\n-    \n+\n     @ExpectWarning(\"IR\")\n     public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+        infiniteRecursiveLoop();\n     }\n-    \n-    \n+\n+\n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/naturalize/25/CheckForNullVarArgs.java\nindex 031f907a1c2..578dd7ec9d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/naturalize/25/CheckForNullVarArgs.java\n@@ -1,6 +1,4 @@\n package nullnessAnnotations;\n-\n-\n import javax.annotation.CheckForNull;\n import javax.annotation.ParametersAreNonnullByDefault;\n \n@@ -15,16 +13,14 @@ public class CheckForNullVarArgs {\n         final Object[] paramArray = param == null ? null : new Object[] { param };\n         return method(paramArray);\n     }\n-    \n-    @NoWarning(\"NP,RCN\")\n-    protected Object method(@CheckForNull Object... params) {\n+\n+@NoWarning(\"NP,RCN\")\n+protected Object method(@CheckForNull Object... params) {\n         return params == null ? Boolean.FALSE : Boolean.TRUE;\n     }\n-    \n-    @ExpectWarning(\"IR\")\n-    public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+\n+@ExpectWarning(\"IR\")\n+public void infiniteRecursiveLoop() {\n+    infiniteRecursiveLoop();\n     }\n-    \n-    \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/codebuff/25/CheckForNullVarArgs.java\nindex 031f907a1c2..cd44cc45d3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/codebuff/25/CheckForNullVarArgs.java\n@@ -1,30 +1,25 @@\n package nullnessAnnotations;\n \n-\n import javax.annotation.CheckForNull;\n import javax.annotation.ParametersAreNonnullByDefault;\n-\n import edu.umd.cs.findbugs.annotations.ExpectWarning;\n import edu.umd.cs.findbugs.annotations.NoWarning;\n \n @ParametersAreNonnullByDefault\n public class CheckForNullVarArgs {\n-\n     @NoWarning(\"NP,RCN\")\n     protected Object caller(@CheckForNull Object param) {\n         final Object[] paramArray = param == null ? null : new Object[] { param };\n         return method(paramArray);\n     }\n-    \n+\n     @NoWarning(\"NP,RCN\")\n     protected Object method(@CheckForNull Object... params) {\n         return params == null ? Boolean.FALSE : Boolean.TRUE;\n     }\n-    \n+\n     @ExpectWarning(\"IR\")\n     public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+        infiniteRecursiveLoop();\n     }\n-    \n-    \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/styler/05_predictions/random/files-repaired/25/CheckForNullVarArgs.java\nindex 031f907a1c2..19417c64250 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/styler/05_predictions/random/files-repaired/25/CheckForNullVarArgs.java\n@@ -23,7 +23,7 @@ public class CheckForNullVarArgs {\n     \n     @ExpectWarning(\"IR\")\n     public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+        infiniteRecursiveLoop();\n     }\n     \n     \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/styler/05_predictions/three_grams/files-repaired/25/CheckForNullVarArgs.java\nindex 031f907a1c2..19417c64250 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/violations/25/CheckForNullVarArgs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/findbugsproject-findbugs/styler/05_predictions/three_grams/files-repaired/25/CheckForNullVarArgs.java\n@@ -23,7 +23,7 @@ public class CheckForNullVarArgs {\n     \n     @ExpectWarning(\"IR\")\n     public void infiniteRecursiveLoop() {\n-    \t    infiniteRecursiveLoop();\n+        infiniteRecursiveLoop();\n     }\n     \n     \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}