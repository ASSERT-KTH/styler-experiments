{
    "project_name": "Angel-ML-angel",
    "violation_id": "475",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/475/ByteArrayElement.java\nindex 16d7761e363..cea926e9592 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/475/ByteArrayElement.java\n@@ -30,58 +30,58 @@ import java.io.IOException;\n  */\n public class ByteArrayElement implements IElement {\n \n-  private byte[] data;\n-\n-  public ByteArrayElement(byte[] data) {\n-    this.data = data;\n-  }\n-\n-  public ByteArrayElement() {\n-    this(null);\n-  }\n-\n-  public byte[] getData() {\n-    return data;\n-  }\n-\n-  public void setData(byte[] data) {\n-    this.data = data;\n-  }\n-\n-  @Override\n-  public ByteArrayElement deepClone() {\n-    byte[] newData = new byte[data.length];\n-    System.arraycopy(data, 0, newData, 0, data.length);\n-    return new ByteArrayElement(newData);\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf output) {\n-    ByteBufSerdeUtils.serializeBytes(output, data);\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    data = ByteBufSerdeUtils.deserializeBytes(input);\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return ByteBufSerdeUtils.serializedBytesLen(data);\n-  }\n-\n-  @Override\n-  public void serialize(DataOutputStream output) throws IOException {\n-    StreamSerdeUtils.serializeBytes(output, data);\n-  }\n-\n-  @Override\n-  public void deserialize(DataInputStream input) throws IOException {\n-    data = StreamSerdeUtils.deserializeBytes(input);\n-  }\n-\n-  @Override\n-  public int dataLen() {\n-    return bufferLen();\n-  }\n+    private byte[] data;\n+\n+    public ByteArrayElement(byte[] data) {\n+        this.data = data;\n+    }\n+\n+    public ByteArrayElement() {\n+        this(null);\n+    }\n+\n+    public byte[] getData() {\n+        return data;\n+    }\n+\n+    public void setData(byte[] data) {\n+        this.data = data;\n+    }\n+\n+    @Override\n+    public ByteArrayElement deepClone() {\n+        byte[] newData = new byte[data.length];\n+        System.arraycopy(data, 0, newData, 0, data.length);\n+        return new ByteArrayElement(newData);\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        ByteBufSerdeUtils.serializeBytes(output, data);\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        data = ByteBufSerdeUtils.deserializeBytes(input);\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        return ByteBufSerdeUtils.serializedBytesLen(data);\n+    }\n+\n+    @Override\n+    public void serialize(DataOutputStream output) throws IOException {\n+        StreamSerdeUtils.serializeBytes(output, data);\n+    }\n+\n+    @Override\n+    public void deserialize(DataInputStream input) throws IOException {\n+        data = StreamSerdeUtils.deserializeBytes(input);\n+    }\n+\n+    @Override\n+    public int dataLen() {\n+        return bufferLen();\n+    }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/475/ByteArrayElement.java\nindex 16d7761e363..d4cea113588 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/475/ByteArrayElement.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ps.storage.vector.element;\n \n import com.tencent.angel.common.ByteBufSerdeUtils;\n@@ -84,4 +83,4 @@ public class ByteArrayElement implements IElement {\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/475/ByteArrayElement.java\nindex 16d7761e363..9ab25658a87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/475/ByteArrayElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/475/ByteArrayElement.java\n@@ -28,6 +28,7 @@ import java.io.IOException;\n /**\n  * The complex object that contains a integer array,, it can be stored in PS\n  */\n+\n public class ByteArrayElement implements IElement {\n \n   private byte[] data;\n@@ -84,4 +85,4 @@ public class ByteArrayElement implements IElement {\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}