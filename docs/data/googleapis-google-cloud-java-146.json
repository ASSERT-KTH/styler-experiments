{
    "project_name": "googleapis-google-cloud-java",
    "violation_id": "146",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import java.util.Iterator;\n\nfinal class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n\n  private final StorageRpc storageRpc;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/checkstyle_idea/146/StorageServiceImpl.java\nindex 78acb40d5b9..aafeaf2773f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/checkstyle_idea/146/StorageServiceImpl.java\n@@ -24,7 +24,8 @@ import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.Iterator;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions>\n+    implements StorageService {\n \n   private final StorageRpc storageRpc;\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/naturalize/146/StorageServiceImpl.java\nindex 78acb40d5b9..fd1cbbf8bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/naturalize/146/StorageServiceImpl.java\n@@ -91,9 +91,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       String delimiter = settings.recursive() ? options().pathDelimiter() : null;\n       return Iterators.transform(\n           storageRpc.list(bucket, settings.prefix(), delimiter, settings.cursor(),\n-              settings.includeOlderVersions(), settings.maxResults()),\n-          Blob.FROM_PB_FUNCTION);\n-    } catch (IOException ex) {\n+              settings.includeOlderVersions(), settings.maxResults()), Blob.FROM_PB_FUNCTION);\n+  } catch (IOException ex) {\n       throw new StorageServiceException(ex);\n     }\n   }\n@@ -140,12 +139,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n // try {\n \n //\n-//      return Blob.fromPb(storageRpc.compose(composeRequest.sourceBucket(),\n-//          composeRequest.sourceBlobs(), composeRequest.target()));\n-//    } catch (IOException ex) {\n-//      throw new StorageServiceException(ex);\n-//    }\n-    throw new UnsupportedOperationException(\"bla\");\n+//      \n+throw new UnsupportedOperationException(\"bla\");\n   }\n \n   @Override\n@@ -174,4 +169,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       throw new StorageServiceException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/codebuff/146/StorageServiceImpl.java\nindex 78acb40d5b9..61cf6445765 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/violations/146/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/googleapis-google-cloud-java/codebuff/146/StorageServiceImpl.java\n@@ -19,11 +19,11 @@ package com.google.gcloud.storage;\n import com.google.common.collect.Iterators;\n import com.google.gcloud.BaseService;\n import com.google.gcloud.spi.StorageRpc;\n-\n import java.io.IOException;\n import java.nio.ByteBuffer;\n import java.util.Iterator;\n \n+\n final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n   private final StorageRpc storageRpc;\n@@ -89,10 +89,12 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Iterator<Blob> list(String bucket, ListOptions settings) {\n     try {\n       String delimiter = settings.recursive() ? options().pathDelimiter() : null;\n-      return Iterators.transform(\n-          storageRpc.list(bucket, settings.prefix(), delimiter, settings.cursor(),\n-              settings.includeOlderVersions(), settings.maxResults()),\n-          Blob.FROM_PB_FUNCTION);\n+      return Iterators.transform(storageRpc.list(bucket,\n+        settings.prefix(),\n+          delimiter,\n+            settings.cursor(),\n+              settings.includeOlderVersions(),\n+                settings.maxResults()), Blob.FROM_PB_FUNCTION);\n     } catch (IOException ex) {\n       throw new StorageServiceException(ex);\n     }\n@@ -174,4 +176,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n       throw new StorageServiceException(ex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}