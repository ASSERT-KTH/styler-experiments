{
    "project_name": "vassalengine-vassal",
    "violation_id": "10",
    "information": {
        "violations": [
            {
                "line": "286",
                "column": "26",
                "severity": "error",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "    // call the gameRefresher\n    //FIXME Add test mode checkbox\n    gameRefresher.execute( options, false, true, true,   null);\n\n    // save the refreshed game into a temporary file\n    final File tmp = File.createTempFile(\"vassal\", null);",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/vassalengine-vassal/styler/05_predictions/final/files-repaired/10/PredefinedSetup.java\nindex 4ea12e12cb4..c79ed439eae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/vassalengine-vassal/styler/05_predictions/final/files-repaired/10/PredefinedSetup.java\n@@ -283,7 +283,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n     // call the gameRefresher\n     //FIXME Add test mode checkbox\n-    gameRefresher.execute( options, false, true, true,   null);\n+    gameRefresher.execute(options, false, true, true,   null);\n \n     // save the refreshed game into a temporary file\n     final File tmp = File.createTempFile(\"vassal\", null);\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/checkstyle_idea/10/PredefinedSetup.java\nindex 4ea12e12cb4..e25dc92e119 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/checkstyle_idea/10/PredefinedSetup.java\n@@ -15,6 +15,7 @@\n  * License along with this library; if not, copies are available\n  * at http://www.opensource.org.\n  */\n+\n package VASSAL.build.module;\n \n import VASSAL.build.AbstractConfigurable;\n@@ -86,7 +87,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   }\n \n-  protected void  setOptions() {\n+  protected void setOptions() {\n /*    if (nameCheck.isSelected()) {\n       options.add(\"useName\");\n     }\n@@ -98,7 +99,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   @Override\n   public String[] getAttributeDescriptions() {\n-    return new String[]{\n+    return new String[] {\n       Resources.getString(Resources.NAME_LABEL),\n       Resources.getString(\"Editor.PredefinedSetup.parent_menu\"), //$NON-NLS-1$\n       Resources.getString(\"Editor.PredefinedSetup.predefined_file\"), //$NON-NLS-1$\n@@ -108,7 +109,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   @Override\n   public Class<?>[] getAttributeTypes() {\n-    return new Class<?>[]{\n+    return new Class<?>[] {\n       String.class,\n       Boolean.class,\n       Boolean.class,\n@@ -118,7 +119,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   @Override\n   public String[] getAttributeNames() {\n-    return new String[]{\n+    return new String[] {\n       NAME,\n       IS_MENU,\n       USE_FILE,\n@@ -130,17 +131,13 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n   public String getAttributeValueString(String key) {\n     if (NAME.equals(key)) {\n       return getConfigureName();\n-    }\n-    else if (FILE.equals(key)) {\n+    } else if (FILE.equals(key)) {\n       return fileName;\n-    }\n-    else if (USE_FILE.equals(key)) {\n+    } else if (USE_FILE.equals(key)) {\n       return String.valueOf(useFile);\n-    }\n-    else if (IS_MENU.equals(key)) {\n+    } else if (IS_MENU.equals(key)) {\n       return String.valueOf(isMenu);\n-    }\n-    else {\n+    } else {\n       return null;\n     }\n   }\n@@ -151,20 +148,17 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n       setConfigureName((String) value);\n       menuItem.getAction().putValue(Action.NAME, value);\n       menu.setText((String) value);\n-    }\n-    else if (USE_FILE.equals(key)) {\n+    } else if (USE_FILE.equals(key)) {\n       if (value instanceof String) {\n         value = Boolean.valueOf((String) value);\n       }\n       useFile = (Boolean) value;\n-    }\n-    else if (FILE.equals(key)) {\n+    } else if (FILE.equals(key)) {\n       if (value instanceof File) {\n         value = ((File) value).getName();\n       }\n       fileName = (String) value;\n-    }\n-    else if (IS_MENU.equals(key)) {\n+    } else if (IS_MENU.equals(key)) {\n       if (value instanceof String) {\n         value = Boolean.valueOf((String) value);\n       }\n@@ -176,11 +170,9 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n   public VisibilityCondition getAttributeVisibility(String name) {\n     if (FILE.equals(name)) {\n       return showFile;\n-    }\n-    else if (USE_FILE.equals(name)) {\n+    } else if (USE_FILE.equals(name)) {\n       return showUseFile;\n-    }\n-    else {\n+    } else {\n       return super.getAttributeVisibility(name);\n     }\n   }\n@@ -191,12 +183,11 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n       try {\n         g.getGameState().loadGameInBackground(fileName, getSavedGameContents());\n         g.setGameFile(fileName, GameModule.GameFileMode.LOADED_GAME);\n+      } catch (IOException e) {\n+        ErrorDialog.dataWarning(\n+          new BadDataReport(this, Resources.getString(\"Error.not_found\", \"Setup\"), fileName, e)); //$NON-NLS-1$ //$NON-NLS-2$\n       }\n-      catch (IOException e) {\n-        ErrorDialog.dataWarning(new BadDataReport(this, Resources.getString(\"Error.not_found\", \"Setup\"), fileName, e)); //$NON-NLS-1$ //$NON-NLS-2$\n-      }\n-    }\n-    else {\n+    } else {\n       g.setGameFile(fileName, GameModule.GameFileMode.NEW_GAME);\n       GameModule.getGameModule().getGameState().setup(false);\n       GameModule.getGameModule().getGameState().setup(true);\n@@ -212,7 +203,9 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n   }\n \n   private void setMenu(boolean isMenu) {\n-    if (isMenu == this.isMenu) return;\n+    if (isMenu == this.isMenu) {\n+      return;\n+    }\n \n     final ChildProxy<?> inUse = getMenuInUse();\n     final ParentProxy parent = inUse.getParent();\n@@ -232,8 +225,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n   public void addTo(Buildable parent) {\n     if (parent instanceof GameModule) {\n       MenuManager.getInstance().addToSection(\"PredefinedSetup\", getMenuInUse()); //$NON-NLS-1$\n-    }\n-    else if (parent instanceof PredefinedSetup) {\n+    } else if (parent instanceof PredefinedSetup) {\n       final PredefinedSetup setup = (PredefinedSetup) parent;\n       setup.menu.add(getMenuInUse());\n     }\n@@ -247,8 +239,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n     if (parent instanceof GameModule) {\n       MenuManager.getInstance()\n         .removeFromSection(\"PredefinedSetup\", getMenuInUse()); //$NON-NLS-1$\n-    }\n-    else if (parent instanceof PredefinedSetup) {\n+    } else if (parent instanceof PredefinedSetup) {\n       final PredefinedSetup setup = (PredefinedSetup) parent;\n       setup.menu.remove(getMenuInUse());\n     }\n@@ -258,7 +249,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   @Override\n   public Class<?>[] getAllowableConfigureComponents() {\n-    return isMenu ? new Class<?>[]{PredefinedSetup.class} : new Class<?>[0];\n+    return isMenu ? new Class<?>[] {PredefinedSetup.class} : new Class<?>[0];\n   }\n \n   public static String getConfigureTypeName() {\n@@ -283,7 +274,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n     // call the gameRefresher\n     //FIXME Add test mode checkbox\n-    gameRefresher.execute( options, false, true, true,   null);\n+    gameRefresher.execute(options, false, true, true, null);\n \n     // save the refreshed game into a temporary file\n     final File tmp = File.createTempFile(\"vassal\", null);\n@@ -334,6 +325,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n   /**\n    * {@link VASSAL.search.SearchTarget}\n+   *\n    * @return a list of the Configurable's string/expression fields if any (for search)\n    */\n   @Override\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "96",
                    "column": "1",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/naturalize/10/PredefinedSetup.java\nindex 4ea12e12cb4..f40d2932ff9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/naturalize/10/PredefinedSetup.java\n@@ -82,8 +82,6 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n     showFile = () -> !isMenu && useFile;\n \n     showUseFile = () -> !isMenu;\n-\n-\n   }\n \n   protected void  setOptions() {\n@@ -95,8 +93,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n     }*/\n   }\n \n-\n-  @Override\n+@Override\n   public String[] getAttributeDescriptions() {\n     return new String[]{\n       Resources.getString(Resources.NAME_LABEL),\n@@ -283,7 +280,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n     // call the gameRefresher\n     //FIXME Add test mode checkbox\n-    gameRefresher.execute( options, false, true, true,   null);\n+    gameRefresher.execute(options, false, true, true, null);\n \n     // save the refreshed game into a temporary file\n     final File tmp = File.createTempFile(\"vassal\", null);\n@@ -340,5 +337,4 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n   public List<String> getExpressionList() {\n     return List.of(name);\n   }\n-}\n-  \n\\ No newline at end of file\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/random/files-repaired/10/PredefinedSetup.java\nindex 4ea12e12cb4..c79ed439eae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/random/files-repaired/10/PredefinedSetup.java\n@@ -283,7 +283,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n     // call the gameRefresher\n     //FIXME Add test mode checkbox\n-    gameRefresher.execute( options, false, true, true,   null);\n+    gameRefresher.execute(options, false, true, true,   null);\n \n     // save the refreshed game into a temporary file\n     final File tmp = File.createTempFile(\"vassal\", null);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/three_grams/files-repaired/10/PredefinedSetup.java\nindex 4ea12e12cb4..c79ed439eae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/violations/10/PredefinedSetup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/vassalengine-vassal/styler/05_predictions/three_grams/files-repaired/10/PredefinedSetup.java\n@@ -283,7 +283,7 @@ public class PredefinedSetup extends AbstractConfigurable implements GameCompone\n \n     // call the gameRefresher\n     //FIXME Add test mode checkbox\n-    gameRefresher.execute( options, false, true, true,   null);\n+    gameRefresher.execute(options, false, true, true,   null);\n \n     // save the refreshed game into a temporary file\n     final File tmp = File.createTempFile(\"vassal\", null);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}