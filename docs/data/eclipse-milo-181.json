{
    "project_name": "eclipse-milo",
    "violation_id": "181",
    "information": {
        "violations": [
            {
                "line": "30",
                "column": "33",
                "severity": "error",
                "message": "'}' at column 33 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "final class Int64Conversions {\n\n    private Int64Conversions() {}\n\n    @Nonnull\n    static Boolean int64ToBoolean(@Nonnull Long l) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/181/Int64Conversions.java\nindex 64dead1a400..a454a69dc90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/checkstyle_idea/181/Int64Conversions.java\n@@ -27,7 +27,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int64Conversions {\n \n-    private Int64Conversions() {}\n+    private Int64Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int64ToBoolean(@Nonnull Long l) {\n@@ -134,17 +135,28 @@ final class Int64Conversions {\n     static Object explicitConversion(@Nonnull Long l, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return int64ToBoolean(l);\n-            case Byte:          return int64ToByte(l);\n-            case Int16:         return int64ToInt16(l);\n-            case Int32:         return int64ToInt32(l);\n-            case SByte:         return int64ToSByte(l);\n-            case StatusCode:    return int64ToStatusCode(l);\n-            case String:        return int64ToString(l);\n-            case UInt16:        return int64ToUInt16(l);\n-            case UInt32:        return int64ToUInt32(l);\n-            case UInt64:        return int64ToUInt64(l);\n-            default:            return implicitConversion(l, targetType);\n+            case Boolean:\n+                return int64ToBoolean(l);\n+            case Byte:\n+                return int64ToByte(l);\n+            case Int16:\n+                return int64ToInt16(l);\n+            case Int32:\n+                return int64ToInt32(l);\n+            case SByte:\n+                return int64ToSByte(l);\n+            case StatusCode:\n+                return int64ToStatusCode(l);\n+            case String:\n+                return int64ToString(l);\n+            case UInt16:\n+                return int64ToUInt16(l);\n+            case UInt32:\n+                return int64ToUInt32(l);\n+            case UInt64:\n+                return int64ToUInt64(l);\n+            default:\n+                return implicitConversion(l, targetType);\n         }\n         //@formatter:on\n     }\n@@ -153,9 +165,12 @@ final class Int64Conversions {\n     static Object implicitConversion(@Nonnull Long l, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int64ToDouble(l);\n-            case Float:     return int64ToFloat(l);\n-            default:        return null;\n+            case Double:\n+                return int64ToDouble(l);\n+            case Float:\n+                return int64ToFloat(l);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/181/Int64Conversions.java\nindex 64dead1a400..3c3df96d44a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/naturalize/181/Int64Conversions.java\n@@ -136,9 +136,12 @@ final class Int64Conversions {\n         switch (targetType) {\n             case Boolean:       return int64ToBoolean(l);\n             case Byte:          return int64ToByte(l);\n-            case Int16:         return int64ToInt16(l);\n-            case Int32:         return int64ToInt32(l);\n-            case SByte:         return int64ToSByte(l);\n+            case Int16:\n+    return int64ToInt16(l);\n+            case Int32:\n+    return int64ToInt32(l);\n+            case SByte:\n+    return int64ToSByte(l);\n             case StatusCode:    return int64ToStatusCode(l);\n             case String:        return int64ToString(l);\n             case UInt16:        return int64ToUInt16(l);\n@@ -155,9 +158,10 @@ final class Int64Conversions {\n         switch (targetType) {\n             case Double:    return int64ToDouble(l);\n             case Float:     return int64ToFloat(l);\n-            default:        return null;\n+            default:\n+    return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/181/Int64Conversions.java\nindex 64dead1a400..6dea6345f5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/codebuff/181/Int64Conversions.java\n@@ -12,7 +12,6 @@ package org.eclipse.milo.opcua.sdk.server.events.conversions;\n \n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.stack.core.BuiltinDataType;\n import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;\n@@ -27,7 +26,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int64Conversions {\n \n-    private Int64Conversions() {}\n+    private Int64Conversions() {\n+    }\n \n     @Nonnull\n     static Boolean int64ToBoolean(@Nonnull Long l) {\n@@ -121,10 +121,7 @@ final class Int64Conversions {\n     static Object convert(@Nullable Object o, BuiltinDataType targetType, boolean implicit) {\n         if (o instanceof Long) {\n             Long l = (Long) o;\n-\n-            return implicit ?\n-                implicitConversion(l, targetType) :\n-                explicitConversion(l, targetType);\n+            return implicit ? implicitConversion(l, targetType) : explicitConversion(l, targetType);\n         } else {\n             return null;\n         }\n@@ -134,17 +131,37 @@ final class Int64Conversions {\n     static Object explicitConversion(@Nonnull Long l, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Boolean:       return int64ToBoolean(l);\n-            case Byte:          return int64ToByte(l);\n-            case Int16:         return int64ToInt16(l);\n-            case Int32:         return int64ToInt32(l);\n-            case SByte:         return int64ToSByte(l);\n-            case StatusCode:    return int64ToStatusCode(l);\n-            case String:        return int64ToString(l);\n-            case UInt16:        return int64ToUInt16(l);\n-            case UInt32:        return int64ToUInt32(l);\n-            case UInt64:        return int64ToUInt64(l);\n-            default:            return implicitConversion(l, targetType);\n+            case Boolean:\n+                return int64ToBoolean(l);\n+\n+            case Byte:\n+                return int64ToByte(l);\n+\n+            case Int16:\n+                return int64ToInt16(l);\n+\n+            case Int32:\n+                return int64ToInt32(l);\n+\n+            case SByte:\n+                return int64ToSByte(l);\n+\n+            case StatusCode:\n+                return int64ToStatusCode(l);\n+\n+            case String:\n+                return int64ToString(l);\n+\n+            case UInt16:\n+                return int64ToUInt16(l);\n+\n+            case UInt32:\n+                return int64ToUInt32(l);\n+\n+            case UInt64:\n+                return int64ToUInt64(l);\n+            default:\n+                return implicitConversion(l, targetType);\n         }\n         //@formatter:on\n     }\n@@ -153,11 +170,15 @@ final class Int64Conversions {\n     static Object implicitConversion(@Nonnull Long l, BuiltinDataType targetType) {\n         //@formatter:off\n         switch (targetType) {\n-            case Double:    return int64ToDouble(l);\n-            case Float:     return int64ToFloat(l);\n-            default:        return null;\n+            case Double:\n+                return int64ToDouble(l);\n+\n+            case Float:\n+                return int64ToFloat(l);\n+            default:\n+                return null;\n         }\n         //@formatter:on\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "30",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "34",
                    "severity": "error",
                    "message": "'}' at column 34 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/181/Int64Conversions.java\nindex 64dead1a400..309ccb83937 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/violations/181/Int64Conversions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/eclipse-milo/styler/05_predictions/three_grams/files-repaired/181/Int64Conversions.java\n@@ -27,9 +27,7 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n \n final class Int64Conversions {\n \n-    private Int64Conversions() {}\n-\n-    @Nonnull\n+    private Int64Conversions() { } @Nonnull\n     static Boolean int64ToBoolean(@Nonnull Long l) {\n         return l != 0;\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}