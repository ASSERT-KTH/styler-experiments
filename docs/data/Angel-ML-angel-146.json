{
    "project_name": "Angel-ML-angel",
    "violation_id": "146",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/146/QuantileSketch.java\nindex f60f10d7ce6..8ca2f74036f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/146/QuantileSketch.java\n@@ -21,50 +21,50 @@ import java.io.Serializable;\n \n public abstract class QuantileSketch implements Serializable {\n \n-  protected long n; // total number of data items appeared\n-  protected long estimateN; // estimated total number of data items there will be,\n-  // if not -1, sufficient space will be allocated at once\n+    protected long n; // total number of data items appeared\n+    protected long estimateN; // estimated total number of data items there will be,\n+    // if not -1, sufficient space will be allocated at once\n \n-  protected float minValue;\n-  protected float maxValue;\n+    protected float minValue;\n+    protected float maxValue;\n \n-  public QuantileSketch(long estimateN) {\n-    this.estimateN = estimateN > 0 ? estimateN : -1L;\n-  }\n+    public QuantileSketch(long estimateN) {\n+        this.estimateN = estimateN > 0 ? estimateN : -1L;\n+    }\n \n-  public QuantileSketch() {\n-    this(-1L);\n-  }\n+    public QuantileSketch() {\n+        this(-1L);\n+    }\n \n-  public abstract void reset();\n+    public abstract void reset();\n \n-  public abstract void update(float value);\n+    public abstract void update(float value);\n \n-  public abstract void merge(QuantileSketch other);\n+    public abstract void merge(QuantileSketch other);\n \n-  public abstract float getQuantile(float fraction);\n+    public abstract float getQuantile(float fraction);\n \n-  public abstract float[] getQuantiles(float[] fractions);\n+    public abstract float[] getQuantiles(float[] fractions);\n \n-  public abstract float[] getQuantiles(int evenPartition);\n+    public abstract float[] getQuantiles(int evenPartition);\n \n-  public boolean isEmpty() {\n-    return n == 0;\n-  }\n+    public boolean isEmpty() {\n+        return n == 0;\n+    }\n \n-  public long getN() {\n-    return n;\n-  }\n+    public long getN() {\n+        return n;\n+    }\n \n-  public long getEstimateN() {\n-    return estimateN;\n-  }\n+    public long getEstimateN() {\n+        return estimateN;\n+    }\n \n-  public float getMinValue() {\n-    return minValue;\n-  }\n+    public float getMinValue() {\n+        return minValue;\n+    }\n \n-  public float getMaxValue() {\n-    return maxValue;\n-  }\n+    public float getMaxValue() {\n+        return maxValue;\n+    }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/146/QuantileSketch.java\nindex f60f10d7ce6..237e2d2f843 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/146/QuantileSketch.java\n@@ -67,4 +67,4 @@ public abstract class QuantileSketch implements Serializable {\n   public float getMaxValue() {\n     return maxValue;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/146/QuantileSketch.java\nindex f60f10d7ce6..ffc4e5d5c9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/146/QuantileSketch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/146/QuantileSketch.java\n@@ -22,10 +22,12 @@ import java.io.Serializable;\n public abstract class QuantileSketch implements Serializable {\n \n   protected long n; // total number of data items appeared\n+\n   protected long estimateN; // estimated total number of data items there will be,\n   // if not -1, sufficient space will be allocated at once\n \n   protected float minValue;\n+\n   protected float maxValue;\n \n   public QuantileSketch(long estimateN) {\n@@ -67,4 +69,5 @@ public abstract class QuantileSketch implements Serializable {\n   public float getMaxValue() {\n     return maxValue;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}