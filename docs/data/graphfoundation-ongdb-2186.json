{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2186",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2186/LuceneCommandApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2186/LuceneCommandApplier.java\nindex 031978be56a..4ccb2b58e11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2186/LuceneCommandApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2186/LuceneCommandApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.io.IOException;\n@@ -44,175 +45,170 @@ import static org.neo4j.index.impl.lucene.explicit.EntityId.RelationshipData;\n  */\n public class LuceneCommandApplier extends TransactionApplier.Adapter\n {\n-    private final LuceneDataSource dataSource;\n-    private final Map<String,CommitContext> nodeContexts = new HashMap<>();\n-    private final Map<String,CommitContext> relationshipContexts = new HashMap<>();\n-    private final boolean recovery;\n-    private IndexDefineCommand definitions;\n-\n-    public LuceneCommandApplier( LuceneDataSource dataSource, boolean recovery )\n+  private final LuceneDataSource dataSource;\n+  private final Map<String, CommitContext> nodeContexts = new HashMap<>();\n+  private final Map<String, CommitContext> relationshipContexts = new HashMap<>();\n+  private final boolean recovery;\n+  private IndexDefineCommand definitions;\n+\n+  public LuceneCommandApplier(LuceneDataSource dataSource, boolean recovery)\n+  {\n+    this.dataSource = dataSource;\n+    this.recovery = recovery;\n+  }\n+\n+  @Override\n+  public boolean visitIndexAddNodeCommand(AddNodeCommand command)\n+  {\n+    IdData entityId = new IdData(command.getEntityId());\n+    return visitIndexAddCommand(command, entityId);\n+  }\n+\n+  @Override\n+  public boolean visitIndexAddRelationshipCommand(AddRelationshipCommand command)\n+  {\n+    RelationshipData entityId = new RelationshipData(command.getEntityId(), command.getStartNode(),\n+        command.getEndNode());\n+    return visitIndexAddCommand(command, entityId);\n+  }\n+\n+  private boolean visitIndexAddCommand(IndexCommand command, EntityId entityId)\n+  {\n+    try\n     {\n-        this.dataSource = dataSource;\n-        this.recovery = recovery;\n-    }\n-\n-    @Override\n-    public boolean visitIndexAddNodeCommand( AddNodeCommand command )\n+      CommitContext context = commitContext(command);\n+      String key = definitions.getKey(command.getKeyId());\n+      Object value = command.getValue();\n+\n+      // Below is a check for a null value where such a value is ignored. This may look strange, but the\n+      // reason is that there was this bug where adding a null value to an index would be fine and written\n+      // into the log as a command, to later fail during application of that command, i.e. here.\n+      // There was a fix introduced to throw IllegalArgumentException out to user right away if passing in\n+      // null or object that had toString() produce null. Although databases already affected by this would\n+      // not be able to recover, which is why this check is here.\n+      if (value != null)\n+      {\n+        context.ensureWriterInstantiated();\n+        context.indexType.addToDocument(context.getDocument(entityId, true).document, key, value);\n+      }\n+    } catch (ExplicitIndexNotFoundKernelException ignore)\n     {\n-        IdData entityId = new IdData( command.getEntityId() );\n-        return visitIndexAddCommand( command, entityId );\n+      // Pretend the index never existed.\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean visitIndexAddRelationshipCommand( AddRelationshipCommand command )\n+  @Override\n+  public boolean visitIndexRemoveCommand(RemoveCommand command)\n+  {\n+    try\n     {\n-        RelationshipData entityId = new RelationshipData( command.getEntityId(), command.getStartNode(),\n-                command.getEndNode() );\n-        return visitIndexAddCommand( command, entityId );\n-    }\n-\n-    private boolean visitIndexAddCommand( IndexCommand command, EntityId entityId )\n+      CommitContext context = commitContext(command);\n+      String key = definitions.getKey(command.getKeyId());\n+      Object value = command.getValue();\n+      context.ensureWriterInstantiated();\n+      CommitContext.DocumentContext\n+          document = context.getDocument(new IdData(command.getEntityId()), false);\n+      if (document != null)\n+      {\n+        context.indexType.removeFromDocument(document.document, key, value);\n+      }\n+    } catch (ExplicitIndexNotFoundKernelException ignore)\n     {\n-        try\n-        {\n-            CommitContext context = commitContext( command );\n-            String key = definitions.getKey( command.getKeyId() );\n-            Object value = command.getValue();\n-\n-            // Below is a check for a null value where such a value is ignored. This may look strange, but the\n-            // reason is that there was this bug where adding a null value to an index would be fine and written\n-            // into the log as a command, to later fail during application of that command, i.e. here.\n-            // There was a fix introduced to throw IllegalArgumentException out to user right away if passing in\n-            // null or object that had toString() produce null. Although databases already affected by this would\n-            // not be able to recover, which is why this check is here.\n-            if ( value != null )\n-            {\n-                context.ensureWriterInstantiated();\n-                context.indexType.addToDocument( context.getDocument( entityId, true ).document, key, value );\n-            }\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException ignore )\n-        {\n-            // Pretend the index never existed.\n-        }\n-        return false;\n+      // Pretend the index never existed.\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public boolean visitIndexRemoveCommand( RemoveCommand command )\n+  @Override\n+  public boolean visitIndexDeleteCommand(DeleteCommand command) throws IOException\n+  {\n+    try\n     {\n-        try\n-        {\n-            CommitContext context = commitContext( command );\n-            String key = definitions.getKey( command.getKeyId() );\n-            Object value = command.getValue();\n-            context.ensureWriterInstantiated();\n-            CommitContext.DocumentContext\n-                    document = context.getDocument( new IdData( command.getEntityId() ), false );\n-            if ( document != null )\n-            {\n-                context.indexType.removeFromDocument( document.document, key, value );\n-            }\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException ignore )\n-        {\n-            // Pretend the index never existed.\n-        }\n-        return false;\n+      CommitContext context = commitContext(command);\n+      context.documents.clear();\n+      context.dataSource.deleteIndex(context.identifier, context.recovery);\n+    } catch (ExplicitIndexNotFoundKernelException ignore)\n+    {\n+      // Pretend the index never existed.\n     }\n-\n-    @Override\n-    public boolean visitIndexDeleteCommand( DeleteCommand command ) throws IOException\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitIndexCreateCommand(CreateCommand createCommand)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean visitIndexDefineCommand(IndexDefineCommand indexDefineCommand)\n+  {\n+    definitions = indexDefineCommand;\n+    return false;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    try\n     {\n-        try\n+      if (definitions != null)\n+      {\n+        dataSource.getWriteLock();\n+        for (CommitContext context : nodeContexts.values())\n         {\n-            CommitContext context = commitContext( command );\n-            context.documents.clear();\n-            context.dataSource.deleteIndex( context.identifier, context.recovery );\n+          context.close();\n         }\n-        catch ( ExplicitIndexNotFoundKernelException ignore )\n+        for (CommitContext context : relationshipContexts.values())\n         {\n-            // Pretend the index never existed.\n+          context.close();\n         }\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitIndexCreateCommand( CreateCommand createCommand )\n+      }\n+    } catch (IOException e)\n     {\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean visitIndexDefineCommand( IndexDefineCommand indexDefineCommand )\n+      throw new RuntimeException(\"Failure to commit changes to lucene\", e);\n+    } finally\n     {\n-        definitions = indexDefineCommand;\n-        return false;\n+      if (definitions != null)\n+      {\n+        dataSource.releaseWriteLock();\n+      }\n     }\n-\n-    @Override\n-    public void close()\n+  }\n+\n+  private CommitContext commitContext(IndexCommand command) throws ExplicitIndexNotFoundKernelException\n+  {\n+    Map<String, CommitContext> contextMap = commitContextMap(command.getEntityType());\n+    String indexName = definitions.getIndexName(command.getIndexNameId());\n+    CommitContext context = contextMap.get(indexName);\n+    if (context == null)\n     {\n-        try\n-        {\n-            if ( definitions != null )\n-            {\n-                dataSource.getWriteLock();\n-                for ( CommitContext context : nodeContexts.values() )\n-                {\n-                    context.close();\n-                }\n-                for ( CommitContext context : relationshipContexts.values() )\n-                {\n-                    context.close();\n-                }\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Failure to commit changes to lucene\", e );\n-        }\n-        finally\n-        {\n-            if ( definitions != null )\n-            {\n-                dataSource.releaseWriteLock();\n-            }\n-        }\n+      IndexIdentifier identifier =\n+          new IndexIdentifier(IndexEntityType.byId(command.getEntityType()), indexName);\n+\n+      // TODO the fact that we look up index type from config here using the index store\n+      // directly should be avoided. But how can we do it in, say recovery?\n+      // The `dataSource.getType()` call can throw an exception if the index is concurrently deleted.\n+      // To avoid bubbling an exception during commit, we instead ignore the commands related to that index,\n+      // and proceed as if the index never existed, and thus cannot accept any modifications.\n+      IndexType type = dataSource.getType(identifier, recovery);\n+      context = new CommitContext(dataSource, identifier, type, recovery);\n+      contextMap.put(indexName, context);\n     }\n+    return context;\n+  }\n \n-    private CommitContext commitContext( IndexCommand command ) throws ExplicitIndexNotFoundKernelException\n+  private Map<String, CommitContext> commitContextMap(byte entityType)\n+  {\n+    if (entityType == IndexEntityType.Node.id())\n     {\n-        Map<String,CommitContext> contextMap = commitContextMap( command.getEntityType() );\n-        String indexName = definitions.getIndexName( command.getIndexNameId() );\n-        CommitContext context = contextMap.get( indexName );\n-        if ( context == null )\n-        {\n-            IndexIdentifier identifier =\n-                    new IndexIdentifier( IndexEntityType.byId( command.getEntityType() ), indexName );\n-\n-            // TODO the fact that we look up index type from config here using the index store\n-            // directly should be avoided. But how can we do it in, say recovery?\n-            // The `dataSource.getType()` call can throw an exception if the index is concurrently deleted.\n-            // To avoid bubbling an exception during commit, we instead ignore the commands related to that index,\n-            // and proceed as if the index never existed, and thus cannot accept any modifications.\n-            IndexType type = dataSource.getType( identifier, recovery );\n-            context = new CommitContext( dataSource, identifier, type, recovery );\n-            contextMap.put( indexName, context );\n-        }\n-        return context;\n+      return nodeContexts;\n     }\n-\n-    private Map<String,CommitContext> commitContextMap( byte entityType )\n+    if (entityType == IndexEntityType.Relationship.id())\n     {\n-        if ( entityType == IndexEntityType.Node.id() )\n-        {\n-            return nodeContexts;\n-        }\n-        if ( entityType == IndexEntityType.Relationship.id() )\n-        {\n-            return relationshipContexts;\n-        }\n-        throw new IllegalArgumentException( \"Unknown entity type \" + entityType );\n+      return relationshipContexts;\n     }\n+    throw new IllegalArgumentException(\"Unknown entity type \" + entityType);\n+  }\n }\n",
            "diff_size": 226
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2186/LuceneCommandApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2186/LuceneCommandApplier.java\nindex 031978be56a..229a6c1b54a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2186/LuceneCommandApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2186/LuceneCommandApplier.java\n@@ -66,9 +66,8 @@ public class LuceneCommandApplier extends TransactionApplier.Adapter\n     @Override\n     public boolean visitIndexAddRelationshipCommand( AddRelationshipCommand command )\n     {\n-        RelationshipData entityId = new RelationshipData( command.getEntityId(), command.getStartNode(),\n-                command.getEndNode() );\n-        return visitIndexAddCommand( command, entityId );\n+        RelationshipData entityId = new RelationshipData( command.getEntityId(), command.getStartNode(), command.getEndNode() );\n+return visitIndexAddCommand( command, entityId );\n     }\n \n     private boolean visitIndexAddCommand( IndexCommand command, EntityId entityId )\n@@ -107,9 +106,8 @@ public class LuceneCommandApplier extends TransactionApplier.Adapter\n             String key = definitions.getKey( command.getKeyId() );\n             Object value = command.getValue();\n             context.ensureWriterInstantiated();\n-            CommitContext.DocumentContext\n-                    document = context.getDocument( new IdData( command.getEntityId() ), false );\n-            if ( document != null )\n+            CommitContext.DocumentContext document = context.getDocument( new IdData( command.getEntityId() ), false );\n+if ( document != null )\n             {\n                 context.indexType.removeFromDocument( document.document, key, value );\n             }\n@@ -188,10 +186,8 @@ public class LuceneCommandApplier extends TransactionApplier.Adapter\n         CommitContext context = contextMap.get( indexName );\n         if ( context == null )\n         {\n-            IndexIdentifier identifier =\n-                    new IndexIdentifier( IndexEntityType.byId( command.getEntityType() ), indexName );\n-\n-            // TODO the fact that we look up index type from config here using the index store\n+            IndexIdentifier identifier = new IndexIdentifier( IndexEntityType.byId( command.getEntityType() ), indexName );\n+    // TODO the fact that we look up index type from config here using the index store\n             // directly should be avoided. But how can we do it in, say recovery?\n             // The `dataSource.getType()` call can throw an exception if the index is concurrently deleted.\n             // To avoid bubbling an exception during commit, we instead ignore the commands related to that index,\n@@ -200,7 +196,8 @@ public class LuceneCommandApplier extends TransactionApplier.Adapter\n             context = new CommitContext( dataSource, identifier, type, recovery );\n             contextMap.put( indexName, context );\n         }\n-        return context;\n+\n+return context;\n     }\n \n     private Map<String,CommitContext> commitContextMap( byte entityType )\n@@ -209,10 +206,11 @@ public class LuceneCommandApplier extends TransactionApplier.Adapter\n         {\n             return nodeContexts;\n         }\n-        if ( entityType == IndexEntityType.Relationship.id() )\n+\n+if ( entityType == IndexEntityType.Relationship.id() )\n         {\n             return relationshipContexts;\n         }\n         throw new IllegalArgumentException( \"Unknown entity type \" + entityType );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}