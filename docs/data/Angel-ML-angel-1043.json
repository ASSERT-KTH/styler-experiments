{
    "project_name": "Angel-ML-angel",
    "violation_id": "1043",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1043/ParameterServerId.java\nindex 4ba4f99ab35..02d7d7c4208 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1043/ParameterServerId.java\n@@ -23,56 +23,57 @@ import com.tencent.angel.exception.UnvalidIdStrException;\n  * The id represented parameter server.\n  */\n public class ParameterServerId extends Id {\n-  private static String PS = \"ParameterServer\";\n+    private static String PS = \"ParameterServer\";\n \n-  /**\n-   * Create a new Parameter server id.\n-   *\n-   * @param psIndex the ps index\n-   */\n-  public ParameterServerId(int psIndex) {\n-    super(psIndex);\n-  }\n-\n-  /**\n-   * Create a new Parameter server id.\n-   *<p>\n-   *   'idStr' must match ParameterServer_XXX\n-   *</p>\n-   * @param idStr the id str\n-   * @throws UnvalidIdStrException\n-   */\n-  public ParameterServerId(String idStr) throws UnvalidIdStrException{\n-    if (idStr == null) {\n-      throw new UnvalidIdStrException(\"id str can not be null\");\n+    /**\n+     * Create a new Parameter server id.\n+     *\n+     * @param psIndex the ps index\n+     */\n+    public ParameterServerId(int psIndex) {\n+        super(psIndex);\n     }\n \n-    String[] idElemts = idStr.split(SEPARATOR);\n-    if (idElemts.length != 2 || !idElemts[0].equals(PS)) {\n-      throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n-          + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n-    }\n+    /**\n+     * Create a new Parameter server id.\n+     * <p>\n+     * 'idStr' must match ParameterServer_XXX\n+     * </p>\n+     *\n+     * @param idStr the id str\n+     * @throws UnvalidIdStrException\n+     */\n+    public ParameterServerId(String idStr) throws UnvalidIdStrException {\n+        if (idStr == null) {\n+            throw new UnvalidIdStrException(\"id str can not be null\");\n+        }\n+\n+        String[] idElemts = idStr.split(SEPARATOR);\n+        if (idElemts.length != 2 || !idElemts[0].equals(PS)) {\n+            throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n+                    + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n+        }\n \n-    try {\n-      index = Integer.valueOf(idElemts[1]);\n-    } catch (Exception x) {\n-      throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n-          + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n+        try {\n+            index = Integer.valueOf(idElemts[1]);\n+        } catch (Exception x) {\n+            throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n+                    + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n+        }\n     }\n-  }\n \n-  /**\n-   * Append to string builder.\n-   *\n-   * @param builder the string builder\n-   * @return the string builder\n-   */\n-  public StringBuilder appendTo(StringBuilder builder) {\n-    return builder.append(SEPARATOR).append(index);\n-  }\n+    /**\n+     * Append to string builder.\n+     *\n+     * @param builder the string builder\n+     * @return the string builder\n+     */\n+    public StringBuilder appendTo(StringBuilder builder) {\n+        return builder.append(SEPARATOR).append(index);\n+    }\n \n-  @Override\n-  public String toString() {\n-    return appendTo(new StringBuilder(PS)).toString();\n-  }\n+    @Override\n+    public String toString() {\n+        return appendTo(new StringBuilder(PS)).toString();\n+    }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1043/ParameterServerId.java\nindex 4ba4f99ab35..5232387d853 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1043/ParameterServerId.java\n@@ -42,7 +42,7 @@ public class ParameterServerId extends Id {\n    * @param idStr the id str\n    * @throws UnvalidIdStrException\n    */\n-  public ParameterServerId(String idStr) throws UnvalidIdStrException{\n+  public ParameterServerId(String idStr) throws UnvalidIdStrException {\n     if (idStr == null) {\n       throw new UnvalidIdStrException(\"id str can not be null\");\n     }\n@@ -75,4 +75,4 @@ public class ParameterServerId extends Id {\n   public String toString() {\n     return appendTo(new StringBuilder(PS)).toString();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1043/ParameterServerId.java\nindex 4ba4f99ab35..2844c6c26ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1043/ParameterServerId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1043/ParameterServerId.java\n@@ -22,7 +22,9 @@ import com.tencent.angel.exception.UnvalidIdStrException;\n /**\n  * The id represented parameter server.\n  */\n+\n public class ParameterServerId extends Id {\n+\n   private static String PS = \"ParameterServer\";\n \n   /**\n@@ -30,6 +32,7 @@ public class ParameterServerId extends Id {\n    *\n    * @param psIndex the ps index\n    */\n+\n   public ParameterServerId(int psIndex) {\n     super(psIndex);\n   }\n@@ -42,22 +45,21 @@ public class ParameterServerId extends Id {\n    * @param idStr the id str\n    * @throws UnvalidIdStrException\n    */\n-  public ParameterServerId(String idStr) throws UnvalidIdStrException{\n+\n+  public ParameterServerId(String idStr)\n+  throws UnvalidIdStrException {\n     if (idStr == null) {\n       throw new UnvalidIdStrException(\"id str can not be null\");\n     }\n \n     String[] idElemts = idStr.split(SEPARATOR);\n     if (idElemts.length != 2 || !idElemts[0].equals(PS)) {\n-      throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n-          + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n+      throw new UnvalidIdStrException(\"unvalid id str \" + idStr + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n     }\n-\n     try {\n       index = Integer.valueOf(idElemts[1]);\n     } catch (Exception x) {\n-      throw new UnvalidIdStrException(\"unvalid id str \" + idStr\n-          + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n+      throw new UnvalidIdStrException(\"unvalid id str \" + idStr + \", must be like this:\" + PS + SEPARATOR + \"psIndex\");\n     }\n   }\n \n@@ -67,6 +69,7 @@ public class ParameterServerId extends Id {\n    * @param builder the string builder\n    * @return the string builder\n    */\n+\n   public StringBuilder appendTo(StringBuilder builder) {\n     return builder.append(SEPARATOR).append(index);\n   }\n@@ -75,4 +78,5 @@ public class ParameterServerId extends Id {\n   public String toString() {\n     return appendTo(new StringBuilder(PS)).toString();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}