{
    "project_name": "apache-iotdb",
    "violation_id": "116",
    "information": {
        "violations": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.query.executor.fill;\n\nimport org.apache.iotdb.db.engine.querycontext.QueryDataSource;\nimport org.apache.iotdb.db.exception.StorageEngineException;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/116/PreviousFill.java\nindex c6a9916bc38..d432000f615 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-iotdb/styler/05_predictions/final/files-repaired/116/PreviousFill.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.executor.fill;\n \n import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/116/PreviousFill.java\nindex c6a9916bc38..d432000f615 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/checkstyle_idea/116/PreviousFill.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.executor.fill;\n \n import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'PartialPath' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/116/PreviousFill.java\nindex c6a9916bc38..eb7bb458287 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/codebuff/116/PreviousFill.java\n@@ -29,7 +29,6 @@ import org.apache.iotdb.tsfile.read.TimeValuePair;\n import org.apache.iotdb.tsfile.read.filter.TimeFilter;\n import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n import org.apache.iotdb.tsfile.read.filter.factory.FilterFactory;\n-\n import java.io.IOException;\n import java.util.Set;\n \n@@ -40,7 +39,6 @@ public class PreviousFill extends IFill {\n   private long beforeRange;\n   private Set<String> allSensors;\n   private Filter timeFilter;\n-\n   private boolean untilLast;\n \n   public PreviousFill(TSDataType dataType, long queryTime, long beforeRange) {\n@@ -69,10 +67,7 @@ public class PreviousFill extends IFill {\n \n   @Override\n   void constructFilter() {\n-    Filter lowerBound =\n-        beforeRange == -1\n-            ? TimeFilter.gtEq(Long.MIN_VALUE)\n-            : TimeFilter.gtEq(queryTime - beforeRange);\n+    Filter lowerBound = beforeRange == -1 ? TimeFilter.gtEq(Long.MIN_VALUE) : TimeFilter.gtEq(queryTime - beforeRange);\n     // time in [queryTime - beforeRange, queryTime]\n     timeFilter = FilterFactory.and(lowerBound, TimeFilter.ltEq(queryTime));\n   }\n@@ -83,11 +78,7 @@ public class PreviousFill extends IFill {\n \n   @Override\n   public void configureFill(\n-      PartialPath path,\n-      TSDataType dataType,\n-      long queryTime,\n-      Set<String> sensors,\n-      QueryContext context) {\n+    PartialPath path, TSDataType dataType, long queryTime, Set<String> sensors, QueryContext context) {\n     this.seriesPath = path;\n     this.dataType = dataType;\n     this.context = context;\n@@ -97,16 +88,11 @@ public class PreviousFill extends IFill {\n   }\n \n   @Override\n-  public TimeValuePair getFillResult()\n-      throws IOException, QueryProcessException, StorageEngineException {\n-    QueryDataSource dataSource =\n-        QueryResourceManager.getInstance().getQueryDataSource(seriesPath, context, timeFilter);\n+  public TimeValuePair getFillResult() throws IOException, QueryProcessException, StorageEngineException {\n+    QueryDataSource dataSource = QueryResourceManager.getInstance().getQueryDataSource(seriesPath, context, timeFilter);\n     // update filter by TTL\n     timeFilter = dataSource.updateFilterUsingTTL(timeFilter);\n-    LastPointReader lastReader =\n-        new LastPointReader(\n-            seriesPath, dataType, allSensors, context, dataSource, queryTime, timeFilter);\n-\n+    LastPointReader lastReader = new LastPointReader(seriesPath, dataType, allSensors, context, dataSource, queryTime, timeFilter);\n     return lastReader.readLastPoint();\n   }\n \n@@ -117,4 +103,4 @@ public class PreviousFill extends IFill {\n   public void setUntilLast(boolean untilLast) {\n     this.untilLast = untilLast;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "21",
                    "column": "65",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/116/PreviousFill.java\nindex c6a9916bc38..f3c890c0021 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/random/files-repaired/116/PreviousFill.java\n@@ -16,9 +16,9 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.iotdb.db.query.executor.fill;\n+package org.apache.iotdb.db.query.executor.fill\n \n-import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+; import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n import org.apache.iotdb.db.exception.StorageEngineException;\n import org.apache.iotdb.db.exception.query.QueryProcessException;\n import org.apache.iotdb.db.metadata.PartialPath;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/116/PreviousFill.java\nindex c6a9916bc38..d432000f615 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/violations/116/PreviousFill.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-iotdb/styler/05_predictions/three_grams/files-repaired/116/PreviousFill.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.executor.fill;\n \n import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}