{
    "project_name": "ppati000-visualDFA",
    "violation_id": "8",
    "information": {
        "violations": [
            {
                "line": "8",
                "column": "4",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " * \n * @author Anika Nietzer \n * \t\t\tImplementation of the Interface {@code Filter}. Used if\n *          no methods should be filtered out.\n *\n */",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/checkstyle_idea/8/NoFilter.java\nindex 8454050b3fb..335a80f53d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/checkstyle_idea/8/NoFilter.java\n@@ -3,25 +3,23 @@ package codeprocessor;\n import soot.SootMethod;\n \n /**\n- * \n- * @author Anika Nietzer \n- * \t\t\tImplementation of the Interface {@code Filter}. Used if\n- *          no methods should be filtered out.\n- *\n+ * @author Anika Nietzer\n+ * Implementation of the Interface {@code Filter}. Used if\n+ * no methods should be filtered out.\n  */\n public class NoFilter implements Filter {\n \n-\t@Override\n-\t/**\n-\t * Filter for a given method, that decides if the method should be filtered\n-\t * out or not.\n-\t * \n-\t * @param signature\n-\t *            signature of the method\n-\t * @return if the method passes the filter or not\n-\t */\n-\tpublic boolean filter(SootMethod method) {\n-\t\treturn true;\n-\t}\n+  @Override\n+  /**\n+   * Filter for a given method, that decides if the method should be filtered\n+   * out or not.\n+   *\n+   * @param signature\n+   *            signature of the method\n+   * @return if the method passes the filter or not\n+   */\n+  public boolean filter(SootMethod method) {\n+    return true;\n+  }\n \n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/naturalize/8/NoFilter.java\nindex 8454050b3fb..5345c7f4689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/naturalize/8/NoFilter.java\n@@ -11,7 +11,7 @@ import soot.SootMethod;\n  */\n public class NoFilter implements Filter {\n \n-\t@Override\n+    @Override\n \t/**\n \t * Filter for a given method, that decides if the method should be filtered\n \t * out or not.\n@@ -21,7 +21,7 @@ public class NoFilter implements Filter {\n \t * @return if the method passes the filter or not\n \t */\n \tpublic boolean filter(SootMethod method) {\n-\t\treturn true;\n-\t}\n+    return true;\n+    }\n \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/codebuff/8/NoFilter.java\nindex 8454050b3fb..14f27091ef7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/violations/8/NoFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/ppati000-visualDFA/codebuff/8/NoFilter.java\n@@ -5,23 +5,25 @@ import soot.SootMethod;\n /**\n  * \n  * @author Anika Nietzer \n- * \t\t\tImplementation of the Interface {@code Filter}. Used if\n+ *          Implementation of the Interface {@code Filter}. Used if\n  *          no methods should be filtered out.\n  *\n  */\n+\n+\n public class NoFilter implements Filter {\n \n-\t@Override\n-\t/**\n-\t * Filter for a given method, that decides if the method should be filtered\n-\t * out or not.\n-\t * \n-\t * @param signature\n-\t *            signature of the method\n-\t * @return if the method passes the filter or not\n-\t */\n-\tpublic boolean filter(SootMethod method) {\n-\t\treturn true;\n-\t}\n+    @Override\n+    /**\n+     * Filter for a given method, that decides if the method should be filtered\n+     * out or not.\n+     * \n+     * @param signature\n+     *            signature of the method\n+     * @return if the method passes the filter or not\n+     */\n+    public boolean filter(SootMethod method) {\n+        return true;\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "8",
                    "column": "4",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}