{
    "project_name": "chenpengliang0909-WxJava",
    "violation_id": "10",
    "information": {
        "violations": [
            {
                "line": "91",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 131).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      }\n\n      ProxyInfo httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n        this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n      HttpConnectionProvider provider = request.connectionProvider();\n      if (null == provider) {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/10/WxPayServiceJoddHttpImpl.java\nindex 81d35614d5d..ca34a7335a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/10/WxPayServiceJoddHttpImpl.java\n@@ -69,10 +69,10 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n \n   private HttpRequest buildHttpRequest(String url, String requestStr, boolean useKey) throws WxPayException {\n     HttpRequest request = HttpRequest\n-      .post(url)\n-      .timeout(this.getConfig().getHttpTimeout())\n-      .connectionTimeout(this.getConfig().getHttpConnectionTimeout())\n-      .bodyText(requestStr);\n+        .post(url)\n+        .timeout(this.getConfig().getHttpTimeout())\n+        .connectionTimeout(this.getConfig().getHttpConnectionTimeout())\n+        .bodyText(requestStr);\n \n     if (useKey) {\n       SSLContext sslContext = this.getConfig().getSslContext();\n@@ -88,8 +88,9 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n         this.getConfig().setHttpProxyUsername(\"whatever\");\n       }\n \n-      ProxyInfo httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n-        this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n+      ProxyInfo httpProxy =\n+          new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n+              this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n       HttpConnectionProvider provider = request.connectionProvider();\n       if (null == provider) {\n         provider = new SocketHttpConnectionProvider();\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/10/WxPayServiceJoddHttpImpl.java\nindex 81d35614d5d..4c542bc8c1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/10/WxPayServiceJoddHttpImpl.java\n@@ -79,7 +79,8 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n       if (null == sslContext) {\n         sslContext = this.getConfig().initSSLContext();\n       }\n-      final SSLSocketHttpConnectionProvider provider = new SSLSocketHttpConnectionProvider(sslContext);\n+\n+final SSLSocketHttpConnectionProvider provider = new SSLSocketHttpConnectionProvider(sslContext);\n       request.withConnectionProvider(provider);\n     }\n \n@@ -121,4 +122,4 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n   }\n \n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/10/WxPayServiceJoddHttpImpl.java\nindex 81d35614d5d..765a6e3a398 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/10/WxPayServiceJoddHttpImpl.java\n@@ -2,13 +2,11 @@ package com.github.binarywang.wxpay.service.impl;\n \n import java.nio.charset.StandardCharsets;\n import javax.net.ssl.SSLContext;\n-\n import com.github.binarywang.wxpay.bean.request.WxPayQueryCommentRequest;\n import com.github.binarywang.wxpay.bean.request.WxPayRedpackQueryRequest;\n import com.github.binarywang.wxpay.bean.result.WxPayCommonResult;\n import com.github.binarywang.wxpay.bean.result.WxPayRedpackQueryResult;\n import org.apache.commons.lang3.StringUtils;\n-\n import com.github.binarywang.wxpay.bean.WxPayApiData;\n import com.github.binarywang.wxpay.exception.WxPayException;\n import jodd.http.HttpConnectionProvider;\n@@ -20,7 +18,6 @@ import jodd.http.net.SSLSocketHttpConnectionProvider;\n import jodd.http.net.SocketHttpConnectionProvider;\n import jodd.util.Base64;\n import org.apache.commons.lang3.StringUtils;\n-\n import javax.net.ssl.SSLContext;\n import java.nio.charset.StandardCharsets;\n \n@@ -30,6 +27,8 @@ import java.nio.charset.StandardCharsets;\n  *\n  * @author <a href=\"https://github.com/binarywang\">Binary Wang</a>\n  */\n+\n+\n public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n   @Override\n   public byte[] postForBytes(String url, String requestStr, boolean useKey) throws WxPayException {\n@@ -41,6 +40,7 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n       if (this.getConfig().isIfSaveApiData()) {\n         wxApiData.set(new WxPayApiData(url, requestStr, responseString, null));\n       }\n+\n       return responseBytes;\n     } catch (Exception e) {\n       this.log.error(\"\\n\u3010\u8bf7\u6c42\u5730\u5740\u3011\uff1a{}\\n\u3010\u8bf7\u6c42\u6570\u636e\u3011\uff1a{}\\n\u3010\u5f02\u5e38\u4fe1\u606f\u3011\uff1a{}\", url, requestStr, e.getMessage());\n@@ -54,11 +54,11 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n     try {\n       HttpRequest request = this.buildHttpRequest(url, requestStr, useKey);\n       String responseString = this.getResponseString(request.send());\n-\n       this.log.info(\"\\n\u3010\u8bf7\u6c42\u5730\u5740\u3011\uff1a{}\\n\u3010\u8bf7\u6c42\u6570\u636e\u3011\uff1a{}\\n\u3010\u54cd\u5e94\u6570\u636e\u3011\uff1a{}\", url, requestStr, responseString);\n       if (this.getConfig().isIfSaveApiData()) {\n         wxApiData.set(new WxPayApiData(url, requestStr, responseString, null));\n       }\n+\n       return responseString;\n     } catch (Exception e) {\n       this.log.error(\"\\n\u3010\u8bf7\u6c42\u5730\u5740\u3011\uff1a{}\\n\u3010\u8bf7\u6c42\u6570\u636e\u3011\uff1a{}\\n\u3010\u5f02\u5e38\u4fe1\u606f\u3011\uff1a{}\", url, requestStr, e.getMessage());\n@@ -68,17 +68,13 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n   }\n \n   private HttpRequest buildHttpRequest(String url, String requestStr, boolean useKey) throws WxPayException {\n-    HttpRequest request = HttpRequest\n-      .post(url)\n-      .timeout(this.getConfig().getHttpTimeout())\n-      .connectionTimeout(this.getConfig().getHttpConnectionTimeout())\n-      .bodyText(requestStr);\n-\n+    HttpRequest request = HttpRequest.post(url).timeout(this.getConfig().getHttpTimeout()).connectionTimeout(this.getConfig().getHttpConnectionTimeout()).bodyText(requestStr);\n     if (useKey) {\n       SSLContext sslContext = this.getConfig().getSslContext();\n       if (null == sslContext) {\n         sslContext = this.getConfig().initSSLContext();\n       }\n+\n       final SSLSocketHttpConnectionProvider provider = new SSLSocketHttpConnectionProvider(sslContext);\n       request.withConnectionProvider(provider);\n     }\n@@ -88,8 +84,7 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n         this.getConfig().setHttpProxyUsername(\"whatever\");\n       }\n \n-      ProxyInfo httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n-        this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n+      ProxyInfo httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(), this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n       HttpConnectionProvider provider = request.connectionProvider();\n       if (null == provider) {\n         provider = new SocketHttpConnectionProvider();\n@@ -97,6 +92,7 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n       provider.useProxy(httpProxy);\n       request.withConnectionProvider(provider);\n     }\n+\n     return request;\n   }\n \n@@ -108,7 +104,6 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n     }\n \n     String responseString = response.bodyText();\n-\n     if (StringUtils.isBlank(responseString)) {\n       throw new WxPayException(\"\u54cd\u5e94\u4fe1\u606f\u4e3a\u7a7a\");\n     }\n@@ -120,5 +115,4 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n     return responseString;\n   }\n \n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "89",
                    "column": "7",
                    "severity": "warning",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}'\u540e\u9762\u6ca1\u6709\u7a7a\u683c\u3002Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/10/WxPayServiceJoddHttpImpl.java\nindex 81d35614d5d..cf8c4bfd0e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/10/WxPayServiceJoddHttpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/10/WxPayServiceJoddHttpImpl.java\n@@ -86,10 +86,9 @@ public class WxPayServiceJoddHttpImpl extends BaseWxPayServiceImpl {\n     if (StringUtils.isNotBlank(this.getConfig().getHttpProxyHost()) && this.getConfig().getHttpProxyPort() > 0) {\n       if (StringUtils.isEmpty(this.getConfig().getHttpProxyUsername())) {\n         this.getConfig().setHttpProxyUsername(\"whatever\");\n-      }\n-\n-      ProxyInfo httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n-        this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n+      }ProxyInfo\n+        httpProxy = new ProxyInfo(ProxyType.HTTP, this.getConfig().getHttpProxyHost(), this.getConfig().getHttpProxyPort(),\n+         this.getConfig().getHttpProxyUsername(), this.getConfig().getHttpProxyPassword());\n       HttpConnectionProvider provider = request.connectionProvider();\n       if (null == provider) {\n         provider = new SocketHttpConnectionProvider();\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}