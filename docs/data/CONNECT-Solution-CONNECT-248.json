{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "248",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.generic.GenericFactory;\nimport gov.hhs.fha.nhinc.proxy.ComponentProxyObjectFactory;",
    "results": [
        {
            "tool": "styler",
            "violations": null,
            "diff": null
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/248/AdapterPatientDiscoveryProxyObjectFactory.java\nindex 439cd4dd6a8..07d1bb05f86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/248/AdapterPatientDiscoveryProxyObjectFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.generic.GenericFactory;\n@@ -32,11 +33,11 @@ import gov.hhs.fha.nhinc.proxy.ComponentProxyObjectFactory;\n /**\n  * An object factory that uses the Spring Framework to create service implementation objects. The configuration file is\n  * referenced in the common properties file location to assist in installation and configuration simplicity.\n- *\n+ * <p>\n  * The Spring configuration file is defined by the constant \"SPRING_CONFIG_FILE\". This file is loaded into an\n  * application context in the static initializer and then the objects defined in the config file are available to the\n  * framework for creation. This configuration file can be located anywhere in the classpath.\n- *\n+ * <p>\n  * To retrieve an object that is created by the framework, the \"getBean(String beanId)\" method is called on the\n  * application context passing in the beanId that is specified in the config file. Considering the default correlation\n  * definition in the config file for this component: <bean id=\"adapterpatientdiscovery\"\n@@ -49,32 +50,32 @@ import gov.hhs.fha.nhinc.proxy.ComponentProxyObjectFactory;\n  * @author Jon Hoppesch, Les Westberg\n  */\n public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObjectFactory implements\n-        GenericFactory<AdapterPatientDiscoveryProxy> {\n-    private static final String CONFIG_FILE_NAME = \"PatientDiscoveryProxyConfig.xml\";\n-    private static final String BEAN_NAME_MPI = \"adapterpatientdiscovery\";\n+    GenericFactory<AdapterPatientDiscoveryProxy> {\n+  private static final String CONFIG_FILE_NAME = \"PatientDiscoveryProxyConfig.xml\";\n+  private static final String BEAN_NAME_MPI = \"adapterpatientdiscovery\";\n \n-    /**\n-     * Returns the name of the config file.\n-     *\n-     * @return The name of the config file.\n-     */\n-    @Override\n-    protected String getConfigFileName() {\n-        return CONFIG_FILE_NAME;\n-    }\n+  /**\n+   * Returns the name of the config file.\n+   *\n+   * @return The name of the config file.\n+   */\n+  @Override\n+  protected String getConfigFileName() {\n+    return CONFIG_FILE_NAME;\n+  }\n \n-    /**\n-     * Return an instance of the AdapterPatientDiscoveryProxy class.\n-     *\n-     * @return An instance of the AdapterPatientDiscoveryProxy class.\n-     */\n-    public AdapterPatientDiscoveryProxy getAdapterPatientDiscoveryProxy() {\n-        return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n-    }\n+  /**\n+   * Return an instance of the AdapterPatientDiscoveryProxy class.\n+   *\n+   * @return An instance of the AdapterPatientDiscoveryProxy class.\n+   */\n+  public AdapterPatientDiscoveryProxy getAdapterPatientDiscoveryProxy() {\n+    return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n+  }\n \n-    @Override\n-    public AdapterPatientDiscoveryProxy create() {\n-        return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n-    }\n+  @Override\n+  public AdapterPatientDiscoveryProxy create() {\n+    return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n+  }\n \n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/248/AdapterPatientDiscoveryProxyObjectFactory.java\nindex 439cd4dd6a8..1764fea3a4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/248/AdapterPatientDiscoveryProxyObjectFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.generic.GenericFactory;\n@@ -48,8 +49,8 @@ import gov.hhs.fha.nhinc.proxy.ComponentProxyObjectFactory;\n  *\n  * @author Jon Hoppesch, Les Westberg\n  */\n-public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObjectFactory implements\n-        GenericFactory<AdapterPatientDiscoveryProxy> {\n+public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObjectFactory implements GenericFactory<AdapterPatientDiscoveryProxy> {\n+\n     private static final String CONFIG_FILE_NAME = \"PatientDiscoveryProxyConfig.xml\";\n     private static final String BEAN_NAME_MPI = \"adapterpatientdiscovery\";\n \n@@ -77,4 +78,4 @@ public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObj\n         return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/248/AdapterPatientDiscoveryProxyObjectFactory.java\nindex 439cd4dd6a8..85ea1827b5b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/248/AdapterPatientDiscoveryProxyObjectFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/248/AdapterPatientDiscoveryProxyObjectFactory.java\n@@ -48,8 +48,11 @@ import gov.hhs.fha.nhinc.proxy.ComponentProxyObjectFactory;\n  *\n  * @author Jon Hoppesch, Les Westberg\n  */\n-public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObjectFactory implements\n-        GenericFactory<AdapterPatientDiscoveryProxy> {\n+\n+\n+public class AdapterPatientDiscoveryProxyObjectFactory extends\n+    ComponentProxyObjectFactory implements GenericFactory<AdapterPatientDiscoveryProxy> {\n+\n     private static final String CONFIG_FILE_NAME = \"PatientDiscoveryProxyConfig.xml\";\n     private static final String BEAN_NAME_MPI = \"adapterpatientdiscovery\";\n \n@@ -58,6 +61,8 @@ public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObj\n      *\n      * @return The name of the config file.\n      */\n+\n+\n     @Override\n     protected String getConfigFileName() {\n         return CONFIG_FILE_NAME;\n@@ -68,13 +73,16 @@ public class AdapterPatientDiscoveryProxyObjectFactory extends ComponentProxyObj\n      *\n      * @return An instance of the AdapterPatientDiscoveryProxy class.\n      */\n+\n+\n     public AdapterPatientDiscoveryProxy getAdapterPatientDiscoveryProxy() {\n         return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n     }\n \n+\n     @Override\n     public AdapterPatientDiscoveryProxy create() {\n         return getBean(BEAN_NAME_MPI, AdapterPatientDiscoveryProxy.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}