{
    "project_name": "neo4j-neo4j",
    "violation_id": "3151",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3151/IndexWriterConfigs.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3151/IndexWriterConfigs.java\nindex 2055d5a91ad..631e6cf589b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3151/IndexWriterConfigs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3151/IndexWriterConfigs.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -45,50 +46,50 @@ public final class IndexWriterConfigs\n \n     private IndexWriterConfigs()\n     {\n-        throw new AssertionError( \"Not for instantiation!\" );\n+        throw new AssertionError(\"Not for instantiation!\");\n     }\n \n-    public static IndexWriterConfig standard( Config config )\n+    public static IndexWriterConfig standard(Config config)\n     {\n-        return standard( config, KEYWORD_ANALYZER );\n+        return standard(config, KEYWORD_ANALYZER);\n     }\n \n-    public static IndexWriterConfig standard( Config config, Analyzer analyzer )\n+    public static IndexWriterConfig standard(Config config, Analyzer analyzer)\n     {\n-        IndexWriterConfig writerConfig = new IndexWriterConfig( analyzer );\n+        IndexWriterConfig writerConfig = new IndexWriterConfig(analyzer);\n \n-        writerConfig.setMaxBufferedDocs( config.get( lucene_writer_max_buffered_docs ) );\n-        writerConfig.setIndexDeletionPolicy( new SnapshotDeletionPolicy( new KeepOnlyLastCommitDeletionPolicy() ) );\n-        writerConfig.setUseCompoundFile( true );\n-        writerConfig.setRAMBufferSizeMB( config.get( lucene_standard_ram_buffer_size ) );\n+        writerConfig.setMaxBufferedDocs(config.get(lucene_writer_max_buffered_docs));\n+        writerConfig.setIndexDeletionPolicy(new SnapshotDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy()));\n+        writerConfig.setUseCompoundFile(true);\n+        writerConfig.setRAMBufferSizeMB(config.get(lucene_standard_ram_buffer_size));\n \n         LogByteSizeMergePolicy mergePolicy = new LogByteSizeMergePolicy();\n-        mergePolicy.setNoCFSRatio( config.get( lucene_nocfs_ratio ) );\n-        mergePolicy.setMinMergeMB( config.get( lucene_min_merge ) );\n-        mergePolicy.setMergeFactor( config.get( lucene_merge_factor ) );\n-        writerConfig.setMergePolicy( mergePolicy );\n+        mergePolicy.setNoCFSRatio(config.get(lucene_nocfs_ratio));\n+        mergePolicy.setMinMergeMB(config.get(lucene_min_merge));\n+        mergePolicy.setMergeFactor(config.get(lucene_merge_factor));\n+        writerConfig.setMergePolicy(mergePolicy);\n \n         return writerConfig;\n     }\n \n-    public static IndexWriterConfig population( Config config )\n+    public static IndexWriterConfig population(Config config)\n     {\n-        return population( config, KEYWORD_ANALYZER );\n+        return population(config, KEYWORD_ANALYZER);\n     }\n \n-    public static IndexWriterConfig population( Config config, Analyzer analyzer )\n+    public static IndexWriterConfig population(Config config, Analyzer analyzer)\n     {\n-        IndexWriterConfig writerConfig = standard( config, analyzer );\n-        writerConfig.setMaxBufferedDocs( config.get( lucene_population_max_buffered_docs ) );\n-        writerConfig.setRAMBufferSizeMB( config.get( lucene_population_ram_buffer_size ) );\n+        IndexWriterConfig writerConfig = standard(config, analyzer);\n+        writerConfig.setMaxBufferedDocs(config.get(lucene_population_max_buffered_docs));\n+        writerConfig.setRAMBufferSizeMB(config.get(lucene_population_ram_buffer_size));\n         return writerConfig;\n     }\n \n-    public static IndexWriterConfig transactionState( Config config, Analyzer analyzer )\n+    public static IndexWriterConfig transactionState(Config config, Analyzer analyzer)\n     {\n-        IndexWriterConfig writerConfig = standard( config, analyzer );\n+        IndexWriterConfig writerConfig = standard(config, analyzer);\n         // Index transaction state is never directly persisted, so never commit it on close.\n-        writerConfig.setCommitOnClose( false );\n+        writerConfig.setCommitOnClose(false);\n         return writerConfig;\n     }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}