{
    "project_name": "Angel-ML-angel",
    "violation_id": "486",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/486/GetProgressPartitionResult.java\nindex 1caea8e8eed..740c33c87b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/486/GetProgressPartitionResult.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.getprogress;\n \n import com.tencent.angel.common.ByteBufSerdeUtils;\n@@ -22,48 +23,48 @@ import io.netty.buffer.ByteBuf;\n \n public class GetProgressPartitionResult extends PartitionGetResult {\n \n-  private boolean finished;\n-  private double percent;\n+    private boolean finished;\n+    private double percent;\n \n-  public GetProgressPartitionResult(boolean finished, double precent) {\n-    this.finished = finished;\n-    this.percent = precent;\n-  }\n+    public GetProgressPartitionResult(boolean finished, double precent) {\n+        this.finished = finished;\n+        this.percent = precent;\n+    }\n \n-  public GetProgressPartitionResult() {\n-    super();\n-  }\n+    public GetProgressPartitionResult() {\n+        super();\n+    }\n \n-  public boolean isFinished() {\n-    return finished;\n-  }\n+    public boolean isFinished() {\n+        return finished;\n+    }\n \n-  public void setFinished(boolean finished) {\n-    this.finished = finished;\n-  }\n+    public void setFinished(boolean finished) {\n+        this.finished = finished;\n+    }\n \n-  public double getPrecent() {\n-    return percent;\n-  }\n+    public double getPrecent() {\n+        return percent;\n+    }\n \n-  public void setPrecent(double precent) {\n-    this.percent = precent;\n-  }\n+    public void setPrecent(double precent) {\n+        this.percent = precent;\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf output) {\n-    output.writeBoolean(finished);\n-    output.writeDouble(percent);\n-  }\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        output.writeBoolean(finished);\n+        output.writeDouble(percent);\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    finished = input.readBoolean();\n-    percent = input.readDouble();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        finished = input.readBoolean();\n+        percent = input.readDouble();\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return ByteBufSerdeUtils.serializedBooleanLen(finished) + 8;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return ByteBufSerdeUtils.serializedBooleanLen(finished) + 8;\n+    }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/486/GetProgressPartitionResult.java\nindex 1caea8e8eed..5d41346ecbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/486/GetProgressPartitionResult.java\n@@ -66,4 +66,4 @@ public class GetProgressPartitionResult extends PartitionGetResult {\n   public int bufferLen() {\n     return ByteBufSerdeUtils.serializedBooleanLen(finished) + 8;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/486/GetProgressPartitionResult.java\nindex 1caea8e8eed..e6c5d1aaf26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/486/GetProgressPartitionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/486/GetProgressPartitionResult.java\n@@ -66,4 +66,5 @@ public class GetProgressPartitionResult extends PartitionGetResult {\n   public int bufferLen() {\n     return ByteBufSerdeUtils.serializedBooleanLen(finished) + 8;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}