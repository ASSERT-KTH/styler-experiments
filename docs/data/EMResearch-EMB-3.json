{
    "project_name": "EMResearch-EMB",
    "violation_id": "3",
    "information": {
        "violations": [
            {
                "line": "33",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Profile(\"spring-data-jpa\")\npublic class SpringDataVisitRepositoryImpl implements VisitRepositoryOverride {\n\t\n\t@PersistenceContext\n    private EntityManager em;\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/3/SpringDataVisitRepositoryImpl.java\nindex a62ddb77c86..b454ec0d344 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/checkstyle_idea/3/SpringDataVisitRepositoryImpl.java\n@@ -25,20 +25,19 @@ import org.springframework.samples.petclinic.model.Visit;\n \n /**\n  * @author Vitaliy Fedoriv\n- *\n  */\n \n @Profile(\"spring-data-jpa\")\n public class SpringDataVisitRepositoryImpl implements VisitRepositoryOverride {\n-\t\n-\t@PersistenceContext\n+\n+    @PersistenceContext\n     private EntityManager em;\n \n-\t@Override\n-\tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n-\t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n-\t}\n+    @Override\n+    public void delete(Visit visit) throws DataAccessException {\n+        String visitId = visit.getId().toString();\n+        this.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n+    }\n \n \n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/3/SpringDataVisitRepositoryImpl.java\nindex a62ddb77c86..39dc9ad0ed3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/naturalize/3/SpringDataVisitRepositoryImpl.java\n@@ -30,15 +30,13 @@ import org.springframework.samples.petclinic.model.Visit;\n \n @Profile(\"spring-data-jpa\")\n public class SpringDataVisitRepositoryImpl implements VisitRepositoryOverride {\n-\t\n-\t@PersistenceContext\n-    private EntityManager em;\n \n-\t@Override\n+    @PersistenceContext\n+private EntityManager em;\n+\n+@Override\n \tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n+    String visitId = visit.getId().toString();\n \t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n-\t}\n-\n-\n-}\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/3/SpringDataVisitRepositoryImpl.java\nindex a62ddb77c86..0ff8a6cd0c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/violations/3/SpringDataVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/EMResearch-EMB/codebuff/3/SpringDataVisitRepositoryImpl.java\n@@ -18,7 +18,6 @@ package org.springframework.samples.petclinic.repository.springdatajpa;\n \n import javax.persistence.EntityManager;\n import javax.persistence.PersistenceContext;\n-\n import org.springframework.context.annotation.Profile;\n import org.springframework.dao.DataAccessException;\n import org.springframework.samples.petclinic.model.Visit;\n@@ -28,17 +27,16 @@ import org.springframework.samples.petclinic.model.Visit;\n  *\n  */\n \n+\n @Profile(\"spring-data-jpa\")\n public class SpringDataVisitRepositoryImpl implements VisitRepositoryOverride {\n-\t\n-\t@PersistenceContext\n+    @PersistenceContext\n     private EntityManager em;\n \n-\t@Override\n-\tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n-\t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n-\t}\n-\n-\n-}\n+    @Override\n+    public void delete(Visit visit) throws DataAccessException {\n+        String visitId = visit.getId().toString();\n+        this.em.createQuery(\"DELETE FROM Visit visit WHERE id=\"\n+            + visitId).executeUpdate();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}