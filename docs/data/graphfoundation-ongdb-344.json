{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "344",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/344/DatabaseRoleInfoServerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/344/DatabaseRoleInfoServerModule.java\nindex 73d4b3b6175..1d96ffe6e3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/344/DatabaseRoleInfoServerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/344/DatabaseRoleInfoServerModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest;\n \n import java.net.URI;\n@@ -34,45 +35,45 @@ import static java.util.Arrays.asList;\n \n public class DatabaseRoleInfoServerModule implements ServerModule\n {\n-    private final WebServer server;\n-    private final Config config;\n-    private final Log log;\n+  private final WebServer server;\n+  private final Config config;\n+  private final Log log;\n \n-    public DatabaseRoleInfoServerModule( WebServer server, Config config, LogProvider logProvider )\n-    {\n-        this.server = server;\n-        this.config = config;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public DatabaseRoleInfoServerModule(WebServer server, Config config, LogProvider logProvider)\n+  {\n+    this.server = server;\n+    this.config = config;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        URI baseUri = managementApiUri();\n-        server.addJAXRSClasses( getClassNames(), baseUri.toString(), null );\n+  @Override\n+  public void start()\n+  {\n+    URI baseUri = managementApiUri();\n+    server.addJAXRSClasses(getClassNames(), baseUri.toString(), null);\n \n-        log.info( \"Mounted REST API at: %s\", baseUri.toString() );\n-    }\n+    log.info(\"Mounted REST API at: %s\", baseUri.toString());\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        URI baseUri = managementApiUri();\n-        server.removeJAXRSClasses( getClassNames(), baseUri.toString() );\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    URI baseUri = managementApiUri();\n+    server.removeJAXRSClasses(getClassNames(), baseUri.toString());\n+  }\n \n-    private List<String> getClassNames()\n-    {\n-        return asList(\n-                MasterInfoService.class.getName(),\n-                CoreDatabaseAvailabilityService.class.getName(),\n-                ReadReplicaDatabaseAvailabilityService.class.getName(),\n-                CausalClusteringService.class.getName()\n-        );\n-    }\n+  private List<String> getClassNames()\n+  {\n+    return asList(\n+        MasterInfoService.class.getName(),\n+        CoreDatabaseAvailabilityService.class.getName(),\n+        ReadReplicaDatabaseAvailabilityService.class.getName(),\n+        CausalClusteringService.class.getName()\n+    );\n+  }\n \n-    private URI managementApiUri()\n-    {\n-        return config.get( ServerSettings.management_api_path );\n-    }\n+  private URI managementApiUri()\n+  {\n+    return config.get(ServerSettings.management_api_path);\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/344/DatabaseRoleInfoServerModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/344/DatabaseRoleInfoServerModule.java\nindex 73d4b3b6175..26ae43a9633 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/344/DatabaseRoleInfoServerModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/344/DatabaseRoleInfoServerModule.java\n@@ -50,8 +50,7 @@ public class DatabaseRoleInfoServerModule implements ServerModule\n     {\n         URI baseUri = managementApiUri();\n         server.addJAXRSClasses( getClassNames(), baseUri.toString(), null );\n-\n-        log.info( \"Mounted REST API at: %s\", baseUri.toString() );\n+log.info( \"Mounted REST API at: %s\", baseUri.toString() );\n     }\n \n     @Override\n@@ -63,16 +62,11 @@ public class DatabaseRoleInfoServerModule implements ServerModule\n \n     private List<String> getClassNames()\n     {\n-        return asList(\n-                MasterInfoService.class.getName(),\n-                CoreDatabaseAvailabilityService.class.getName(),\n-                ReadReplicaDatabaseAvailabilityService.class.getName(),\n-                CausalClusteringService.class.getName()\n-        );\n+        return asList( MasterInfoService.class.getName(), CoreDatabaseAvailabilityService.class.getName(), ReadReplicaDatabaseAvailabilityService.class.getName(), CausalClusteringService.class.getName() );\n     }\n \n     private URI managementApiUri()\n     {\n         return config.get( ServerSettings.management_api_path );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}