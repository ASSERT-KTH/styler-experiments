{
    "project_name": "Angel-ML-angel",
    "violation_id": "87",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/87/IntFloatVectorSplitter.java\nindex d579b59722f..fb72de24664 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/87/IntFloatVectorSplitter.java\n@@ -34,20 +34,22 @@ import java.util.Map;\n  */\n public class IntFloatVectorSplitter implements ISplitter {\n \n-  @Override\n-  public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n-    IntFloatVectorStorage storage = ((IntFloatVector) vector).getStorage();\n-    if (storage instanceof IntFloatDenseVectorStorage) {\n-      return RowUpdateSplitUtils.split(vector.getRowId(), storage.getValues(), parts);\n-    } else if (storage instanceof IntFloatSparseVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n-    } else if (storage instanceof IntFloatSortedVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage type:\" + storage.getClass().getName());\n+    @Override\n+    public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n+        IntFloatVectorStorage storage = ((IntFloatVector) vector).getStorage();\n+        if (storage instanceof IntFloatDenseVectorStorage) {\n+            return RowUpdateSplitUtils.split(vector.getRowId(), storage.getValues(), parts);\n+        } else if (storage instanceof IntFloatSparseVectorStorage) {\n+            return RowUpdateSplitUtils\n+                    .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts,\n+                            false);\n+        } else if (storage instanceof IntFloatSortedVectorStorage) {\n+            return RowUpdateSplitUtils\n+                    .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts,\n+                            true);\n+        } else {\n+            throw new UnsupportedOperationException(\n+                    \"unsupport split for storage type:\" + storage.getClass().getName());\n+        }\n     }\n-  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/87/IntFloatVectorSplitter.java\nindex d579b59722f..b721267fc5e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/87/IntFloatVectorSplitter.java\n@@ -33,7 +33,6 @@ import java.util.Map;\n  * Int key float value vector splitter\n  */\n public class IntFloatVectorSplitter implements ISplitter {\n-\n   @Override\n   public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     IntFloatVectorStorage storage = ((IntFloatVector) vector).getStorage();\n@@ -42,12 +41,11 @@ public class IntFloatVectorSplitter implements ISplitter {\n     } else if (storage instanceof IntFloatSparseVectorStorage) {\n       return RowUpdateSplitUtils\n           .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n-    } else if (storage instanceof IntFloatSortedVectorStorage) {\n+  } else if (storage instanceof IntFloatSortedVectorStorage) {\n       return RowUpdateSplitUtils\n           .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage type:\" + storage.getClass().getName());\n+  } else {\n+      throw new UnsupportedOperationException(\"unsupport split for storage type:\" + storage.getClass().getName());\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/87/IntFloatVectorSplitter.java\nindex d579b59722f..d5ce1cb7f77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/87/IntFloatVectorSplitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/87/IntFloatVectorSplitter.java\n@@ -32,22 +32,22 @@ import java.util.Map;\n /**\n  * Int key float value vector splitter\n  */\n+\n public class IntFloatVectorSplitter implements ISplitter {\n \n+\n   @Override\n   public Map<PartitionKey, RowUpdateSplit> split(Vector vector, List<PartitionKey> parts) {\n     IntFloatVectorStorage storage = ((IntFloatVector) vector).getStorage();\n     if (storage instanceof IntFloatDenseVectorStorage) {\n       return RowUpdateSplitUtils.split(vector.getRowId(), storage.getValues(), parts);\n     } else if (storage instanceof IntFloatSparseVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n+             return RowUpdateSplitUtils.split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, false);\n     } else if (storage instanceof IntFloatSortedVectorStorage) {\n-      return RowUpdateSplitUtils\n-          .split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage type:\" + storage.getClass().getName());\n-    }\n+             return RowUpdateSplitUtils.split(vector.getRowId(), storage.getIndices(), storage.getValues(), parts, true);\n+           } else {\n+             throw new UnsupportedOperationException(\"unsupport split for storage type:\" + storage.getClass().getName());\n+           }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}