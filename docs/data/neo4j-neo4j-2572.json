{
    "project_name": "neo4j-neo4j",
    "violation_id": "2572",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2572/QueryValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2572/QueryValidator.java\nindex 2ed5c69b64e..1ca50f5a1f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/2572/QueryValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/2572/QueryValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.Arrays;\n@@ -31,19 +32,19 @@ import static java.lang.String.format;\n \n class QueryValidator\n {\n-    static void validateOrder( IndexCapability capability, IndexOrder indexOrder, IndexQuery[] predicates )\n+    static void validateOrder(IndexCapability capability, IndexOrder indexOrder, IndexQuery[] predicates)\n     {\n-        if ( indexOrder != IndexOrder.NONE )\n+        if (indexOrder != IndexOrder.NONE)\n         {\n             ValueCategory valueCategory = predicates[0].valueGroup().category();\n-            IndexOrderCapability orderCapability = capability.orderCapability( valueCategory );\n+            IndexOrderCapability orderCapability = capability.orderCapability(valueCategory);\n \n-            if ( indexOrder == IndexOrder.ASCENDING && !orderCapability.supportsAsc() ||\n-                 indexOrder == IndexOrder.DESCENDING && !orderCapability.supportsDesc() )\n+            if (indexOrder == IndexOrder.ASCENDING && !orderCapability.supportsAsc() ||\n+              indexOrder == IndexOrder.DESCENDING && !orderCapability.supportsDesc())\n             {\n                 throw new UnsupportedOperationException(\n-                        format( \"Tried to query index with unsupported order %s. For query %s supports ascending: %b, supports descending: %b.\", indexOrder,\n-                                Arrays.toString( predicates ), orderCapability.supportsAsc(), orderCapability.supportsDesc() ) );\n+                  format(\"Tried to query index with unsupported order %s. For query %s supports ascending: %b, supports descending: %b.\", indexOrder,\n+                    Arrays.toString(predicates), orderCapability.supportsAsc(), orderCapability.supportsDesc()));\n             }\n         }\n     }\n@@ -51,7 +52,7 @@ class QueryValidator\n     /**\n      * Composite queries are somewhat restricted in what combination of predicates\n      * that are allowed together and in what order.\n-     *\n+     * <p>\n      * 1. Decreasing precision.\n      * Composite queries must have decreasing precision on the slots, meaning\n      * for example that a range predicate can not be followed by an exact\n@@ -61,7 +62,7 @@ class QueryValidator\n      * does not narrow down the search space in the index.\n      * It could of course be implemented by scanning the search space and do\n      * post filtering, but this is not how the implementation currently works.\n-     *\n+     * <p>\n      * 2. Contains and suffix.\n      * Contains or suffix queries are not allowed in composite queries at all.\n      * This is because they both demand a full scan of the search space, just like\n@@ -70,29 +71,29 @@ class QueryValidator\n      *\n      * @param predicates The query for which we want to check the composite validity.\n      */\n-    static void validateCompositeQuery( IndexQuery[] predicates )\n+    static void validateCompositeQuery(IndexQuery[] predicates)\n     {\n         IndexQuery prev = null;\n-        for ( IndexQuery current : predicates )\n+        for (IndexQuery current : predicates)\n         {\n             String illegalQueryMessage = \"Tried to query index with illegal composite query.\";\n-            if ( current instanceof IndexQuery.StringContainsPredicate ||\n-                    current instanceof IndexQuery.StringSuffixPredicate )\n+            if (current instanceof IndexQuery.StringContainsPredicate ||\n+              current instanceof IndexQuery.StringSuffixPredicate)\n             {\n-                if ( predicates.length > 1 )\n+                if (predicates.length > 1)\n                 {\n-                    throw new IllegalArgumentException( format( \"%s Suffix or contains predicate are not allowed in composite query. Query was: %s \",\n-                            illegalQueryMessage, Arrays.toString( predicates ) ) );\n+                    throw new IllegalArgumentException(format(\"%s Suffix or contains predicate are not allowed in composite query. Query was: %s \",\n+                      illegalQueryMessage, Arrays.toString(predicates)));\n                 }\n             }\n-            if ( prev instanceof IndexQuery.RangePredicate ||\n-                    prev instanceof IndexQuery.StringPrefixPredicate ||\n-                    prev instanceof IndexQuery.ExistsPredicate )\n+            if (prev instanceof IndexQuery.RangePredicate ||\n+              prev instanceof IndexQuery.StringPrefixPredicate ||\n+              prev instanceof IndexQuery.ExistsPredicate)\n             {\n-                if ( !(current instanceof IndexQuery.ExistsPredicate) )\n+                if (!(current instanceof IndexQuery.ExistsPredicate))\n                 {\n-                    throw new IllegalArgumentException( format( \"%s Composite query must have decreasing precision. Query was: %s \",\n-                            illegalQueryMessage, Arrays.toString( predicates ) ) );\n+                    throw new IllegalArgumentException(format(\"%s Composite query must have decreasing precision. Query was: %s \",\n+                      illegalQueryMessage, Arrays.toString(predicates)));\n                 }\n             }\n             prev = current;\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}