{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "991",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.error.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\nindex 52e135b4018..080d0d6614b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.error.proxy;\n+\n+package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.\n+\n+error .proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\nindex 52e135b4018..0c874ffa60e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.error.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -35,20 +36,19 @@ import org.hl7.v3.PRPAIN201305UV02;\n import org.hl7.v3.PRPAIN201306UV02;\n \n /**\n- *\n  * @author jhoppesc\n  */\n public class AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl implements\n-        AdapterPatientDiscoveryDeferredReqErrorProxy {\n+    AdapterPatientDiscoveryDeferredReqErrorProxy {\n \n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class,\n-            serviceType = \"Patient Discovery Deferred Request\",\n-            version = \"LEVEL_A0\")\n-    @Override\n-    public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request, PRPAIN201306UV02 response,\n-            AssertionType assertion, String errMsg) {\n-        return new MCCIIN000002UV01();\n-    }\n+  @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n+      afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class,\n+      serviceType = \"Patient Discovery Deferred Request\",\n+      version = \"LEVEL_A0\")\n+  @Override\n+  public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request, PRPAIN201306UV02 response,\n+                                                               AssertionType assertion, String errMsg) {\n+    return new MCCIIN000002UV01();\n+  }\n \n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\nindex 52e135b4018..80e45fd5575 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.error.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -38,17 +39,11 @@ import org.hl7.v3.PRPAIN201306UV02;\n  *\n  * @author jhoppesc\n  */\n-public class AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl implements\n-        AdapterPatientDiscoveryDeferredReqErrorProxy {\n-\n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class,\n-            serviceType = \"Patient Discovery Deferred Request\",\n-            version = \"LEVEL_A0\")\n-    @Override\n-    public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request, PRPAIN201306UV02 response,\n-            AssertionType assertion, String errMsg) {\n-        return new MCCIIN000002UV01();\n+public class AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl implements AdapterPatientDiscoveryDeferredReqErrorProxy {\n+@AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class, serviceType = \"Patient Discovery Deferred Request\", version = \"LEVEL_A0\")\n+@Override\n+    public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request, PRPAIN201306UV02 response, AssertionType assertion, String errMsg) {\n+    return new MCCIIN000002UV01();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\nindex 52e135b4018..cdd392639d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n@@ -38,17 +38,16 @@ import org.hl7.v3.PRPAIN201306UV02;\n  *\n  * @author jhoppesc\n  */\n-public class AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl implements\n-        AdapterPatientDiscoveryDeferredReqErrorProxy {\n \n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class,\n-            serviceType = \"Patient Discovery Deferred Request\",\n-            version = \"LEVEL_A0\")\n+\n+public class AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl implements AdapterPatientDiscoveryDeferredReqErrorProxy {\n+\n+\n+    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = MCCIIN000002UV01EventDescriptionBuilder.class, serviceType = \"Patient Discovery Deferred Request\", version = \"LEVEL_A0\")\n     @Override\n-    public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request, PRPAIN201306UV02 response,\n-            AssertionType assertion, String errMsg) {\n+    public MCCIIN000002UV01 processPatientDiscoveryAsyncReqError(PRPAIN201305UV02 request,\n+        PRPAIN201306UV02 response,\n+        AssertionType assertion, String errMsg) {\n         return new MCCIIN000002UV01();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "package statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\nindex 52e135b4018..080d0d6614b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/991/AdapterPatientDiscoveryDeferredReqErrorProxyNoOpImpl.java\n@@ -24,7 +24,10 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.error.proxy;\n+\n+package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.request.\n+\n+error .proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}