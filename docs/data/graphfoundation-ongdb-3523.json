{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "3523",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3523/IndexReaders.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3523/IndexReaders.java\nindex 543d0d1e27e..672194fd2f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3523/IndexReaders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/3523/IndexReaders.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.io.Closeable;\n@@ -31,26 +32,26 @@ import static org.neo4j.io.IOUtils.closeAllUnchecked;\n \n class IndexReaders implements Closeable\n {\n-    private final List<IndexReader> indexReaders = new ArrayList<>();\n-    private final IndexReference indexReference;\n-    private final Read read;\n-\n-    IndexReaders( IndexReference indexReference, Read read )\n-    {\n-        this.indexReference = indexReference;\n-        this.read = read;\n-    }\n-\n-    IndexReader createReader() throws IndexNotFoundKernelException\n-    {\n-        IndexReader indexReader = read.indexReader( indexReference, true );\n-        indexReaders.add( indexReader );\n-        return indexReader;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        closeAllUnchecked( indexReaders );\n-    }\n+  private final List<IndexReader> indexReaders = new ArrayList<>();\n+  private final IndexReference indexReference;\n+  private final Read read;\n+\n+  IndexReaders(IndexReference indexReference, Read read)\n+  {\n+    this.indexReference = indexReference;\n+    this.read = read;\n+  }\n+\n+  IndexReader createReader() throws IndexNotFoundKernelException\n+  {\n+    IndexReader indexReader = read.indexReader(indexReference, true);\n+    indexReaders.add(indexReader);\n+    return indexReader;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    closeAllUnchecked(indexReaders);\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3523/IndexReaders.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3523/IndexReaders.java\nindex 543d0d1e27e..8e595a21877 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/3523/IndexReaders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/3523/IndexReaders.java\n@@ -53,4 +53,4 @@ class IndexReaders implements Closeable\n     {\n         closeAllUnchecked( indexReaders );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}