{
    "project_name": "Angel-ML-angel",
    "violation_id": "797",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/797/AdjustPartitionParam.java\nindex 74d63247016..096cba22e36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/797/AdjustPartitionParam.java\n@@ -23,45 +23,45 @@ import io.netty.buffer.ByteBuf;\n \n public class AdjustPartitionParam extends PartitionUpdateParam {\n \n-  int seed;\n-  int partitionId;\n-  private byte[] dataBuf;\n-  ByteBuf edgesAndGradsBuf;\n-  private int bufLength;\n+    int seed;\n+    int partitionId;\n+    private byte[] dataBuf;\n+    ByteBuf edgesAndGradsBuf;\n+    private int bufLength;\n \n-  public AdjustPartitionParam(int matrixId,\n-                              PartitionKey partKey,\n-                              byte[] dataBuf,\n-                              int bufLength) {\n-    super(matrixId, partKey);\n-    this.dataBuf = dataBuf;\n-    this.bufLength = bufLength;\n-  }\n+    public AdjustPartitionParam(int matrixId,\n+                                PartitionKey partKey,\n+                                byte[] dataBuf,\n+                                int bufLength) {\n+        super(matrixId, partKey);\n+        this.dataBuf = dataBuf;\n+        this.bufLength = bufLength;\n+    }\n \n-  public AdjustPartitionParam() {\n-  }\n+    public AdjustPartitionParam() {\n+    }\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeBytes(dataBuf);\n-  }\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeBytes(dataBuf);\n+    }\n \n-  @Override\n-  public void deserialize(ByteBuf buf) {\n-    super.deserialize(buf);\n-    seed = buf.readInt();\n-    partitionId = buf.readInt();\n-    edgesAndGradsBuf = buf;\n-    edgesAndGradsBuf.retain();\n-  }\n+    @Override\n+    public void deserialize(ByteBuf buf) {\n+        super.deserialize(buf);\n+        seed = buf.readInt();\n+        partitionId = buf.readInt();\n+        edgesAndGradsBuf = buf;\n+        edgesAndGradsBuf.retain();\n+    }\n \n-  public void clear() {\n-    edgesAndGradsBuf.release();\n-  }\n+    public void clear() {\n+        edgesAndGradsBuf.release();\n+    }\n \n-  @Override\n-  public int bufferLen() {\n-    return super.bufferLen() + this.bufLength;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return super.bufferLen() + this.bufLength;\n+    }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/797/AdjustPartitionParam.java\nindex 74d63247016..91e32a2e5a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/797/AdjustPartitionParam.java\n@@ -29,11 +29,10 @@ public class AdjustPartitionParam extends PartitionUpdateParam {\n   ByteBuf edgesAndGradsBuf;\n   private int bufLength;\n \n-  public AdjustPartitionParam(int matrixId,\n-                              PartitionKey partKey,\n+  public AdjustPartitionParam(int matrixId, PartitionKey partKey,\n                               byte[] dataBuf,\n                               int bufLength) {\n-    super(matrixId, partKey);\n+  super(matrixId, partKey);\n     this.dataBuf = dataBuf;\n     this.bufLength = bufLength;\n   }\n@@ -64,4 +63,4 @@ public class AdjustPartitionParam extends PartitionUpdateParam {\n   public int bufferLen() {\n     return super.bufferLen() + this.bufLength;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/797/AdjustPartitionParam.java\nindex 74d63247016..e67140b279f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/797/AdjustPartitionParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/797/AdjustPartitionParam.java\n@@ -24,22 +24,20 @@ import io.netty.buffer.ByteBuf;\n public class AdjustPartitionParam extends PartitionUpdateParam {\n \n   int seed;\n+\n+\n   int partitionId;\n   private byte[] dataBuf;\n   ByteBuf edgesAndGradsBuf;\n   private int bufLength;\n \n-  public AdjustPartitionParam(int matrixId,\n-                              PartitionKey partKey,\n-                              byte[] dataBuf,\n-                              int bufLength) {\n+  public AdjustPartitionParam(int matrixId, PartitionKey partKey, byte[] dataBuf, int bufLength) {\n     super(matrixId, partKey);\n     this.dataBuf = dataBuf;\n     this.bufLength = bufLength;\n   }\n \n-  public AdjustPartitionParam() {\n-  }\n+  public AdjustPartitionParam() {}\n \n   @Override\n   public void serialize(ByteBuf buf) {\n@@ -64,4 +62,5 @@ public class AdjustPartitionParam extends PartitionUpdateParam {\n   public int bufferLen() {\n     return super.bufferLen() + this.bufLength;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}