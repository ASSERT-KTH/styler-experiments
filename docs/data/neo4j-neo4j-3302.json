{
    "project_name": "neo4j-neo4j",
    "violation_id": "3302",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3302/JaxRsServletHolderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3302/JaxRsServletHolderFactory.java\nindex 1685940be5f..e0334c7861e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/violations/3302/JaxRsServletHolderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/neo4j-neo4j/checkstyle_idea/3302/JaxRsServletHolderFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;\n@@ -51,55 +52,55 @@ public class JaxRsServletHolderFactory\n     public JaxRsServletHolderFactory()\n     {\n         // add classes common to all mount points\n-        classes.add( Neo4jHttpExceptionMapper.class );\n-        classes.add( JacksonJsonProvider.class );\n+        classes.add(Neo4jHttpExceptionMapper.class);\n+        classes.add(JacksonJsonProvider.class);\n     }\n \n-    public void addPackages( List<String> packages, Collection<Injectable<?>> injectableProviders )\n+    public void addPackages(List<String> packages, Collection<Injectable<?>> injectableProviders)\n     {\n-        this.packages.addAll( packages );\n-        if ( injectableProviders != null )\n+        this.packages.addAll(packages);\n+        if (injectableProviders != null)\n         {\n-            this.injectables.addAll( injectableProviders );\n+            this.injectables.addAll(injectableProviders);\n         }\n     }\n \n-    public void addClasses( List<Class<?>> classes, Collection<Injectable<?>> injectableProviders )\n+    public void addClasses(List<Class<?>> classes, Collection<Injectable<?>> injectableProviders)\n     {\n-        this.classes.addAll( classes );\n-        if ( injectableProviders != null )\n+        this.classes.addAll(classes);\n+        if (injectableProviders != null)\n         {\n-            this.injectables.addAll( injectableProviders );\n+            this.injectables.addAll(injectableProviders);\n         }\n     }\n \n-    public void removePackages( List<String> packages )\n+    public void removePackages(List<String> packages)\n     {\n-        this.packages.removeAll( packages );\n+        this.packages.removeAll(packages);\n     }\n \n-    public void removeClasses( List<Class<?>> classes )\n+    public void removeClasses(List<Class<?>> classes)\n     {\n-        this.classes.removeAll( classes );\n+        this.classes.removeAll(classes);\n     }\n \n-    public ServletHolder create( ComponentsBinder binder, boolean wadlEnabled )\n+    public ServletHolder create(ComponentsBinder binder, boolean wadlEnabled)\n     {\n-        for ( Injectable<?> injectable : injectables )\n+        for (Injectable<?> injectable : injectables)\n         {\n             Supplier<?> getValue = injectable::getValue;\n             Class<?> type = injectable.getType();\n-            binder.addLazyBinding( getValue, type );\n+            binder.addLazyBinding(getValue, type);\n         }\n \n         ResourceConfig resourceConfig = new ResourceConfig()\n-                .register( binder )\n-                .register( XForwardFilter.class )\n-                .packages( packages.toArray( new String[0] ) )\n-                .registerClasses( classes )\n-                .property( WADL_FEATURE_DISABLE, String.valueOf( !wadlEnabled ) );\n+          .register(binder)\n+          .register(XForwardFilter.class)\n+          .packages(packages.toArray(new String[0]))\n+          .registerClasses(classes)\n+          .property(WADL_FEATURE_DISABLE, String.valueOf(!wadlEnabled));\n \n-        ServletContainer container = new ServletContainer( resourceConfig );\n-        return new ServletHolder( container );\n+        ServletContainer container = new ServletContainer(resourceConfig);\n+        return new ServletHolder(container);\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "violations": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}