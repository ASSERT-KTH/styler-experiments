{
    "project_name": "Angel-ML-angel",
    "violation_id": "1062",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1062/PartitionUpdateIndex.java\nindex aada32a7878..0fd114639c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1062/PartitionUpdateIndex.java\n@@ -22,31 +22,31 @@ import java.util.List;\n import java.util.concurrent.ConcurrentHashMap;\n \n public class PartitionUpdateIndex {\n-  private final ConcurrentHashMap<Integer, RowSplitUpdateIndex> rowSplitUpdateIndexes;\n+    private final ConcurrentHashMap<Integer, RowSplitUpdateIndex> rowSplitUpdateIndexes;\n \n-  public PartitionUpdateIndex() {\n-    rowSplitUpdateIndexes = new ConcurrentHashMap<Integer, RowSplitUpdateIndex>();\n-  }\n-\n-  public void addUpdateIndexes(List<RowUpdateSplit> rowSplitUpdateInfos) {\n-    if (rowSplitUpdateInfos == null || rowSplitUpdateInfos.isEmpty()) {\n-      return;\n+    public PartitionUpdateIndex() {\n+        rowSplitUpdateIndexes = new ConcurrentHashMap<Integer, RowSplitUpdateIndex>();\n     }\n \n-    int size = rowSplitUpdateInfos.size();\n-    for (int i = 0; i < size; i++) {\n-      if (!rowSplitUpdateIndexes.containsKey(rowSplitUpdateInfos.get(i).getRowId())) {\n-        rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(),\n-            new RowSplitUpdateIndex());\n-      }\n-      RowSplitUpdateIndex rowSplitUpdateIndex =\n-          rowSplitUpdateIndexes.get(rowSplitUpdateInfos.get(i).getRowId());\n-      rowSplitUpdateIndex.addUpdateIndexes(rowSplitUpdateInfos.get(i));\n+    public void addUpdateIndexes(List<RowUpdateSplit> rowSplitUpdateInfos) {\n+        if (rowSplitUpdateInfos == null || rowSplitUpdateInfos.isEmpty()) {\n+            return;\n+        }\n+\n+        int size = rowSplitUpdateInfos.size();\n+        for (int i = 0; i < size; i++) {\n+            if (!rowSplitUpdateIndexes.containsKey(rowSplitUpdateInfos.get(i).getRowId())) {\n+                rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(),\n+                        new RowSplitUpdateIndex());\n+            }\n+            RowSplitUpdateIndex rowSplitUpdateIndex =\n+                    rowSplitUpdateIndexes.get(rowSplitUpdateInfos.get(i).getRowId());\n+            rowSplitUpdateIndex.addUpdateIndexes(rowSplitUpdateInfos.get(i));\n+        }\n     }\n-  }\n \n-  public RowSplitUpdateIndex getRowSplitUpdateIndex(int rowId) {\n-    return rowSplitUpdateIndexes.get(rowId);\n-  }\n+    public RowSplitUpdateIndex getRowSplitUpdateIndex(int rowId) {\n+        return rowSplitUpdateIndexes.get(rowId);\n+    }\n \n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1062/PartitionUpdateIndex.java\nindex aada32a7878..637bd822d7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1062/PartitionUpdateIndex.java\n@@ -36,9 +36,8 @@ public class PartitionUpdateIndex {\n     int size = rowSplitUpdateInfos.size();\n     for (int i = 0; i < size; i++) {\n       if (!rowSplitUpdateIndexes.containsKey(rowSplitUpdateInfos.get(i).getRowId())) {\n-        rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(),\n-            new RowSplitUpdateIndex());\n-      }\n+        rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(), new RowSplitUpdateIndex());\n+  }\n       RowSplitUpdateIndex rowSplitUpdateIndex =\n           rowSplitUpdateIndexes.get(rowSplitUpdateInfos.get(i).getRowId());\n       rowSplitUpdateIndex.addUpdateIndexes(rowSplitUpdateInfos.get(i));\n@@ -49,4 +48,4 @@ public class PartitionUpdateIndex {\n     return rowSplitUpdateIndexes.get(rowId);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1062/PartitionUpdateIndex.java\nindex aada32a7878..699edabb340 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1062/PartitionUpdateIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1062/PartitionUpdateIndex.java\n@@ -17,11 +17,11 @@\n package com.tencent.angel.psagent.matrix.index;\n \n import com.tencent.angel.psagent.matrix.oplog.cache.RowUpdateSplit;\n-\n import java.util.List;\n import java.util.concurrent.ConcurrentHashMap;\n \n public class PartitionUpdateIndex {\n+\n   private final ConcurrentHashMap<Integer, RowSplitUpdateIndex> rowSplitUpdateIndexes;\n \n   public PartitionUpdateIndex() {\n@@ -36,11 +36,10 @@ public class PartitionUpdateIndex {\n     int size = rowSplitUpdateInfos.size();\n     for (int i = 0; i < size; i++) {\n       if (!rowSplitUpdateIndexes.containsKey(rowSplitUpdateInfos.get(i).getRowId())) {\n-        rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(),\n-            new RowSplitUpdateIndex());\n+        rowSplitUpdateIndexes.putIfAbsent(rowSplitUpdateInfos.get(i).getRowId(), new RowSplitUpdateIndex());\n       }\n-      RowSplitUpdateIndex rowSplitUpdateIndex =\n-          rowSplitUpdateIndexes.get(rowSplitUpdateInfos.get(i).getRowId());\n+\n+      RowSplitUpdateIndex rowSplitUpdateIndex = rowSplitUpdateIndexes.get(rowSplitUpdateInfos.get(i).getRowId());\n       rowSplitUpdateIndex.addUpdateIndexes(rowSplitUpdateInfos.get(i));\n     }\n   }\n@@ -49,4 +48,4 @@ public class PartitionUpdateIndex {\n     return rowSplitUpdateIndexes.get(rowId);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}