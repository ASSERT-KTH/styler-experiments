{
    "project_name": "Activiti-Activiti",
    "violation_id": "933",
    "information": {
        "violations": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.asyncexecutor.multitenant;\n\nimport org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnable;\nimport org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..5e9ee8e9193 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Activiti-Activiti/styler/05_predictions/final/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnable;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..159d5cbc264 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/checkstyle_idea/933/TenantAwareExecuteAsyncRunnable.java\n@@ -24,25 +24,23 @@ import org.activiti.engine.runtime.Job;\n \n /**\n  * Extends the default {@link ExecuteAsyncRunnable} by setting the 'tenant' context before executing.\n- *\n-\n  */\n public class TenantAwareExecuteAsyncRunnable extends ExecuteAsyncRunnable {\n \n-  protected TenantInfoHolder tenantInfoHolder;\n-  protected String tenantId;\n-\n-  public TenantAwareExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration, TenantInfoHolder tenantInfoHolder, String tenantId) {\n-    super(job, processEngineConfiguration);\n-    this.tenantInfoHolder = tenantInfoHolder;\n-    this.tenantId = tenantId;\n-  }\n-\n-  @Override\n-  public void run() {\n-    tenantInfoHolder.setCurrentTenantId(tenantId);\n-    super.run();\n-    tenantInfoHolder.clearCurrentTenantId();\n-  }\n+    protected TenantInfoHolder tenantInfoHolder;\n+    protected String tenantId;\n+\n+    public TenantAwareExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration, TenantInfoHolder tenantInfoHolder, String tenantId) {\n+        super(job, processEngineConfiguration);\n+        this.tenantInfoHolder = tenantInfoHolder;\n+        this.tenantId = tenantId;\n+    }\n+\n+    @Override\n+    public void run() {\n+        tenantInfoHolder.setCurrentTenantId(tenantId);\n+        super.run();\n+        tenantInfoHolder.clearCurrentTenantId();\n+    }\n \n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..73fb6668326 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/naturalize/933/TenantAwareExecuteAsyncRunnable.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnable;\n@@ -45,4 +44,4 @@ public class TenantAwareExecuteAsyncRunnable extends ExecuteAsyncRunnable {\n     tenantInfoHolder.clearCurrentTenantId();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..4b7516695f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/codebuff/933/TenantAwareExecuteAsyncRunnable.java\n@@ -27,12 +27,16 @@ import org.activiti.engine.runtime.Job;\n  *\n \n  */\n+\n+\n public class TenantAwareExecuteAsyncRunnable extends ExecuteAsyncRunnable {\n \n   protected TenantInfoHolder tenantInfoHolder;\n   protected String tenantId;\n \n-  public TenantAwareExecuteAsyncRunnable(Job job, ProcessEngineConfigurationImpl processEngineConfiguration, TenantInfoHolder tenantInfoHolder, String tenantId) {\n+  public TenantAwareExecuteAsyncRunnable(Job job,\n+                                         ProcessEngineConfigurationImpl processEngineConfiguration,\n+                                         TenantInfoHolder tenantInfoHolder, String tenantId) {\n     super(job, processEngineConfiguration);\n     this.tenantInfoHolder = tenantInfoHolder;\n     this.tenantId = tenantId;\n@@ -44,5 +48,4 @@ public class TenantAwareExecuteAsyncRunnable extends ExecuteAsyncRunnable {\n     super.run();\n     tenantInfoHolder.clearCurrentTenantId();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..5e9ee8e9193 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/random/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\nindex 60a9b53f316..5e9ee8e9193 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/violations/933/TenantAwareExecuteAsyncRunnable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Activiti-Activiti/styler/05_predictions/three_grams/files-repaired/933/TenantAwareExecuteAsyncRunnable.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.asyncexecutor.multitenant;\n \n import org.activiti.engine.impl.asyncexecutor.ExecuteAsyncRunnable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "checkstyle_idea",
        "codebuff"
    ]
}