{
    "project_name": "CONNECT-Solution-CONNECT",
    "violation_id": "586",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.policyengine.adapter.pep.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.CheckPolicyRequestType;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/586/AdapterPEPProxyJavaImpl.java\nindex a366a60f63a..446446d1a69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/final/files-repaired/586/AdapterPEPProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.pep.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/586/AdapterPEPProxyJavaImpl.java\nindex a366a60f63a..a422ff64a7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/checkstyle_idea/586/AdapterPEPProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.pep.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -37,31 +38,31 @@ import org.slf4j.LoggerFactory;\n  * This is the concrete implementation for the Java based call to the AdapterPEP.\n  */\n public class AdapterPEPProxyJavaImpl implements AdapterPEPProxy {\n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterPEPProxyJavaImpl.class);\n-\n-    /**\n-     * Given a request to check the access policy, this service will interface with the PDP to determine if access is to\n-     * be granted or denied.\n-     *\n-     * @param checkPolicyRequest The xacml request to check defined policy\n-     * @return The xacml response which contains the access decision\n-     */\n-    @Override\n-    public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n-        LOG.trace(\"Begin AdapterPEPProxyJavaImpl.checkPolicy\");\n-        CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterPEPProxyJavaImpl.class);\n \n-        AdapterPEPImpl pepImpl = new AdapterPEPImpl();\n+  /**\n+   * Given a request to check the access policy, this service will interface with the PDP to determine if access is to\n+   * be granted or denied.\n+   *\n+   * @param checkPolicyRequest The xacml request to check defined policy\n+   * @return The xacml response which contains the access decision\n+   */\n+  @Override\n+  public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n+    LOG.trace(\"Begin AdapterPEPProxyJavaImpl.checkPolicy\");\n+    CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n \n-        try {\n-            checkPolicyResponse = pepImpl.checkPolicy(checkPolicyRequest, assertion);\n-        } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterPEPProxyJavaImpl.checkPolicy.  Error: \" + ex.getMessage();\n-            LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n-        }\n+    AdapterPEPImpl pepImpl = new AdapterPEPImpl();\n \n-        LOG.trace(\"End AdapterPEPProxyJavaImpl.checkPolicy\");\n-        return checkPolicyResponse;\n+    try {\n+      checkPolicyResponse = pepImpl.checkPolicy(checkPolicyRequest, assertion);\n+    } catch (Exception ex) {\n+      String message = \"Error occurred calling AdapterPEPProxyJavaImpl.checkPolicy.  Error: \" + ex.getMessage();\n+      LOG.error(message, ex);\n+      throw new RuntimeException(message, ex);\n     }\n+\n+    LOG.trace(\"End AdapterPEPProxyJavaImpl.checkPolicy\");\n+    return checkPolicyResponse;\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/586/AdapterPEPProxyJavaImpl.java\nindex a366a60f63a..c9ade1732f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/naturalize/586/AdapterPEPProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.pep.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -52,16 +53,17 @@ public class AdapterPEPProxyJavaImpl implements AdapterPEPProxy {\n         CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n \n         AdapterPEPImpl pepImpl = new AdapterPEPImpl();\n-\n-        try {\n+try {\n             checkPolicyResponse = pepImpl.checkPolicy(checkPolicyRequest, assertion);\n         } catch (Exception ex) {\n             String message = \"Error occurred calling AdapterPEPProxyJavaImpl.checkPolicy.  Error: \" + ex.getMessage();\n             LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n+\n+throw new RuntimeException(message, ex);\n         }\n \n         LOG.trace(\"End AdapterPEPProxyJavaImpl.checkPolicy\");\n-        return checkPolicyResponse;\n+\n+return checkPolicyResponse;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/586/AdapterPEPProxyJavaImpl.java\nindex a366a60f63a..e7d86ee5912 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/codebuff/586/AdapterPEPProxyJavaImpl.java\n@@ -36,7 +36,10 @@ import org.slf4j.LoggerFactory;\n /**\n  * This is the concrete implementation for the Java based call to the AdapterPEP.\n  */\n+\n+\n public class AdapterPEPProxyJavaImpl implements AdapterPEPProxy {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterPEPProxyJavaImpl.class);\n \n     /**\n@@ -46,13 +49,13 @@ public class AdapterPEPProxyJavaImpl implements AdapterPEPProxy {\n      * @param checkPolicyRequest The xacml request to check defined policy\n      * @return The xacml response which contains the access decision\n      */\n+\n+\n     @Override\n     public CheckPolicyResponseType checkPolicy(CheckPolicyRequestType checkPolicyRequest, AssertionType assertion) {\n         LOG.trace(\"Begin AdapterPEPProxyJavaImpl.checkPolicy\");\n         CheckPolicyResponseType checkPolicyResponse = new CheckPolicyResponseType();\n-\n         AdapterPEPImpl pepImpl = new AdapterPEPImpl();\n-\n         try {\n             checkPolicyResponse = pepImpl.checkPolicy(checkPolicyRequest, assertion);\n         } catch (Exception ex) {\n@@ -60,8 +63,8 @@ public class AdapterPEPProxyJavaImpl implements AdapterPEPProxy {\n             LOG.error(message, ex);\n             throw new RuntimeException(message, ex);\n         }\n-\n         LOG.trace(\"End AdapterPEPProxyJavaImpl.checkPolicy\");\n         return checkPolicyResponse;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/586/AdapterPEPProxyJavaImpl.java\nindex a366a60f63a..446446d1a69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/violations/586/AdapterPEPProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/CONNECT-Solution-CONNECT/styler/05_predictions/three_grams/files-repaired/586/AdapterPEPProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.policyengine.adapter.pep.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}