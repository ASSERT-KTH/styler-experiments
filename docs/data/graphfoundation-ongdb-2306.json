{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2306",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2306/TestServerBuilders.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2306/TestServerBuilders.java\nindex cbdf737fa0f..77c326964d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2306/TestServerBuilders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2306/TestServerBuilders.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.harness;\n \n import java.io.File;\n@@ -28,22 +29,24 @@ import org.neo4j.harness.internal.InProcessServerBuilder;\n  */\n public final class TestServerBuilders\n {\n-    /**\n-     * Create a builder capable of starting an in-process Neo4j instance. This builder will use the standard java temp\n-     * directory (configured via the 'java.io.tmpdir' system property) as the location for the temporary Neo4j directory.\n-     */\n-    public static TestServerBuilder newInProcessBuilder()\n-    {\n-        return new InProcessServerBuilder();\n-    }\n+  /**\n+   * Create a builder capable of starting an in-process Neo4j instance. This builder will use the standard java temp\n+   * directory (configured via the 'java.io.tmpdir' system property) as the location for the temporary Neo4j directory.\n+   */\n+  public static TestServerBuilder newInProcessBuilder()\n+  {\n+    return new InProcessServerBuilder();\n+  }\n \n-    /**\n-     * Create a builder capable of starting an in-process Neo4j instance, running in a subdirectory of the specified directory.\n-     */\n-    public static TestServerBuilder newInProcessBuilder( File workingDirectory )\n-    {\n-        return new InProcessServerBuilder( workingDirectory );\n-    }\n+  /**\n+   * Create a builder capable of starting an in-process Neo4j instance, running in a subdirectory of the specified directory.\n+   */\n+  public static TestServerBuilder newInProcessBuilder(File workingDirectory)\n+  {\n+    return new InProcessServerBuilder(workingDirectory);\n+  }\n \n-    private TestServerBuilders(){}\n+  private TestServerBuilders()\n+  {\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2306/TestServerBuilders.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2306/TestServerBuilders.java\nindex cbdf737fa0f..dbeae78ff0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2306/TestServerBuilders.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2306/TestServerBuilders.java\n@@ -46,4 +46,4 @@ public final class TestServerBuilders\n     }\n \n     private TestServerBuilders(){}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}