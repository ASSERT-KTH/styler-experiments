{
    "project_name": "Angel-ML-angel",
    "violation_id": "1126",
    "information": {
        "violations": [
            {
                "line": "20",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @param rowType  row type\n   */\n  public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n    super(rowIndex, rowType, -1, -1);\n    this.split = split;\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/1126/CompSparseIntRowUpdateSplit.java\nindex 6e142314fb9..fcc08264338 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/1126/CompSparseIntRowUpdateSplit.java\n@@ -17,8 +17,9 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n    * @param rowIndex row index\n    * @param rowType  row type\n    */\n-  public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n-    super(rowIndex, rowType, -1, -1);\n+  public\n+  CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n+     super(rowIndex, rowType, -1, -1);\n     this.split = split;\n   }\n \n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1126/CompSparseIntRowUpdateSplit.java\nindex 6e142314fb9..85981868634 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1126/CompSparseIntRowUpdateSplit.java\n@@ -9,37 +9,39 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Row split of component sparse int row update.\n  */\n-public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n-  private SparseIntVector split;\n-  /**\n-   * Create a new CompSparseIntRowUpdateSplit.\n-   *\n-   * @param rowIndex row index\n-   * @param rowType  row type\n-   */\n-  public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n-    super(rowIndex, rowType, -1, -1);\n-    this.split = split;\n-  }\n+public class CompSparseIntRowUpdateSplit extends RowUpdateSplit {\n+    private SparseIntVector split;\n \n-  @Override\n-  public void serialize(ByteBuf buf) {\n-    super.serialize(buf);\n-    buf.writeInt(split.size());\n-    LOG.debug(\"double size = \" + split.size());\n+    /**\n+     * Create a new CompSparseIntRowUpdateSplit.\n+     *\n+     * @param rowIndex row index\n+     * @param rowType  row type\n+     */\n+    public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex,\n+                                       MLProtos.RowType rowType) {\n+        super(rowIndex, rowType, -1, -1);\n+        this.split = split;\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf buf) {\n+        super.serialize(buf);\n+        buf.writeInt(split.size());\n+        LOG.debug(\"double size = \" + split.size());\n \n-    ObjectIterator<Int2IntMap.Entry>\n-      iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n-    Int2IntMap.Entry entry = null;\n-    while(iter.hasNext()) {\n-      entry = iter.next();\n-      buf.writeInt(entry.getIntKey());\n-      buf.writeInt(entry.getIntValue());\n+        ObjectIterator<Int2IntMap.Entry>\n+                iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n+        Int2IntMap.Entry entry = null;\n+        while (iter.hasNext()) {\n+            entry = iter.next();\n+            buf.writeInt(entry.getIntKey());\n+            buf.writeInt(entry.getIntValue());\n+        }\n     }\n-  }\n \n-  @Override\n-  public int bufferLen() {\n-    return super.bufferLen() + split.size() * 8;\n-  }\n+    @Override\n+    public int bufferLen() {\n+        return super.bufferLen() + split.size() * 8;\n+    }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1126/CompSparseIntRowUpdateSplit.java\nindex 6e142314fb9..6ef0bc68b14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1126/CompSparseIntRowUpdateSplit.java\n@@ -9,7 +9,7 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Row split of component sparse int row update.\n  */\n-public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n+public class CompSparseIntRowUpdateSplit extends RowUpdateSplit {\n   private SparseIntVector split;\n   /**\n    * Create a new CompSparseIntRowUpdateSplit.\n@@ -28,10 +28,9 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n     buf.writeInt(split.size());\n     LOG.debug(\"double size = \" + split.size());\n \n-    ObjectIterator<Int2IntMap.Entry>\n-      iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n+    ObjectIterator<Int2IntMap.Entry> iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n     Int2IntMap.Entry entry = null;\n-    while(iter.hasNext()) {\n+    while (iter.hasNext()) {\n       entry = iter.next();\n       buf.writeInt(entry.getIntKey());\n       buf.writeInt(entry.getIntValue());\n@@ -42,4 +41,4 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n   public int bufferLen() {\n     return super.bufferLen() + split.size() * 8;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1126/CompSparseIntRowUpdateSplit.java\nindex 6e142314fb9..a9927c30dc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1126/CompSparseIntRowUpdateSplit.java\n@@ -9,7 +9,9 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Row split of component sparse int row update.\n  */\n-public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n+\n+public class CompSparseIntRowUpdateSplit extends RowUpdateSplit {\n+\n   private SparseIntVector split;\n   /**\n    * Create a new CompSparseIntRowUpdateSplit.\n@@ -17,6 +19,7 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n    * @param rowIndex row index\n    * @param rowType  row type\n    */\n+\n   public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n     super(rowIndex, rowType, -1, -1);\n     this.split = split;\n@@ -27,11 +30,9 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n     super.serialize(buf);\n     buf.writeInt(split.size());\n     LOG.debug(\"double size = \" + split.size());\n-\n-    ObjectIterator<Int2IntMap.Entry>\n-      iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n+    ObjectIterator<Int2IntMap.Entry> iter = split.getIndexToValueMap().int2IntEntrySet().fastIterator();\n     Int2IntMap.Entry entry = null;\n-    while(iter.hasNext()) {\n+    while (iter.hasNext()) {\n       entry = iter.next();\n       buf.writeInt(entry.getIntKey());\n       buf.writeInt(entry.getIntValue());\n@@ -42,4 +43,5 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n   public int bufferLen() {\n     return super.bufferLen() + split.size() * 8;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/1126/CompSparseIntRowUpdateSplit.java\nindex 6e142314fb9..fcc08264338 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1126/CompSparseIntRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/1126/CompSparseIntRowUpdateSplit.java\n@@ -17,8 +17,9 @@ public class CompSparseIntRowUpdateSplit extends RowUpdateSplit{\n    * @param rowIndex row index\n    * @param rowType  row type\n    */\n-  public CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n-    super(rowIndex, rowType, -1, -1);\n+  public\n+  CompSparseIntRowUpdateSplit(SparseIntVector split, int rowIndex, MLProtos.RowType rowType) {\n+     super(rowIndex, rowType, -1, -1);\n     this.split = split;\n   }\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}