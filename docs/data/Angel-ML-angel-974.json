{
    "project_name": "Angel-ML-angel",
    "violation_id": "974",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/974/OpLogMessage.java\nindex cb9d1c12a8c..4e5c1827c67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/974/OpLogMessage.java\n@@ -19,41 +19,41 @@ package com.tencent.angel.psagent.matrix.oplog.cache;\n import com.tencent.angel.psagent.task.TaskContext;\n \n public class OpLogMessage {\n-  private final int matrixId;\n-  private final OpLogMessageType type;\n-  private final TaskContext context;\n-  private final int seqId;\n-\n-  public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n-    this.seqId = seqId;\n-    this.matrixId = matrixId;\n-    this.type = type;\n-    this.context = context;\n-  }\n-\n-  public OpLogMessageType getType() {\n-    return type;\n-  }\n-\n-  public TaskContext getContext() {\n-    return context;\n-  }\n-\n-  public int getMatrixId() {\n-    return matrixId;\n-  }\n-\n-  public int message() {\n-    return seqId;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n-        + \", seqId=\" + seqId + \"]\";\n-  }\n-\n-  public int getSeqId() {\n-    return seqId;\n-  }\n+    private final int matrixId;\n+    private final OpLogMessageType type;\n+    private final TaskContext context;\n+    private final int seqId;\n+\n+    public OpLogMessage(int seqId, int matrixId, OpLogMessageType type, TaskContext context) {\n+        this.seqId = seqId;\n+        this.matrixId = matrixId;\n+        this.type = type;\n+        this.context = context;\n+    }\n+\n+    public OpLogMessageType getType() {\n+        return type;\n+    }\n+\n+    public TaskContext getContext() {\n+        return context;\n+    }\n+\n+    public int getMatrixId() {\n+        return matrixId;\n+    }\n+\n+    public int message() {\n+        return seqId;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n+                + \", seqId=\" + seqId + \"]\";\n+    }\n+\n+    public int getSeqId() {\n+        return seqId;\n+    }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/974/OpLogMessage.java\nindex cb9d1c12a8c..ad961f4261c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/974/OpLogMessage.java\n@@ -56,4 +56,4 @@ public class OpLogMessage {\n   public int getSeqId() {\n     return seqId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/974/OpLogMessage.java\nindex cb9d1c12a8c..dedaf7d95ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/974/OpLogMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/974/OpLogMessage.java\n@@ -19,6 +19,7 @@ package com.tencent.angel.psagent.matrix.oplog.cache;\n import com.tencent.angel.psagent.task.TaskContext;\n \n public class OpLogMessage {\n+\n   private final int matrixId;\n   private final OpLogMessageType type;\n   private final TaskContext context;\n@@ -49,11 +50,11 @@ public class OpLogMessage {\n \n   @Override\n   public String toString() {\n-    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context\n-        + \", seqId=\" + seqId + \"]\";\n+    return \"OpLogMessage [matrixId=\" + matrixId + \", type=\" + type + \", context=\" + context + \", seqId=\" + seqId + \"]\";\n   }\n \n   public int getSeqId() {\n     return seqId;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}