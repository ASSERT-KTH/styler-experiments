{
    "project_name": "Angel-ML-angel",
    "violation_id": "1028",
    "information": {
        "violations": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1028/GetRowFunc.java\nindex aabf3e1dc18..d30657dd126 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/1028/GetRowFunc.java\n@@ -22,26 +22,26 @@ import java.util.List;\n  * The interface get row function,invoke at parameter server actually.\n  */\n public interface GetRowFunc {\n-  /**\n-   * Gets parameter.\n-   *\n-   * @return the parameter\n-   */\n-  GetRowParam getParam();\n+    /**\n+     * Gets parameter.\n+     *\n+     * @return the parameter\n+     */\n+    GetRowParam getParam();\n \n-  /**\n-   * Partition get row.\n-   *\n-   * @param partParam the partition parameter\n-   * @return the partition result\n-   */\n-  PartitionGetRowResult partitionGet(PartitionGetRowParam partParam);\n+    /**\n+     * Partition get row.\n+     *\n+     * @param partParam the partition parameter\n+     * @return the partition result\n+     */\n+    PartitionGetRowResult partitionGet(PartitionGetRowParam partParam);\n \n-  /**\n-   * Merge result.\n-   *\n-   * @param partResults the partition results\n-   * @return the merged result\n-   */\n-  GetRowResult merge(List<PartitionGetRowResult> partResults);\n+    /**\n+     * Merge result.\n+     *\n+     * @param partResults the partition results\n+     * @return the merged result\n+     */\n+    GetRowResult merge(List<PartitionGetRowResult> partResults);\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1028/GetRowFunc.java\nindex aabf3e1dc18..98b85beb719 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/1028/GetRowFunc.java\n@@ -44,4 +44,4 @@ public interface GetRowFunc {\n    * @return the merged result\n    */\n   GetRowResult merge(List<PartitionGetRowResult> partResults);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1028/GetRowFunc.java\nindex aabf3e1dc18..e65f64adc7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/1028/GetRowFunc.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/1028/GetRowFunc.java\n@@ -21,6 +21,8 @@ import java.util.List;\n /**\n  * The interface get row function,invoke at parameter server actually.\n  */\n+\n+\n public interface GetRowFunc {\n   /**\n    * Gets parameter.\n@@ -35,6 +37,8 @@ public interface GetRowFunc {\n    * @param partParam the partition parameter\n    * @return the partition result\n    */\n+\n+\n   PartitionGetRowResult partitionGet(PartitionGetRowParam partParam);\n \n   /**\n@@ -43,5 +47,7 @@ public interface GetRowFunc {\n    * @param partResults the partition results\n    * @return the merged result\n    */\n+\n+\n   GetRowResult merge(List<PartitionGetRowResult> partResults);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}