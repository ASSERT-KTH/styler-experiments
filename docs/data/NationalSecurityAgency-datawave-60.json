{
    "project_name": "NationalSecurityAgency-datawave",
    "violation_id": "60",
    "information": {
        "violations": [
            {
                "line": "12",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import org.apache.accumulo.core.client.TableNotFoundException;\nimport org.apache.accumulo.core.client.admin.TableOperations;\nimport org.apache.accumulo.core.conf.Property;\nimport org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;\n\npublic class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/60/ProtobufEdgeTableConfigHelper.java\nindex 2f09f6f3036..04410f26543 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/checkstyle_idea/60/ProtobufEdgeTableConfigHelper.java\n@@ -13,59 +13,64 @@ import org.apache.accumulo.core.conf.Property;\n import org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;\n \n public class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {\n-    private static final int DEFAULT_VERSIONING_ITERATOR_PRIORITY = 20;\n-    private Logger log;\n-    \n-    private Configuration conf;\n-    protected String tableName;\n-    private String priority;\n-    \n-    @Override\n-    public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n-        \n-        if (tableName != null) {\n-            // Add the Edge Combiner\n-            for (IteratorScope scope : IteratorScope.values()) {\n-                // Add the EdgeCombiner BELOW the Versioning iterator\n-                int combinerPriority = getVersionIteratorPriority(tops, scope) - 1;\n-                String stem = String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scope.name(), \"EdgeCombiner\");\n-                setPropertyIfNecessary(tableName, stem, combinerPriority + \",datawave.iterators.EdgeCombiner\", tops, log);\n-                setPropertyIfNecessary(tableName, stem + \".opt.all\", \"true\", tops, log);\n-                \n-            }\n-        }\n-    }\n-    \n-    /**\n-     * FInds the priority associated with versioning iterator. Assumes the name is \"vers\".\n-     * \n-     * @param tops\n-     * @param scope\n-     *            The scope of the iterator.\n-     * @return The priority of the versioning iterator, or 20 if not found.\n-     * @throws AccumuloSecurityException\n-     * @throws AccumuloException\n-     * @throws TableNotFoundException\n-     */\n-    private int getVersionIteratorPriority(final TableOperations tops, final IteratorScope scope) throws AccumuloSecurityException, AccumuloException,\n-                    TableNotFoundException {\n-        final IteratorSetting versioningIterator = tops.getIteratorSetting(tableName, \"vers\", scope);\n-        \n-        return ((null == versioningIterator) ? DEFAULT_VERSIONING_ITERATOR_PRIORITY : versioningIterator.getPriority());\n+  private static final int DEFAULT_VERSIONING_ITERATOR_PRIORITY = 20;\n+  private Logger log;\n+\n+  private Configuration conf;\n+  protected String tableName;\n+  private String priority;\n+\n+  @Override\n+  public void configure(TableOperations tops)\n+      throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n+\n+    if (tableName != null) {\n+      // Add the Edge Combiner\n+      for (IteratorScope scope : IteratorScope.values()) {\n+        // Add the EdgeCombiner BELOW the Versioning iterator\n+        int combinerPriority = getVersionIteratorPriority(tops, scope) - 1;\n+        String stem =\n+            String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scope.name(), \"EdgeCombiner\");\n+        setPropertyIfNecessary(tableName, stem,\n+            combinerPriority + \",datawave.iterators.EdgeCombiner\", tops, log);\n+        setPropertyIfNecessary(tableName, stem + \".opt.all\", \"true\", tops, log);\n+\n+      }\n     }\n-    \n-    @Override\n-    public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n-        \n-        this.log = log;\n-        this.conf = config;\n-        this.tableName = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_NAME, null);\n-        this.priority = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_LOADER_PRIORITY, null);\n-        \n-        if (this.tableName == null || !this.tableName.equals(tableName) || this.priority == null) {\n-            throw new IllegalArgumentException(\"Edge Table Not Properly Defined: \" + tableName);\n-        }\n-        \n+  }\n+\n+  /**\n+   * FInds the priority associated with versioning iterator. Assumes the name is \"vers\".\n+   *\n+   * @param tops\n+   * @param scope The scope of the iterator.\n+   * @return The priority of the versioning iterator, or 20 if not found.\n+   * @throws AccumuloSecurityException\n+   * @throws AccumuloException\n+   * @throws TableNotFoundException\n+   */\n+  private int getVersionIteratorPriority(final TableOperations tops, final IteratorScope scope)\n+      throws AccumuloSecurityException, AccumuloException,\n+      TableNotFoundException {\n+    final IteratorSetting versioningIterator = tops.getIteratorSetting(tableName, \"vers\", scope);\n+\n+    return ((null == versioningIterator) ? DEFAULT_VERSIONING_ITERATOR_PRIORITY :\n+        versioningIterator.getPriority());\n+  }\n+\n+  @Override\n+  public void setup(String tableName, Configuration config, Logger log)\n+      throws IllegalArgumentException {\n+\n+    this.log = log;\n+    this.conf = config;\n+    this.tableName = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_NAME, null);\n+    this.priority = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_LOADER_PRIORITY, null);\n+\n+    if (this.tableName == null || !this.tableName.equals(tableName) || this.priority == null) {\n+      throw new IllegalArgumentException(\"Edge Table Not Properly Defined: \" + tableName);\n     }\n-    \n+\n+  }\n+\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/60/ProtobufEdgeTableConfigHelper.java\nindex 2f09f6f3036..1b458a39c76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/naturalize/60/ProtobufEdgeTableConfigHelper.java\n@@ -68,4 +68,4 @@ public class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {\n         \n     }\n     \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/60/ProtobufEdgeTableConfigHelper.java\nindex 2f09f6f3036..ae6e52a292f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/violations/60/ProtobufEdgeTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/NationalSecurityAgency-datawave/codebuff/60/ProtobufEdgeTableConfigHelper.java\n@@ -1,7 +1,6 @@\n package datawave.ingest.table.config;\n \n import datawave.ingest.mapreduce.handler.edge.ProtobufEdgeDataTypeHandler;\n-\n import org.apache.hadoop.conf.Configuration;\n import org.apache.log4j.Logger;\n import org.apache.accumulo.core.client.AccumuloException;\n@@ -12,17 +11,16 @@ import org.apache.accumulo.core.client.admin.TableOperations;\n import org.apache.accumulo.core.conf.Property;\n import org.apache.accumulo.core.iterators.IteratorUtil.IteratorScope;\n \n+\n public class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {\n     private static final int DEFAULT_VERSIONING_ITERATOR_PRIORITY = 20;\n     private Logger log;\n-    \n     private Configuration conf;\n     protected String tableName;\n     private String priority;\n-    \n+\n     @Override\n     public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n-        \n         if (tableName != null) {\n             // Add the Edge Combiner\n             for (IteratorScope scope : IteratorScope.values()) {\n@@ -31,7 +29,6 @@ public class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {\n                 String stem = String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scope.name(), \"EdgeCombiner\");\n                 setPropertyIfNecessary(tableName, stem, combinerPriority + \",datawave.iterators.EdgeCombiner\", tops, log);\n                 setPropertyIfNecessary(tableName, stem + \".opt.all\", \"true\", tops, log);\n-                \n             }\n         }\n     }\n@@ -47,25 +44,20 @@ public class ProtobufEdgeTableConfigHelper extends AbstractTableConfigHelper {\n      * @throws AccumuloException\n      * @throws TableNotFoundException\n      */\n-    private int getVersionIteratorPriority(final TableOperations tops, final IteratorScope scope) throws AccumuloSecurityException, AccumuloException,\n-                    TableNotFoundException {\n+\n+    private int getVersionIteratorPriority(final TableOperations tops, final IteratorScope scope) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {\n         final IteratorSetting versioningIterator = tops.getIteratorSetting(tableName, \"vers\", scope);\n-        \n         return ((null == versioningIterator) ? DEFAULT_VERSIONING_ITERATOR_PRIORITY : versioningIterator.getPriority());\n     }\n-    \n+\n     @Override\n     public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n-        \n         this.log = log;\n         this.conf = config;\n         this.tableName = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_NAME, null);\n         this.priority = conf.get(ProtobufEdgeDataTypeHandler.EDGE_TABLE_LOADER_PRIORITY, null);\n-        \n         if (this.tableName == null || !this.tableName.equals(tableName) || this.priority == null) {\n             throw new IllegalArgumentException(\"Edge Table Not Properly Defined: \" + tableName);\n         }\n-        \n     }\n-    \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}