{
    "project_name": "Angel-ML-angel",
    "violation_id": "515",
    "information": {
        "violations": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/515/GetNodes.java\nindex d90602ba2db..6ad8e0dc6f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/515/GetNodes.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.getnodes;\n \n import com.tencent.angel.graph.data.Node;\n@@ -35,57 +36,57 @@ import java.util.List;\n \n public class GetNodes extends GetFunc {\n \n-  public GetNodes(int matrixId, int[] partitionIds) {\n-    this(new GetNodesParam(matrixId, partitionIds));\n-  }\n+    public GetNodes(int matrixId, int[] partitionIds) {\n+        this(new GetNodesParam(matrixId, partitionIds));\n+    }\n \n-  public GetNodes(GetParam param) {\n-    super(param);\n-  }\n+    public GetNodes(GetParam param) {\n+        super(param);\n+    }\n \n-  public GetNodes() {\n-    super(null);\n-  }\n+    public GetNodes() {\n+        super(null);\n+    }\n \n-  @Override\n-  public PartitionGetResult partitionGet(PartitionGetParam param) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(param.getPartKey(), 0);\n+    @Override\n+    public PartitionGetResult partitionGet(PartitionGetParam param) {\n+        ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n+                .getRow(param.getPartKey(), 0);\n \n-    ObjectIterator<Long2ObjectMap.Entry<IElement>> it = row.iterator();\n-    LongArrayList nodes = new LongArrayList();\n-    long start = param.getPartKey().getStartCol();\n-    while (it.hasNext()) {\n-      Long2ObjectMap.Entry entry = it.next();\n-      Node node = (Node) entry.getValue();\n-      if (node.getFeats() != null && node.getNeighbors() == null) {\n-        nodes.add(entry.getLongKey() + start);\n-      }\n+        ObjectIterator<Long2ObjectMap.Entry<IElement>> it = row.iterator();\n+        LongArrayList nodes = new LongArrayList();\n+        long start = param.getPartKey().getStartCol();\n+        while (it.hasNext()) {\n+            Long2ObjectMap.Entry entry = it.next();\n+            Node node = (Node) entry.getValue();\n+            if (node.getFeats() != null && node.getNeighbors() == null) {\n+                nodes.add(entry.getLongKey() + start);\n+            }\n+        }\n+\n+        return new IndexPartGetLongResult(param.getPartKey(), nodes.toLongArray());\n     }\n \n-    return new IndexPartGetLongResult(param.getPartKey(), nodes.toLongArray());\n-  }\n+    @Override\n+    public GetResult merge(List<PartitionGetResult> partResults) {\n+        int size = 0;\n+        for (PartitionGetResult result : partResults) {\n+            if (result instanceof IndexPartGetLongResult) {\n+                size += ((IndexPartGetLongResult) result).getValues().length;\n+            }\n+        }\n \n-  @Override\n-  public GetResult merge(List<PartitionGetResult> partResults) {\n-    int size = 0;\n-    for (PartitionGetResult result : partResults) {\n-      if (result instanceof IndexPartGetLongResult) {\n-        size += ((IndexPartGetLongResult) result).getValues().length;\n-      }\n-    }\n+        long[] values = new long[size];\n+        int start = 0;\n+        for (PartitionGetResult result : partResults) {\n+            if (result instanceof IndexPartGetLongResult) {\n+                long[] vals = ((IndexPartGetLongResult) result).getValues();\n+                System.arraycopy(vals, 0, values, start, vals.length);\n+                start += vals.length;\n+            }\n+        }\n \n-    long[] values = new long[size];\n-    int start = 0;\n-    for (PartitionGetResult result : partResults) {\n-      if (result instanceof IndexPartGetLongResult) {\n-        long[] vals = ((IndexPartGetLongResult) result).getValues();\n-        System.arraycopy(vals, 0, values, start, vals.length);\n-        start += vals.length;\n-      }\n+        return new GetRowResult(ResponseType.SUCCESS,\n+                VFactory.denseLongVector(values));\n     }\n-\n-    return new GetRowResult(ResponseType.SUCCESS,\n-        VFactory.denseLongVector(values));\n-  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/515/GetNodes.java\nindex d90602ba2db..831d32d7953 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/515/GetNodes.java\n@@ -51,8 +51,7 @@ public class GetNodes extends GetFunc {\n   public PartitionGetResult partitionGet(PartitionGetParam param) {\n     ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n         .getRow(param.getPartKey(), 0);\n-\n-    ObjectIterator<Long2ObjectMap.Entry<IElement>> it = row.iterator();\n+ObjectIterator<Long2ObjectMap.Entry<IElement>> it = row.iterator();\n     LongArrayList nodes = new LongArrayList();\n     long start = param.getPartKey().getStartCol();\n     while (it.hasNext()) {\n@@ -88,4 +87,4 @@ public class GetNodes extends GetFunc {\n     return new GetRowResult(ResponseType.SUCCESS,\n         VFactory.denseLongVector(values));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/515/GetNodes.java\nindex d90602ba2db..48b442b4fa5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/515/GetNodes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/515/GetNodes.java\n@@ -49,9 +49,7 @@ public class GetNodes extends GetFunc {\n \n   @Override\n   public PartitionGetResult partitionGet(PartitionGetParam param) {\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(param.getPartKey(), 0);\n-\n+    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(param.getPartKey(), 0);\n     ObjectIterator<Long2ObjectMap.Entry<IElement>> it = row.iterator();\n     LongArrayList nodes = new LongArrayList();\n     long start = param.getPartKey().getStartCol();\n@@ -62,7 +60,6 @@ public class GetNodes extends GetFunc {\n         nodes.add(entry.getLongKey() + start);\n       }\n     }\n-\n     return new IndexPartGetLongResult(param.getPartKey(), nodes.toLongArray());\n   }\n \n@@ -84,8 +81,7 @@ public class GetNodes extends GetFunc {\n         start += vals.length;\n       }\n     }\n-\n-    return new GetRowResult(ResponseType.SUCCESS,\n-        VFactory.denseLongVector(values));\n+    return new GetRowResult(ResponseType.SUCCESS, VFactory.denseLongVector(values));\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}