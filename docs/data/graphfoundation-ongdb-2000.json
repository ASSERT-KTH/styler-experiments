{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "2000",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2000/PrimitiveLongPeekingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2000/PrimitiveLongPeekingIterator.java\nindex c204dad6d68..3832984f90e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2000/PrimitiveLongPeekingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/2000/PrimitiveLongPeekingIterator.java\n@@ -17,39 +17,40 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive;\n \n public class PrimitiveLongPeekingIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n {\n-    private final PrimitiveLongIterator actual;\n-    private long firstValue;\n-    private boolean hasFirstValue;\n-    private boolean hasMultipleValues;\n+  private final PrimitiveLongIterator actual;\n+  private long firstValue;\n+  private boolean hasFirstValue;\n+  private boolean hasMultipleValues;\n \n-    public PrimitiveLongPeekingIterator( PrimitiveLongIterator actual )\n+  public PrimitiveLongPeekingIterator(PrimitiveLongIterator actual)\n+  {\n+    this.actual = actual;\n+    if (actual.hasNext())\n     {\n-        this.actual = actual;\n-        if ( actual.hasNext() )\n-        {\n-            firstValue = actual.next();\n-            hasFirstValue = true;\n-            hasMultipleValues = actual.hasNext();\n-        }\n+      firstValue = actual.next();\n+      hasFirstValue = true;\n+      hasMultipleValues = actual.hasNext();\n     }\n+  }\n \n-    @Override\n-    protected boolean fetchNext()\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    if (hasFirstValue)\n     {\n-        if ( hasFirstValue )\n-        {\n-            hasFirstValue = false;\n-            return next( firstValue );\n-        }\n-        return actual.hasNext() && next( actual.next() );\n+      hasFirstValue = false;\n+      return next(firstValue);\n     }\n+    return actual.hasNext() && next(actual.next());\n+  }\n \n-    public boolean hasMultipleValues()\n-    {\n-        return hasMultipleValues;\n-    }\n+  public boolean hasMultipleValues()\n+  {\n+    return hasMultipleValues;\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2000/PrimitiveLongPeekingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2000/PrimitiveLongPeekingIterator.java\nindex c204dad6d68..2da388abf8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/2000/PrimitiveLongPeekingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/2000/PrimitiveLongPeekingIterator.java\n@@ -45,11 +45,12 @@ public class PrimitiveLongPeekingIterator extends PrimitiveLongCollections.Primi\n             hasFirstValue = false;\n             return next( firstValue );\n         }\n-        return actual.hasNext() && next( actual.next() );\n+\n+return actual.hasNext() && next( actual.next() );\n     }\n \n     public boolean hasMultipleValues()\n     {\n         return hasMultipleValues;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}