{
    "project_name": "spark-root-laurelin",
    "violation_id": "22",
    "information": {
        "violations": [
            {
                "line": "5",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * byte ranges from low level I/O\n */\npackage edu.vanderbilt.accre.laurelin.root_proxy;\n\nimport java.io.IOException;\nimport java.nio.ByteBuffer;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/spark-root-laurelin/styler/05_predictions/final/files-repaired/22/ROOTFile.java\nindex d824cef5fb0..5c649bf8ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/spark-root-laurelin/styler/05_predictions/final/files-repaired/22/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/checkstyle_idea/22/ROOTFile.java\nindex d824cef5fb0..8658e31a062 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/checkstyle_idea/22/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n@@ -20,7 +21,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -67,7 +68,7 @@ public class ROOTFile {\n          * This bytebuffer can be a copy of the internal cache\n          */\n         ByteBuffer ret;\n-        try (Event time = profile.startOp(offset, (int)l)) {\n+        try (Event time = profile.startOp(offset, (int) l)) {\n             ret = fh.read(offset, l);\n         } catch (Exception e) {\n             throw new IOException(e);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/naturalize/22/ROOTFile.java\nindex d824cef5fb0..f6365eecc69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/naturalize/22/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n@@ -20,7 +21,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -88,4 +89,4 @@ public class ROOTFile {\n     public Cursor getCursor(long off) {\n         return new Cursor(new FileBackedBuf(this), off);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "5",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/codebuff/22/ROOTFile.java\nindex d824cef5fb0..715069cf346 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/codebuff/22/ROOTFile.java\n@@ -6,7 +6,6 @@ package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n import java.nio.ByteBuffer;\n-\n import edu.vanderbilt.accre.laurelin.root_proxy.IOProfile.Event;\n import edu.vanderbilt.accre.laurelin.root_proxy.IOProfile.FileProfiler;\n \n@@ -20,7 +19,7 @@ public class ROOTFile {\n \n         @Override\n         public ByteBuffer read(long off, long len) throws IOException {\n-            return fh.read(off,  len);\n+            return fh.read(off, len);\n         }\n \n         @Override\n@@ -62,6 +61,7 @@ public class ROOTFile {\n      * users must be copies of the internal ByteBuffers we have. Otherwise\n      * we couldn't change the contents without breaking the users\n      */\n+\n     private ByteBuffer readUnsafe(long offset, long l) throws IOException {\n         /*\n          * This bytebuffer can be a copy of the internal cache\n@@ -88,4 +88,4 @@ public class ROOTFile {\n     public Cursor getCursor(long off) {\n         return new Cursor(new FileBackedBuf(this), off);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/styler/05_predictions/random/files-repaired/22/ROOTFile.java\nindex d824cef5fb0..5c649bf8ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/styler/05_predictions/random/files-repaired/22/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/styler/05_predictions/three_grams/files-repaired/22/ROOTFile.java\nindex d824cef5fb0..5c649bf8ae7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/violations/22/ROOTFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/spark-root-laurelin/styler/05_predictions/three_grams/files-repaired/22/ROOTFile.java\n@@ -2,6 +2,7 @@\n  * Handles low-level loading C-struct type things and (optionally compressed)\n  * byte ranges from low level I/O\n  */\n+\n package edu.vanderbilt.accre.laurelin.root_proxy;\n \n import java.io.IOException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}