{
    "project_name": "chenpengliang0909-WxJava",
    "violation_id": "16",
    "information": {
        "violations": [
            {
                "line": "27",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @author ecoolper\n */\npublic class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n  public MediaImgUploadApacheHttpRequestExecutor(RequestHttp requestHttp) {\n    super(requestHttp);\n  }",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/16/MediaImgUploadApacheHttpRequestExecutor.java\nindex dc6d979222d..6813027123b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/checkstyle_idea/16/MediaImgUploadApacheHttpRequestExecutor.java\n@@ -24,7 +24,8 @@ import java.io.IOException;\n  *\n  * @author ecoolper\n  */\n-public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n+public class MediaImgUploadApacheHttpRequestExecutor\n+    extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n   public MediaImgUploadApacheHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n@@ -42,10 +43,10 @@ public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadReque\n     }\n \n     HttpEntity entity = MultipartEntityBuilder\n-      .create()\n-      .addBinaryBody(\"media\", data)\n-      .setMode(HttpMultipartMode.RFC6532)\n-      .build();\n+        .create()\n+        .addBinaryBody(\"media\", data)\n+        .setMode(HttpMultipartMode.RFC6532)\n+        .build();\n     httpPost.setEntity(entity);\n     httpPost.setHeader(\"Content-Type\", ContentType.MULTIPART_FORM_DATA.toString());\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/16/MediaImgUploadApacheHttpRequestExecutor.java\nindex dc6d979222d..18ae16aef74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/naturalize/16/MediaImgUploadApacheHttpRequestExecutor.java\n@@ -61,4 +61,4 @@ public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadReque\n       httpPost.releaseConnection();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "28",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/16/MediaImgUploadApacheHttpRequestExecutor.java\nindex dc6d979222d..88f30ea3361 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/codebuff/16/MediaImgUploadApacheHttpRequestExecutor.java\n@@ -15,7 +15,6 @@ import org.apache.http.entity.ContentType;\n import org.apache.http.entity.mime.HttpMultipartMode;\n import org.apache.http.entity.mime.MultipartEntityBuilder;\n import org.apache.http.impl.client.CloseableHttpClient;\n-\n import java.io.File;\n import java.io.IOException;\n \n@@ -24,6 +23,8 @@ import java.io.IOException;\n  *\n  * @author ecoolper\n  */\n+\n+\n public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n   public MediaImgUploadApacheHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n@@ -41,14 +42,9 @@ public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadReque\n       httpPost.setConfig(config);\n     }\n \n-    HttpEntity entity = MultipartEntityBuilder\n-      .create()\n-      .addBinaryBody(\"media\", data)\n-      .setMode(HttpMultipartMode.RFC6532)\n-      .build();\n+    HttpEntity entity = MultipartEntityBuilder.create().addBinaryBody(\"media\", data).setMode(HttpMultipartMode.RFC6532).build();\n     httpPost.setEntity(entity);\n     httpPost.setHeader(\"Content-Type\", ContentType.MULTIPART_FORM_DATA.toString());\n-\n     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {\n       String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);\n       WxError error = WxError.fromJson(responseContent, WxType.MP);\n@@ -61,4 +57,4 @@ public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadReque\n       httpPost.releaseConnection();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/16/MediaImgUploadApacheHttpRequestExecutor.java\nindex dc6d979222d..6d2ba1653a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/violations/16/MediaImgUploadApacheHttpRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/chenpengliang0909-WxJava/styler/05_predictions/three_grams/files-repaired/16/MediaImgUploadApacheHttpRequestExecutor.java\n@@ -23,8 +23,7 @@ import java.io.IOException;\n  * Created by ecoolper on 2017/5/5.\n  *\n  * @author ecoolper\n- */\n-public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n+ */ public class MediaImgUploadApacheHttpRequestExecutor extends MediaImgUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n   public MediaImgUploadApacheHttpRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}