{
    "project_name": "Angel-ML-angel",
    "violation_id": "756",
    "information": {
        "violations": [
            {
                "line": "15",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 111).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public String detail;\n\n  public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n    this.seqId = seqId;\n    this.methodId = methodId;\n    this.state = state;",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/756/ResponseHeader.java\nindex 73e2d7d6ef7..f62406c6073 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/756/ResponseHeader.java\n@@ -12,8 +12,9 @@ public class ResponseHeader implements Serialize {\n   public ResponseType responseType;\n   public String detail;\n \n-  public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n-    this.seqId = seqId;\n+  public ResponseHeader(\n+      int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n+this.seqId = seqId;\n     this.methodId = methodId;\n     this.state = state;\n     this.responseType = responseType;\n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/756/ResponseHeader.java\nindex 73e2d7d6ef7..3d5899fd0f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/756/ResponseHeader.java\n@@ -6,98 +6,99 @@ import com.tencent.angel.ps.server.data.ServerState;\n import io.netty.buffer.ByteBuf;\n \n public class ResponseHeader implements Serialize {\n-  public int seqId;\n-  public int methodId;\n-  public ServerState state;\n-  public ResponseType responseType;\n-  public String detail;\n-\n-  public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n-    this.seqId = seqId;\n-    this.methodId = methodId;\n-    this.state = state;\n-    this.responseType = responseType;\n-    this.detail = detail;\n-  }\n-\n-  public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType) {\n-    this(seqId, methodId, state, responseType, \"\");\n-  }\n-\n-  public ResponseHeader() {\n-    this(-1, -1, ServerState.GENERAL, ResponseType.SUCCESS, \"\");\n-  }\n-\n-  @Override\n-  public void serialize(ByteBuf output) {\n-    ByteBufSerdeUtils.serializeInt(output, seqId);\n-    ByteBufSerdeUtils.serializeInt(output, methodId);\n-    ByteBufSerdeUtils.serializeInt(output, state.getTypeId());\n-    ByteBufSerdeUtils.serializeInt(output, responseType.getTypeId());\n-    ByteBufSerdeUtils.serializeUTF8(output, detail);\n-  }\n-\n-  @Override\n-  public void deserialize(ByteBuf input) {\n-    seqId = ByteBufSerdeUtils.deserializeInt(input);\n-    methodId = ByteBufSerdeUtils.deserializeInt(input);\n-    state = ServerState.valueOf(ByteBufSerdeUtils.deserializeInt(input));\n-    responseType = ResponseType.valueOf(ByteBufSerdeUtils.deserializeInt(input));\n-    detail = ByteBufSerdeUtils.deserializeUTF8(input);\n-  }\n-\n-  @Override\n-  public int bufferLen() {\n-    return ByteBufSerdeUtils.INT_LENGTH * 4 + ByteBufSerdeUtils.serializedUTF8Len(detail);\n-  }\n-\n-  public int getSeqId() {\n-    return seqId;\n-  }\n-\n-  public void setSeqId(int seqId) {\n-    this.seqId = seqId;\n-  }\n-\n-  public ServerState getState() {\n-    return state;\n-  }\n-\n-  public void setState(ServerState state) {\n-    this.state = state;\n-  }\n-\n-  public ResponseType getResponseType() {\n-    return responseType;\n-  }\n-\n-  public void setResponseType(ResponseType responseType) {\n-    this.responseType = responseType;\n-  }\n-\n-  public String getDetail() {\n-    return detail;\n-  }\n-\n-  public void setDetail(String detail) {\n-    this.detail = detail;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return \"ResponseHeader{\" +\n-        \"seqId=\" + seqId +\n-        \", state=\" + state +\n-        \", responseType=\" + responseType +\n-        \", detail='\" + detail + '\\'' +\n-        '}';\n-  }\n-\n-  public int getMethodId() {\n-    return methodId;\n-  }\n-\n-  public void setMethodId(int methodId) {\n-    this.methodId = methodId;\n-  }\n+    public int seqId;\n+    public int methodId;\n+    public ServerState state;\n+    public ResponseType responseType;\n+    public String detail;\n+\n+    public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType,\n+                          String detail) {\n+        this.seqId = seqId;\n+        this.methodId = methodId;\n+        this.state = state;\n+        this.responseType = responseType;\n+        this.detail = detail;\n+    }\n+\n+    public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType) {\n+        this(seqId, methodId, state, responseType, \"\");\n+    }\n+\n+    public ResponseHeader() {\n+        this(-1, -1, ServerState.GENERAL, ResponseType.SUCCESS, \"\");\n+    }\n+\n+    @Override\n+    public void serialize(ByteBuf output) {\n+        ByteBufSerdeUtils.serializeInt(output, seqId);\n+        ByteBufSerdeUtils.serializeInt(output, methodId);\n+        ByteBufSerdeUtils.serializeInt(output, state.getTypeId());\n+        ByteBufSerdeUtils.serializeInt(output, responseType.getTypeId());\n+        ByteBufSerdeUtils.serializeUTF8(output, detail);\n+    }\n+\n+    @Override\n+    public void deserialize(ByteBuf input) {\n+        seqId = ByteBufSerdeUtils.deserializeInt(input);\n+        methodId = ByteBufSerdeUtils.deserializeInt(input);\n+        state = ServerState.valueOf(ByteBufSerdeUtils.deserializeInt(input));\n+        responseType = ResponseType.valueOf(ByteBufSerdeUtils.deserializeInt(input));\n+        detail = ByteBufSerdeUtils.deserializeUTF8(input);\n+    }\n+\n+    @Override\n+    public int bufferLen() {\n+        return ByteBufSerdeUtils.INT_LENGTH * 4 + ByteBufSerdeUtils.serializedUTF8Len(detail);\n+    }\n+\n+    public int getSeqId() {\n+        return seqId;\n+    }\n+\n+    public void setSeqId(int seqId) {\n+        this.seqId = seqId;\n+    }\n+\n+    public ServerState getState() {\n+        return state;\n+    }\n+\n+    public void setState(ServerState state) {\n+        this.state = state;\n+    }\n+\n+    public ResponseType getResponseType() {\n+        return responseType;\n+    }\n+\n+    public void setResponseType(ResponseType responseType) {\n+        this.responseType = responseType;\n+    }\n+\n+    public String getDetail() {\n+        return detail;\n+    }\n+\n+    public void setDetail(String detail) {\n+        this.detail = detail;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"ResponseHeader{\" +\n+                \"seqId=\" + seqId +\n+                \", state=\" + state +\n+                \", responseType=\" + responseType +\n+                \", detail='\" + detail + '\\'' +\n+                '}';\n+    }\n+\n+    public int getMethodId() {\n+        return methodId;\n+    }\n+\n+    public void setMethodId(int methodId) {\n+        this.methodId = methodId;\n+    }\n }\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/756/ResponseHeader.java\nindex 73e2d7d6ef7..7879c365990 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/756/ResponseHeader.java\n@@ -85,12 +85,7 @@ public class ResponseHeader implements Serialize {\n \n   @Override\n   public String toString() {\n-    return \"ResponseHeader{\" +\n-        \"seqId=\" + seqId +\n-        \", state=\" + state +\n-        \", responseType=\" + responseType +\n-        \", detail='\" + detail + '\\'' +\n-        '}';\n+    return \"ResponseHeader{\" + \"seqId=\" + seqId + \", state=\" + state + \", responseType=\" + responseType + \", detail='\" + detail + '\\'' + '}';\n   }\n \n   public int getMethodId() {\n@@ -100,4 +95,4 @@ public class ResponseHeader implements Serialize {\n   public void setMethodId(int methodId) {\n     this.methodId = methodId;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/756/ResponseHeader.java\nindex 73e2d7d6ef7..ab52dc71f2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/756/ResponseHeader.java\n@@ -6,10 +6,15 @@ import com.tencent.angel.ps.server.data.ServerState;\n import io.netty.buffer.ByteBuf;\n \n public class ResponseHeader implements Serialize {\n+\n   public int seqId;\n+\n   public int methodId;\n+\n   public ServerState state;\n+\n   public ResponseType responseType;\n+\n   public String detail;\n \n   public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n@@ -85,12 +90,7 @@ public class ResponseHeader implements Serialize {\n \n   @Override\n   public String toString() {\n-    return \"ResponseHeader{\" +\n-        \"seqId=\" + seqId +\n-        \", state=\" + state +\n-        \", responseType=\" + responseType +\n-        \", detail='\" + detail + '\\'' +\n-        '}';\n+    return \"ResponseHeader{\" + \"seqId=\" + seqId + \", state=\" + state + \", responseType=\" + responseType + \", detail='\" + detail + '\\'' + '}';\n   }\n \n   public int getMethodId() {\n@@ -100,4 +100,5 @@ public class ResponseHeader implements Serialize {\n   public void setMethodId(int methodId) {\n     this.methodId = methodId;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/756/ResponseHeader.java\nindex 73e2d7d6ef7..f62406c6073 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/756/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/three_grams/files-repaired/756/ResponseHeader.java\n@@ -12,8 +12,9 @@ public class ResponseHeader implements Serialize {\n   public ResponseType responseType;\n   public String detail;\n \n-  public ResponseHeader(int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n-    this.seqId = seqId;\n+  public ResponseHeader(\n+      int seqId, int methodId, ServerState state, ResponseType responseType, String detail) {\n+this.seqId = seqId;\n     this.methodId = methodId;\n     this.state = state;\n     this.responseType = responseType;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}