{
    "project_name": "apache-metron",
    "violation_id": "103",
    "information": {
        "violations": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 217).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class JpaConfiguration extends JpaBaseConfiguration {\n\n  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n    super(dataSource, properties, jtaTransactionManager, transactionManagerCustomizers);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "155",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'>' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "6",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-metron/styler/05_predictions/final/files-repaired/103/JpaConfiguration.java\nindex f1d48e1bf18..e9ed8dde9d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/apache-metron/styler/05_predictions/final/files-repaired/103/JpaConfiguration.java\n@@ -35,7 +35,8 @@ import org.springframework.transaction.jta.JtaTransactionManager;\n @EntityScan(\"org.apache.metron\")\n public class JpaConfiguration extends JpaBaseConfiguration {\n \n-  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n+  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider< TransactionManagerCustomizers\n+    >transactionManagerCustomizers) {\n     super(dataSource, properties, jtaTransactionManager, transactionManagerCustomizers);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/checkstyle_idea/103/JpaConfiguration.java\nindex f1d48e1bf18..c9119f60af3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/checkstyle_idea/103/JpaConfiguration.java\n@@ -6,9 +6,9 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@@ -35,7 +35,9 @@ import org.springframework.transaction.jta.JtaTransactionManager;\n @EntityScan(\"org.apache.metron\")\n public class JpaConfiguration extends JpaBaseConfiguration {\n \n-  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n+  protected JpaConfiguration(DataSource dataSource, JpaProperties properties,\n+                             ObjectProvider<JtaTransactionManager> jtaTransactionManager,\n+                             ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n     super(dataSource, properties, jtaTransactionManager, transactionManagerCustomizers);\n   }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/naturalize/103/JpaConfiguration.java\nindex f1d48e1bf18..baa055a9cf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/naturalize/103/JpaConfiguration.java\n@@ -48,4 +48,4 @@ public class JpaConfiguration extends JpaBaseConfiguration {\n   protected Map<String, Object> getVendorProperties() {\n     return Collections.singletonMap(\"eclipselink.weaving\", \"false\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Annotation 'EntityScan' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "34",
                    "column": "28",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/codebuff/103/JpaConfiguration.java\nindex f1d48e1bf18..b9210a387c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/codebuff/103/JpaConfiguration.java\n@@ -31,12 +31,14 @@ import org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter;\n import org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter;\n import org.springframework.transaction.jta.JtaTransactionManager;\n \n-@Configuration\n-@EntityScan(\"org.apache.metron\")\n+@Configuration @EntityScan( \"org.apache.metron\")\n public class JpaConfiguration extends JpaBaseConfiguration {\n \n   protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n-    super(dataSource, properties, jtaTransactionManager, transactionManagerCustomizers);\n+    super(dataSource,\n+      properties,\n+        jtaTransactionManager,\n+          transactionManagerCustomizers);\n   }\n \n   @Override\n@@ -46,6 +48,6 @@ public class JpaConfiguration extends JpaBaseConfiguration {\n \n   @Override\n   protected Map<String, Object> getVendorProperties() {\n-    return Collections.singletonMap(\"eclipselink.weaving\", \"false\");\n+    return Collections.singletonMap(\"eclipselink.weaving\",\"false\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "155",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'>' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "column": "6",
                    "severity": "warning",
                    "message": "GenericWhitespace '>' should followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/styler/05_predictions/three_grams/files-repaired/103/JpaConfiguration.java\nindex f1d48e1bf18..e9ed8dde9d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/violations/103/JpaConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-metron/styler/05_predictions/three_grams/files-repaired/103/JpaConfiguration.java\n@@ -35,7 +35,8 @@ import org.springframework.transaction.jta.JtaTransactionManager;\n @EntityScan(\"org.apache.metron\")\n public class JpaConfiguration extends JpaBaseConfiguration {\n \n-  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider<TransactionManagerCustomizers> transactionManagerCustomizers) {\n+  protected JpaConfiguration(DataSource dataSource, JpaProperties properties, ObjectProvider<JtaTransactionManager> jtaTransactionManager, ObjectProvider< TransactionManagerCustomizers\n+    >transactionManagerCustomizers) {\n     super(dataSource, properties, jtaTransactionManager, transactionManagerCustomizers);\n   }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}