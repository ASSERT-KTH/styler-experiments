{
    "project_name": "java110-MicroCommunity",
    "violation_id": "560",
    "information": {
        "violations": [
            {
                "line": "73",
                "column": "48",
                "severity": "error",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n        //\u6dfb\u52a0\u5c0f\u533a\u697c\n        applicationKeyBMOImpl.addMember(reqJson,context);\n\n\n        FileDto fileDto = new FileDto();",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/560/ApplicationKeyListener.java\nindex bb86edd5380..62222cf059f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/java110-MicroCommunity/styler/05_predictions/final/files-repaired/560/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/560/ApplicationKeyListener.java\nindex bb86edd5380..62222cf059f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/checkstyle_idea/560/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/560/ApplicationKeyListener.java\nindex bb86edd5380..3b3a30a953f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/naturalize/560/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n@@ -102,4 +102,4 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/560/ApplicationKeyListener.java\nindex bb86edd5380..0d2438d73c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/codebuff/560/ApplicationKeyListener.java\n@@ -26,6 +26,7 @@ import org.springframework.http.HttpMethod;\n  * add by wuxw 2019/4/26\n  **/\n \n+\n @Java110Listener(\"applicationKeyListener\")\n public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n@@ -37,7 +38,6 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n     @Autowired\n     private IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl;\n-\n     private static Logger logger = LoggerFactory.getLogger(ApplicationKeyListener.class);\n \n     @Override\n@@ -50,7 +50,6 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n         return HttpMethod.POST;\n     }\n \n-\n     @Override\n     protected void validate(ServiceDataFlowEvent event, JSONObject reqJson) {\n         Assert.jsonObjectHaveKey(reqJson, \"name\", \"\u8bf7\u6c42\u62a5\u6587\u4e2d\u672a\u5305\u542bname\");\n@@ -65,14 +64,13 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n     }\n \n     @Override\n-    protected void doSoService(ServiceDataFlowEvent event, DataFlowContext context, JSONObject reqJson) {\n+    protected void doSoService(ServiceDataFlowEvent event,\n+                               DataFlowContext context, JSONObject reqJson) {\n         logger.debug(\"ServiceDataFlowEvent : {}\", event);\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n-\n-\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n         FileDto fileDto = new FileDto();\n         fileDto.setFileId(GenerateCodeFactory.getGeneratorId(GenerateCodeFactory.CODE_PREFIX_file_id));\n         fileDto.setFileName(fileDto.getFileId());\n@@ -82,11 +80,9 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n         String fileName = fileInnerServiceSMOImpl.saveFile(fileDto);\n         reqJson.put(\"ownerPhotoId\", fileDto.getFileId());\n         reqJson.put(\"fileSaveName\", fileName);\n-\n         applicationKeyBMOImpl.addOwnerKeyPhoto(reqJson, context);\n     }\n \n-\n     public IFileInnerServiceSMO getFileInnerServiceSMOImpl() {\n         return fileInnerServiceSMOImpl;\n     }\n@@ -102,4 +98,4 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n     public void setOwnerRoomRelInnerServiceSMOImpl(IOwnerRoomRelInnerServiceSMO ownerRoomRelInnerServiceSMOImpl) {\n         this.ownerRoomRelInnerServiceSMOImpl = ownerRoomRelInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/560/ApplicationKeyListener.java\nindex bb86edd5380..62222cf059f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/random/files-repaired/560/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/560/ApplicationKeyListener.java\nindex bb86edd5380..62222cf059f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/violations/560/ApplicationKeyListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/java110-MicroCommunity/styler/05_predictions/three_grams/files-repaired/560/ApplicationKeyListener.java\n@@ -70,7 +70,7 @@ public class ApplicationKeyListener extends AbstractServiceApiPlusListener {\n \n \n         //\u6dfb\u52a0\u5c0f\u533a\u697c\n-        applicationKeyBMOImpl.addMember(reqJson,context);\n+        applicationKeyBMOImpl.addMember(reqJson, context);\n \n \n         FileDto fileDto = new FileDto();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}