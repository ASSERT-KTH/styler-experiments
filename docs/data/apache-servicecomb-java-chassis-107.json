{
    "project_name": "apache-servicecomb-java-chassis",
    "violation_id": "107",
    "information": {
        "violations": [
            {
                "line": "33",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 166).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * Load the {@link ExceptionToProducerResponseConverter} implementations. Ensure that those converters whose {@link ExceptionToProducerResponseConverter#getOrder()}\n   * return smaller value takes higher priority.\n   */\n  @SuppressWarnings(\"unchecked\")",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/107/ExceptionToProducerResponseConverters.java\nindex d9f50da0958..1a0d0120b71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/checkstyle_idea/107/ExceptionToProducerResponseConverters.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.invocation.exception;\n \n import java.util.HashMap;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/107/ExceptionToProducerResponseConverters.java\nindex d9f50da0958..96c6c0e9ef0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/naturalize/107/ExceptionToProducerResponseConverters.java\n@@ -62,4 +62,4 @@ public class ExceptionToProducerResponseConverters {\n     }\n     return converter.convert(swaggerInvocation, e);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "26",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/107/ExceptionToProducerResponseConverters.java\nindex d9f50da0958..ac409b834dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/codebuff/107/ExceptionToProducerResponseConverters.java\n@@ -18,14 +18,12 @@ package org.apache.servicecomb.swagger.invocation.exception;\n \n import java.util.HashMap;\n import java.util.Map;\n-\n import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n import org.apache.servicecomb.swagger.invocation.Response;\n import org.apache.servicecomb.swagger.invocation.SwaggerInvocation;\n \n public class ExceptionToProducerResponseConverters {\n-  private Map<Class<?>, ExceptionToProducerResponseConverter<Throwable>> exceptionToProducerResponseConverters =\n-      new HashMap<>();\n+  private Map<Class<?>, ExceptionToProducerResponseConverter<Throwable>> exceptionToProducerResponseConverters = new HashMap<>();\n \n   private ExceptionToProducerResponseConverter<Throwable> defaultConverter;\n \n@@ -33,6 +31,7 @@ public class ExceptionToProducerResponseConverters {\n    * Load the {@link ExceptionToProducerResponseConverter} implementations. Ensure that those converters whose {@link ExceptionToProducerResponseConverter#getOrder()}\n    * return smaller value takes higher priority.\n    */\n+\n   @SuppressWarnings(\"unchecked\")\n   public ExceptionToProducerResponseConverters() {\n     SPIServiceUtils.getSortedService(ExceptionToProducerResponseConverter.class).forEach(converter -> {\n@@ -55,11 +54,13 @@ public class ExceptionToProducerResponseConverters {\n       if (clazz == Throwable.class) {\n         break;\n       }\n+\n       clazz = clazz.getSuperclass();\n     }\n+\n     if (converter == null) {\n       converter = defaultConverter;\n     }\n     return converter.convert(swaggerInvocation, e);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/107/ExceptionToProducerResponseConverters.java\nindex d9f50da0958..903de275785 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/violations/107/ExceptionToProducerResponseConverters.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/apache-servicecomb-java-chassis/styler/05_predictions/three_grams/files-repaired/107/ExceptionToProducerResponseConverters.java\n@@ -32,8 +32,8 @@ public class ExceptionToProducerResponseConverters {\n   /**\n    * Load the {@link ExceptionToProducerResponseConverter} implementations. Ensure that those converters whose {@link ExceptionToProducerResponseConverter#getOrder()}\n    * return smaller value takes higher priority.\n-   */\n-  @SuppressWarnings(\"unchecked\")\n+   */@SuppressWarnings(\"unchecked\")\n+@SuppressWarnings(\"unchecked\")\n   public ExceptionToProducerResponseConverters() {\n     SPIServiceUtils.getSortedService(ExceptionToProducerResponseConverter.class).forEach(converter -> {\n       if (converter.getExceptionClass() == null) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}