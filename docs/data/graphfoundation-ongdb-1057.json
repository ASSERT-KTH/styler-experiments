{
    "project_name": "graphfoundation-ongdb",
    "violation_id": "1057",
    "information": {
        "violations": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "checkstyle_idea",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1057/EnterpriseIdTypeConfigurationProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1057/EnterpriseIdTypeConfigurationProvider.java\nindex 7e097f1ed6e..e61662c4bec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1057/EnterpriseIdTypeConfigurationProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/checkstyle_idea/1057/EnterpriseIdTypeConfigurationProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.enterprise.id;\n \n import java.util.EnumSet;\n@@ -40,24 +41,24 @@ import org.neo4j.kernel.impl.store.id.configuration.IdTypeConfiguration;\n public class EnterpriseIdTypeConfigurationProvider extends CommunityIdTypeConfigurationProvider\n {\n \n-    private final Set<IdType> typesToReuse;\n+  private final Set<IdType> typesToReuse;\n \n-    public EnterpriseIdTypeConfigurationProvider( Config config )\n-    {\n-        typesToReuse = configureReusableTypes( config );\n-    }\n+  public EnterpriseIdTypeConfigurationProvider(Config config)\n+  {\n+    typesToReuse = configureReusableTypes(config);\n+  }\n \n-    @Override\n-    protected Set<IdType> getTypesToReuse()\n-    {\n-        return typesToReuse;\n-    }\n+  @Override\n+  protected Set<IdType> getTypesToReuse()\n+  {\n+    return typesToReuse;\n+  }\n \n-    private EnumSet<IdType> configureReusableTypes( Config config )\n-    {\n-        EnumSet<IdType> types = EnumSet.copyOf( super.getTypesToReuse() );\n-        List<IdType> configuredTypes = config.get( EnterpriseEditionSettings.idTypesToReuse );\n-        types.addAll( configuredTypes );\n-        return types;\n-    }\n+  private EnumSet<IdType> configureReusableTypes(Config config)\n+  {\n+    EnumSet<IdType> types = EnumSet.copyOf(super.getTypesToReuse());\n+    List<IdType> configuredTypes = config.get(EnterpriseEditionSettings.idTypesToReuse);\n+    types.addAll(configuredTypes);\n+    return types;\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1057/EnterpriseIdTypeConfigurationProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1057/EnterpriseIdTypeConfigurationProvider.java\nindex 7e097f1ed6e..8e2c568684a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/violations/1057/EnterpriseIdTypeConfigurationProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/graphfoundation-ongdb/naturalize/1057/EnterpriseIdTypeConfigurationProvider.java\n@@ -39,7 +39,6 @@ import org.neo4j.kernel.impl.store.id.configuration.IdTypeConfiguration;\n  */\n public class EnterpriseIdTypeConfigurationProvider extends CommunityIdTypeConfigurationProvider\n {\n-\n     private final Set<IdType> typesToReuse;\n \n     public EnterpriseIdTypeConfigurationProvider( Config config )\n@@ -60,4 +59,4 @@ public class EnterpriseIdTypeConfigurationProvider extends CommunityIdTypeConfig\n         types.addAll( configuredTypes );\n         return types;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "checkstyle_idea",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}