{
    "project_name": "DaGeRe-peass",
    "violation_id": "10",
    "information": {
        "violations": [
            {
                "line": "23",
                "severity": "error",
                "message": "Line is longer than 200 characters (found 201).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   }\n   \n   public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n      TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n      \n      TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 200 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/DaGeRe-peass/styler/05_predictions/final/files-repaired/10/KiekerReaderConfigurationDuration.java\nindex 4b7b4f86a65..3ede3839500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/DaGeRe-peass/styler/05_predictions/final/files-repaired/10/KiekerReaderConfigurationDuration.java\n@@ -19,7 +19,7 @@ public class KiekerReaderConfigurationDuration extends KiekerReaderConfiguration\n       ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n       this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n    }\n-   \n+\n    public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n       TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n       \n",
            "diff_size": 1
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/checkstyle_idea/10/KiekerReaderConfigurationDuration.java\nindex 4b7b4f86a65..99d2ab1911e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/checkstyle_idea/10/KiekerReaderConfigurationDuration.java\n@@ -13,19 +13,19 @@ import kieker.analysis.trace.execution.ExecutionRecordTransformationStage;\n import kieker.analysis.trace.reconstruction.TraceReconstructionStage;\n \n public class KiekerReaderConfigurationDuration extends KiekerReaderConfiguration {\n-   public void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n-      DurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n-      \n-      ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n-   }\n-   \n-   public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n-      TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n-      \n-      TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n-      \n-      return treeStage;\n-   }\n+  public void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n+    DurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n+\n+    ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n+    this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n+  }\n+\n+  public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n+    TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n+\n+    TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n+    this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n+\n+    return treeStage;\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/naturalize/10/KiekerReaderConfigurationDuration.java\nindex 4b7b4f86a65..379d3adf895 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/naturalize/10/KiekerReaderConfigurationDuration.java\n@@ -13,19 +13,16 @@ import kieker.analysis.trace.execution.ExecutionRecordTransformationStage;\n import kieker.analysis.trace.reconstruction.TraceReconstructionStage;\n \n public class KiekerReaderConfigurationDuration extends KiekerReaderConfiguration {\n-   public void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n-      DurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n-      \n-      ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n-   }\n-   \n-   public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n+\tpublic void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n+\tDurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n+ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n+this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n+\t}\n+\n+public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n       TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n-      \n-      TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n-      \n-      return treeStage;\n-   }\n-}\n+TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n+this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n+return treeStage;\n+\t}\n+\t}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/codebuff/10/KiekerReaderConfigurationDuration.java\nindex 4b7b4f86a65..a2a7085bb31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/codebuff/10/KiekerReaderConfigurationDuration.java\n@@ -2,7 +2,6 @@ package de.peass.measurement.rca.kiekerReading;\n \n import java.io.File;\n import java.util.Set;\n-\n import de.peass.config.MeasurementConfiguration;\n import de.peass.dependency.analysis.KiekerReaderConfiguration;\n import de.peass.dependency.analysis.ModuleClassMapping;\n@@ -12,20 +11,19 @@ import de.peass.measurement.rca.kieker.TreeStage;\n import kieker.analysis.trace.execution.ExecutionRecordTransformationStage;\n import kieker.analysis.trace.reconstruction.TraceReconstructionStage;\n \n+\n public class KiekerReaderConfigurationDuration extends KiekerReaderConfiguration {\n-   public void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n-      DurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n-      \n-      ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n-   }\n-   \n-   public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n-      TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n-      \n-      TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n-      this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n-      \n-      return treeStage;\n-   }\n-}\n+ public void readDurations(final File kiekerTraceFolder, final Set<CallTreeNode> measuredNodes, final String version) {\n+  DurationStage stage = new DurationStage(systemModelRepositoryNew, measuredNodes, version);\n+  ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n+  this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n+ }\n+\n+ public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n+  TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n+  TraceReconstructionStage executionStage = prepareTillExecutionTrace(kiekerTraceFolder);\n+  this.connectPorts(executionStage.getExecutionTraceOutputPort(), treeStage.getInputPort());\n+  return treeStage;\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line is longer than 200 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/three_grams/files-repaired/10/KiekerReaderConfigurationDuration.java\nindex 4b7b4f86a65..3ede3839500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/violations/10/KiekerReaderConfigurationDuration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/DaGeRe-peass/styler/05_predictions/three_grams/files-repaired/10/KiekerReaderConfigurationDuration.java\n@@ -19,7 +19,7 @@ public class KiekerReaderConfigurationDuration extends KiekerReaderConfiguration\n       ExecutionRecordTransformationStage executionStage = prepareTillExecutions(kiekerTraceFolder);\n       this.connectPorts(executionStage.getOutputPort(), stage.getInputPort());\n    }\n-   \n+\n    public TreeStage readTree(final File kiekerTraceFolder, final String prefix, final TestCase test, final boolean ignoreEOIs, final MeasurementConfiguration config, final ModuleClassMapping mapping) {\n       TreeStage treeStage = new TreeStage(systemModelRepositoryNew, prefix, test, ignoreEOIs, config, mapping);\n       \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "checkstyle_idea",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}