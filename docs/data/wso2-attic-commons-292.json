{
    "project_name": "wso2-attic-commons",
    "violation_id": "292",
    "information": {
        "violations": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 208).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n}\n}",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/292/OrCondition.java\nindex 5e8ebd22b25..6305fe1cd98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/wso2-attic-commons/styler/05_predictions/final/files-repaired/292/OrCondition.java\n@@ -60,6 +60,9 @@ public class OrCondition extends ExpirableCondition implements WhereCondition {\n \n     @Override\n     public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n-        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n+        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition)\n+        .getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance\n+(\n+        referenceConversion)).within(getLifeTime());\n }\n }\n",
            "diff_size": 4
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/292/OrCondition.java\nindex 5e8ebd22b25..9c53f76f0c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/checkstyle_idea/292/OrCondition.java\n@@ -2,9 +2,9 @@\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n+ * <p>\n  * http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -23,43 +23,44 @@ import org.wso2.siddhi.api.condition.Condition;\n import java.util.Map;\n \n /**\n- * \n+ *\n  * OrCondition  class handles the logical OR conditions\n  */\n public class OrCondition extends ExpirableCondition implements WhereCondition {\n-    private Condition leftCondition;\n-    private Condition rightCondition;\n+  private Condition leftCondition;\n+  private Condition rightCondition;\n \n \n-    /**\n-     * @param leftCondition  one of the condition to be evaluated\n-     * @param rightCondition one of the condition to be evaluated\n-     */\n-    public OrCondition(Condition leftCondition, Condition rightCondition) {\n-        this.leftCondition = leftCondition;\n-        this.rightCondition = rightCondition;\n-    }\n+  /**\n+   * @param leftCondition  one of the condition to be evaluated\n+   * @param rightCondition one of the condition to be evaluated\n+   */\n+  public OrCondition(Condition leftCondition, Condition rightCondition) {\n+    this.leftCondition = leftCondition;\n+    this.rightCondition = rightCondition;\n+  }\n \n-    /**\n-     * get the left condition\n-     *\n-     * @return the left condition\n-     */\n-    public Condition getLeftCondition() {\n-        return leftCondition;\n-    }\n+  /**\n+   * get the left condition\n+   *\n+   * @return the left condition\n+   */\n+  public Condition getLeftCondition() {\n+    return leftCondition;\n+  }\n \n-    /**\n-     * get the right condition\n-     *\n-     * @return the right condition\n-     */\n-    public Condition getRightCondition() {\n-        return rightCondition;\n-    }\n+  /**\n+   * get the right condition\n+   *\n+   * @return the right condition\n+   */\n+  public Condition getRightCondition() {\n+    return rightCondition;\n+  }\n \n-    @Override\n-    public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n-        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n-}\n+  @Override\n+  public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n+    return (WhereCondition) new OrCondition(((WhereCondition) leftCondition).getNewInstance(referenceConversion),\n+      ((WhereCondition) rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/292/OrCondition.java\nindex 5e8ebd22b25..541b4fb9f01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/naturalize/292/OrCondition.java\n@@ -62,4 +62,4 @@ public class OrCondition extends ExpirableCondition implements WhereCondition {\n     public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n         return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n }\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/292/OrCondition.java\nindex 5e8ebd22b25..8e6ee762c83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/random/files-repaired/292/OrCondition.java\n@@ -61,5 +61,5 @@ public class OrCondition extends ExpirableCondition implements WhereCondition {\n     @Override\n     public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n         return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n-}\n+    }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/292/OrCondition.java\nindex 5e8ebd22b25..6305fe1cd98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/violations/292/OrCondition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/wso2-attic-commons/styler/05_predictions/three_grams/files-repaired/292/OrCondition.java\n@@ -60,6 +60,9 @@ public class OrCondition extends ExpirableCondition implements WhereCondition {\n \n     @Override\n     public WhereCondition getNewInstance(Map<String, String> referenceConversion) {\n-        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition).getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance(referenceConversion)).within(getLifeTime());\n+        return (WhereCondition) new OrCondition(((WhereCondition)leftCondition)\n+        .getNewInstance(referenceConversion),((WhereCondition)rightCondition).getNewInstance\n+(\n+        referenceConversion)).within(getLifeTime());\n }\n }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}