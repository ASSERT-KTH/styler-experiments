{
    "project_name": "GluuFederation-oxCore",
    "violation_id": "162",
    "information": {
        "violations": [
            {
                "line": "44",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 155).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            } else {\n                // default maxAttempts and timeouts are taken from jedis constants\n                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n            }\n\n            testConnection();",
    "results": [
        {
            "tool": "styler",
            "violations": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/162/RedisClusterProvider.java\nindex b35c78251d9..cf7392ef175 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/GluuFederation-oxCore/styler/05_predictions/final/files-repaired/162/RedisClusterProvider.java\n@@ -41,7 +41,8 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n                 pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), poolConfig);\n             } else {\n                 // default maxAttempts and timeouts are taken from jedis constants\n-                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n+\n+pool= new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n             }\n \n             testConnection();\n",
            "diff_size": 2
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/162/RedisClusterProvider.java\nindex b35c78251d9..5f700ab71f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/checkstyle_idea/162/RedisClusterProvider.java\n@@ -41,7 +41,8 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n                 pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), poolConfig);\n             } else {\n                 // default maxAttempts and timeouts are taken from jedis constants\n-                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n+                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(),\n+                    poolConfig);\n             }\n \n             testConnection();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/162/RedisClusterProvider.java\nindex b35c78251d9..744c18c8dcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/naturalize/162/RedisClusterProvider.java\n@@ -115,4 +115,4 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n     public void clear() {\n         LOG.trace(\"clear not allowed for cluster deployments\");\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/162/RedisClusterProvider.java\nindex b35c78251d9..745f527eafa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/codebuff/162/RedisClusterProvider.java\n@@ -4,12 +4,10 @@ import java.io.IOException;\n import java.io.Serializable;\n import java.util.HashSet;\n import java.util.Set;\n-\n import org.apache.commons.lang.SerializationUtils;\n import org.apache.commons.lang.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import redis.clients.jedis.HostAndPort;\n import redis.clients.jedis.JedisCluster;\n import redis.clients.jedis.JedisPoolConfig;\n@@ -19,10 +17,11 @@ import redis.clients.jedis.JedisPoolConfig;\n  *\n  * @author yuriyz\n  */\n+\n+\n public class RedisClusterProvider extends AbstractRedisProvider {\n \n     private static final Logger LOG = LoggerFactory.getLogger(RedisClusterProvider.class);\n-\n     private JedisCluster pool;\n \n     public RedisClusterProvider(RedisConfiguration redisConfiguration) {\n@@ -36,7 +35,6 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n             JedisPoolConfig poolConfig = new JedisPoolConfig();\n             poolConfig.setMaxTotal(1000);\n             poolConfig.setMinIdle(2);\n-\n             if (StringUtils.isBlank(redisConfiguration.getDecryptedPassword())) {\n                 pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), poolConfig);\n             } else {\n@@ -54,7 +52,6 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n \n     public static Set<HostAndPort> hosts(String servers) {\n         final String[] serverWithPorts = StringUtils.split(servers.trim(), \",\");\n-\n         Set<HostAndPort> set = new HashSet<HostAndPort>();\n         for (String serverWithPort : serverWithPorts) {\n             final String[] split = serverWithPort.trim().split(\":\");\n@@ -62,12 +59,12 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n             int port = Integer.parseInt(split[1].trim());\n             set.add(new HostAndPort(host, port));\n         }\n+\n         return set;\n     }\n \n     public void destroy() {\n         LOG.debug(\"Destroying RedisClusterProvider\");\n-\n         try {\n             pool.close();\n         } catch (IOException e) {\n@@ -90,12 +87,15 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n         if (value != null && value.length > 0) {\n             deserialized = SerializationUtils.deserialize(value);\n         }\n+\n         return deserialized;\n     }\n \n     @Override\n     public void put(int expirationInSeconds, String key, Object object) {\n-        String status = pool.setex(key.getBytes(), expirationInSeconds, SerializationUtils.serialize((Serializable) object));\n+        String status = pool.setex(key.getBytes(),\n+            expirationInSeconds,\n+                SerializationUtils.serialize((Serializable) object));\n         LOG.trace(\"put - key: \" + key + \", status: \" + status);\n     }\n \n@@ -115,4 +115,5 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n     public void clear() {\n         LOG.trace(\"clear not allowed for cluster deployments\");\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "violations": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "90",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "96",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "96",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "44",
                    "column": "101",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "104",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "104",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "44",
                    "column": "148",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "148",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "44",
                    "column": "160",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "161",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "44",
                    "column": "162",
                    "severity": "error",
                    "message": "'}' at column 162 should have line break before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "44",
                    "column": "162",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "162",
                    "severity": "error",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/162/RedisClusterProvider.java\nindex b35c78251d9..851f63d76d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/random/files-repaired/162/RedisClusterProvider.java\n@@ -41,10 +41,7 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n                 pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), poolConfig);\n             } else {\n                 // default maxAttempts and timeouts are taken from jedis constants\n-                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n-            }\n-\n-            testConnection();\n+                    pool = new JedisCluster(hosts(getRedisConfiguration( ).getServers( )),2000 ,2000,5 ,redisConfiguration .getDecryptedPassword() ,poolConfig );}testConnection();\n             LOG.debug(\"RedisClusterProvider started.\");\n         } catch (Exception e) {\n             LOG.error(\"Failed to start RedisClusterProvider.\");\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "error",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/162/RedisClusterProvider.java\nindex b35c78251d9..cf7392ef175 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/violations/162/RedisClusterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/GluuFederation-oxCore/styler/05_predictions/three_grams/files-repaired/162/RedisClusterProvider.java\n@@ -41,7 +41,8 @@ public class RedisClusterProvider extends AbstractRedisProvider {\n                 pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), poolConfig);\n             } else {\n                 // default maxAttempts and timeouts are taken from jedis constants\n-                pool = new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n+\n+pool= new JedisCluster(hosts(getRedisConfiguration().getServers()), 2000, 2000, 5, redisConfiguration.getDecryptedPassword(), poolConfig);\n             }\n \n             testConnection();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "checkstyle_idea"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}