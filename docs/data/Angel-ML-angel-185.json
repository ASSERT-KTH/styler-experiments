{
    "project_name": "Angel-ML-angel",
    "violation_id": "185",
    "information": {
        "violations": [
            {
                "line": "76",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 115).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public String toString() {\n      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) + \", toString()=\" + super.toString() + \"]\";\n    }\n  }\n",
    "results": [
        {
            "tool": "styler",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/185/MUpdateParam.java\nindex 20ce8d5cd65..30715ee2066 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/./experiments/projects/Angel-ML-angel/styler/05_predictions/final/files-repaired/185/MUpdateParam.java\n@@ -73,9 +73,9 @@ public class MUpdateParam extends UpdateParam {\n \n     @Override\n     public String toString() {\n-      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) + \", toString()=\" + super.toString() + \"]\";\n-    }\n-  }\n+      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) +\n+        \", toString()=\" + super .toString()+\"]\" ;\n+        } }\n \n   private final int[] rowIds;\n \n",
            "diff_size": 3
        },
        {
            "tool": "checkstyle_idea",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/185/MUpdateParam.java\nindex 20ce8d5cd65..cc4c60376de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/checkstyle_idea/185/MUpdateParam.java\n@@ -30,78 +30,79 @@ import java.util.List;\n  */\n public class MUpdateParam extends UpdateParam {\n \n-  public static class MPartitionUpdateParam extends PartitionUpdateParam {\n-    private int[] rowIds;\n+    public static class MPartitionUpdateParam extends PartitionUpdateParam {\n+        private int[] rowIds;\n \n-    public MPartitionUpdateParam(\n-        int matrixId, PartitionKey partKey, int[] rowIds) {\n-      super(matrixId, partKey, false);\n-      this.rowIds = rowIds;\n-    }\n+        public MPartitionUpdateParam(\n+                int matrixId, PartitionKey partKey, int[] rowIds) {\n+            super(matrixId, partKey, false);\n+            this.rowIds = rowIds;\n+        }\n \n-    public MPartitionUpdateParam() {\n-      super();\n-    }\n+        public MPartitionUpdateParam() {\n+            super();\n+        }\n \n-    @Override\n-    public void serialize(ByteBuf buf) {\n-      super.serialize(buf);\n-      buf.writeInt(rowIds.length);\n-      for (int rowId: rowIds){\n-        buf.writeInt(rowId);\n-      }\n-    }\n+        @Override\n+        public void serialize(ByteBuf buf) {\n+            super.serialize(buf);\n+            buf.writeInt(rowIds.length);\n+            for (int rowId : rowIds) {\n+                buf.writeInt(rowId);\n+            }\n+        }\n \n-    @Override\n-    public void deserialize(ByteBuf buf) {\n-      super.deserialize(buf);\n-      int rowLength = buf.readInt();\n-      rowIds = new int[rowLength];\n-      for (int i = 0; i < rowLength; i++){\n-        rowIds[i] = buf.readInt();\n-      }\n-    }\n+        @Override\n+        public void deserialize(ByteBuf buf) {\n+            super.deserialize(buf);\n+            int rowLength = buf.readInt();\n+            rowIds = new int[rowLength];\n+            for (int i = 0; i < rowLength; i++) {\n+                rowIds[i] = buf.readInt();\n+            }\n+        }\n \n-    @Override\n-    public int bufferLen() {\n-      return super.bufferLen() + 4 + 4 * rowIds.length;\n+        @Override\n+        public int bufferLen() {\n+            return super.bufferLen() + 4 + 4 * rowIds.length;\n+        }\n+\n+        public int[] getRowIds() {\n+            return rowIds;\n+        }\n+\n+        @Override\n+        public String toString() {\n+            return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) + \", toString()=\" +\n+                    super.toString() + \"]\";\n+        }\n     }\n \n-    public int[] getRowIds() {\n-      return rowIds;\n+    private final int[] rowIds;\n+\n+    public MUpdateParam(int matrixId, int[] rowIds) {\n+        super(matrixId, false);\n+        this.rowIds = rowIds;\n     }\n \n     @Override\n-    public String toString() {\n-      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) + \", toString()=\" + super.toString() + \"]\";\n-    }\n-  }\n-\n-  private final int[] rowIds;\n-\n-  public MUpdateParam(int matrixId, int[] rowIds) {\n-    super(matrixId, false);\n-    this.rowIds = rowIds;\n-  }\n-\n-  @Override\n-  public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> partList = PSAgentContext.get()\n-        .getMatrixPartitionRouter()\n-        .getPartitionKeyList(matrixId);\n-\n-    int size = partList.size();\n-    List<PartitionUpdateParam> partParams = new ArrayList<PartitionUpdateParam>(size);\n-    for (PartitionKey part : partList) {\n-      for (int rowId : rowIds) {\n-        if (rowId < part.getStartRow() || rowId >= part.getEndRow()) {\n-          throw new RuntimeException(\"Wrong rowId!\");\n+    public List<PartitionUpdateParam> split() {\n+        List<PartitionKey> partList = PSAgentContext.get()\n+                .getMatrixPartitionRouter()\n+                .getPartitionKeyList(matrixId);\n+\n+        int size = partList.size();\n+        List<PartitionUpdateParam> partParams = new ArrayList<PartitionUpdateParam>(size);\n+        for (PartitionKey part : partList) {\n+            for (int rowId : rowIds) {\n+                if (rowId < part.getStartRow() || rowId >= part.getEndRow()) {\n+                    throw new RuntimeException(\"Wrong rowId!\");\n+                }\n+            }\n+            partParams.add(new MPartitionUpdateParam(matrixId, part, rowIds));\n         }\n-      }\n-      partParams.add(new MPartitionUpdateParam(matrixId, part, rowIds));\n-    }\n \n-    return partParams;\n-  }\n+        return partParams;\n+    }\n \n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "violations": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/185/MUpdateParam.java\nindex 20ce8d5cd65..39f9c3b5282 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/naturalize/185/MUpdateParam.java\n@@ -47,7 +47,7 @@ public class MUpdateParam extends UpdateParam {\n     public void serialize(ByteBuf buf) {\n       super.serialize(buf);\n       buf.writeInt(rowIds.length);\n-      for (int rowId: rowIds){\n+      for (int rowId: rowIds) {\n         buf.writeInt(rowId);\n       }\n     }\n@@ -57,7 +57,7 @@ public class MUpdateParam extends UpdateParam {\n       super.deserialize(buf);\n       int rowLength = buf.readInt();\n       rowIds = new int[rowLength];\n-      for (int i = 0; i < rowLength; i++){\n+      for (int i = 0; i < rowLength; i++) {\n         rowIds[i] = buf.readInt();\n       }\n     }\n@@ -104,4 +104,4 @@ public class MUpdateParam extends UpdateParam {\n     return partParams;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "violations": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/185/MUpdateParam.java\nindex 20ce8d5cd65..65d7a4f3758 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/codebuff/185/MUpdateParam.java\n@@ -20,7 +20,6 @@ package com.tencent.angel.ml.matrix.psf.update.enhance;\n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.psagent.PSAgentContext;\n import io.netty.buffer.ByteBuf;\n-\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n@@ -28,13 +27,14 @@ import java.util.List;\n /**\n  * `MUpdateParam` a parameter class for `MUpdateFunc`\n  */\n+\n public class MUpdateParam extends UpdateParam {\n \n   public static class MPartitionUpdateParam extends PartitionUpdateParam {\n+\n     private int[] rowIds;\n \n-    public MPartitionUpdateParam(\n-        int matrixId, PartitionKey partKey, int[] rowIds) {\n+    public MPartitionUpdateParam(int matrixId, PartitionKey partKey, int[] rowIds) {\n       super(matrixId, partKey, false);\n       this.rowIds = rowIds;\n     }\n@@ -47,7 +47,7 @@ public class MUpdateParam extends UpdateParam {\n     public void serialize(ByteBuf buf) {\n       super.serialize(buf);\n       buf.writeInt(rowIds.length);\n-      for (int rowId: rowIds){\n+      for (int rowId : rowIds) {\n         buf.writeInt(rowId);\n       }\n     }\n@@ -55,9 +55,10 @@ public class MUpdateParam extends UpdateParam {\n     @Override\n     public void deserialize(ByteBuf buf) {\n       super.deserialize(buf);\n+\n       int rowLength = buf.readInt();\n       rowIds = new int[rowLength];\n-      for (int i = 0; i < rowLength; i++){\n+      for (int i = 0; i < rowLength; i++) {\n         rowIds[i] = buf.readInt();\n       }\n     }\n@@ -86,10 +87,7 @@ public class MUpdateParam extends UpdateParam {\n \n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> partList = PSAgentContext.get()\n-        .getMatrixPartitionRouter()\n-        .getPartitionKeyList(matrixId);\n-\n+    List<PartitionKey> partList = PSAgentContext.get().getMatrixPartitionRouter().getPartitionKeyList(matrixId);\n     int size = partList.size();\n     List<PartitionUpdateParam> partParams = new ArrayList<PartitionUpdateParam>(size);\n     for (PartitionKey part : partList) {\n@@ -100,8 +98,7 @@ public class MUpdateParam extends UpdateParam {\n       }\n       partParams.add(new MPartitionUpdateParam(matrixId, part, rowIds));\n     }\n-\n     return partParams;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "violations": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/185/MUpdateParam.java\nindex 20ce8d5cd65..30715ee2066 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/violations/185/MUpdateParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/src/experiments/projects/Angel-ML-angel/styler/05_predictions/random/files-repaired/185/MUpdateParam.java\n@@ -73,9 +73,9 @@ public class MUpdateParam extends UpdateParam {\n \n     @Override\n     public String toString() {\n-      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) + \", toString()=\" + super.toString() + \"]\";\n-    }\n-  }\n+      return \"MPartitionUpdateParam [rowIds=\" + Arrays.toString(rowIds) +\n+        \", toString()=\" + super .toString()+\"]\" ;\n+        } }\n \n   private final int[] rowIds;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "violations": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "checkstyle_idea",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}